/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "BrS8");
/******/ })
/************************************************************************/
/******/ ({

/***/ "+KoH":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/poa.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Poa = {
  symbol: 'poa',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5 24h22L16 5zm6.872-9.676L16 7.194l4.128 7.13c-1.285-.858-2.663-1.291-4.128-1.291s-2.843.433-4.128 1.291zm-1.951 3.37c1.81 1.99 3.843 3 6.079 3s4.27-1.01 6.08-3l2.996 5.177H6.924zM16 19.565c-1.938 0-3.711-.89-5.338-2.7 1.627-1.813 3.4-2.702 5.338-2.702s3.711.89 5.338 2.701c-1.627 1.812-3.4 2.702-5.338 2.702zm0-.483c1.16 0 2.101-.975 2.101-2.178 0-1.202-.94-2.177-2.101-2.177s-2.101.975-2.101 2.177c0 1.203.94 2.178 2.101 2.178zm0-1.13c-.559 0-1.012-.469-1.012-1.048 0-.579.453-1.048 1.012-1.048s1.012.47 1.012 1.048c0 .58-.453 1.049-1.012 1.049z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#444fa1" r="16"/><path d="M5 24L16 5l11 19zm6.872-9.676c1.285-.858 2.663-1.291 4.128-1.291s2.843.433 4.128 1.291L16 7.194zm-1.951 3.37l-2.997 5.177h18.152l-2.997-5.176c-1.81 1.989-3.843 2.999-6.079 2.999s-4.27-1.01-6.08-3zM16 19.565c1.938 0 3.711-.89 5.338-2.7-1.627-1.813-3.4-2.702-5.338-2.702s-3.711.89-5.338 2.701c1.627 1.812 3.4 2.702 5.338 2.702zm0-.483c-1.16 0-2.101-.975-2.101-2.178 0-1.202.94-2.177 2.101-2.177s2.101.975 2.101 2.177c0 1.203-.94 2.178-2.101 2.178zm0-1.13c.559 0 1.012-.469 1.012-1.048 0-.579-.453-1.048-1.012-1.048s-1.012.47-1.012 1.048c0 .58.453 1.049 1.012 1.049z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Poa);


/***/ }),

/***/ "+RLW":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tern.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tern = {
  symbol: 'tern',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.983-16.226v-.23l-4.52 2.628v-1.31l4.52-2.627V9.387L15.99 3l-5.495 3.194-.198.115 4.52 2.627-1.126.654-4.52-2.627L5 9.387v12.774l5.495 3.194.199.115v-5.254l1.126.654v5.255l4.172 2.423 10.991-6.387v-6.387zm-5.695-2.424l-4.55 2.646v5.502l-.746.433-.563-.327v-5.29l-4.735-2.752v-.866l.563-.328 4.552 2.645 4.735-2.75.745.433v.655zM14.83 6.27l1.161-.674 8.758 5.09v2.175l-1.16.674v-2.176L20.542 9.59l-4.734 2.751-1.127-.654 4.735-2.752L14.83 6.27zM8.395 21.54l-1.162-.675v-10.18l1.872-1.088 1.162.674-1.872 1.089v3.538l4.734 2.752v1.309l-4.734-2.751v5.33zm16.355-2.025v1.35l-8.758 5.09-1.872-1.089v-1.35l1.872 1.088 3.045-1.769v-5.502l1.126-.655v5.503l4.587-2.666z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F4C257"/><path d="M8.395 21.539l-1.162-.675V10.685l1.872-1.088 1.162.674-1.872 1.089v3.538l4.734 2.752v1.309l-4.734-2.751v5.33zm16.355-2.025v1.35l-8.758 5.09-1.872-1.089v-1.35l1.872 1.088 3.045-1.769v-5.502l1.126-.655v5.503l4.587-2.666zm2.233-3.74v-.23l-4.52 2.628v-1.31l4.52-2.627V9.387L15.99 3l-5.495 3.194-.198.115 4.52 2.627-1.126.654-4.52-2.627L5 9.387v12.774l5.495 3.194.199.115v-5.254l1.126.654v5.255l4.172 2.423 10.991-6.387v-6.387zm-5.695-2.424l-4.55 2.646v5.502l-.746.433-.563-.327v-5.29l-4.735-2.752v-.866l.563-.328 4.552 2.645 4.735-2.75.745.433v.655zM14.83 6.27l1.161-.674 8.758 5.09v2.175l-1.16.674v-2.176L20.542 9.59l-4.734 2.751-1.127-.654 4.735-2.752L14.83 6.27z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tern);


/***/ }),

/***/ "+SSJ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ink.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ink = {
  symbol: 'ink',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.14-20.473c-.318.086-.445.421-.593.691-1.25 2.386-2.52 4.76-3.77 7.124a.696.696 0 0 0 .096.842c.243.27.624.173.942.195.328 0 .752.053.953-.281.413-.734.773-1.511 1.186-2.256.243-.454.974-.378 1.143.097.286.723.52 1.479.816 2.202.2.475.931.475 1.154.022 1.334-2.494 2.678-4.977 4.012-7.47.276-.421-.084-1.036-.571-1.004-.466.043-1.08-.173-1.42.27-.412.712-.75 1.457-1.174 2.159-.254.388-.9.334-1.09-.087-.319-.701-.594-1.424-.9-2.126-.128-.302-.477-.475-.784-.378zm-4.363.184c-.243.01-.423.216-.529.42-1.292 2.43-2.583 4.858-3.875 7.276-.275.4.106.993.561.972.37 0 .752.032 1.122-.022.318-.086.434-.432.583-.69 1.238-2.333 2.488-4.664 3.727-7.006.2-.378-.064-.907-.477-.95a9.55 9.55 0 0 0-1.112 0zm13.14.021c-.254.087-.36.367-.476.583-.202.421-.456.82-.636 1.252-.2.54.487 1.09.953.767.741-.454 1.461-.95 2.192-1.414.36-.184.445-.734.159-1.026-.233-.28-.636-.216-.953-.227-.413.033-.837-.054-1.239.065zm-3.505 6.455c-.211.097-.307.346-.402.55-.127.27-.286.519-.392.8-.148.388.17.863.572.863.805.01 1.62 0 2.435 0 .381.032.71-.345.667-.734-.01-.291-.264-.496-.508-.604-.572-.27-1.133-.573-1.694-.853-.201-.108-.466-.151-.678-.022z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#df1a14" r="16"/><path d="M14.86 11.527c.307-.097.656.076.783.378.307.702.582 1.425.9 2.126.19.421.837.475 1.09.087.424-.702.763-1.447 1.176-2.16.339-.442.953-.226 1.419-.269.487-.032.847.583.571 1.004-1.334 2.493-2.678 4.976-4.012 7.47-.223.453-.953.453-1.154-.022-.297-.723-.53-1.479-.816-2.202-.17-.475-.9-.55-1.143-.097-.413.745-.773 1.522-1.186 2.256-.201.334-.625.28-.953.28-.318-.021-.699.076-.942-.194a.696.696 0 0 1-.096-.842c1.25-2.364 2.52-4.738 3.77-7.124.148-.27.275-.605.593-.69zm-4.363.184a9.55 9.55 0 0 1 1.112 0c.413.043.678.572.477.95-1.24 2.342-2.489 4.673-3.727 7.005-.149.26-.265.605-.583.69-.37.055-.751.023-1.122.023-.455.021-.836-.573-.561-.972 1.292-2.418 2.583-4.847 3.875-7.275.106-.205.286-.41.53-.421zm13.14.021c.402-.119.826-.032 1.239-.065.317.011.72-.054.953.227.286.292.2.842-.16 1.026-.73.464-1.45.96-2.19 1.414-.467.323-1.155-.227-.954-.767.18-.432.434-.83.636-1.252.116-.216.222-.496.476-.583zm-3.505 6.455c.212-.13.477-.086.678.022.561.28 1.122.583 1.694.853.244.108.498.313.508.604.043.389-.286.766-.667.734-.815 0-1.63.01-2.435 0-.402 0-.72-.475-.572-.863.106-.281.265-.53.392-.8.095-.204.19-.453.402-.55z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ink);


/***/ }),

/***/ "+XPM":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gvt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gvt = {
  symbol: 'gvt',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10-18.807c0-.399-.024-.797-.074-1.193H9.774a6.112 6.112 0 0 0-.117 1.193c0 3.427 2.845 6.217 6.34 6.217 2.718-.003 5.132-1.7 6.007-4.221H20.08c-.891 1.756-2.847 2.738-4.822 2.42-1.974-.319-3.506-1.863-3.777-3.807h12.721c-.317 4.163-3.873 7.455-8.199 7.455-4.533 0-8.221-3.617-8.221-8.062 0-.399.03-.798.09-1.193H6.074c-.05.396-.074.795-.074 1.193C6 18.601 10.487 23 16 23s10-4.4 10-9.807z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#16b9ad" r="16"/><path d="M26 13.193C26 18.601 21.513 23 16 23S6 18.6 6 13.195c0-.398.024-.797.074-1.193H7.87c-.06.395-.09.794-.09 1.193 0 4.445 3.688 8.062 8.221 8.062 4.326 0 7.882-3.292 8.2-7.455H11.48c.27 1.944 1.803 3.488 3.777 3.807 1.975.318 3.93-.664 4.822-2.42h1.925c-.875 2.522-3.29 4.218-6.006 4.22-3.496 0-6.341-2.789-6.341-6.216 0-.4.04-.8.117-1.193h16.152c.05.396.074.794.074 1.193z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gvt);


/***/ }),

/***/ "+f0H":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/snt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Snt = {
  symbol: 'snt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.7-16.98c2.25 0 3.315.435 5.564.435 3.047 0 5.136-1.244 5.136-3.819 0-2.574-1.74-3.818-4.28-3.818-4.148 0-7.632 3.165-8.084 7.346a9.144 9.144 0 0 1 1.664-.143zm-.164 1.525C10.089 16.545 8 17.79 8 20.364s1.74 3.818 4.28 3.818c4.148 0 7.632-3.165 8.084-7.346a9.144 9.144 0 0 1-1.664.144c-2.25 0-3.315-.435-5.564-.435z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#5B6DEE"/><path fill="#FFF" d="M13.3 15.02a9.144 9.144 0 0 0-1.664.144c.452-4.18 3.936-7.346 8.084-7.346 2.54 0 4.28 1.244 4.28 3.818 0 2.575-2.089 3.819-5.136 3.819-2.25 0-3.314-.434-5.564-.434m-.164 1.524C10.089 16.545 8 17.79 8 20.364s1.74 3.818 4.28 3.818c4.148 0 7.632-3.165 8.084-7.346a9.144 9.144 0 0 1-1.664.144c-2.25 0-3.315-.435-5.564-.435"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Snt);


/***/ }),

/***/ "+j/K":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gup.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gup = {
  symbol: 'gup',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.01-19.321l2.8-2.82A32.464 32.464 0 0 0 16 6a32.574 32.574 0 0 0-2.794 3.875l2.784 2.804zm5.718 2.81c-.759-1.676-1.515-3.234-2.39-4.748l-3.328 3.352-3.31-3.334c-.828 1.438-1.558 2.934-2.28 4.557-.786 2.202-2.078 4.577-.97 6.691 1.907 3.644 6.387 5.054 10.006 3.135a7.503 7.503 0 0 0 3.112-3.135c1.099-2.114-.054-4.316-.84-6.517z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#37DCD8"/><path fill="#FFF" d="M15.99 12.679l-2.784-2.804A32.574 32.574 0 0 1 16 6a32.464 32.464 0 0 1 2.79 3.859l-2.8 2.82zm5.718 2.81c.786 2.202 1.939 4.404.84 6.518a7.503 7.503 0 0 1-3.112 3.135c-3.619 1.92-8.099.51-10.005-3.135-1.11-2.114.183-4.49.97-6.691.721-1.623 1.45-3.119 2.278-4.557l3.31 3.334 3.329-3.352c.875 1.514 1.631 3.072 2.39 4.749z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gup);


/***/ }),

/***/ "//Yf":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tau.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tau = {
  symbol: 'tau',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8.094 13.678L6 15.788h4.203zm2.11 2.55H6l2.094 2.094zm2.852-2.853l-2.11-2.11v4.204zm-2.55 2.094v-4.203l-2.093 2.109zm2.854-2.413l2.109-2.094h-4.203zm0-4.643l-2.094 2.109h4.203zm4.962-.304L16.212 6v4.203zm-2.55 2.094V6l-2.094 2.11zm-2.716 8.437l-2.11-2.109v4.203zm-4.643 0l2.094 2.094v-4.203zm10.212-5.584l2.11-2.094H16.53zm-2.094-2.534h4.203l-2.109-2.11zM15.47 21.493h-4.203l2.094 2.094zm-2.11-2.55l-2.093 2.11h4.203zm10.228-5.568l-2.109-2.11v4.204zm-4.643 0l2.094 2.094v-4.203zm-5.266 10.53L15.772 26v-4.203zm2.534-2.108V26l2.11-2.094zm2.413 1.79l2.11-2.094H16.53zm0-4.643l-2.094 2.11h4.203zm2.853-2.413v4.203l2.11-2.094zm-2.534 2.11l2.094 2.093v-4.203zm4.947-.32L26 16.229h-4.203zm0-4.643l-2.094 2.11H26z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#7b346e" r="16"/><path d="M8.094 13.678l2.11 2.11H6zm2.11 2.55l-2.11 2.094L6 16.228zm2.852-2.853l-2.11 2.094v-4.203zm-2.55 2.094l-2.093-2.094 2.094-2.11zm2.854-2.413l-2.094-2.094h4.203zm0-4.643l2.109 2.109h-4.203zm4.962-.304l-2.11 2.094V6zm-2.55 2.094L13.678 8.11 15.772 6zm-2.716 8.437l-2.11 2.094v-4.203zm-4.643 0l2.094-2.109v4.203zm10.212-5.584l-2.094-2.094h4.203zm-2.094-2.534l2.094-2.11 2.11 2.11zM15.47 21.493l-2.11 2.094-2.093-2.094zm-2.11-2.55l2.11 2.11h-4.203zm10.228-5.568l-2.109 2.094v-4.203zm-4.643 0l2.094-2.11v4.204zm-5.266 10.53l2.094-2.108V26zm2.534-2.108l2.11 2.109L16.212 26zm2.413 1.79l-2.094-2.094h4.203zm0-4.643l2.11 2.11H16.53zm2.853-2.413l2.11 2.11-2.11 2.093zm-2.534 2.11l2.094-2.11v4.203zm4.947-.32l-2.094-2.093H26zm0-4.643L26 15.788h-4.203z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tau);


/***/ }),

/***/ "/0us":
/*!****************************!*\
  !*** ./src/js/eventBus.js ***!
  \****************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");



var EventBus = new __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */]();

/* harmony default export */ __webpack_exports__["a"] = (EventBus);

/***/ }),

/***/ "/2pm":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/grin.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Grin = {
  symbol: 'grin',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.64-22.432c-.34-.761-.655-2.265-1.525-2.6-1.12-.43-1.811 2.388-1.976 3.1h-.167c-.282-1.22-.66-2.95-2-3.334-.62 2.605.648 5.414 1.834 7.669 1.266-.606 1.883-2.5 2-3.835h.167l1.334 4.001c1.073-.308 1.446-1.37 1.833-2.334.832-2.068 1.53-4.612 1-6.835-1.6.454-2.088 2.743-2.5 4.168zM6.636 14.903c1.432-.684 2.114-2.85 2.334-4.335h.166c.17.716.623 2.562 1.517 2.68 1.14.151 1.737-2.377 1.817-3.18h.167c.363 1.255.746 2.888 2 3.501.464-1.944-.09-4.017-.801-5.835-.183-.467-.558-1.728-1.203-1.728-1.056 0-1.65 2.784-1.83 3.562h-.166L9.303 5.567c-2.346 1.12-3.62 7.077-2.667 9.336zm-2.501 2c1.74 7.594 9.771 11.9 17.005 8.692a11.773 11.773 0 0 0 5.924-5.858c.311-.674.922-1.895.566-2.78-.355-.882-3.795.558-4.655.935a.387.387 0 0 0-.226.295.672.672 0 0 0 .614.772l1.444.112c-2.615 5.062-9.686 7.3-14.67 3.256-1.116-.905-2.111-1.98-2.781-3.256-.324-.617-.625-1.406-1.175-1.83-.53-.406-1.332-.546-2.046-.338z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FFF300"/><path d="M22.64 9.568c-.34-.761-.655-2.265-1.525-2.6-1.12-.43-1.811 2.388-1.976 3.1h-.167c-.282-1.22-.66-2.95-2-3.334-.62 2.605.648 5.414 1.834 7.669 1.266-.606 1.883-2.5 2-3.835h.167l1.334 4.001c1.073-.308 1.446-1.37 1.833-2.334.832-2.068 1.53-4.612 1-6.835-1.6.454-2.088 2.743-2.5 4.168zM6.636 14.903c1.432-.684 2.114-2.85 2.334-4.335h.166c.17.716.623 2.562 1.517 2.68 1.14.151 1.737-2.377 1.817-3.18h.167c.363 1.255.746 2.888 2 3.501.464-1.944-.09-4.017-.801-5.835-.183-.467-.558-1.728-1.203-1.728-1.056 0-1.65 2.784-1.83 3.562h-.166L9.303 5.567c-2.346 1.12-3.62 7.077-2.667 9.336zm-2.501 2c1.74 7.594 9.771 11.9 17.005 8.692a11.773 11.773 0 0 0 5.924-5.858c.311-.674.922-1.895.566-2.78-.355-.882-3.795.558-4.655.935a.387.387 0 0 0-.226.295.672.672 0 0 0 .614.772l1.444.112c-2.615 5.062-9.686 7.3-14.67 3.256-1.116-.905-2.111-1.98-2.781-3.256-.324-.617-.625-1.406-1.175-1.83-.53-.406-1.332-.546-2.046-.338z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Grin);


/***/ }),

/***/ "/71M":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/storj.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Storj = {
  symbol: 'storj',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.977-13.029a1.623 1.623 0 0 0-.227-.106v-5.618c.089-.03.178-.078.267-.116.92-.505 1.256-1.65.742-2.552a1.936 1.936 0 0 0-2.82-.592l-5.044-2.862c.01-.088.02-.165.02-.253 0-1.038-.86-1.872-1.91-1.872-1.048 0-1.928.854-1.928 1.882 0 .088.01.165.02.252L9.09 9.977a1.943 1.943 0 0 0-1.906-.258 1.881 1.881 0 0 0-1.17 1.5 1.86 1.86 0 0 0 .752 1.737c.07.048.139.097.218.145.08.049.167.088.257.117v5.608c-.98.388-1.454 1.475-1.059 2.435A1.919 1.919 0 0 0 8.666 22.3c.09-.029.168-.077.248-.116a3.31 3.31 0 0 0 .237-.155l4.956 2.804c-.169 1.018.544 1.979 1.582 2.144 1.039.165 2.018-.534 2.186-1.553.02-.106.02-.203.02-.31a2.34 2.34 0 0 0-.02-.272l4.926-2.784c.08.058.159.116.248.165.92.504 2.087.184 2.601-.718a1.882 1.882 0 0 0-.673-2.533zm.347 2.348a1.482 1.482 0 0 1-1.998.515 1.417 1.417 0 0 1-.683-1.562l-2.315-1.33a2.618 2.618 0 0 1-2.799.572c-.346.107-1.088.175-1.088.175v3.997a1.498 1.498 0 0 1 1.01 1.883c-.247.795-1.108 1.232-1.92.99-.01 0-.02-.01-.03-.01a1.078 1.078 0 0 1-.187-.078 1.49 1.49 0 0 1-.683-2.018c.188-.369.525-.64.92-.766v-4.075a6.925 6.925 0 0 1-.85-.32 3.116 3.116 0 0 1-2.533-.612l-2.76 1.562a1.44 1.44 0 0 1-1.088 1.736c-.789.185-1.581-.292-1.77-1.066a1.44 1.44 0 0 1 1.088-1.737 1.49 1.49 0 0 1 1.345.35l2.582-1.466a2.991 2.991 0 0 1 .336-3.9l-2.938-1.65a1.466 1.466 0 0 1-2.057-.067 1.415 1.415 0 0 1 .069-2.028 1.465 1.465 0 0 1 2.057.068 1.4 1.4 0 0 1 .356 1.3l3.255 1.833a3.13 3.13 0 0 1 1.385-.359c.455-.368 1.621-.746 1.621-.746V8.144a1.333 1.333 0 0 1-.91-1.67c.218-.708.98-1.096 1.702-.882.722.213 1.128.96.91 1.669a1.34 1.34 0 0 1-.91.892v4.28s2.137.523 2.81 1.309l3.461-1.93a1.438 1.438 0 0 1 1.098-1.728c.792-.174 1.583.301 1.761 1.077a1.438 1.438 0 0 1-1.098 1.727 1.493 1.493 0 0 1-1.335-.359l-3.423 1.902c.099.203.188.407.247.62 1.059.709 1.435 2.067.87 3.202l2.266 1.29a1.468 1.468 0 0 1 1.721-.184c.683.398.92 1.271.505 1.96zm-17.34-1.358a.608.608 0 0 0-.614.602c0 .332.275.601.614.601.338 0 .613-.27.613-.601a.65.65 0 0 0-.08-.301.625.625 0 0 0-.533-.3v-.001zm8.665-13.088a.608.608 0 0 0-.614-.602.608.608 0 0 0-.613.602c0 .332.275.601.613.601a.611.611 0 0 0 .614-.601zm7.478 5.22c.34 0 .614-.27.614-.602a.608.608 0 0 0-.614-.602.608.608 0 0 0-.613.602.614.614 0 0 0 .613.602zM8.27 10.937a.61.61 0 0 0-.83.223.586.586 0 0 0 .227.815.61.61 0 0 0 .83-.223.588.588 0 0 0-.227-.815zm16.104 9.14a.66.66 0 0 0-.307-.088.616.616 0 0 0-.538.298.592.592 0 0 0 0 .607.616.616 0 0 0 .538.298.639.639 0 0 0 .535-.3.588.588 0 0 0-.228-.816zm-8.952 5.015a.613.613 0 0 0 .584.67.642.642 0 0 0 .633-.514.6.6 0 0 0-.515-.674.608.608 0 0 0-.692.499.034.034 0 0 0-.01.02zm3.522-9.285l-.03-.223a1.188 1.188 0 0 0-.04-.155c0-.02-.01-.039-.01-.058-.02-.058-.04-.126-.059-.185v-.01a2.566 2.566 0 0 0-.742-1.037l-.01-.01a1.236 1.236 0 0 0-.188-.136l-.01-.01c-.059-.038-.128-.087-.187-.116l-.01-.01a1.859 1.859 0 0 0-.198-.097l-.02-.01a4.98 4.98 0 0 0-.217-.087l-.01-.01c-.08-.019-.149-.048-.228-.058h-.01a2.016 2.016 0 0 0-.237-.038h-.01a2.489 2.489 0 0 0-1.246.145l-.05.039c-.06.02-.158.068-.217.097a.466.466 0 0 1-.1.048c-.029.01-.078.049-.108.068l-.139.097-.03.02c-.059.039-.108.087-.168.136l-.049.048a2.19 2.19 0 0 0-.158.165 2.204 2.204 0 0 0-.356-.029c-.04 0-.07 0-.1.01a1.977 1.977 0 0 0-1.64 1.028l-.011.02c-.03.056-.057.115-.08.175-.01.019-.01.029-.02.048a.94.94 0 0 0-.049.155c-.01.02-.01.049-.02.068l-.029.155c0 .02-.01.04-.01.068a1.685 1.685 0 0 0-.01.223c-.001.062.002.124.01.185 0 .02.01.039.01.068.01.039.01.077.02.116.01.039.01.049.02.078a.279.279 0 0 1 .02.087c0 .03.019.058.029.087a.468.468 0 0 0 .03.068.995.995 0 0 1 .04.097c.01.02.019.03.019.049.139.32.374.59.673.776.148.087.297.165.455.213.061.021.124.037.188.049l.02.01.178.029.04.01c.068.01.138.01.217.01.267 0 .524-.05.761-.156.06.039.11.078.169.116l.02.01c.049.03.108.058.168.087h.01a2.595 2.595 0 0 0 1.83.185h.01a1.23 1.23 0 0 0 .256-.088l.267-.116c.255.195.568.3.89.3.07 0 .13-.01.198-.01l.05-.009a1.323 1.323 0 0 0 .366-.106l.03-.01c.059-.03.108-.058.168-.087a1.415 1.415 0 0 0 .623-.912v-.03c.01-.038.01-.077.02-.116 0-.048.01-.097.01-.146 0-.64-.406-1.193-1.01-1.377z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2683FF"/><path fill="#FFF" fill-rule="nonzero" d="M24.977 18.971a1.881 1.881 0 0 1 .673 2.533c-.514.902-1.682 1.222-2.601.718-.09-.049-.168-.107-.248-.165l-4.926 2.784c.012.09.019.181.02.272 0 .107 0 .204-.02.31-.168 1.02-1.147 1.718-2.186 1.553-1.038-.165-1.75-1.126-1.582-2.144L9.15 22.028a3.31 3.31 0 0 1-.237.155c-.08.039-.159.087-.248.116a1.919 1.919 0 0 1-2.483-1.038c-.395-.96.08-2.047 1.059-2.435v-5.608a1.225 1.225 0 0 1-.257-.117 4.16 4.16 0 0 1-.218-.145 1.86 1.86 0 0 1-.752-1.738 1.881 1.881 0 0 1 1.17-1.499 1.943 1.943 0 0 1 1.906.258l5.006-2.843c-.01-.087-.02-.164-.02-.252 0-1.028.88-1.882 1.929-1.882 1.048 0 1.908.834 1.909 1.872 0 .088-.01.165-.02.253l5.045 2.862a1.936 1.936 0 0 1 2.82.592c.513.902.177 2.047-.743 2.552-.089.038-.178.087-.267.116v5.618c.079.03.155.065.227.106zm.347 2.348a1.415 1.415 0 0 0-.505-1.96 1.468 1.468 0 0 0-1.72.185l-2.266-1.29a2.502 2.502 0 0 0-.87-3.202 3.679 3.679 0 0 0-.248-.621l3.423-1.902c.356.33.857.465 1.335.36a1.438 1.438 0 0 0 1.098-1.728c-.178-.776-.97-1.251-1.76-1.077a1.438 1.438 0 0 0-1.099 1.727l-3.462 1.931c-.672-.786-2.809-1.31-2.809-1.31V8.153a1.34 1.34 0 0 0 .91-.892 1.333 1.333 0 0 0-.91-1.67c-.722-.213-1.484.175-1.702.884a1.333 1.333 0 0 0 .91 1.669v4.366s-1.166.378-1.621.746a3.121 3.121 0 0 0-1.385.36l-3.255-1.834a1.4 1.4 0 0 0-.356-1.3 1.465 1.465 0 0 0-2.057-.068 1.415 1.415 0 0 0-.07 2.028 1.466 1.466 0 0 0 2.058.068l2.938 1.649a2.991 2.991 0 0 0-.336 3.9l-2.582 1.465a1.49 1.49 0 0 0-1.345-.349 1.44 1.44 0 0 0-1.088 1.737c.189.774.981 1.251 1.77 1.066a1.44 1.44 0 0 0 1.088-1.736l2.76-1.562c.71.563 1.637.787 2.532.611.276.126.56.233.85.32v4.076a1.557 1.557 0 0 0-.919.766 1.49 1.49 0 0 0 .683 2.018c.06.03.119.058.188.078.01 0 .02.01.03.01.81.242 1.672-.195 1.919-.99a1.498 1.498 0 0 0-1.01-1.883V19.69s.742-.068 1.088-.175c.965.38 2.069.155 2.8-.572l2.314 1.33a1.417 1.417 0 0 0 .683 1.562 1.482 1.482 0 0 0 1.998-.515zm-17.34-1.358c.22.001.422.115.534.3a.65.65 0 0 1 .079.302.608.608 0 0 1-.613.601.608.608 0 0 1-.614-.601c0-.333.275-.602.614-.602zm8.665-13.088a.611.611 0 0 1-.614.601.608.608 0 0 1-.613-.601c0-.333.275-.602.613-.602.34 0 .614.27.614.602zm7.478 5.22a.614.614 0 0 1-.613-.602c0-.332.275-.602.613-.602.34 0 .614.27.614.602a.608.608 0 0 1-.614.601zM8.27 10.937a.588.588 0 0 1 .228.815.61.61 0 0 1-.831.223.586.586 0 0 1-.228-.815.61.61 0 0 1 .831-.223zm16.104 9.14a.588.588 0 0 1 .228.814.639.639 0 0 1-.535.301.616.616 0 0 1-.538-.298.592.592 0 0 1 0-.607.616.616 0 0 1 .538-.298.66.66 0 0 1 .307.087zm-8.952 5.015a.034.034 0 0 1 .01-.02.608.608 0 0 1 .692-.498.6.6 0 0 1 .515.674.642.642 0 0 1-.633.514.613.613 0 0 1-.584-.67zm3.522-9.285a1.429 1.429 0 0 1 1.009 1.378c0 .049-.01.098-.01.146-.01.039-.01.078-.02.116v.03c-.02.087-.04.174-.08.261a1.403 1.403 0 0 1-.543.65c-.06.03-.11.059-.168.088l-.03.01a1.274 1.274 0 0 1-.366.107l-.05.009c-.069 0-.128.01-.197.01-.323 0-.636-.106-.89-.301l-.268.116c-.082.04-.168.069-.257.088h-.01a2.595 2.595 0 0 1-1.83-.185h-.01c-.059-.029-.118-.058-.168-.087l-.02-.01c-.059-.038-.108-.077-.168-.116a1.844 1.844 0 0 1-.761.155c-.08 0-.149 0-.218-.01l-.04-.01-.178-.028-.02-.01a1.339 1.339 0 0 1-.187-.049 2.141 2.141 0 0 1-.455-.213 1.725 1.725 0 0 1-.673-.776c0-.02-.01-.03-.02-.049a.995.995 0 0 0-.04-.097.468.468 0 0 1-.03-.068c-.01-.029-.029-.058-.029-.087a.279.279 0 0 0-.02-.087c-.01-.03-.01-.04-.02-.078-.01-.039-.01-.077-.019-.116 0-.03-.01-.049-.01-.068a1.152 1.152 0 0 1-.01-.185 1.85 1.85 0 0 1 .01-.223c0-.029.01-.048.01-.068.01-.058.02-.106.03-.155.01-.02.01-.048.02-.068a.94.94 0 0 1 .049-.155c.01-.02.01-.029.02-.048a1.25 1.25 0 0 1 .079-.175l.01-.02a1.977 1.977 0 0 1 1.641-1.028c.03-.01.06-.01.1-.01.119 0 .238.01.356.03.05-.06.099-.108.158-.166l.05-.048c.059-.049.108-.097.168-.136l.03-.02c.039-.029.108-.077.138-.097.03-.019.079-.058.109-.068a.466.466 0 0 0 .099-.048c.059-.03.158-.078.217-.097l.05-.039a2.489 2.489 0 0 1 1.246-.145h.01c.08.008.159.02.237.038h.01c.08.01.149.04.228.059l.01.01c.079.028.148.057.217.087l.02.01c.068.028.134.06.198.096l.01.01c.059.03.128.078.188.116l.01.01c.069.039.128.087.187.136l.01.01a2.566 2.566 0 0 1 .742 1.038v.01c.02.058.04.126.06.184 0 .02.01.039.01.058.016.05.03.103.039.155l.03.223z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Storj);


/***/ }),

/***/ "/C92":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/shift.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Shift = {
  symbol: 'shift',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M20.52 16.42l4.478-4.478L16.056 3l-8.937 8.937H16l-.002.002H7.057l4.472 4.471.026-.026.006.006-4.49 4.488 8.943 8.943 8.943-8.943h-8.895 8.915l-4.456-4.459zm-4.471 4.457h-.014l.007-.006-.007.006h.014zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#964B9C"/><g fill="#FFF"><path opacity=".6" d="M20.507 16.406l-4.472 4.471h8.942l-4.47-4.471z"/><path opacity=".7" d="M11.528 16.41L16 11.94H7.057l4.472 4.471z"/><path opacity=".4" d="M16.035 20.878l4.46-4.46-4.48-4.482-8.943 8.942 8.942 8.943 8.943-8.943h-.002z"/><path opacity=".8" d="M16.056 3l-8.937 8.937H16l-4.446 4.446 4.502 4.501 8.942-8.942z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Shift);


/***/ }),

/***/ "/N5B":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/kcs.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Kcs = {
  symbol: 'kcs',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.46-16l5.174-5.33 3.265 3.363a1.446 1.446 0 0 0 2.088 0 1.554 1.554 0 0 0 0-2.152l-4.309-4.44a1.456 1.456 0 0 0-2.088 0l-6.216 6.406v-3.808c0-.84-.662-1.522-1.477-1.522-.816 0-1.477.682-1.477 1.522v11.922c0 .84.661 1.522 1.477 1.522.811 0 1.477-.686 1.477-1.522v-3.808l6.216 6.405a1.456 1.456 0 0 0 2.088 0l4.31-4.44a1.554 1.554 0 0 0 0-2.151 1.446 1.446 0 0 0-2.09 0l-3.264 3.364L13.54 16zm5.176-1.523c-.816 0-1.478.682-1.478 1.523 0 .841.662 1.523 1.478 1.523s1.478-.682 1.478-1.523c0-.841-.662-1.523-1.478-1.523z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#0093DD"/><path fill="#FFF" d="M13.54 16l5.174 5.33 3.265-3.363a1.446 1.446 0 0 1 2.088 0 1.554 1.554 0 0 1 0 2.152l-4.309 4.44a1.456 1.456 0 0 1-2.088 0l-6.216-6.406v3.808c0 .836-.666 1.522-1.477 1.522-.816 0-1.477-.682-1.477-1.522V10.04c0-.84.661-1.522 1.477-1.522.815 0 1.477.682 1.477 1.522v3.808l6.216-6.406a1.456 1.456 0 0 1 2.088 0l4.31 4.44a1.554 1.554 0 0 1 0 2.152 1.446 1.446 0 0 1-2.09 0l-3.264-3.364L13.54 16zm5.176-1.523c.816 0 1.478.682 1.478 1.523 0 .841-.662 1.523-1.478 1.523s-1.478-.682-1.478-1.523c0-.841.662-1.523 1.478-1.523z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Kcs);


/***/ }),

/***/ "/Wsy":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bcd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bcd = {
  symbol: 'bcd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M22.585 9.694l.067.031 2.93 3.906-.02.022-.059-.12-4.521 2.284-1.374-4.55 3.054-1.402zm-.165-.077l-2.975 1.366h-6.85L9.513 9.687l2.962-1.36h7.17zm-13.154.32l3.12 1.313-1.38 4.567-4.513-2.279zm3.44 1.373h6.576l1.426 4.72-4.714 8.332-4.713-8.332zm12.512 2.733l-8.424 9.564 4.205-7.433zm-10.047 9.524l-8.378-9.512 4.196 2.12zm-8.74-9.924l-.01-.01.043-.057zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.222 9.462L6 13.646 16 25l10-11.352-3.139-4.186L19.717 8h-7.312zm9.201 5.372c-.079-.83-.786-1.108-1.68-1.188v-1.151h-.692v1.121c-.182 0-.368.004-.553.008v-1.129h-.691v1.151c-.15.003-.297.006-.44.006l-.001-.003h-.955v.748s.512-.01.503 0c.28 0 .372.164.398.307v1.311c.02 0 .045.001.074.005h-.074v1.838c-.012.09-.064.232-.26.232.01.008-.503 0-.503 0l-.137.837h.9c.168 0 .333.003.495.004v1.164h.691v-1.152c.19.004.374.006.553.006v1.147h.692v-1.163c1.164-.068 1.978-.364 2.08-1.47.08-.892-.333-1.29-.994-1.45.402-.207.653-.572.594-1.179zm-.968 2.49c0 .87-1.471.771-1.94.772v-1.543c.469 0 1.94-.137 1.94.771zm-.322-2.177c0 .792-1.228.7-1.618.7v-1.4c.39 0 1.618-.126 1.618.7z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#fcc339" r="16"/><path d="M22.585 9.694l.077.171-3.054 1.402 1.374 4.55 4.521-2.283.06.119.018-.022-2.929-3.906zm-.165-.077l-2.773-1.29h-7.171l-2.962 1.36 3.08 1.296h6.85zm-13.154.32l-2.773 3.601 4.514 2.28 1.38-4.568zm3.44 1.373l-1.425 4.72 4.713 8.332 4.714-8.332-1.426-4.72zm12.512 2.733L21 16.174l-4.205 7.433zm-10.047 9.524l-4.182-7.393-4.196-2.119zm-8.74-9.924l.033-.067-.043.056zm2.791-4.181L12.405 8h7.312l3.144 1.462L26 13.648 16 25 6 13.646zm9.201 5.372c.059.607-.192.972-.594 1.179.661.16 1.075.558.993 1.45-.1 1.106-.915 1.402-2.079 1.47v1.163h-.692v-1.147c-.18 0-.363-.002-.553-.006v1.153h-.691V18.93c-.162-.001-.327-.004-.495-.004h-.9l.137-.837s.512.008.503 0c.196 0 .248-.143.26-.232V16.02h.074a.55.55 0 0 0-.074-.005v-1.311c-.026-.143-.117-.307-.398-.308.009-.01-.502 0-.502 0v-.748h.954v.004c.144 0 .29-.003.44-.006v-1.151h.693v1.129c.184-.004.37-.008.552-.008v-1.12l.692-.001v1.151c.894.08 1.601.358 1.68 1.188zm-.968 2.49c0-.908-1.471-.771-1.94-.771v1.543c.469 0 1.94.098 1.94-.772zm-.322-2.177c0-.826-1.228-.7-1.618-.7v1.4c.39 0 1.618.092 1.618-.7z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bcd);


/***/ }),

/***/ "/dEf":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nas.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nas = {
  symbol: 'nas',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5 16.002c.133.051.206.082.281.108 2.04.693 4.077 1.39 6.12 2.073.225.076.351.2.453.406 1.217 2.485 2.442 4.967 3.666 7.449.15.304.303.607.48.962.045-.116.068-.17.087-.226.691-2.03 1.387-4.058 2.066-6.092a.88.88 0 0 1 .493-.565c2.632-1.288 5.259-2.588 7.887-3.885l.467-.237c-.141-.05-.217-.078-.294-.104-2.04-.693-4.08-1.383-6.115-2.085-.148-.051-.323-.161-.389-.293-1.356-2.724-2.699-5.455-4.044-8.184-.048-.097-.1-.193-.17-.329-.048.126-.079.2-.105.275-.696 2.05-1.394 4.1-2.082 6.152a.652.652 0 0 1-.364.414c-1.761.86-3.519 1.729-5.277 2.596-1.034.51-2.066 1.024-3.16 1.565zm7.73 2.653l4.762 1.609-1.616 4.773-3.145-6.382zm-5.753-2.769l6.382-3.153-1.618 4.77-4.764-1.617zm6.031 2.024c.424-.211.811-.405 1.2-.597 1.866-.921 3.731-1.846 5.603-2.757a.698.698 0 0 1 .477-.03c1.492.492 2.979 1 4.466 1.505.065.022.128.048.247.094-.545.272-1.043.522-1.543.769-1.756.867-3.512 1.736-5.273 2.595-.123.06-.301.095-.425.054-1.54-.51-3.075-1.035-4.61-1.557-.036-.012-.067-.036-.142-.076zm6.499-4.065l-6.87 3.392 3.48-10.267c1.144 2.32 2.26 4.581 3.39 6.875z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#222" r="16"/><path d="M12.73 18.655l3.146 6.382 1.616-4.773-4.761-1.609m-5.754-2.769l4.764 1.617 1.618-4.77-6.382 3.153m6.031 2.024c.075.04.106.064.141.076 1.536.522 3.07 1.048 4.61 1.557.125.04.303.006.426-.054 1.761-.859 3.517-1.728 5.273-2.595.5-.247.998-.497 1.543-.769-.12-.046-.182-.072-.247-.094-1.487-.505-2.974-1.013-4.466-1.504a.698.698 0 0 0-.477.03c-1.872.91-3.737 1.835-5.603 2.756-.389.192-.776.386-1.2.597m6.499-4.065c-1.13-2.294-2.246-4.554-3.39-6.875l-3.48 10.267 6.87-3.392M5 16.002c1.094-.541 2.126-1.055 3.16-1.565 1.758-.867 3.516-1.735 5.277-2.596a.652.652 0 0 0 .364-.414c.688-2.053 1.386-4.102 2.082-6.152.026-.076.057-.15.105-.275.07.136.122.232.17.329 1.345 2.73 2.688 5.46 4.044 8.184.066.132.24.242.389.293 2.036.702 4.076 1.392 6.115 2.085.077.026.153.054.294.104-.188.095-.327.168-.467.237-2.628 1.297-5.255 2.597-7.887 3.885a.88.88 0 0 0-.493.565c-.679 2.034-1.375 4.062-2.066 6.092-.019.056-.042.11-.087.226-.177-.355-.33-.658-.48-.962-1.224-2.482-2.449-4.964-3.666-7.45a.718.718 0 0 0-.454-.405c-2.042-.683-4.08-1.38-6.119-2.073-.075-.026-.148-.057-.281-.108" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nas);


/***/ }),

/***/ "/ekM":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/qiwi.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Qiwi = {
  symbol: 'qiwi',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.59-12.555c-.025-.22-.152-.724-.482-.853-.165-.065-.305-.013-.368.103-.102.181-.026.53.165.84.19.311.368.466.495.466s.241-.155.19-.556zm-1.777.88c-.203-.182-.432-.272-.635-.272a.489.489 0 0 0-.407.18c-.228.285-.126.802.23 1.113.152.142.38.22.596.22a.663.663 0 0 0 .52-.233c.204-.285.09-.672-.304-1.009zM7 14.894c0 4.912 3.91 8.894 8.734 8.894 1.283 0 2.552-.245 4.419-.259 1.663 0 3.491.595 5.497 2.405.203.181.47-.052.292-.271-1.968-2.547-3.796-3.025-5.624-3.44-2.235-.503-3.377-1.77-4.177-3.18-.153-.284-.229-.232-.242.13a8.078 8.078 0 0 0 .115 1.59h-.267c-3.186 0-5.776-2.637-5.776-5.883C9.97 11.636 12.56 9 15.747 9s5.777 2.637 5.777 5.882c0 .233-.013.466-.038.686-.432-.078-1.257-.09-1.841-.039-.216.026-.19.129-.025.155 1.904.362 3.212 1.564 3.516 3.75.013.051.076.064.102.025a9.074 9.074 0 0 0 1.231-4.564C24.47 9.982 20.56 6 15.734 6 10.91 6 7 9.982 7 14.894z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FF8C00"/><path fill="#FFF" d="M22.59 19.445c.051.401-.063.556-.19.556s-.305-.155-.495-.465c-.19-.31-.267-.66-.165-.84.063-.117.203-.169.368-.104.33.13.457.633.482.853zm-1.777.88c.393.336.508.723.304 1.008a.664.664 0 0 1-.52.232.896.896 0 0 1-.597-.22c-.355-.31-.457-.827-.229-1.111a.489.489 0 0 1 .407-.181c.203 0 .432.09.635.271zM7 14.894C7 9.981 10.91 6 15.734 6c4.825 0 8.735 3.982 8.735 8.894a9.074 9.074 0 0 1-1.231 4.564c-.026.039-.09.026-.102-.026-.304-2.185-1.612-3.387-3.516-3.749-.166-.026-.191-.13.025-.155.584-.052 1.409-.039 1.84.039a5.9 5.9 0 0 0 .039-.686c0-3.245-2.59-5.882-5.777-5.882-3.186 0-5.776 2.637-5.776 5.882 0 3.246 2.59 5.883 5.776 5.883h.267a8.078 8.078 0 0 1-.115-1.59c.013-.362.09-.414.242-.13.8 1.41 1.942 2.677 4.177 3.18 1.828.415 3.656.893 5.624 3.44.177.22-.089.452-.292.271-2.006-1.81-3.834-2.405-5.497-2.405-1.867.014-3.136.26-4.419.26C10.91 23.79 7 19.806 7 14.893z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Qiwi);


/***/ }),

/***/ "/nGs":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mtl.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mtl = {
  symbol: 'mtl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8 9v14h1V9H8zm5 3v9h1v-9h-1zm5 2v5h1v-5h-1zm5-5v14h1V9h-1z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#1E1F25"/><path fill="#FFF" d="M8 9h1v14H8V9zm5 3h1v9h-1v-9zm5 2h1v5h-1v-5zm5-5h1v14h-1V9z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mtl);


/***/ }),

/***/ "/pDy":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xbc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xbc = {
  symbol: 'xbc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M25.977 19.754l2.183.545.363-1.456-2.183-.544.544-2.183-1.456-.363-.544 2.183-2.183-.544-.363 1.455 2.183.545-.544 2.183 1.455.363zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.611-18.24c.28-1.844-1.09-2.826-2.965-3.477l.623-2.499-1.487-.37-.606 2.433a53.14 53.14 0 0 0-1.191-.28l.61-2.45-1.485-.37-.624 2.498a48.602 48.602 0 0 1-.949-.223l.002-.007-2.05-.512-.405 1.624s1.103.253 1.08.269c.602.15.709.557.689.88l-.71 2.846c.041.01.095.026.154.05l-.157-.039-.994 3.988c-.075.187-.264.469-.684.365.014.021-1.08-.27-1.08-.27l-.75 1.743 1.935.482c.36.09.713.185 1.06.274l-.63 2.527 1.485.37.624-2.5c.405.11.8.212 1.184.308l-.62 2.489 1.486.37.63-2.523c2.535.477 4.445.269 5.26-2.079.658-1.89-.016-2.974-1.348-3.676.974-.234 1.71-.891 1.913-2.24zm-3.427 4.886c-.47 1.888-3.577.886-4.585.635l.836-3.348c1.007.251 4.24.743 3.749 2.713zm.487-4.897c-.43 1.718-3.015.86-3.854.651l.757-3.037c.84.21 3.543.594 3.097 2.386z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f7931a" r="16"/><path d="M25.977 19.754l-.545 2.183-1.455-.362.544-2.184-2.183-.544.363-1.455 2.183.544.545-2.183 1.455.363-.544 2.183 2.183.544-.363 1.456zM20.61 13.76c-.203 1.35-.939 2.006-1.912 2.24 1.331.703 2.005 1.787 1.348 3.677-.816 2.347-2.726 2.555-5.262 2.08l-.63 2.522-1.486-.37.621-2.49a55.255 55.255 0 0 1-1.184-.307l-.624 2.5-1.484-.37.63-2.528c-.348-.089-.7-.183-1.06-.273l-1.935-.483.748-1.742s1.095.291 1.08.27c.422.103.61-.178.685-.365l.994-3.988.158.039a1.204 1.204 0 0 0-.155-.05l.71-2.847c.02-.323-.087-.729-.69-.88.024-.015-1.079-.268-1.079-.268l.405-1.624 2.05.512-.002.007c.308.077.626.15.95.223l.623-2.498 1.486.37-.611 2.45c.399.09.8.182 1.19.28l.607-2.433 1.487.37-.623 2.499c1.876.65 3.245 1.633 2.965 3.477zm-3.427 4.885c.491-1.97-2.742-2.46-3.75-2.712L12.6 19.28c1.008.25 4.115 1.253 4.585-.636zm.487-4.896c.446-1.793-2.258-2.177-3.097-2.386l-.757 3.037c.839.21 3.425 1.067 3.854-.651z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xbc);


/***/ }),

/***/ "0/Tl":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pax.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pax = {
  symbol: 'pax',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.88-18.65l.5.75c1-2.52.77-4.49-.13-5.35-1.62-1.56-4-.69-6.58-1.77-2.15-1.58-3.45-2-5.24-2a6.22 6.22 0 0 0-3.25 1.64 5 5 0 0 0-3.9 1.53c-1.06 1.25-1.3 4.68-1.46 5.55-.16.87-2 4.38-1.81 6.3.19 1.92 1.6 4 5.59 4.49a7.58 7.58 0 0 0 6 2.63c2.09-.22 5-3.42 6.69-4.69 1.69-1.27 7.71-2.37 4.12-8.28a8.89 8.89 0 0 0-.5-.75l-.03-.05zm-9.13 8.8a6.66 6.66 0 0 1-7.45-4.06c-.22-.86-.65-5.24 3-7.41 2.72-1.54 6.55-1.75 8.16 1.84 1.61 3.59 1.02 8.62-3.71 9.63z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#EDE708"/><path d="M26.88 13.35l.5.75c1-2.52.77-4.49-.13-5.35-1.62-1.56-4-.69-6.58-1.77-2.15-1.58-3.45-2-5.24-2a6.22 6.22 0 0 0-3.25 1.64 5 5 0 0 0-3.9 1.53c-1.06 1.25-1.3 4.68-1.46 5.55-.16.87-2 4.38-1.81 6.3.19 1.92 1.6 4 5.59 4.49a7.58 7.58 0 0 0 6 2.63c2.09-.22 5-3.42 6.69-4.69 1.69-1.27 7.71-2.37 4.12-8.28a8.89 8.89 0 0 0-.5-.75l-.03-.05zm-9.13 8.8a6.66 6.66 0 0 1-7.45-4.06c-.22-.86-.65-5.24 3-7.41 2.72-1.54 6.55-1.75 8.16 1.84 1.61 3.59 1.02 8.62-3.71 9.63z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pax);


/***/ }),

/***/ "01Fu":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/qsp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Qsp = {
  symbol: 'qsp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.313-16a7.273 7.273 0 0 0-1.18-3.978L25 9.154 22.846 7l-2.868 2.868c-1.146-.745-2.51-1.181-3.978-1.181s-2.832.436-3.978 1.18L9.154 7 7 9.154l2.868 2.868c-.745 1.146-1.181 2.51-1.181 3.978s.437 2.832 1.181 3.978L7 22.846 9.154 25l2.868-2.868c1.146.745 2.51 1.181 3.978 1.181s2.832-.436 3.978-1.181L22.846 25 25 22.846l-2.868-2.868A7.272 7.272 0 0 0 23.313 16zM11.5 16c0-2.481 2.019-4.5 4.5-4.5s4.5 2.019 4.5 4.5c0 .653-.143 1.272-.394 1.833l-2.97-2.97-2.272 2.273 2.97 2.97A4.468 4.468 0 0 1 16 20.5a4.505 4.505 0 0 1-4.5-4.5z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#454545" r="16"/><path d="M11.5 16c0-2.481 2.019-4.5 4.5-4.5s4.5 2.019 4.5 4.5c0 .653-.143 1.272-.394 1.833l-2.97-2.97-2.272 2.273 2.97 2.97A4.468 4.468 0 0 1 16 20.5a4.505 4.505 0 0 1-4.5-4.5m11.813 0a7.273 7.273 0 0 0-1.18-3.978L25 9.154 22.846 7l-2.868 2.868c-1.146-.745-2.51-1.181-3.978-1.181s-2.832.436-3.978 1.18L9.154 7 7 9.154l2.868 2.868c-.745 1.146-1.181 2.51-1.181 3.978s.437 2.832 1.181 3.978L7 22.846 9.154 25l2.868-2.868c1.146.745 2.51 1.181 3.978 1.181s2.832-.436 3.978-1.181L22.846 25 25 22.846l-2.868-2.868A7.272 7.272 0 0 0 23.313 16" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Qsp);


/***/ }),

/***/ "05DC":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tnt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tnt = {
  symbol: 'tnt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.11-10.497L14.048 25s1.875-.318 3.828 0l.156-3.497zM11.626 18.8s5.469-.477 8.672 0l.312-3.815a59.109 59.109 0 0 0-9.14 0zM26 8.944S15.531 6.718 6 9.103l.703 4.371.86-1.669s8.984-1.351 17.03 0l.782 1.67z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#ff4081" r="16"/><path d="M13.89 21.503L14.048 25s1.875-.318 3.828 0l.156-3.497zM11.626 18.8s5.469-.477 8.672 0l.312-3.815a59.109 59.109 0 0 0-9.14 0zM26 8.944S15.531 6.718 6 9.103l.703 4.371.86-1.669s8.984-1.351 17.03 0l.782 1.67z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tnt);


/***/ }),

/***/ "0KCx":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gxs.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gxs = {
  symbol: 'gxs',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7.02 7.027h.001c-1.327 1.27-1.368 3.602-.07 4.91 2.488 2.533 5.028 5.02 7.528 7.542-1.147 1.168-2.31 2.315-3.458 3.483-.432.416-.89.967-1.556.908-1.097.018-1.785-1.473-1.004-2.274 1.158-1.232 2.395-2.394 3.57-3.608-.502-.5-1.004-1.005-1.506-1.505A217.222 217.222 0 0 0 6.96 20.05c-1.251 1.258-1.28 3.471-.081 4.77 1.19 1.407 3.52 1.59 4.903.364 1.443-1.36 2.805-2.802 4.233-4.176 1.338 1.328 2.656 2.682 4.003 4.004 1.295 1.316 3.62 1.313 4.918.003 1.318-1.226 1.435-3.498.218-4.831-1.356-1.427-2.781-2.781-4.149-4.19 1.339-1.34 2.683-2.67 4.01-4.022 1.289-1.264 1.31-3.535.067-4.837-1.211-1.38-3.53-1.529-4.895-.297-1.434 1.351-2.77 2.799-4.198 4.156a286.339 286.339 0 0 0-4.068-4.057c-1.312-1.29-3.631-1.237-4.9.09zm1.453 3.39c-.61-.617-.37-1.753.394-2.123.549-.326 1.269-.157 1.69.297 1.32 1.296 2.619 2.618 3.922 3.931-.658.65-1.312 1.305-1.962 1.963-1.347-1.357-2.72-2.688-4.044-4.068zm12.94-1.79h-.001c.403-.455 1.086-.659 1.646-.37.834.343 1.095 1.558.442 2.192-1.295 1.384-2.689 2.67-4.004 4.034-.511-.49-1.01-.988-1.51-1.486-.498.505-.999 1.008-1.5 1.509 2.193 2.202 4.392 4.4 6.595 6.593.468.434.964 1.03.746 1.72-.203.976-1.567 1.425-2.27.685-1.385-1.305-2.7-2.679-4.04-4.027.498-.495.992-.99 1.483-1.491-.506-.498-1.005-1.002-1.507-1.503-.497.498-.993.996-1.492 1.488a107.79 107.79 0 0 0-1.983-1.96c2.473-2.452 4.909-4.945 7.394-7.385z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#35A5F3"/><path fill="#FFF" d="M7.02 7.027c1.27-1.327 3.59-1.38 4.901-.09 1.37 1.34 2.726 2.692 4.068 4.057 1.428-1.357 2.764-2.805 4.198-4.156 1.364-1.232 3.684-1.083 4.895.297 1.242 1.302 1.222 3.573-.067 4.837-1.327 1.351-2.671 2.682-4.01 4.022 1.368 1.409 2.793 2.763 4.15 4.19 1.216 1.333 1.1 3.605-.219 4.83-1.297 1.31-3.623 1.314-4.918-.002-1.347-1.322-2.665-2.676-4.003-4.004-1.428 1.374-2.79 2.816-4.233 4.176C10.4 26.41 8.07 26.227 6.88 24.82c-1.2-1.299-1.17-3.512.08-4.77a217.222 217.222 0 0 1 3.566-3.567l1.507 1.505c-1.176 1.214-2.413 2.376-3.571 3.608-.781.8-.093 2.292 1.004 2.274.665.059 1.124-.492 1.556-.908 1.147-1.168 2.311-2.315 3.458-3.483-2.5-2.522-5.04-5.009-7.528-7.542-1.298-1.308-1.257-3.64.07-4.91zm1.453 3.39c1.323 1.38 2.697 2.711 4.044 4.068.65-.658 1.304-1.312 1.962-1.963-1.303-1.313-2.601-2.635-3.922-3.93-.421-.455-1.141-.624-1.69-.298-.764.37-1.005 1.506-.395 2.123zm12.94-1.79c-2.486 2.44-4.922 4.932-7.395 7.384.667.647 1.332 1.296 1.983 1.96.499-.492.995-.99 1.492-1.488.502.501 1.001 1.005 1.507 1.503-.491.5-.985.996-1.484 1.49 1.341 1.349 2.656 2.723 4.041 4.028.703.74 2.067.291 2.27-.684.218-.69-.278-1.287-.746-1.721a2157.89 2157.89 0 0 1-6.596-6.593 266.94 266.94 0 0 0 1.501-1.509c.5.498.999.996 1.51 1.486 1.315-1.363 2.709-2.65 4.004-4.034.653-.634.392-1.849-.442-2.192-.56-.289-1.243-.085-1.646.37z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gxs);


/***/ }),

/***/ "0SdH":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fct.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fct = {
  symbol: 'fct',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M8.012 10.005l.022-.023.063-.084.064-.085a3.771 3.771 0 0 0-.15.192zm-.072.083c-.053.078-.102.155-.16.233a.75.75 0 0 0-.015.015 2.91 2.91 0 0 1 .175-.248zm.072-.083c-.085.09-.169.21-.247.331a.773.773 0 0 1-.001.002 7.17 7.17 0 0 0-.103.167zm-.444.655c-.043.085-.127.254-.212.339a.922.922 0 0 1 .212-.339c-.085.127-.17.212-.212.339-.042.085-.085.17-.085.254.127-.212.297-.423.424-.635.094-.251.188-.432.317-.613zM8.84 9.073c.113-.122.246-.229.38-.362a3.35 3.35 0 0 1 .254-.28 6.036 6.036 0 0 0-.17.153c.1-.1.141-.14.228-.21.578-.553 1.502-1.148 2.484-1.57.251-.104.49-.19.713-.258.194-.077.39-.136.584-.184-3.72 1.964-3.639 1.902-3.5 1.799-.17.127-.17.127-.509.423-.188.189-.377.343-.505.524l-.088.07a2.85 2.85 0 0 0-.297.465c0 .043-.042.127-.042.17a2.16 2.16 0 0 1 .167-.184 1.39 1.39 0 0 0-.125.141c-.042.043-.042.085-.042.128-.042.169 0 .254.042.38l.017-.02c.322.399 1.493.306 2.95-.318.508-.17.974-.424 1.398-.678.084-.085.042-.212 0-.254-.043-.042-.212-.254-.34-.212-.338.212-.72.381-1.101.55-1.158.497-2.074.59-2.354.278l.023-.023c-.084-.085-.084-.212-.042-.339l-.117.094.117-.094c.042-.17.127-.339.254-.508-.126.094-.252.213-.379.32zm-2.434 9.514l.004.013a1.41 1.41 0 0 0 .002.146.952.952 0 0 1-.006-.16l-.026-.088c-.084-.128-.127-.255-.17-.382.075.222.149.541.223.788.302 1.5 3.465 1.419 7.66-.406 4.83-2.034 9.194-5.466 9.787-7.71.127-.51.085-.89-.17-1.187-.211-.212-.423-.466-.635-.678.297.297.382.678.255 1.229-.594 2.203-4.873 5.592-9.577 7.583-3.686 1.567-6.568 1.822-7.33.763.042.296.127.55.212.804a1.076 1.076 0 0 1-.223-.695c.074.25.148.473.223.695a.683.683 0 0 1-.17-.296 3.573 3.573 0 0 1-.032-.102zm-.195-1.18c.713 1.021 3.485.818 7.076-.731 4.534-1.907 8.687-5.169 9.237-7.287.128-.55 0-.974-.339-1.27l-.423-.297-.34-.212c.17.127.51.339.467.932-.127 3.304-12.882 11.1-15.72 8.091 0 .128 0 .265.005.403.005-.138-.006-.275-.006-.403-.084-.169-.169-.338-.169-.593 0 .186.023.44.035.662-.007.085-.004.17.008.251v-.023c0-.066-.003-.14-.008-.219-.006.09-.003.174.008.255.004.195.049.353.169.472v-.03zm-.021-3.23c.02-.128.042-.255.063-.382v.085l-.085.339-.084.593c0-.037.008-.073.017-.11l-.017.11a.983.983 0 0 0 .13.653c0 .009-.002.017-.003.025a.97.97 0 0 1-.17-.72c-.042.508.127.847.551 1.059.085.042.127-.128.17-.255 0 0 .084-.423-.043-.593a1.027 1.027 0 0 1-.342-.244l.003-.01c-.17-.17-.212-.466-.127-.805l-.063.254zm4.154-6.402l-.065.047-.018.009a8.52 8.52 0 0 0-.374.266l.043-.037c.075-.052.17-.1.391-.238.127-.127.127-.127.424-.297.127-.085.127-.085.423-.254.17-.085.17-.085.467-.254.17-.085.17-.085.508-.212a7.19 7.19 0 0 1 .177-.087 6.001 6.001 0 0 1-.22.087c-.169.042-.169.042-.508.212-.17.084-.17.084-.466.254-.127.085-.127.085-.424.254a9.456 9.456 0 0 0-.358.25 11.23 11.23 0 0 1 1.926-1.012c.11-.062.22-.116.33-.164zm2.078-1.1c.077-.031.173-.063.357-.124.056-.023.097-.04.136-.054.17-.052.239-.073.32-.104a5.65 5.65 0 0 0-.276.088c.994-.259 1.604-.109 1.472.451-.042.17-.17.381-.381.635.085.085.55.17.763.085.254-.254.423-.508.466-.762.17-.72-.636-.89-1.907-.551l-.06.023zm-5.61 6.461l-.177.532c.55.805 2.67.593 5.423-.55 3.475-1.484 6.653-3.983 7.077-5.593.17-.593-.043-.974-.594-1.186-.084 0-.211-.042-.381-.085-.254-.085-.254-.085-.339-.042.466.17.636.508.509 1.059-.382 1.44-3.306 3.728-6.484 5.126-2.475 1.049-4.411 1.225-4.942.529l.027-.063a.93.93 0 0 1-.085-.763 5.167 5.167 0 0 0-.296.72c-.043.085-.043.128-.043.212-.042.255 0 .467.128.636a2.34 2.34 0 0 1 .177-.532zm.543-1.247c-.127-.17-.127-.297-.127-.509 0 .212.042.382.127.509zm5.995 13.457a.821.821 0 0 0 .002 0c1.117-.039 2.652-.415 4.427-1.172 3.94-1.694 7.542-4.533 8.05-6.354.043-.043.043-.085.043-.127 0-.212.042-.509.085-.763l.042-.127c-.433 3.065-8.263 7.756-12.727 8.197-.781.077-1.46.024-1.976-.19.211.127.55.254.805.381.318.12.74.172 1.249.155zm.496-1.742c-2.112.591-3.69.604-4.372.02.211.17.508.38.72.55.592.404 1.731.449 3.233.134a1.071 1.071 0 0 0-.013.036l.019-.037c.86-.18 1.84-.479 2.905-.895.254-.127.254-.297.212-.34 0 0-.17-.296-.636-.169-.731.287-1.423.52-2.066.7l.075-.106-.077.107zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-7.458-9.308c.043 0 .085.042.085.084-.17-.212-.424-.508-.593-.72.127.212.339.424.508.636zm6.738-16.65h-.17c.975-.084 1.526.212 1.356.89-.212.72-1.186 1.695-2.5 2.584 0 0-.042 0-.042.043-.085.17.212.55.508.423 1.483-1.016 2.627-2.16 2.84-2.965C17.44 6.339 17.016 6 16.126 6c-.254 0-.593.042-.847.042zm5.084.975c-.254-.127-.593-.254-.847-.382.55.212.805.636.636 1.271-.467 1.78-3.984 4.576-7.84 6.228-.72.297-1.398.55-2.033.72-.043.043-.085.043-.127.127-.17.254-.128.763.254.72.678-.211 1.44-.466 2.203-.804 4.068-1.737 7.797-4.66 8.305-6.567.17-.635-.042-1.06-.55-1.313zm4.407 4.194l-.339-.593c.127.17.17.339.17.593.042.212.296.72.423.762v-.042c0-.17 0-.17-.127-.508l-.127-.212zm.89 2.245c-.042-.254-.17-.593-.297-.932.085.254.085.55 0 .89-.508 1.906-3.77 4.702-7.67 6.736a.434.434 0 0 0-.21.254c-.086.296.169.593.592.424 3.856-1.992 7.034-4.745 7.543-6.61.084-.296.084-.55.042-.762zm.297 1.78l-.085-.551c.042.212 0 .423-.042.635-.297 1.186-1.738 2.712-3.73 4.194a.772.772 0 0 0-.211.34c-.043.211.127.508.424.296 1.906-1.44 3.305-2.923 3.601-4.067.043-.212.043-.34.043-.509v-.339zM8.415 10.278c-.042-.127-.084-.212-.042-.381-.042.169 0 .254.042.38zm2.373 1.186s0-.381-.17-.339c-1.44.466-2.5.466-2.838.042-.17.255-.297.466-.424.72.339.382 1.06.424 1.568.34 1.822-.255 1.864-.551 1.864-.763zm-4.152 2.203c-.128-.17-.17-.381-.128-.636-.042.255 0 .467.128.636zM22.61 15.15c-.042-.127-.17-.382-.508-.212-1.865 1.652-4.619 3.39-7.5 4.618-3.814 1.652-6.78 1.864-7.585.805.085.127.127.296.212.423.042.043.042.085.085.127.042.085.084.127.127.212-.17-.254-.17-.466-.17-.508-.042.042-.085-.043-.042.084.296 1.526 3.517 1.398 7.796-.38 2.882-1.23 5.636-2.924 7.5-4.619a.577.577 0 0 0 .085-.55zm-10.72 7.752c-.043-.084-.254-.339-.551-.339-1.653.255-2.797.085-3.263-.508.17.212.424.508.593.72.509.551 1.61.678 3.136.424.17-.042.127-.212.085-.297zm13.347-3.092c-1.483 3.05-8.347 6.44-11.059 6.016a6.014 6.014 0 0 1-.932-.212c.974.296 2.796-.043 5-.975 3.56-1.525 6.822-4.067 7.33-5.719-.084.254-.212.636-.339.89zm-2.203 3.05c.042-.042.042-.085.042-.085-.042 0-.042-.042-.042-.042-.042 0-.042.042-.085.042-1.06.89-2.5 1.737-3.983 2.373-1.483.593-2.712.89-3.56.847h1.06c.72-.042 1.695-.297 2.797-.763 1.313-.55 2.584-1.313 3.517-2.075.17-.127.254-.255.254-.297zM6.508 12.863c.085-.254.17-.508.297-.72.042-.127.085-.212.085-.34-.085.255-.254.636-.34.89 0 .043-.042.128-.042.17z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#417BA4"/><path fill="#FFF" fill-rule="nonzero" d="M7.686 10.633c-.033.222-.024.376.094.493-.152.265-.27.462-.383.682.114-.22.231-.413.383-.64.339.424 1.398.424 2.839-.042.17-.042.17.339.17.339 0 .212-.043.508-1.865.763-.509.084-1.23.042-1.568-.34-.085-.126-.127-.296-.127-.508 0-.042 0-.084.042-.17a2.56 2.56 0 0 1 .005-.007.788.788 0 0 1 .08-.204c.042-.127.127-.212.212-.339-.043.085-.127.254-.212.339a.922.922 0 0 1 .212-.339zm.254-.545c.062-.092.13-.183.221-.275l-.127.17a1.036 1.036 0 0 0-.022.022c.045-.063.094-.126.149-.192l-.127.17a1.31 1.31 0 0 0-.094.105zm0 0c-.053.078-.102.155-.16.233a.419.419 0 0 0-.016.017 7.17 7.17 0 0 0-.103.167zm.901-1.015c.127-.106.253-.225.38-.32a1.42 1.42 0 0 0-.255.51c-.042.126-.042.253.042.338a4.529 4.529 0 0 0-.023.023c.28.312 1.196.22 2.354-.277.381-.17.763-.34 1.102-.55.127-.043.296.169.339.21.042.043.084.17 0 .255-.424.254-.89.508-1.399.678-1.456.624-2.627.717-2.949.319l-.017.02c-.042-.127-.084-.212-.042-.381 0-.043 0-.085.042-.128a1.39 1.39 0 0 1 .125-.141 2.16 2.16 0 0 0-.167.184c0-.043.042-.127.042-.17.085-.17.17-.296.297-.466.03-.022.058-.045.088-.069.128-.18.317-.335.505-.524.34-.296.34-.296.509-.423a.83.83 0 0 1 .117-.1 21.62 21.62 0 0 0-.043.036c.12-.09.244-.179.374-.266l.018-.01.065-.046a11.23 11.23 0 0 1 1.926-1.012c.11-.062.22-.116.33-.164-.065.026-.117.049-.178.075a6.001 6.001 0 0 1-.32.13c-.17.043-.17.043-.51.213-.17.084-.17.084-.466.254-.127.085-.127.085-.424.254a9.456 9.456 0 0 0-.358.25c2.774-1.365 2.58-1.306 2.385-1.229a7.724 7.724 0 0 0-.713.259c-.982.42-1.906 1.016-2.484 1.569-.087.07-.128.11-.228.21.054-.051.111-.102.17-.153a3.35 3.35 0 0 0-.255.28c-.133.133-.266.24-.379.362zm-2.407 9.83c.01.036.021.07.032.103a.683.683 0 0 0 .17.296 18.668 18.668 0 0 1-.223-.695c-.004.275.079.516.223.695a4.414 4.414 0 0 1-.212-.804c.762 1.059 3.644.804 7.33-.763 4.704-1.991 8.983-5.38 9.577-7.583.127-.551.042-.932-.255-1.229.212.212.424.466.636.678.254.297.296.678.17 1.186-.594 2.245-4.958 5.677-9.789 7.71-4.194 1.826-7.357 1.907-7.66.407-.073-.247-.147-.566-.221-.788.042.127.085.254.17.382l.025.089a.952.952 0 0 0 .006.159 1.382 1.382 0 0 1-.002-.146 12.671 12.671 0 0 1-.004-.013zm6.88-12.54l.059-.024c1.271-.339 2.076-.17 1.907.55-.043.255-.212.509-.466.763-.212.085-.678 0-.763-.085.212-.254.339-.466.381-.635.132-.56-.478-.71-1.472-.451l-.044.016zm-.077.03l.178-.054a5.335 5.335 0 0 0-.101.023zM6.212 17.408v.03c-.12-.12-.165-.277-.17-.472a1.287 1.287 0 0 1-.007-.255 4.192 4.192 0 0 1 .008.242 1.177 1.177 0 0 1-.008-.251C6.023 16.48 6 16.226 6 16.04c0 .255.085.424.17.593 0 .128.01.265.02.403-.02-.138-.02-.275-.02-.403 2.838 3.008 15.593-4.787 15.72-8.091.042-.593-.297-.805-.466-.932l.339.212.423.296c.34.297.467.72.34 1.271-.551 2.118-4.704 5.38-9.238 7.287-3.59 1.549-6.363 1.752-7.076.732zm-.021-3.232l.063-.254c-.085.34-.042.636.127.805a2.028 2.028 0 0 0-.003.01c.083.1.197.172.342.244.127.17.043.593.043.593-.043.127-.085.297-.17.255-.424-.212-.593-.551-.55-1.06a.97.97 0 0 0 .169.72l.004-.024a.983.983 0 0 1-.131-.653l.017-.11a.465.465 0 0 0-.017.11l.084-.593.085-.34v-.084l-.063.381zm.622-1.04a2.34 2.34 0 0 0-.177.532c-.128-.17-.17-.381-.128-.636 0-.084 0-.127.043-.211a5.28 5.28 0 0 1 .296-.72.93.93 0 0 0 .085.762l-.027.063c.531.696 2.467.52 4.942-.529 3.178-1.398 6.102-3.686 6.484-5.126.127-.55-.043-.89-.509-1.06.085-.042.085-.042.339.043.17.043.297.085.381.085.551.212.763.593.594 1.186-.424 1.61-3.602 4.11-7.077 5.592-2.754 1.144-4.873 1.356-5.423.551l.177-.532zm6.538 12.21c-.509.017-.931-.036-1.25-.155-.254-.127-.593-.254-.804-.381.517.214 1.195.267 1.975.19 4.465-.44 12.295-5.132 12.728-8.197l-.042.127a5.14 5.14 0 0 0-.085.763c0 .042 0 .084-.042.127-.509 1.821-4.11 4.66-8.051 6.354-1.775.757-3.31 1.133-4.427 1.172a.712.712 0 0 0-.002 0zm.496-1.742l.077-.107c-.026.035-.05.07-.075.106.643-.18 1.335-.413 2.066-.7.466-.127.636.17.636.17.042.042.042.212-.212.339-1.064.416-2.044.715-2.905.895a6.423 6.423 0 0 0-.019.037l.013-.036c-1.502.315-2.641.27-3.233-.134-.212-.17-.509-.38-.72-.55.682.584 2.26.571 4.372-.02zm-5.305-.912c-.17-.212-.381-.424-.508-.636.17.212.424.508.593.72a.091.091 0 0 0-.085-.084zm6.738-16.65c.254 0 .593-.042.847-.042.89 0 1.314.339 1.144 1.017-.212.805-1.356 1.949-2.839 2.965-.296.127-.593-.254-.508-.423 0-.043.042-.043.042-.043 1.314-.89 2.288-1.864 2.5-2.584.17-.678-.381-.974-1.356-.89h.17zm5.084.975c.509.254.72.678.551 1.313-.508 1.906-4.237 4.83-8.305 6.567-.763.338-1.525.593-2.203.804-.382.043-.424-.466-.254-.72.042-.084.084-.084.127-.127.635-.17 1.313-.423 2.034-.72 3.855-1.652 7.372-4.448 7.839-6.228.169-.635-.085-1.059-.636-1.27.254.127.593.254.847.38zm4.407 4.194l.127.212c.127.339.127.339.127.508v.042c-.127-.042-.38-.55-.423-.762 0-.254-.043-.424-.17-.593l.34.593zm.89 2.245c.042.212.042.466-.042.763-.509 1.864-3.687 4.617-7.543 6.609-.423.169-.678-.128-.593-.424a.434.434 0 0 1 .212-.254c3.898-2.034 7.16-4.83 7.67-6.736.084-.34.084-.636 0-.89.127.339.254.678.296.932zm.297 1.78v.338c0 .17 0 .297-.043.509-.296 1.144-1.695 2.626-3.601 4.067-.297.212-.467-.085-.424-.297a.772.772 0 0 1 .212-.339c1.991-1.482 3.432-3.008 3.729-4.194.042-.212.084-.423.042-.635l.085.55zM8.415 10.278c-.042-.127-.084-.212-.042-.381-.042.169 0 .254.042.38zm-1.06 1.61c-.084-.127-.126-.297-.126-.509 0 .212 0 .34.127.509zm-.72 1.779c-.127-.17-.169-.381-.127-.636-.042.255 0 .467.128.636zM22.61 15.15a.58.58 0 0 1-.085.55c-1.864 1.695-4.618 3.39-7.5 4.618-4.28 1.78-7.5 1.907-7.796.381-.043-.127 0-.042.042-.084 0 .042 0 .254.17.508-.043-.085-.085-.127-.127-.212-.043-.042-.043-.084-.085-.127-.085-.127-.127-.296-.212-.423.805 1.059 3.771.847 7.585-.805 2.881-1.229 5.635-2.966 7.5-4.618.339-.17.466.085.508.212zm-10.72 7.752c.042.085.085.255-.085.297-1.525.254-2.627.127-3.136-.424-.169-.212-.423-.508-.593-.72.466.593 1.61.763 3.263.508.297 0 .508.255.55.34zm13.347-3.092c.127-.254.255-.636.34-.89-.51 1.652-3.772 4.194-7.331 5.72-2.204.931-4.026 1.27-5 .974.254.084.635.17.932.212 2.712.423 9.576-2.966 11.06-6.016zm-2.203 3.05c0 .042-.085.17-.254.297-.933.762-2.204 1.525-3.517 2.075-1.102.466-2.077.72-2.797.763h-1.06c.848.042 2.077-.254 3.56-.847 1.483-.636 2.924-1.483 3.983-2.373.043 0 .043-.042.085-.042 0 0 0 .042.042.042 0 0 0 .043-.042.085zM6.508 12.863c0-.042.043-.127.043-.17.085-.254.254-.635.339-.89 0 .128-.043.213-.085.34-.127.212-.212.466-.297.72z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fct);


/***/ }),

/***/ "0dju":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pasl.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pasl = {
  symbol: 'pasl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.92-11.844l-2.796 1.16.153-.839 2.097-.87a.515.515 0 0 0 .277-.671.51.51 0 0 0-.667-.28l-1.487.618.283-1.556h5.275c4.583 0 7.285-2.858 7.285-6.553 0-2.913-2.073-4.298-6.22-4.155h-6.773l-2.398 13.321-3.293 1.367a.515.515 0 0 0-.277.671.51.51 0 0 0 .667.28l2.687-1.116-.15.839-1.99.825a.515.515 0 0 0-.277.671.51.51 0 0 0 .668.28l1.382-.574L9.269 25h2.344l.452-2.48 3.406-1.414a.515.515 0 0 0 .277-.671.51.51 0 0 0-.667-.28zm-.57-11.047h5.154c2.556 0 3.323 1.07 3.323 2.656 0 1.584-1.22 3.769-4.43 3.769h-5.219z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#00acff" r="16"/><path d="M15.08 20.156a.51.51 0 0 1 .668.279.515.515 0 0 1-.277.671l-3.406 1.414-.452 2.48H9.269l.257-1.426-1.382.573a.51.51 0 0 1-.668-.279.515.515 0 0 1 .277-.67l1.99-.826.15-.839-2.687 1.115a.51.51 0 0 1-.667-.279.515.515 0 0 1 .277-.671l3.293-1.367L12.507 7.01h6.773c4.147-.143 6.22 1.242 6.22 4.155 0 3.695-2.702 6.553-7.285 6.553H12.94l-.283 1.556 1.487-.617a.51.51 0 0 1 .667.279.515.515 0 0 1-.277.67l-2.097.871-.153.84zm-.57-11.047l-1.172 6.425h5.218c3.212 0 4.43-2.185 4.43-3.77 0-1.584-.766-2.655-3.322-2.655z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pasl);


/***/ }),

/***/ "0gE9":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/deez.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Deez = {
  symbol: 'deez',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.293-12.14a53.764 53.764 0 0 0 .027 1.927l5.583-3.29c2.81-1.656 4.9-2.893 5.49-3.248A2999.434 2999.434 0 0 0 12.1 7.456L11.339 7l-1.109.75c-.456.31-.837.57-1.033.706.127.082.335.21.602.37.108.064 10.78 6.548 10.809 6.673.03.103.03.103-1.693 1.157a658.095 658.095 0 0 0-5.208 3.205zm-2.368-6.296v6.212c.002 3.111.007 5.497.011 6.196 1.587-.9 12.974-7.417 13.389-7.663l.07-.04.191-2.684-.58.342c-10.83 6.389-10.842 6.393-10.87 6.402l-.061.022-.054-.037c-.08-.057-.08-.057-.146-5.634l-.022-1.93-1.03-.638a48.502 48.502 0 0 0-.898-.548zM9 24.8l1.037.641c.386.24.715.443.908.56.002-.74.005-3.278.007-6.332l.005-6.768.651.379c.25.146 1.488.902 2.76 1.688 1.266.783 2.536 1.558 2.831 1.732l.472.275 2.364-1.446-.715-.43c-.488-.292-2.782-1.69-5.114-3.118a779.624 779.624 0 0 0-4.793-2.92l-.388-.228L9 24.8z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#939393" fill-rule="nonzero"/><path fill="#FFF" d="M13.707 19.86c.365-.237 2.818-1.74 5.208-3.204 1.723-1.054 1.723-1.054 1.693-1.157-.03-.125-10.7-6.609-10.809-6.674a21.481 21.481 0 0 1-.602-.369c.196-.136.577-.396 1.033-.706L11.34 7l.762.456c.94.562 11.26 6.892 12.706 7.793-.59.355-2.68 1.592-5.49 3.247l-5.583 3.29a36.218 36.218 0 0 1-.02-.874 46.32 46.32 0 0 1-.007-1.051zm-2.368-6.296c.185.11.505.303.899.548l1.029.638.022 1.93c.065 5.577.065 5.577.146 5.634l.054.037.06-.022c.03-.009.041-.013 10.871-6.402l.58-.342-.191 2.683-.07.04a5095.12 5095.12 0 0 1-13.389 7.664c-.004-.699-.01-3.085-.011-6.196v-6.212zM9 24.8l.025-15.967.388.229c.312.182 2.416 1.465 4.793 2.919a1210.99 1210.99 0 0 0 5.114 3.118l.715.43-2.364 1.446-.472-.275a279.81 279.81 0 0 1-2.83-1.732 260.976 260.976 0 0 0-2.76-1.688l-.652-.38-.005 6.769c-.002 3.054-.005 5.592-.007 6.332-.193-.117-.522-.32-.908-.56L9 24.8z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Deez);


/***/ }),

/***/ "0pjy":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xvg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xvg = {
  symbol: 'xvg',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M9.61 10.335H8L15.951 27 24 10.335h-1.59l-6.36 13.33-6.438-13.33zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.61 10.335h12.798L24 7H8l1.61 3.335z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00CBFF"/><path fill="#FFF" d="M9.61 10.335L8 7h16l-1.592 3.335H24L15.951 27 8 10.335h1.61zm0 0l6.438 13.33 6.36-13.33H9.611z"/><path fill="#FFF" opacity=".504" d="M16 24.5L8 7h15.999z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xvg);


/***/ }),

/***/ "13OL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vrc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vrc = {
  symbol: 'vrc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.265-24l-4.234 9.113L11.704 8H7l9 18 9-18zM16 12.959c.788 0 1.427-.656 1.427-1.465s-.64-1.466-1.427-1.466c-.788 0-1.427.657-1.427 1.466s.639 1.465 1.427 1.465zm6.465 4.04c-.788 0-1.427.657-1.427 1.466 0 .81.64 1.465 1.427 1.465.788 0 1.426-.656 1.426-1.465S23.253 17 22.465 17z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#418bca" r="16"/><path d="M20.265 8H25l-9 18L7 8h4.704l4.327 9.113zM16 12.959c-.788 0-1.427-.656-1.427-1.465s.639-1.466 1.427-1.466 1.427.657 1.427 1.466-.64 1.465-1.427 1.465zm6.465 4.04c.788 0 1.427.657 1.426 1.466 0 .81-.638 1.465-1.426 1.465-.788 0-1.427-.656-1.427-1.465S21.677 17 22.465 17z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vrc);


/***/ }),

/***/ "1C5g":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mds.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mds = {
  symbol: 'mds',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.78-16.411a1.507 1.507 0 1 0 0-3.014 1.507 1.507 0 0 0 0 3.014zm3.698 0a1.507 1.507 0 1 0 0-3.014 1.507 1.507 0 0 0 0 3.014zm-3.699 3.699a1.507 1.507 0 1 0 0-3.014 1.507 1.507 0 0 0 0 3.014zm3.699 0a1.507 1.507 0 1 0 0-3.014 1.507 1.507 0 0 0 0 3.014zm3.698-4.11a1.096 1.096 0 1 0 0-2.192 1.096 1.096 0 0 0 0 2.192zm0 3.699a1.096 1.096 0 1 0 0-2.192 1.096 1.096 0 0 0 0 2.192zm-11.232-3.699a1.096 1.096 0 1 0 0-2.192 1.096 1.096 0 0 0 0 2.192zm0 3.699a1.096 1.096 0 1 0 0-2.192 1.096 1.096 0 0 0 0 2.192zm3.835 3.698a1.096 1.096 0 1 0 0-2.191 1.096 1.096 0 0 0 0 2.191zm3.699 0a1.096 1.096 0 1 0 0-2.191 1.096 1.096 0 0 0 0 2.191zM14.219 11.48a1.096 1.096 0 1 0 0-2.191 1.096 1.096 0 0 0 0 2.191zm3.699 0a1.096 1.096 0 1 0 0-2.191 1.096 1.096 0 0 0 0 2.191zm-3.699-4.11a.685.685 0 1 0 0-1.369.685.685 0 0 0 0 1.37zm3.699 0a.685.685 0 1 0 0-1.369.685.685 0 0 0 0 1.37zm7.397 7.398a.685.685 0 1 0 0-1.37.685.685 0 0 0 0 1.37zm0 3.699a.685.685 0 1 0 0-1.37.685.685 0 0 0 0 1.37zm-18.63-3.699a.685.685 0 1 0 0-1.37.685.685 0 0 0 0 1.37zm0 3.699a.685.685 0 1 0 0-1.37.685.685 0 0 0 0 1.37zM14.219 26a.685.685 0 1 0 0-1.37.685.685 0 0 0 0 1.37zm3.699 0a.685.685 0 1 0 0-1.37.685.685 0 0 0 0 1.37z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1e252c" r="16"/><path d="M14.22 15.589a1.507 1.507 0 1 1 0-3.014 1.507 1.507 0 0 1 0 3.014zm3.698 0a1.507 1.507 0 1 1 0-3.014 1.507 1.507 0 0 1 0 3.014zm-3.699 3.699a1.507 1.507 0 1 1 0-3.014 1.507 1.507 0 0 1 0 3.014zm3.699 0a1.507 1.507 0 1 1 0-3.014 1.507 1.507 0 0 1 0 3.014zm3.698-4.11a1.096 1.096 0 1 1 0-2.192 1.096 1.096 0 0 1 0 2.192zm0 3.699a1.096 1.096 0 1 1 0-2.192 1.096 1.096 0 0 1 0 2.192zm-11.232-3.699a1.096 1.096 0 1 1 0-2.192 1.096 1.096 0 0 1 0 2.192zm0 3.699a1.096 1.096 0 1 1 0-2.192 1.096 1.096 0 0 1 0 2.192zm3.835 3.698a1.096 1.096 0 1 1 0-2.191 1.096 1.096 0 0 1 0 2.191zm3.699 0a1.096 1.096 0 1 1 0-2.191 1.096 1.096 0 0 1 0 2.191zM14.219 11.48a1.096 1.096 0 1 1 0-2.191 1.096 1.096 0 0 1 0 2.191zm3.699 0a1.096 1.096 0 1 1 0-2.191 1.096 1.096 0 0 1 0 2.191zm-3.699-4.11a.685.685 0 1 1 0-1.369.685.685 0 0 1 0 1.37zm3.699 0a.685.685 0 1 1 0-1.369.685.685 0 0 1 0 1.37zm7.397 7.398a.685.685 0 1 1 0-1.37.685.685 0 0 1 0 1.37zm0 3.699a.685.685 0 1 1 0-1.37.685.685 0 0 1 0 1.37zm-18.63-3.699a.685.685 0 1 1 0-1.37.685.685 0 0 1 0 1.37zm0 3.699a.685.685 0 1 1 0-1.37.685.685 0 0 1 0 1.37zM14.219 26a.685.685 0 1 1 0-1.37.685.685 0 0 1 0 1.37zm3.699 0a.685.685 0 1 1 0-1.37.685.685 0 0 1 0 1.37z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mds);


/***/ }),

/***/ "1IVR":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btcz.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btcz = {
  symbol: 'btcz',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-5c1.135 0 2.263-.174 3.344-.519a.888.888 0 1 0-.538-1.692 9.224 9.224 0 0 1-2.806.435c-5.086 0-9.224-4.138-9.224-9.224S10.914 6.776 16 6.776s9.224 4.138 9.224 9.224c0 .84-.114 1.678-.34 2.488a.888.888 0 1 0 1.711.478C26.865 18 27 17.002 27 16c0-6.063-4.937-11-11-11S5 9.934 5 16s4.934 11 11 11zm3.375-11.026a2.352 2.352 0 0 0-1.382-.532 2.06 2.06 0 0 0 .767-1.06c.13-.412.148-.85.054-1.27a2.537 2.537 0 0 0-.894-1.434 2.138 2.138 0 0 0-.752-.377 1.795 1.795 0 0 0-.88-.015l-.561.122a.296.296 0 0 1-.353-.224l-.148-.668a.296.296 0 0 0-.353-.224l-.677.15a.296.296 0 0 0-.227.35l.15.673a.296.296 0 0 1-.225.353l-1.833.406a.722.722 0 0 0-.55.86l1.65 7.46a.722.722 0 0 0 .86.55l1.833-.407a.296.296 0 0 1 .353.225l.148.667a.296.296 0 0 0 .353.225l.677-.15a.296.296 0 0 0 .225-.353l-.149-.672a.296.296 0 0 1 .22-.352l.253-.061c.408-.09.489-.147.831-.324a3.14 3.14 0 0 0 .868-.637c.23-.241.398-.532.494-.85.096-.343.102-.706.016-1.052-.132-.601-.388-1.061-.768-1.379zm-5.43-1.597a.722.722 0 0 1 .55-.86l1.38-.306a.767.767 0 0 1 .611.114c.19.124.316.332.38.624.07.316.035.569-.107.757a.916.916 0 0 1-.55.358l-1.305.289a.722.722 0 0 1-.861-.55l-.098-.426zm3.909 3.767a.916.916 0 0 1-.604.409l-1.569.347a.722.722 0 0 1-.86-.55l-.117-.527a.722.722 0 0 1 .55-.86l1.656-.367a.764.764 0 0 1 .663.156c.204.162.343.391.392.647a.951.951 0 0 1-.109.745h-.002zm3.298 5.383a.277.277 0 0 0-.065.18v.28c0 .153.124.277.277.277h2.452a.277.277 0 0 0 .278-.277v-.215a.277.277 0 0 0-.278-.277h-1.051a.277.277 0 0 1-.217-.45l1.466-1.842a.272.272 0 0 0 .061-.172v-.284a.277.277 0 0 0-.277-.277H21.44a.277.277 0 0 0-.278.277v.216c0 .153.124.277.278.277h1.032a.277.277 0 0 1 .213.455l-1.533 1.832z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F8C24A"/><path fill="#FFF" d="M16 27C9.934 27 5 22.066 5 16S9.937 5 16 5s11 4.937 11 11c0 1.002-.136 2-.405 2.966a.888.888 0 0 1-1.71-.478c.225-.81.34-1.647.339-2.488 0-5.086-4.138-9.224-9.224-9.224S6.776 10.914 6.776 16s4.138 9.224 9.224 9.224c.952 0 1.899-.146 2.806-.435a.888.888 0 1 1 .538 1.692A10.97 10.97 0 0 1 16 27zm3.375-11.026c.38.318.636.778.768 1.379.086.346.08.709-.016 1.052a2.125 2.125 0 0 1-.494.85 3.14 3.14 0 0 1-.868.637c-.342.177-.423.234-.831.324l-.254.061a.296.296 0 0 0-.219.352l.15.672a.296.296 0 0 1-.226.353l-.677.15a.296.296 0 0 1-.353-.225l-.148-.667a.296.296 0 0 0-.353-.225l-1.833.406a.722.722 0 0 1-.86-.55l-1.65-7.459a.722.722 0 0 1 .55-.86l1.833-.406a.296.296 0 0 0 .225-.353l-.15-.672a.296.296 0 0 1 .227-.352l.677-.15a.296.296 0 0 1 .353.225l.148.668a.296.296 0 0 0 .353.224l.56-.122c.29-.068.593-.063.88.015.274.075.53.203.753.377a2.537 2.537 0 0 1 .894 1.434c.094.42.075.858-.054 1.27a2.06 2.06 0 0 1-.767 1.06c.506.024.99.21 1.382.532zm-5.43-1.597l.098.426a.722.722 0 0 0 .86.55l1.307-.29a.916.916 0 0 0 .55-.357c.141-.188.177-.44.107-.757-.065-.292-.192-.5-.38-.624a.767.767 0 0 0-.612-.114l-1.38.305a.722.722 0 0 0-.55.861zm3.909 3.767h.002a.951.951 0 0 0 .11-.745 1.089 1.089 0 0 0-.393-.647.764.764 0 0 0-.663-.156l-1.656.367a.722.722 0 0 0-.55.86l.116.527a.722.722 0 0 0 .861.55l1.569-.347a.916.916 0 0 0 .604-.409zm3.298 5.383l1.533-1.832a.277.277 0 0 0-.213-.455H21.44a.277.277 0 0 1-.278-.277v-.216c0-.153.124-.277.278-.277h2.358a.277.277 0 0 1 .277.277v.284a.277.277 0 0 1-.06.172l-1.467 1.842a.277.277 0 0 0 .217.45h1.051c.153 0 .278.124.278.277v.215a.277.277 0 0 1-.278.277h-2.452a.277.277 0 0 1-.277-.277v-.28a.28.28 0 0 1 .065-.18z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btcz);


/***/ }),

/***/ "1J1K":
/*!*************************************************!*\
  !*** ./node_modules/coinmarketcap-api/index.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fetch = __webpack_require__(/*! node-fetch */ "4PV6")
const qs = __webpack_require__(/*! qs */ "OFf3")

const BASE_URL = 'https://pro-api.coinmarketcap.com'

class CoinMarketCap {
  /**
   *
   * @param {String} apiKey API key for accessing the CoinMarketCap API
   * @param {Object=} Options Options for the CoinMarketCap instance
   * @param {String=} options.version  Version of API. Defaults to 'v2'
   * @param {Function=} options.fetcher fetch function to use. Defaults to node-fetch
   * @param {Object=} options.config = Configuration for fetch request
   *
   */
  constructor (apiKey, { version = 'v1', fetcher = fetch, config = {} } = {}) {
    this.apiKey = apiKey
    this.config = Object.assign({}, {
      method: 'GET',
      headers: {
        'X-CMC_PRO_API_KEY': this.apiKey,
        Accept: 'application/json',
        'Accept-Charset': 'utf-8',
        'Accept-Encoding': 'deflate, gzip'
      }
    }, config)

    this.fetcher = fetcher
    this.url = `${BASE_URL}/${version}`
  }

  /**
   * Get a paginated list of all cryptocurrencies by CoinMarketCap ID.
   *
   * @param {Object=} options Options for the request:
   * @param {String=} [options.listingStatus="active"] active or inactive coins
   * @param {Number|String=} [options.start=1] Return results from rank start and above
   * @param {Number|String=} options.limit Only returns limit number of results
   * @param {String[]|String=} options.symbol Comma separated list of symbols, will ignore the other options
   * @param {String=} [options.sort="id"] Sort results by the options at https://coinmarketcap.com/api/documentation/v1/#operation/getV1CryptocurrencyMap
   *
   * @example
   * const client = new CoinMarketCap('api key')
   * client.getIdMap().then(console.log).catch(console.error)
   * client.getIdMap({listingStatus: 'inactive', limit: 10}).then(console.log).catch(console.error)
   * client.getIdMap({symbol: 'BTC,ETH'}).then(console.log).catch(console.error)
   * client.getIdMap({symbol: ['BTC', 'ETH']}).then(console.log).catch(console.error)
   * client.getIdMap({sort: 'cmc_rank'}).then(console.log).catch(console.error)
   */
  getIdMap (args = {}) {
    let { listingStatus, start, limit, symbol, sort } = args

    if (symbol instanceof Array) {
      symbol = symbol.join(',')
    }

    return createRequest({
      fetcher: this.fetcher,
      url: `${this.url}/cryptocurrency/map`,
      config: this.config,
      query: { listing_status: listingStatus, start, limit, symbol, sort }
    })
  }

  /**
   * Get static metadata for one or more cryptocurrencies.
   * Either id or symbol is required, but passing in both is not allowed.
   *
   * @param {Object=} options Options for the request:
   * @param {Array|String|Number=} options.id One or more comma separated cryptocurrency IDs
   * @param {String[]|String} options.symbol One or more comma separated cryptocurrency symbols
   *
   * @example
   * const client = new CoinMarketCap('api key')
   * client.getMetadata({id: '1'}).then(console.log).catch(console.error)
   * client.getMetadata({id: [1, 2]}).then(console.log).catch(console.error)
   * client.getMetadata({symbol: 'BTC,ETH'}).then(console.log).catch(console.error)
   * client.getMetadata({symbol: ['BTC', 'ETH']}).then(console.log).catch(console.error)
   */
  getMetadata (args = {}) {
    return createRequest({
      fetcher: this.fetcher,
      url: `${this.url}/cryptocurrency/info`,
      config: this.config,
      query: sanitizeIdAndSymbol(args.id, args.symbol)
    })
  }

  /**
   * Get information on all tickers.
   * Start and limit options can only be used when currency or ID is not given.
   * Currency and ID cannot be passed in at the same time.
   *
   * @param {Object=} options Options for the request
   * @param {Number|String=} [options.start=1] Return results from rank start and above
   * @param {Number|String=} [options.limit=100] Only returns limit number of results [1..5000]
   * @param {String[]|String=} [options.convert="USD"] Return info in terms of another currency
   * @param {String=} [options.sort="market_cap"] Sort results by the options at https://pro.coinmarketcap.com/api/v1#operation/getV1CryptocurrencyListingsLatest
   * @param {String=} options.sortDir Direction in which to order cryptocurrencies ("asc" | "desc")
   * @param {String=} [options.cryptocurrencyType="all"] Type of cryptocurrency to include ("all" | "coins" | "tokens")
   *
   * @example
   * const client = new CoinMarketCap('api key')
   * client.getTickers({limit: 3}).then(console.log).catch(console.error)
   * client.getTickers({convert: 'EUR'}).then(console.log).catch(console.error)
   * client.getTickers({start: 0, limit: 5}).then(console.log).catch(console.error)
   * client.getTickers({sort: 'name'}).then(console.log).catch(console.error)
   */
  getTickers (args = {}) {
    let { start, limit, convert, sort, sortDir, cryptocurrencyType } = args

    // eslint-disable-next-line
    if (start && (limit == 0)) {
      throw new Error('Start and limit = 0 cannot be passed in at the same time.')
    }

    // eslint-disable-next-line
    if (limit == 0) {
      limit = 5000
    }

    if (convert && convert instanceof Array) {
      convert = convert.join(',')
    }

    return createRequest({
      fetcher: this.fetcher,
      url: `${this.url}/cryptocurrency/listings/latest`,
      config: this.config,
      query: { start, limit, convert, sort, sort_dir: sortDir, cryptocurrency_type: cryptocurrencyType }
    })
  }

  /**
   * Get latest market quote for 1 or more cryptocurrencies.
   *
   * @param {Object=} options Options for the request:
   * @param {Array|String|Number=} options.id One or more comma separated cryptocurrency IDs
   * @param {String[]|String=} options.symbol One or more comma separated cryptocurrency symbols
   * @param {String[]|String=} [options.convert="USD"] Return quotes in terms of another currency
   *
   * @example
   * const client = new CoinMarketCap('api key')
   * client.getQuotes({id: '1'}).then(console.log).catch(console.error)
   * client.getQuotes({id: [1, 2], convert: 'USD,EUR'}).then(console.log).catch(console.error)
   * client.getQuotes({symbol: 'BTC,ETH'}).then(console.log).catch(console.error)
   * client.getQuotes({symbol: ['BTC', 'ETH']}).then(console.log).catch(console.error)
   */
  getQuotes (args = {}) {
    let convert = args.convert
    const { id, symbol } = sanitizeIdAndSymbol(args.id, args.symbol)

    if (convert instanceof Array) {
      convert = convert.join(',')
    }

    return createRequest({
      fetcher: this.fetcher,
      url: `${this.url}/cryptocurrency/quotes/latest`,
      config: this.config,
      query: { id, symbol, convert }
    })
  }

  /**
   * Get global information
   *
   * @param {Object|String[]|String=} options Options for the request:
   * @param {String[]|String=} [options.convert="USD"] Return quotes in terms of another currency
   *
   * @example
   * const client = new CoinMarketCap()
   * client.getGlobal('GBP').then(console.log).catch(console.error)
   * client.getGlobal({convert: 'GBP'}).then(console.log).catch(console.error)
   */
  getGlobal (convert) {
    if (typeof convert === 'string') {
      convert = { convert: convert.toUpperCase() }
    }

    if (convert instanceof Array) {
      convert = { convert: convert.map(currency => currency.toUpperCase()) }
    }

    if (convert && convert.convert instanceof Array) {
      convert.convert = convert.convert.join(',')
    }

    return createRequest({
      fetcher: this.fetcher,
      url: `${this.url}/global-metrics/quotes/latest`,
      config: this.config,
      query: convert
    })
  }
}

const sanitizeIdAndSymbol = (id, symbol) => {
  if (id && symbol) {
    throw new Error('ID and symbol cannot be passed in at the same time.')
  }

  if (!id && !symbol) {
    throw new Error('Either ID or symbol is required to be passed in.')
  }

  if (id instanceof Array) {
    id = id.join(',')
  }

  if (symbol instanceof Array) {
    symbol = symbol.join(',')
  }

  return { id, symbol }
}

const createRequest = (args = {}) => {
  const { url, config, query, fetcher } = args

  return fetcher(`${url}${query ? `?${qs.stringify(query)}` : ''}`, config).then(res =>
    res.json()
  )
}

module.exports = CoinMarketCap


/***/ }),

/***/ "1SO3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dta.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dta = {
  symbol: 'dta',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M24.963 14.512l-.02-1.949L13.791 6l-2.713 1.674-.006-.003L8 9.484v13.022l2.811 1.801h.001l.019.013v-.002L13.823 26 25 19.479l-.017-4.968zm-3.275 3.112l-7.854 4.618-2.292-1.363 7.807-4.594zm-2.866-1.64l-4.837 2.923.021-5.681zm-4.814-3.366l.01-2.689 7.732 4.515v2.705zM10.82 23.57l-2.334-1.395V9.896l2.346 1.401v9.572l.018-.01zm.416-3.001v-9.273l2.345-1.401v9.256zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.884-9.399l10.42-6.12-.03 2.82-10.437 6.136zm7.793-8.584l-10.432-6.1 2.406-1.39 10.455 6.104z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#74d269" r="16"/><path d="M24.963 14.512h.02L25 19.478 13.823 26l-2.992-1.682v.002l-.019-.012L8 22.505V9.484l3.073-1.813.006.003L13.792 6l11.15 6.563zm-3.275 3.112l-2.339-1.339-7.807 4.594 2.292 1.363zm-2.866-1.64l-4.816-2.758-.021 5.681zm-4.814-3.366l7.742 4.531v-2.705l-7.732-4.515zM10.82 23.57l.03-2.713-.018.011v-9.572l-2.347-1.4v12.28zm.416-3.001l2.345-1.418V9.896l-2.345 1.401zm2.881 2.031l-.047 2.836L24.506 19.3l.03-2.82zm7.793-8.584l2.429-1.386-10.455-6.105-2.406 1.392z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dta);


/***/ }),

/***/ "1gjK":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zec.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zec = {
  symbol: 'zec',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.904-12.154a37.083 37.083 0 0 0 1.518-1.778 462.138 462.138 0 0 0 3.714-4.58c.387-.48.968-.958 1.065-1.505.194-1.026.065-2.12.065-3.248H17.55V6h-3.132v2.803h-3.585v3.35h6.039c-.55.65-1.033 1.197-1.518 1.779a462.137 462.137 0 0 0-3.714 4.58c-.355.48-.936.958-1.033 1.505-.194 1.026-.065 2.12-.065 3.214h3.876V26h3.261c-.064-.957-.097-1.846-.161-2.803h3.875v-3.35h-6.297z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#ECB244"/><path fill="#FFF" fill-rule="nonzero" d="M15.096 19.846h6.297v3.35h-3.875c.064.958.097 1.847.161 2.804h-3.261v-2.77h-3.876c0-1.093-.129-2.187.065-3.213.097-.547.678-1.026 1.033-1.504a462.137 462.137 0 0 1 3.714-4.581c.485-.582.969-1.129 1.518-1.778h-6.04v-3.35h3.586V6h3.132v2.735h3.908c0 1.128.129 2.222-.065 3.248-.097.547-.678 1.026-1.065 1.504a462.138 462.138 0 0 1-3.714 4.581 37.083 37.083 0 0 1-1.518 1.778z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zec);


/***/ }),

/***/ "1pIw":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vibe.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vibe = {
  symbol: 'vibe',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.63-15.082c-.36-.094-.72-.173-1.096-.267 1.497-2.247 2.977-4.471 4.466-6.719a1.067 1.067 0 0 0-.136-.008c-.952 0-1.905 0-2.857-.008-.144 0-.192.07-.256.165-1.76 2.655-3.521 5.312-5.282 7.972-.48.729-.968 1.457-1.472 2.217a.98.98 0 0 1-.112-.157A6533.971 6533.971 0 0 0 9.322 10.09a.327.327 0 0 0-.312-.18c-.904.007-1.808 0-2.713.007-.056 0-.12.008-.208.016 1.465 2.224 2.897 4.417 4.346 6.633-.056.016-.088.016-.12.024-.673.172-1.345.32-2.009.525s-1.304.47-1.825.94c-.656.587-.64 1.198.04 1.77.024.023.056.038.08.062.465.368 1 .61 1.561.807 1.769.634 3.617.877 5.49 1.01a.33.33 0 0 1 .28.164A272.253 272.253 0 0 0 15.989 25c.043-.071.09-.14.144-.204.656-.979 1.304-1.958 1.96-2.936a.342.342 0 0 1 .216-.15c.937-.117 1.881-.195 2.81-.336 1.144-.172 2.264-.462 3.32-.971.417-.196.809-.43 1.097-.799.328-.423.352-.846-.008-1.245a4.703 4.703 0 0 0-.8-.619c-.649-.4-1.369-.626-2.097-.822zm-13.732 1.88a.517.517 0 0 1 .008-.729c.173-.202.382-.372.616-.501.36-.173.732-.322 1.113-.447a.231.231 0 0 1 .2.063c.648.979 1.288 1.966 1.937 2.945.008.015.008.039.024.094-1.145-.173-2.25-.368-3.25-.9a2.592 2.592 0 0 1-.648-.526zm12.604.845c-.696.196-1.408.353-2.112.525a.769.769 0 0 1-.192 0c.248-.376.488-.744.728-1.104.384-.572.768-1.144 1.144-1.723.072-.11.144-.157.264-.094.353.172.713.336 1.057.509.1.06.192.134.272.219.32.329.32.69 0 1.01-.323.313-.723.54-1.16.658zM21.51 9H10.475l5.554 8.732z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#338be5" r="16"/><path d="M22.63 16.918c.73.196 1.45.423 2.098.822.288.177.557.385.8.619.36.4.336.822.008 1.245-.288.368-.68.603-1.097.799-1.056.509-2.176.799-3.32.971-.929.14-1.873.22-2.81.337a.342.342 0 0 0-.216.149c-.656.978-1.304 1.957-1.96 2.936a1.79 1.79 0 0 0-.144.204 272.253 272.253 0 0 1-2.057-3.133.33.33 0 0 0-.28-.164c-1.873-.133-3.721-.376-5.49-1.01-.56-.196-1.096-.439-1.56-.807-.025-.024-.057-.04-.08-.063-.68-.571-.697-1.182-.04-1.77.52-.47 1.16-.736 1.824-.94s1.336-.352 2.009-.524c.032-.008.064-.008.12-.024-1.449-2.216-2.881-4.409-4.346-6.633.088-.008.152-.016.208-.016.905-.008 1.809 0 2.713-.008a.327.327 0 0 1 .312.18c2.19 3.34 4.378 6.681 6.563 10.025a.98.98 0 0 0 .112.157c.504-.76.992-1.488 1.472-2.217 1.76-2.66 3.521-5.317 5.282-7.972.064-.094.112-.165.256-.165.952.008 1.905.008 2.857.008.045 0 .09.002.136.008a3255.396 3255.396 0 0 1-4.466 6.72c.377.093.737.172 1.097.266zm-13.732 1.88c.186.207.405.385.648.524 1 .533 2.105.728 3.25.9-.016-.054-.016-.078-.024-.093-.649-.98-1.289-1.966-1.937-2.945a.231.231 0 0 0-.2-.063c-.38.125-.752.274-1.113.447a2.227 2.227 0 0 0-.616.501.517.517 0 0 0-.008.728zm12.604.845a2.672 2.672 0 0 0 1.16-.658c.321-.32.321-.681 0-1.01a1.226 1.226 0 0 0-.271-.22c-.344-.172-.704-.336-1.057-.508-.12-.063-.192-.016-.264.094-.376.58-.76 1.15-1.144 1.723-.24.36-.48.728-.728 1.104a.769.769 0 0 0 .192 0c.704-.172 1.416-.329 2.112-.525zM21.51 9l-5.481 8.732L10.475 9z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vibe);


/***/ }),

/***/ "2QZc":
/*!*****************************************!*\
  !*** ./src/js/component-jsonwallets.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__store_js__ = __webpack_require__(/*! ./store.js */ "iyJi");





__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].component("jsonwallets", {
    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_js__["a" /* default */]],

    data: function data() {
        return {
            myHoldingsTotalInUSD: 0,
            myHoldingsTotalInBTC: 0,
            thisWallet: null,
            walletJson: null,

            globalMarketCap: 0,
            bitcoinDominance: 0,
            total24HrVolume: 0
        };
    },

    props: ["holding", "jsonholding", "title"],

    template: "\n              <div>\n                <div v-for=\"wallets in walletJson\" class=\"flex flex-row flex-wrap justify-center\">\n                  <div v-for=\"(value, key)  in wallets\" >\n                    <wallet :holding=\"value\">\n                      <h3>{{key}}</h3>\n                      <chart></chart>\n                      <totals></totals>\n\t\t                  <coinbox></coinbox>\n                    </wallet>       \n                  </div>\n                </div>\n              </div>\n            ",

    created: function created() {
        console.log("<jsonwallet> component created");
        // EventBus.$on("on-data-has-loaded", this.buildWallet);
        // console.log('holding ', this.holding);
        // console.log(this);
        // console.log(this.$el);
        // console.log(this.$refs.jsonwallet.dataset.jsonholding);
        // console.log(this.$el.dataset.jsonholding);
    },
    mounted: function mounted() {
        // console.log("~~mounted()", this.$el.dataset.jsonholding);
        this.loadJSON(this.$el.dataset.jsonholding);
    },


    methods: {
        buildWallet: function buildWallet() {
            // this.allCoins =
            console.log("oh.. hello component for my jsonwallet !");
        },
        loadJSON: function loadJSON(json) {
            var self = this;
            // console.log(json);
            fetch(json).then(function (response) {
                return response.json();
            }).then(function (myJson) {
                console.log("!1", myJson);
                self.walletJson = myJson;
                // self.walletJson = JSON.stringify(myJson);
                // console.log(self.walletJson);
                console.log("!2", JSON.stringify(myJson));
            }).catch(function () {
                console.log("there must have been an error");
            });
        }
    }
});

/* unused harmony default export */ var _unused_webpack_default_export = ("");

/***/ }),

/***/ "2b4n":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gin.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gin = {
  symbol: 'gin',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.029-14.674a.727.727 0 1 0 0-1.453h-1.66v-1.642h3.471a.727.727 0 1 0 0-1.453h-3.485a3.536 3.536 0 0 0-2.934-3.168V7.861a.727.727 0 1 0-1.453 0v1.7h-1.642V5.74a.727.727 0 1 0-1.453 0v3.82H13.23v-1.7a.727.727 0 0 0-1.453 0v1.75a3.536 3.536 0 0 0-2.934 3.168H4.74a.727.727 0 1 0 0 1.453h4.09v1.642H7.17a.727.727 0 1 0 0 1.453h1.66v1.642H5.667a.727.727 0 1 0 0 1.453h3.176a3.536 3.536 0 0 0 2.934 3.168v1.13a.727.727 0 1 0 1.453 0v-1.081h1.642v3.291a.727.727 0 0 0 1.453 0v-3.291h1.642v1.7a.727.727 0 1 0 1.453 0V23.59a3.536 3.536 0 0 0 2.934-3.168h4.811a.727.727 0 1 0 0-1.453H22.37v-1.642h1.659zm-2.82 2.782a2.372 2.372 0 0 1-2.37 2.37h-6.48a2.372 2.372 0 0 1-2.37-2.37V13.09a2.372 2.372 0 0 1 2.37-2.37h6.48a2.372 2.372 0 0 1 2.37 2.37v7.017zm-7.308-7.673a8.335 8.335 0 0 0-.841.029c-.442.05-.767.45-.781.884-.022.984-.004 1.97-.01 2.954.014.502-.034 1.01.04 1.507.071.444.505.73.936.729 1.34.009 2.68.003 4.02.004v.555H12.95l-.555 1.665h4.294c.502-.014 1.009.034 1.507-.039.444-.071.729-.505.728-.936.01-1.753.002-3.506.005-5.26-.016-.47.041-.949-.054-1.413-.101-.473-.608-.706-1.056-.677h-3.076c-.28.005-.562-.001-.843-.003zm.033 1.667h3.33v2.775h-3.33v-2.775z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#008DDE"/><g fill="#FFF"><path d="M24.029 17.326a.727.727 0 1 0 0-1.453h-1.66v-1.642h3.471a.727.727 0 1 0 0-1.453h-3.485a3.536 3.536 0 0 0-2.934-3.168V7.861a.727.727 0 1 0-1.453 0v1.7h-1.642V5.74a.727.727 0 1 0-1.453 0v3.82H13.23v-1.7a.727.727 0 0 0-1.453 0v1.75a3.536 3.536 0 0 0-2.934 3.168H4.74a.727.727 0 1 0 0 1.453h4.09v1.642H7.17a.727.727 0 1 0 0 1.453h1.66v1.642H5.667a.727.727 0 1 0 0 1.453h3.176a3.536 3.536 0 0 0 2.934 3.168v1.13a.727.727 0 1 0 1.453 0v-1.081h1.642v3.291a.727.727 0 0 0 1.453 0v-3.291h1.642v1.7a.727.727 0 1 0 1.453 0V23.59a3.536 3.536 0 0 0 2.934-3.168h4.811a.727.727 0 1 0 0-1.453H22.37v-1.642h1.659zm-2.82 2.782a2.372 2.372 0 0 1-2.37 2.37h-6.48a2.372 2.372 0 0 1-2.37-2.37V13.09a2.372 2.372 0 0 1 2.37-2.37h6.48a2.372 2.372 0 0 1 2.37 2.37v7.017z"/><path d="M13.901 12.435a8.335 8.335 0 0 0-.841.029c-.442.05-.767.45-.781.884-.022.984-.004 1.97-.01 2.954.014.502-.034 1.01.04 1.507.071.444.505.73.936.729 1.34.009 2.68.003 4.02.004v.555H12.95l-.555 1.665h4.294c.502-.014 1.009.034 1.507-.039.444-.071.729-.505.728-.936.01-1.753.002-3.506.005-5.26-.016-.47.041-.949-.054-1.413-.101-.473-.608-.706-1.056-.677h-3.076c-.28.005-.562-.001-.843-.003zm.033 1.667h3.33v2.775h-3.33v-2.775z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gin);


/***/ }),

/***/ "2crP":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tusd.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tusd = {
  symbol: 'tusd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.057-12.972v-5.86h.77c2.545 0 3.172-2.373 3.172-2.373h-6.683c-3.172 0-3.71 2.374-3.71 2.374h3.943v8.817s2.508-.753 2.508-2.958zm7.338 4.566c2.248-2.336 3.11-5.58 2.301-8.683a9.339 9.339 0 0 0-2.48-4.28c-.108-.106-.216-.214-.342-.32l-.108-.107a2.185 2.185 0 0 0-.234-.196l-.144-.107-.215-.16-.127-.09a4.15 4.15 0 0 1-.251-.178l-.163-.106a1.38 1.38 0 0 0-.215-.125l-.162-.107c-.072-.036-.144-.09-.216-.125l-.162-.09a2.52 2.52 0 0 0-.234-.106l-.055-.018c.198.16.395.339.575.517a8.75 8.75 0 0 1 0 12.427c-4.386 4.35-11.505 4.35-15.893 0-.162-.16-.306-.32-.467-.48l-.126-.143a5.762 5.762 0 0 1-.27-.339 11.856 11.856 0 0 0 2.176 2.995c4.584 4.546 12.026 4.546 16.61 0a.614.614 0 0 0 .202-.18zM10.4 22.386a8.168 8.168 0 0 1-.576-.517 8.758 8.758 0 0 1 0-12.439c4.391-4.354 11.516-4.354 15.907 0 .306.304.593.625.863.964a11.784 11.784 0 0 0-2.177-2.98c-4.588-4.551-12.038-4.551-16.626 0-.054.053-.108.125-.18.178-3.041 3.177-3.455 7.924-1.025 11.529.954 1.39 2.284 2.55 3.814 3.265z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2B2E7F"/><g fill="#FFF"><path d="M17.057 19.028v-5.86h.77c2.545 0 3.172-2.373 3.172-2.373h-6.683c-3.172 0-3.71 2.374-3.71 2.374h3.943v8.817s2.508-.753 2.508-2.958z"/><path d="M24.395 23.594c2.248-2.336 3.11-5.58 2.301-8.683a9.339 9.339 0 0 0-2.48-4.28c-.108-.106-.216-.214-.342-.32l-.108-.107a2.185 2.185 0 0 0-.234-.196l-.144-.107-.215-.16-.127-.09a4.15 4.15 0 0 1-.251-.178l-.163-.106a1.22 1.22 0 0 0-.215-.125l-.162-.107c-.072-.036-.144-.09-.216-.125l-.162-.09c-.072-.035-.144-.071-.234-.106l-.055-.018c.198.16.395.339.575.517a8.75 8.75 0 0 1 0 12.427c-4.386 4.35-11.505 4.35-15.893 0-.162-.16-.306-.32-.467-.48l-.126-.143a5.762 5.762 0 0 1-.27-.339 11.856 11.856 0 0 0 2.176 2.995c4.584 4.546 12.026 4.546 16.61 0a.614.614 0 0 0 .202-.18z"/><path d="M10.4 22.386a8.168 8.168 0 0 1-.576-.517 8.758 8.758 0 0 1 0-12.439c4.391-4.354 11.516-4.354 15.907 0 .306.304.593.625.863.964a11.784 11.784 0 0 0-2.177-2.98c-4.588-4.551-12.038-4.551-16.626 0-.054.053-.108.125-.18.178-3.041 3.177-3.455 7.924-1.025 11.529.954 1.39 2.284 2.55 3.814 3.265z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tusd);


/***/ }),

/***/ "2zpD":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ignis.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ignis = {
  symbol: 'ignis',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM14.812 6c-1.004 2.89-2.2 5.715-3.247 8.59.727 1.298 1.417 2.615 2.153 3.906l5.545-9.671C17.758 7.915 16.33 6.888 14.812 6zM10 26c1.595-.034 3.188-.014 4.783-.014C17.17 21.745 19.594 17.523 22 13.29a1620.39 1620.39 0 0 1-2.496-4.37C16.4 14.645 13.139 20.291 10 26zm5.082-.023c2.12-1.249 4.239-2.5 6.345-3.775-.797-1.032-1.612-2.053-2.415-3.08-1.347 2.264-2.6 4.58-3.93 6.855z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f9c011" r="16"/><path d="M14.812 6c1.518.887 2.946 1.914 4.45 2.825l-5.544 9.671c-.736-1.291-1.426-2.608-2.153-3.906 1.047-2.875 2.243-5.7 3.247-8.59zM10 26c3.139-5.709 6.4-11.355 9.504-17.079.83 1.457 1.661 2.913 2.496 4.37-2.406 4.232-4.83 8.454-7.217 12.695-1.595 0-3.188-.02-4.783.014zm5.082-.023c1.33-2.275 2.583-4.59 3.93-6.855.803 1.027 1.618 2.048 2.415 3.08a613.917 613.917 0 0 1-6.345 3.775z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ignis);


/***/ }),

/***/ "34Nj":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/music.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Music = {
  symbol: 'music',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M18.65.226A16 16 0 0 0 16 0C7.16 0 0 7.16 0 16c0 3.394 1.067 6.53 2.86 9.131 1.1-1.616 3.637-2.731 6.578-2.731 2.02 0 3.847.533 5.156 1.39L18.65.226zm8.502 4.315c2.763 6.11.339 9.374.339 9.374-1.875-5.64-7.305-6.464-7.305-6.464s-3.572 19.248-3.572 19.49c0 2.085-2.214 3.847-5.22 4.38A16.01 16.01 0 0 0 16 32c8.84 0 16-7.16 16-16 0-4.493-1.859-8.55-4.848-11.459z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FFF"/><path fill="#FBBF02" d="M18.65.226A16 16 0 0 0 16 0C7.16 0 0 7.16 0 16c0 3.394 1.067 6.53 2.86 9.131 1.1-1.616 3.637-2.731 6.578-2.731 2.02 0 3.847.533 5.156 1.39L18.65.226zm8.502 4.315c2.763 6.11.339 9.374.339 9.374-1.875-5.64-7.305-6.464-7.305-6.464s-3.572 19.248-3.572 19.49c0 2.085-2.214 3.847-5.22 4.38A16.01 16.01 0 0 0 16 32c8.84 0 16-7.16 16-16 0-4.493-1.859-8.55-4.848-11.459z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Music);


/***/ }),

/***/ "39pN":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fsn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fsn = {
  symbol: 'fsn',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M4.876 27.5h.223c.84-3.16 2.045-6.633 3.39-10.164 1.233-3.217 2.634-5.893 4.119-8.114.896 0 1.82.057 2.773.114 1.177.086 2.41.228 3.67.399 3.867.54 5.94 1.423 6.949 2.477-.925-3.274-4.259-6.064-10.843-6.036h-.14c2.942-3.246 5.968-4.555 8.21-3.644a.871.871 0 0 1 .28.142c-.57-.757-1.243-1.34-2.018-1.708C27.622 3.206 32 9.092 32 16c0 8.837-7.163 16-16 16a15.947 15.947 0 0 1-11.124-4.5zm-.028-.027A15.952 15.952 0 0 1 0 16c0-1.047.1-2.07.292-3.06 1.617-1.804 4.744-3.064 9.01-3.518-1.009 1.992-1.905 4.27-2.662 6.86-1.146 3.976-1.706 7.81-1.792 11.19zM.385 12.497C1.982 5.345 8.367 0 16 0c1.492 0 2.937.204 4.307.586-2.946-.55-6.385 1.546-9.324 5.932-5.357.86-9.025 3.172-10.598 5.979zm17.378 3.985c-1.793 0-3.25 1.48-3.25 3.36 0 1.85 1.457 3.359 3.25 3.359s3.25-1.509 3.25-3.36c0-1.85-1.457-3.359-3.25-3.359z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1D9AD7"/><path fill="#FFF" d="M26 12.212c-1.009-1.054-3.082-1.936-6.948-2.477a59.901 59.901 0 0 0-3.67-.399c-.953-.057-1.878-.114-2.774-.114-1.485 2.22-2.886 4.897-4.119 8.114C7.144 20.866 5.94 24.34 5.1 27.5h-.252c.084-3.388.644-7.231 1.793-11.217.757-2.59 1.653-4.869 2.662-6.861-4.54.484-7.79 1.879-9.302 3.871 1.289-3.16 5.127-5.836 10.983-6.775 3.11-4.641 6.78-6.72 9.834-5.808 1.064.313 1.961.996 2.69 1.964-.085-.057-.169-.114-.28-.142-2.242-.911-5.268.398-8.21 3.644h.14c6.584-.028 9.918 2.762 10.843 6.036zm-8.237 4.27c1.793 0 3.25 1.509 3.25 3.36 0 1.85-1.457 3.359-3.25 3.359s-3.25-1.509-3.25-3.36c0-1.878 1.457-3.359 3.25-3.359z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fsn);


/***/ }),

/***/ "3ITj":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sbd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sbd = {
  symbol: 'sbd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.87 8.229c-.193-.098-2.64 1.958-2.64 3.471-.004 2.068 2.854 6.752 3.336 8.564.414 1.554-.703 3.419-.396 3.504.28.183 2.947-2.562 3.051-3.732.134-1.864-3.114-7.297-3.373-8.7-.3-1.638.238-3.07.022-3.107zm6.109-2.14c-.246-.124-3.368 2.496-3.368 4.427-.003 2.637 3.642 8.61 4.255 10.92.528 1.981-.895 4.36-.506 4.466.36.232 3.758-3.265 3.892-4.759.172-2.375-3.972-9.303-4.301-11.095-.383-2.083.302-3.912.028-3.958zm6.305 2.14c-.191-.098-2.64 1.958-2.64 3.471-.004 2.068 2.855 6.752 3.336 8.564.414 1.554-.702 3.419-.396 3.504.282.183 2.95-2.562 3.052-3.732.133-1.864-3.114-7.297-3.374-8.7-.3-1.638.238-3.07.022-3.107z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#4ba2f2" r="16"/><path d="M9.87 8.229c.216.037-.322 1.47-.022 3.107.26 1.403 3.507 6.836 3.373 8.7-.104 1.17-2.77 3.915-3.051 3.732-.307-.085.81-1.95.396-3.504-.482-1.812-3.34-6.496-3.337-8.564 0-1.513 2.448-3.569 2.64-3.471zm6.109-2.14c.274.047-.41 1.876-.028 3.959.33 1.792 4.473 8.72 4.301 11.095-.134 1.494-3.532 4.991-3.892 4.76-.39-.107 1.034-2.486.506-4.468-.613-2.308-4.258-8.282-4.255-10.919 0-1.931 3.122-4.55 3.368-4.426zm6.305 2.14c.216.037-.321 1.47-.022 3.107.26 1.403 3.507 6.836 3.374 8.7-.103 1.17-2.77 3.915-3.052 3.732-.306-.085.81-1.95.396-3.504-.481-1.812-3.34-6.496-3.337-8.564 0-1.513 2.45-3.569 2.641-3.471z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sbd);


/***/ }),

/***/ "3NfZ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/elix.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Elix = {
  symbol: 'elix',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.902-8.404l5.887 2.345 5.884-2.348-3.186-7.61 3.188-7.618-5.886-2.342-5.887 2.345 3.189 7.615z"/><path d="M15.985 15.984v5.306l-5.89 2.31 5.89-7.62v-5.306l5.89-2.31z" fill-opacity=".197"/><path d="M15.985 21.29v4.651l-5.89-2.344 5.89-2.315v-5.298l-5.89-7.62 5.89 2.31V6.023l5.89 2.343-5.89 2.315v5.299l5.89 7.62z" fill-opacity=".5"/><path d="M10.095 8.366l5.89-2.343v4.658zm11.78 15.231l-5.89 2.344v-4.659z" fill-opacity=".75"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#00aded" r="16"/><g fill="#fff"><path d="M10.097 23.603l.002-.004 3.188-7.616-3.19-7.615 5.885 7.615-5.881 7.615zm11.776 0l-.004-.005-5.881-7.615 5.885-7.615-3.19 7.615 3.188 7.616z"/><path d="M15.985 15.984v5.306l-5.89 2.31 5.89-7.62v-5.306l5.89-2.31z" fill-opacity=".8"/><path d="M15.985 21.29v4.651l-5.89-2.344 5.89-2.315v-5.298l-5.89-7.62 5.89 2.31V6.023l5.89 2.343-5.89 2.315v5.299l5.89 7.62z" fill-opacity=".5"/><path d="M10.095 8.366l5.89-2.343v4.658zm11.78 15.231l-5.89 2.344v-4.659z" fill-opacity=".145"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Elix);


/***/ }),

/***/ "3qTY":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xp.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xp = {
  symbol: 'xp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16.526 23h1.414l.977-4.923 2.306.01c1.61 0 2.934-.412 3.973-1.236 1.04-.824 1.633-1.921 1.779-3.293.088-.941-.056-1.76-.434-2.455l-2.73 1.427c.02.11.031.223.035.335.022.872-.183 1.566-.615 2.083-.432.516-1.04.78-1.822.793l-2.031-.02.194-.975-3.515 1.837-.64 3.245-.862-2.46-2.645 1.383L12.992 23zm-1.315-10.99h1.75l-.532 2.693 3.516-1.838.3-1.51 2.295.02c.07.004.14.013.208.026l2.8-1.464c-.746-.586-1.701-.895-2.866-.927L17.556 9h-2.215l-1.88 3.01h1.75-1.75l-1.051 1.779L11.18 9H7.7l2.372 6.827-2.467 3.49 6.659-3.482 2.697-3.826zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5.786 21.952l-.02-.037L5 23h3.765l2.348-3.833z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#008200" r="16"/><path d="M14.79 23h-1.798l-1.082-4.25 2.645-1.382.861 2.46.641-3.245 3.515-1.837-.194.976 2.03.019c.784-.012 1.391-.277 1.823-.793.432-.517.637-1.21.615-2.083a2.31 2.31 0 0 0-.035-.335l2.73-1.427c.378.695.522 1.514.434 2.455-.146 1.372-.74 2.47-1.779 3.293-1.039.824-2.364 1.236-3.973 1.236l-2.306-.01L17.94 23zm.421-10.99h1.75l-2.697 3.825-6.66 3.481 2.468-3.49L7.7 9h3.48l1.23 4.789 1.052-1.78h1.75-1.75L15.34 9h2.215l5.126.01c1.165.032 2.12.341 2.866.927l-2.8 1.464a1.773 1.773 0 0 0-.208-.026l-2.294-.02-.3 1.51-3.517 1.838.532-2.694zm-9.425 9.942l5.327-2.785L8.765 23H5l.767-1.085z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xp);


/***/ }),

/***/ "3ziN":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pay.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pay = {
  symbol: 'pay',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.91-16.304a1.137 1.137 0 0 0-.215-.3C24.793 13.242 20.922 9 20.922 9l-4.917 5.378-4.98-5.327S7.109 13.33 5.19 15.507c-.25.246-.25.69-.026.952.997 1.136 5.894 6.536 5.894 6.536l4.94-5.414L20.904 23l5.917-6.546s.125-.13.152-.217c.058-.18.016-.376-.063-.541zm-18.992.599c-.16-.189-.106-.486.043-.665.626-.713 3.131-3.4 3.131-3.4l3.49 3.705-3.496 3.824s-2.14-2.284-3.168-3.464zm15.988.126a2.267 2.267 0 0 1-.256.355l-2.71 2.945L17.44 16l3.444-3.775s1.984 2.055 2.893 3.16c.077.096.168.187.207.309.083.239.03.505-.079.726z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#302C2C"/><path fill="#FFF" d="M26.91 15.696a1.137 1.137 0 0 0-.215-.3C24.793 13.242 20.922 9 20.922 9l-4.917 5.378-4.98-5.327S7.109 13.33 5.19 15.507c-.25.246-.25.69-.026.952.997 1.136 5.894 6.536 5.894 6.536l4.94-5.414L20.904 23l5.917-6.546s.125-.13.152-.217c.058-.18.016-.376-.063-.541m-18.992.599c-.16-.189-.106-.486.043-.665.626-.713 3.131-3.4 3.131-3.4l3.49 3.705-3.496 3.824s-2.14-2.284-3.168-3.464m15.988.126a2.267 2.267 0 0 1-.256.355l-2.71 2.945L17.44 16l3.444-3.775s1.984 2.055 2.893 3.16c.077.096.168.187.207.309.083.239.03.505-.079.726"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pay);


/***/ }),

/***/ "49F2":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/veri.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Veri = {
  symbol: 'veri',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 8v.01c1.175 5.23 2.35 10.46 3.527 15.688h3.977L17.031 8h-3.204l-1.904 9.7c-.137.655-.24 1.32-.404 1.97a7.778 7.778 0 0 1-.116-.491L9.313 8c-1.105.003-2.21.003-3.313 0zm12.314 4.932v-.001c-.793.968-1.014 2.262-1.107 3.484-.07 1.253-.061 2.515.087 3.762.148 1.083.521 2.213 1.376 2.926.92.777 2.173.934 3.327.89 1.062-.043 2.184-.397 2.88-1.263.694-.833.89-1.953.95-3.013h-2.664c-.096.639-.188 1.337-.628 1.835-.33.364-.874.46-1.326.313-.424-.152-.69-.565-.834-.982-.296-.845-.24-1.756-.244-2.638H26c.001-1.195-.012-2.4-.263-3.57-.207-.936-.643-1.876-1.438-2.432-.898-.632-2.04-.728-3.1-.654-1.074.07-2.188.467-2.885 1.343zm2.274 1.245h.001c.495-.742 1.791-.74 2.2.089.331.67.326 1.445.373 2.178H20.13c-.008-.771.004-1.613.458-2.267z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F93"/><path fill="#FFF" d="M6 8c1.104.002 2.209.002 3.312 0l2.091 11.18c.033.165.073.328.116.49.164-.65.267-1.314.404-1.97L13.827 8l3.204.001c-1.175 5.232-2.35 10.465-3.527 15.697H9.527C8.35 18.469 7.175 13.24 6 8.01V8zm12.314 4.932c.697-.876 1.811-1.273 2.885-1.343 1.06-.074 2.202.022 3.1.654.795.556 1.231 1.496 1.438 2.431.251 1.172.264 2.376.263 3.57h-5.87c.005.883-.05 1.794.245 2.64.143.416.41.83.834.981.452.147.996.051 1.326-.313.44-.498.532-1.196.628-1.835h2.664c-.06 1.06-.256 2.18-.95 3.013-.696.866-1.818 1.22-2.88 1.263-1.154.044-2.407-.113-3.327-.89-.855-.713-1.228-1.843-1.376-2.926-.148-1.247-.156-2.509-.087-3.762.093-1.222.314-2.516 1.106-3.484zm2.274 1.245c-.454.654-.466 1.496-.458 2.267h3.032c-.047-.733-.042-1.507-.372-2.178-.41-.828-1.706-.831-2.2-.088h-.002z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Veri);


/***/ }),

/***/ "4PV6":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// ref: https://github.com/tc39/proposal-global
var getGlobal = function () {
	// the only reliable means to get the global object is
	// `Function('return this')()`
	// However, this causes CSP violations in Chrome apps.
	if (typeof self !== 'undefined') { return self; }
	if (typeof window !== 'undefined') { return window; }
	if (typeof global !== 'undefined') { return global; }
	throw new Error('unable to locate global object');
}

var global = getGlobal();

module.exports = exports = global.fetch;

// Needed for TypeScript and Webpack.
if (global.fetch) {
	exports.default = global.fetch.bind(global);
}

exports.Headers = global.Headers;
exports.Request = global.Request;
exports.Response = global.Response;

/***/ }),

/***/ "57U+":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/via.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Via = {
  symbol: 'via',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M11.133 14.296l.751 1.96-3.874-.025L8 17.95l4.544.029L16 27l3.44-8.978 4.55.029.01-1.719-3.904-.024.77-2.012h3.129v-1.719h-2.47l1.896-4.95L21.856 7l-3.56 9.296-4.602-.029L10.144 7l-1.565.627 1.896 4.95h-2.47v1.72zm3.22 3.694l3.285.02L16 22.289zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#565656" r="16"/><path d="M11.133 14.296H8.005v-1.719h2.47L8.58 7.627 10.144 7l3.55 9.267 4.601.03L21.856 7l1.565.627-1.896 4.95h2.47v1.72h-3.128l-.771 2.01 3.904.025-.01 1.719-4.55-.029L16 27l-3.456-9.021L8 17.949l.01-1.718 3.874.025zm3.22 3.694L16 22.288l1.638-4.277z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Via);


/***/ }),

/***/ "5GWo":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wan.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wan = {
  symbol: 'wan',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7 11.09v11.974l9-5.315 9 5.315V11.09l-2.606 1.13v6.353L16 14.786l-6.333 3.787V12.22L7 11.09zm.303-.489l2.364.978L16 7.883l6.394 3.696 2.364-.978L16 5.5l-8.697 5.101zm1.879 11.821L16.03 26.5l6.849-4.078-2.03-1.13-4.819 2.825-4.878-2.825-1.97 1.13z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#136AAD"/><path fill="#FFF" d="M7 11.09l2.667 1.13v6.353L16 14.786l6.394 3.787V12.22L25 11.09v11.974l-9-5.315-9 5.315V11.09zm.303-.489L16 5.5l8.758 5.101-2.364.978L16 7.883l-6.333 3.696-2.364-.978zm1.879 11.821l1.97-1.13 4.878 2.825 4.818-2.825 2.03 1.13L16.03 26.5l-6.848-4.078z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wan);


/***/ }),

/***/ "5bIN":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tbx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tbx = {
  symbol: 'tbx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.3-4.6c6.462 0 11.7-5.238 11.7-11.7C27.4 9.238 22.162 4 15.7 4 9.238 4 4 9.238 4 15.7c0 6.462 5.238 11.7 11.7 11.7zm2.89-7.7l2.35-4-2.62-4.48h-5.24l-2.62 4.48 2.35 4 2.89-4 2.89 4zm.86-10.4l3.74 6.4-3.74 6.4h-7.49l-3.75-6.4 3.74-6.4h7.5z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#5244D4"/><path d="M15.7 27.4C9.238 27.4 4 22.162 4 15.7 4 9.238 9.238 4 15.7 4c6.462 0 11.7 5.238 11.7 11.7 0 6.462-5.238 11.7-11.7 11.7zm2.89-7.7l-2.89-4-2.89 4-2.35-4 2.62-4.48h5.24l2.62 4.48-2.35 4zm.86-10.4h-7.5l-3.74 6.4 3.75 6.4h7.49l3.74-6.4-3.74-6.4z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tbx);


/***/ }),

/***/ "600x":
/*!****************************!*\
  !*** ./src/js/myWallet.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(/*! lodash */ "B1iE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store_js__ = __webpack_require__(/*! ./store.js */ "iyJi");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__component_jsonwallets_js__ = __webpack_require__(/*! ./component-jsonwallets.js */ "2QZc");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__component_wallet_js__ = __webpack_require__(/*! ./component-wallet.js */ "S9P+");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__component_coinbox_js__ = __webpack_require__(/*! ./component-coinbox.js */ "hCcw");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__component_coin_js__ = __webpack_require__(/*! ./component-coin.js */ "hor5");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__component_chart_js__ = __webpack_require__(/*! ./component-chart.js */ "NEop");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__component_totals_js__ = __webpack_require__(/*! ./component-totals.js */ "Xrcg");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_vue_cryptoicon__ = __webpack_require__(/*! vue-cryptoicon */ "qVRk");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_vue_cryptoicon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_vue_cryptoicon__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_cryptoicon_src_icons__ = __webpack_require__(/*! vue-cryptoicon/src/icons */ "7DYF");

// import Vuex from "vuex";
// import Rx from "rxjs/Rx";













// https://www.npmjs.com/package/coinmarketcap-api
var CoinMarketCap = __webpack_require__(/*! coinmarketcap-api */ "1J1K");
// const apiKey = '22143f4a-7418-45df-8a03-ae32f6dc8748'
// const client = new CoinMarketCap(apiKey)


// For all icons

__WEBPACK_IMPORTED_MODULE_11_vue_cryptoicon___default.a.add(__WEBPACK_IMPORTED_MODULE_12_vue_cryptoicon_src_icons__["a" /* default */]);
__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].use(__WEBPACK_IMPORTED_MODULE_11_vue_cryptoicon___default.a);

// selective icons 
// import { Btc, Eth, Xrp, Eos, Bnb, Tron } from 'vue-cryptoicon/src/icons';
// Cryptoicon.add([Btc, Eth, Xrp, Eos, Bnb, Tron]);
// Vue.use(Cryptoicon);


var masterWallet = new __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */]({
    el: '#masterWallet',
    delimiters: ['${', '}'],
    mixins: [__WEBPACK_IMPORTED_MODULE_3__mixins_js__["a" /* default */]],
    store: __WEBPACK_IMPORTED_MODULE_4__store_js__["a" /* default */],
    data: function data() {
        return {
            wallet: "wallet",
            globalMarketCap: 0,
            bitcoinDominance: 0,
            total24HrVolume: 0,

            allCoins: [],
            bitcoinPrice: 0,
            thisWallet: null,
            masterWallet: null,
            fetchTick: 0,
            //   descrete:true

            cmcApiKey: '22143f4a-7418-45df-8a03-ae32f6dc8748',
            CMC: null
        };
    },

    created: function created() {
        console.log('primaryComponent created() ~~~~~~~~~');
        // https://www.npmjs.com/package/coinmarketcap-api
        this.CMC = new CoinMarketCap(this.cmcApiKey);
        this.CMC.getMetadata({ id: '1' }).then(function (re) {
            console.log('?? ~ ', re);
            console.log('?? ~ ', re.data[1].logo);
        }).catch(console.error);
    },

    mounted: function mounted() {
        this.fetchData2();
    },

    methods: {
        fetchData2: function fetchData2() {
            var self = this;
            self.bitcoinDominance = 0;
            self.total24HrVolume = 0;
            self.globalMarketCap = 0;
            // https://www.npmjs.com/package/coinmarketcap-api
            this.CMC.getGlobal().then(function (response) {
                console.log('getGlobal() ', response);
                self.bitcoinDominance = response.data.btc_dominance;
                self.globalMarketCap = self.wordifyNumber(response.data.quote.USD.total_market_cap);
                self.total24HrVolume = self.wordifyNumber(response.data.quote.USD.total_volume_24h);
            }).catch(console.error);

            // https://www.npmjs.com/package/coinmarketcap-api
            this.CMC.getTickers({ limit: 10 }).then(function (response) {
                self.allCoins = response.data;
                console.log('allCoins ', self.allCoins);

                __WEBPACK_IMPORTED_MODULE_4__store_js__["a" /* default */].commit('addAllCoins', self.allCoins);
                self.masterWallet = self.mixinBuildWalletV2(self.totalHoldings, self.allCoins);

                __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].nextTick(function () {
                    __WEBPACK_IMPORTED_MODULE_2__eventBus_js__["a" /* default */].$emit("on-data-has-loaded");
                });
            }).catch(console.error);
        }
    }
});

/***/ }),

/***/ "6FIa":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cs.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cs = {
  symbol: 'cs',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16.931 9.625c.061-1.188.454-3.826 1.704-3.826.33 0 .601.094.812.282-.3.157-.451.423-.451.8 0 .563.473.94.947.94.473 0 .946-.283.946-.94C20.89 6.221 20.26 5 18.77 5c-2.458.046-3.42 2.855-3.469 4.695-2.501.395-5.051 2.165-5.051 6.258 0 3.64 2.449 6.143 5.077 6.565-.116 2.098-.794 3.73-1.696 3.73-.27 0-.54-.094-.811-.282.27-.157.405-.439.405-.846 0-.611-.45-.94-.901-.94s-.947.282-.947.94c0 1.01.947 1.88 2.074 1.88 2.38 0 3.34-2.444 3.527-4.473 2.49-.311 4.272-1.883 4.272-2.578 0-.33-.225-.47-.406-.47-.325 0-1.577 1.684-3.832 2.013-.006-2.175-.068-8.495-.085-10.791.846.047 1.574.273 2.294 1.35.668 1 .541 1.505.992 1.505.3 0 .466-.126.496-.377-.12-.365-.18-.632-.18-.799 0-.25.045-.658.045-.846 0-.264-1.19-1.728-3.643-1.909zm-1.587 11.788c-1.726-.521-3.11-2.532-3.11-5.46 0-1.847.76-4.593 3.067-5.16.008 2.577.039 8.186.043 10.62zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#262626"/><path fill="#FFF" d="M16.931 9.625c2.453.181 3.643 1.645 3.643 1.91 0 .187-.045.595-.045.845 0 .167.06.434.18.8-.03.25-.195.376-.496.376-.45 0-.324-.505-.992-1.505-.72-1.077-1.448-1.303-2.294-1.35.017 2.296.08 8.616.085 10.79 2.255-.328 3.507-2.012 3.832-2.012.18 0 .406.14.406.47 0 .695-1.782 2.267-4.272 2.578C16.792 24.556 15.832 27 13.45 27c-1.127 0-2.074-.87-2.074-1.88 0-.658.496-.94.947-.94.45 0 .901.329.901.94 0 .407-.135.69-.405.846.27.188.54.282.811.282.902 0 1.58-1.632 1.696-3.73-2.628-.422-5.077-2.926-5.077-6.565 0-4.093 2.55-5.863 5.051-6.258.05-1.84 1.011-4.65 3.47-4.695 1.487 0 2.118 1.222 2.118 1.88 0 .658-.473.94-.946.94-.474 0-.947-.376-.947-.94 0-.376.15-.642.45-.799-.21-.188-.48-.282-.81-.282-1.251 0-1.644 2.638-1.705 3.826zm-1.587 11.788c-.004-2.434-.035-8.043-.043-10.62-2.308.567-3.067 3.313-3.067 5.16 0 2.928 1.384 4.939 3.11 5.46z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cs);


/***/ }),

/***/ "6Fx9":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gbyte.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gbyte = {
  symbol: 'gbyte',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-5c6.075 0 11-4.925 11-11S22.075 5 16 5 5 9.925 5 16s4.925 11 11 11z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#302C2C" fill-rule="nonzero"/><circle cx="16" cy="16" r="11" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gbyte);


/***/ }),

/***/ "6GK/":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/emc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Emc = {
  symbol: 'emc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8 8v3.2h6.4v3.2H8v3.2h9.6v-6.4h3.2v9.6H8V24h16V8H8z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#B49FFC"/><path fill="#FFF" d="M8 8v3.2h6.4v3.2H8v3.2h9.6v-6.4h3.2v9.6H8V24h16V8z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Emc);


/***/ }),

/***/ "6nxU":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ctr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ctr = {
  symbol: 'ctr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-5c6.075 0 11-4.925 11-11S22.075 5 16 5 5 9.925 5 16s4.925 11 11 11zm0-1.546a9.454 9.454 0 1 1 0-18.908 9.454 9.454 0 0 1 0 18.908zm.072-2.913c2.788 0 4.39-1.204 5.577-2.84l-2.627-1.868c-.755.916-1.529 1.527-2.842 1.527-1.763 0-3.004-1.473-3.004-3.36v-.036c0-1.833 1.241-3.324 3.004-3.324 1.205 0 2.033.575 2.752 1.473l2.627-2.03c-1.116-1.545-2.77-2.624-5.343-2.624-3.813 0-6.638 2.875-6.638 6.541v.036c0 3.755 2.897 6.505 6.494 6.505z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#fdde6c" fill-rule="nonzero" r="16"/><path d="M16 27C9.925 27 5 22.075 5 16S9.925 5 16 5s11 4.925 11 11-4.925 11-11 11zm0-1.546a9.454 9.454 0 1 0 0-18.908 9.454 9.454 0 0 0 0 18.908zm.072-2.913c-3.597 0-6.494-2.75-6.494-6.505V16c0-3.666 2.825-6.54 6.638-6.54 2.572 0 4.227 1.078 5.343 2.623l-2.627 2.03c-.72-.898-1.547-1.473-2.752-1.473-1.763 0-3.004 1.491-3.004 3.324V16c0 1.887 1.241 3.36 3.004 3.36 1.313 0 2.087-.61 2.842-1.527l2.627 1.869c-1.188 1.635-2.789 2.839-5.577 2.839z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ctr);


/***/ }),

/***/ "6pI9":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ndz.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ndz = {
  symbol: 'ndz',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.586-14.624V13.54a1.91 1.91 0 0 1-1.345-1.823 1.911 1.911 0 0 1 2.686-1.748l1.786-1.033-4.519-2.616a2.384 2.384 0 0 0-2.388 0l-2.273 1.315.984.55v2.673a1.91 1.91 0 0 1 1.14 2.794l3.676 3.821c.082-.038.166-.071.253-.098zm1.138 0a1.908 1.908 0 0 1 0 3.646v3.192l4.091-2.368A2.372 2.372 0 0 0 25 19.793v-7.586c0-.846-.451-1.628-1.185-2.053l-.968-.56-2.031 1.174a1.91 1.91 0 0 1-1.092 2.773zm-2.227.869l-3.676-3.822a1.903 1.903 0 0 1-.304.113v3.598a1.91 1.91 0 0 1 1.397 1.839 1.912 1.912 0 0 1-3.144 1.462l-1.83 1.428 4.865 2.816c.738.428 1.65.428 2.388 0l1.392-.806v-3.85a1.91 1.91 0 0 1-1.089-2.778zm-5.118-.079v-3.662c-.752-.257-1.293-.969-1.293-1.806s.541-1.55 1.293-1.807v-2.04l-.99-.553-3.204 1.856A2.372 2.372 0 0 0 7 12.207v7.586c0 .846.451 1.628 1.185 2.053l.697.403 2.27-1.775a1.907 1.907 0 0 1 1.227-2.308zM13 13.523a.827.827 0 1 0 .002-1.653.827.827 0 0 0-.002 1.653zm0 7.275a.827.827 0 1 0 .002-1.653.827.827 0 0 0-.002 1.653zm6.155-8.255a.827.827 0 1 0 .002-1.653.827.827 0 0 0-.002 1.653zm0 7.482a.827.827 0 1 0 .002-1.654.827.827 0 0 0-.002 1.654z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#622fba" fill-rule="nonzero" r="16"/><path d="M18.586 17.376c-.087.027-.171.06-.253.098l-3.676-3.821a1.91 1.91 0 0 0-1.14-2.794V8.186l-.984-.55 2.273-1.315a2.384 2.384 0 0 1 2.388 0l4.519 2.616-1.786 1.033a1.911 1.911 0 0 0-2.686 1.747 1.91 1.91 0 0 0 1.345 1.824zm1.138 0V13.54a1.91 1.91 0 0 0 1.092-2.773l2.03-1.174.97.56A2.372 2.372 0 0 1 25 12.207v7.586c0 .846-.451 1.628-1.185 2.053l-4.09 2.368v-3.192a1.91 1.91 0 0 0-.001-3.646zm-2.227.869a1.91 1.91 0 0 0 1.089 2.777v3.851l-1.392.806a2.384 2.384 0 0 1-2.388 0L9.94 22.863l1.828-1.428a1.91 1.91 0 0 0 1.231.447 1.911 1.911 0 0 0 1.914-1.91 1.91 1.91 0 0 0-1.397-1.838v-3.598c.105-.029.207-.067.304-.113zm-5.118-.079a1.91 1.91 0 0 0-1.226 2.308L8.882 22.25l-.697-.403A2.372 2.372 0 0 1 7 19.793v-7.586c0-.846.451-1.628 1.185-2.053l3.205-1.856.99.553v2.04a1.91 1.91 0 0 0-.001 3.613zM13 13.523a.827.827 0 1 1-.002-1.653.827.827 0 0 1 .002 1.653zm0 7.275a.827.827 0 1 1-.002-1.653.827.827 0 0 1 .002 1.653zm6.155-8.255a.827.827 0 1 1-.002-1.653.827.827 0 0 1 .002 1.653zm0 7.482a.827.827 0 1 1-.002-1.654.827.827 0 0 1 .002 1.654z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ndz);


/***/ }),

/***/ "6sHc":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/oax.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Oax = {
  symbol: 'oax',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M19.544 19.969l-.612-1.301H17.55l.626 1.33h2.962l2.141-2.91-.779-1.07.779-1.07-2.141-2.91h-1.615l2.952 3.98zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.91-13.332l.594-1.296 1.121-2.354 1.121 2.315h1.415L15.838 12l-3.753 7.999h1.382zM24.07 16L27 12.003h-1.58l-2.141 2.91zm0 0l-.79 1.088 2.14 2.91H27zm-12.648-2.842a3.511 3.511 0 0 0-2.665-1.154 3.416 3.416 0 0 0-2.173.736l.92.98a2.19 2.19 0 0 1 1.25-.35 2.333 2.333 0 0 1 1.78.77c.462.508.722 1.188.723 1.896a2.652 2.652 0 0 1-.724 1.895 2.396 2.396 0 0 1-1.78.81 2.396 2.396 0 0 1-1.78-.81 2.822 2.822 0 0 1-.36-3.265l-.921-.98a3.965 3.965 0 0 0-.691 2.315 4 4 0 0 0 1.085 2.842A3.575 3.575 0 0 0 8.754 20c1.053 0 1.945-.347 2.668-1.156a4.124 4.124 0 0 0 1.085-2.842 3.965 3.965 0 0 0-1.085-2.843z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#164b79" r="16"/><path d="M14.09 18.668l-.623 1.33h-1.382L15.838 12l2.503 5.333h-1.415l-1.12-2.315-1.122 2.354zm5.454 1.3l2.93-3.95-2.951-3.98h1.615l2.141 2.91-.779 1.07.779 1.07-2.14 2.91h-2.963l-.626-1.33h1.382zm4.526-3.967l-.791-1.087 2.141-2.91H27zm0 0L27 19.999h-1.58l-2.14-2.91zm-12.648-2.842a3.965 3.965 0 0 1 1.085 2.843 4.124 4.124 0 0 1-1.085 2.842C10.7 19.653 9.807 20 8.754 20a3.575 3.575 0 0 1-2.668-1.156A4 4 0 0 1 5 16.002a3.965 3.965 0 0 1 .691-2.315l.92.98a2.822 2.822 0 0 0 .362 3.265 2.396 2.396 0 0 0 1.78.81c.672 0 1.314-.293 1.78-.81a2.65 2.65 0 0 0 .723-1.895 2.82 2.82 0 0 0-.724-1.896 2.333 2.333 0 0 0-1.78-.77 2.19 2.19 0 0 0-1.249.35l-.92-.98a3.416 3.416 0 0 1 2.173-.736 3.51 3.51 0 0 1 2.665 1.154z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Oax);


/***/ }),

/***/ "6sLO":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/knc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Knc = {
  symbol: 'knc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.914-17.538L15.245 27l6.517-5.52-6.676-7.018zm.318-.473l6.358 6.782L22 10.677l-6.596 3.312zm-.397-.552l6.914-3.233L15.007 5v8.437zm-.477-8.2L10 10.362l1.113 10.96 3.655 5.126-.238-21.211z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#188C92"/><path fill="#FFF" d="M21.836 21.03a.545.545 0 0 0-.038.56l-5.926 4.638a.592.592 0 0 0-.263-.118l-.18-11.416a.593.593 0 0 0 .18-.07l6.227 6.407zm.166-.158L15.78 14.47a.546.546 0 0 0 .087-.474l6.326-3.08a.58.58 0 0 0 .323.199l-.315 9.678a.593.593 0 0 0-.198.08zm-6.74 5.277l-3.35-4.503a.55.55 0 0 0 .155-.382.572.572 0 0 0-.528-.56l-1.046-9.467a.567.567 0 0 0 .441-.546.548.548 0 0 0-.131-.355l4.205-4.513c.054.03.114.053.178.066v7.704a.568.568 0 0 0-.467.551.57.57 0 0 0 .476.553l.18 11.416a.595.595 0 0 0-.112.036zm.158-12.556V5.89a.59.59 0 0 0 .273-.134l6.427 4.575a.543.543 0 0 0-.034.386l-6.325 3.08a.588.588 0 0 0-.341-.203zM15.303 5c.193 0 .35.151.35.337a.344.344 0 0 1-.35.338.344.344 0 0 1-.35-.338c0-.186.156-.337.35-.337zm-4.953 5.354c.194 0 .35.15.35.337a.344.344 0 0 1-.35.338.344.344 0 0 1-.35-.338c0-.186.157-.337.35-.337zm1.133 10.572c.194 0 .35.151.35.338a.344.344 0 0 1-.35.337.344.344 0 0 1-.35-.337c0-.187.157-.338.35-.338zM22.65 10.23c.193 0 .35.151.35.337a.344.344 0 0 1-.35.338.344.344 0 0 1-.35-.338c0-.186.156-.337.35-.337zm-7.347 3.577c.193 0 .35.15.35.337a.344.344 0 0 1-.35.338.344.344 0 0 1-.35-.338c0-.186.156-.337.35-.337zm.198 12.518c.194 0 .35.151.35.338a.344.344 0 0 1-.35.337.344.344 0 0 1-.35-.337c0-.187.157-.338.35-.338zm6.822-5.32c.193 0 .35.151.35.338a.344.344 0 0 1-.35.337.344.344 0 0 1-.35-.337c0-.187.156-.338.35-.338z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Knc);


/***/ }),

/***/ "6sNJ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rep.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rep = {
  symbol: 'rep',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.893-11.338L17.25 5.436A.867.867 0 0 0 16.495 5a.867.867 0 0 0-.755.436L7.11 20.663a.836.836 0 0 0 .31 1.136l8.637 5.08a.88.88 0 0 0 .888 0l8.636-5.076a.836.836 0 0 0 .311-1.135l.002-.006zm-5.31-4.35a4.237 4.237 0 0 0-1.43-1.957l-.008-.007a4.212 4.212 0 0 0-.213-.151l-.014-.01a4.856 4.856 0 0 0-.218-.135l-.02-.012a2.553 2.553 0 0 0-.223-.115l-.022-.012a6.305 6.305 0 0 0-.236-.105l-.026-.01a4.34 4.34 0 0 0-.796-.244 3.027 3.027 0 0 1-.598.763 3.505 3.505 0 0 1 1.581.523l.027.016.132.09.06.042c.04.03.077.06.118.09l.067.054c.036.03.069.06.103.091l.068.065.093.094.068.073.083.097.065.081.075.1c.025.033.042.059.062.088.02.029.046.067.067.102l.058.096c.018.032.04.068.058.102.02.033.036.07.054.106.017.036.034.066.049.1a4.6 4.6 0 0 1 .054.134 3.3 3.3 0 0 1 .2.736l.109.404c.046.168.471 1.656 1.456 2.157 1.129.579 2.624 1.294 3.212 1.577l-7.766 4.56V22.77c0-.493 1-1.07 1.463-1.273l.027-.015c.095-.047.19-.098.28-.152l.039-.02a4.5 4.5 0 0 0 .57-.407l.048-.043.055-.049a4.48 4.48 0 0 0 .165-.156l.028-.027c.059-.059.118-.115.17-.184l.049-.056c.044-.052.086-.105.127-.159l.036-.045c.05-.066.096-.134.142-.203l.016-.02c.062-.097.117-.194.175-.295a4.418 4.418 0 0 1-.556-.856c-.062.173-.14.341-.23.502-.038.07-.078.138-.118.204l-.018.027a3.527 3.527 0 0 1-.118.165l-.036.046a2.66 2.66 0 0 1-.128.153l-.024.028a3.456 3.456 0 0 1-1.019.765l-.073.037c-.197.087-1.933.857-1.933 2.028v3.126l-7.79-4.568c.501-.306 1.965-1.158 3.169-1.533.471-.144 1.471.473 2.038.926l.034.03c.075.07.154.137.236.2l.028.025c.18.144.372.273.573.387l.135.073.027.014c.131.066.265.126.402.179l.06.023.04.016c.197.072.4.128.605.17a2.98 2.98 0 0 1 .616-.768 3.494 3.494 0 0 1-.961-.21l-.053-.02-.102-.041-.052-.022-.099-.046a3.466 3.466 0 0 1-.645-.406l-.31-.276a5.703 5.703 0 0 0-.92-.646c-.77-.43-1.414-.57-1.908-.418-1.03.318-2.19.936-2.898 1.344l7.778-13.717v6.007c0 .213-.32.769-1.389 1.241l-.074.04c-.104.05-.205.104-.304.162l-.02.01a4.345 4.345 0 0 0-.898.704l-.01.01a4.27 4.27 0 0 0-.287.327l-.011.015a5.271 5.271 0 0 0-.127.169l-.014.02a4.943 4.943 0 0 0-.108.164l-.012.017a3.717 3.717 0 0 0-.101.173l-.023.041c-.029.056-.058.116-.087.168l-.013.027a3.28 3.28 0 0 0-.073.16l-.025.06c-.023.056-.044.116-.065.17l-.02.06a2.274 2.274 0 0 0-.042.13c-.007.024-.015.047-.021.072a4.052 4.052 0 0 0-.125.613l-.01.093a2.538 2.538 0 0 0-.011.127c-.002.043 0 .085-.007.127-.007.043 0 .052 0 .08v.095c0 .21.016.42.048.629a4.4 4.4 0 0 1 .966.36 3.317 3.317 0 0 1-.15-.932v-.057c0-.076 0-.151.009-.231v-.06c0-.065.013-.131.022-.196v-.028a2.15 2.15 0 0 1 .042-.215l.012-.055c.015-.06.03-.118.049-.177l.012-.038c.02-.069.045-.136.071-.203l.02-.045c.022-.055.046-.11.071-.165l.019-.042c.031-.065.065-.128.1-.191l.019-.031a3.38 3.38 0 0 1 .099-.16l.025-.037c.041-.06.083-.116.128-.178l.008-.01c.043-.055.088-.108.134-.16l.025-.03c.211-.232.453-.435.72-.603l.368-.17c.197-.087 1.925-.878 1.925-2.05V6.607l7.839 13.82c-.7-.337-1.93-.932-2.89-1.42-.548-.28-.922-1.267-1.018-1.621l-.106-.415a4.114 4.114 0 0 0-.172-.655l-.008-.004z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#602A52"/><path fill="#FFF" d="M20.582 16.312a4.28 4.28 0 0 0-1.43-1.956l-.007-.008a4.212 4.212 0 0 0-.213-.151l-.014-.01a4.856 4.856 0 0 0-.218-.135l-.02-.012a2.553 2.553 0 0 0-.223-.115l-.022-.012a6.305 6.305 0 0 0-.236-.105l-.026-.01a4.34 4.34 0 0 0-.796-.244 3.027 3.027 0 0 1-.598.763 3.505 3.505 0 0 1 1.581.523l.027.016.132.09.06.042c.04.03.077.06.118.09l.067.054c.036.03.069.06.103.091l.068.065.093.094.068.073.083.097.065.081.075.1c.025.033.042.059.062.088.02.029.046.067.067.102l.058.096c.018.032.04.068.058.102.02.033.036.07.054.106.017.036.034.066.049.1a4.6 4.6 0 0 1 .054.134 3.3 3.3 0 0 1 .2.736l.109.404c.046.168.471 1.656 1.456 2.157 1.129.579 2.624 1.294 3.212 1.577l-7.766 4.56V22.77c0-.493 1-1.07 1.463-1.273l.027-.015c.095-.047.19-.098.28-.152l.039-.02a4.5 4.5 0 0 0 .57-.407l.048-.043.055-.049a4.48 4.48 0 0 0 .165-.156l.028-.027c.059-.059.118-.115.17-.184l.049-.056c.044-.052.086-.105.127-.159l.036-.045c.05-.066.096-.134.142-.203l.016-.02c.062-.097.117-.194.175-.295a4.418 4.418 0 0 1-.556-.856c-.062.173-.14.341-.23.502-.038.07-.078.138-.118.204l-.018.027a3.527 3.527 0 0 1-.118.165l-.036.046a2.66 2.66 0 0 1-.128.153l-.024.028a3.456 3.456 0 0 1-1.019.765l-.073.037c-.197.087-1.933.857-1.933 2.028v3.126l-7.79-4.568c.501-.306 1.965-1.158 3.169-1.533.471-.144 1.471.473 2.038.926l.034.03c.075.07.154.137.236.2l.028.025c.18.144.372.273.573.387l.135.073.027.014c.131.066.265.126.402.179l.06.023.04.016c.197.072.4.128.605.17a2.98 2.98 0 0 1 .616-.768 3.494 3.494 0 0 1-.961-.21l-.053-.02-.102-.041-.052-.022-.099-.046a3.466 3.466 0 0 1-.645-.406l-.31-.276a5.703 5.703 0 0 0-.92-.646c-.77-.43-1.414-.57-1.908-.418-1.03.318-2.19.936-2.898 1.344l7.778-13.717v6.007c0 .213-.32.769-1.389 1.241l-.074.04c-.104.05-.205.104-.304.162l-.02.01a4.317 4.317 0 0 0-.898.704l-.01.01a4.27 4.27 0 0 0-.287.327l-.011.015a5.271 5.271 0 0 0-.127.169l-.014.02a4.943 4.943 0 0 0-.108.164l-.012.017a3.717 3.717 0 0 0-.101.173l-.023.041c-.029.056-.058.116-.087.168l-.013.027a3.28 3.28 0 0 0-.073.16l-.025.06c-.023.056-.044.116-.065.17l-.02.06a2.274 2.274 0 0 0-.042.13c-.007.024-.015.047-.021.072a4.052 4.052 0 0 0-.125.613l-.01.093a2.538 2.538 0 0 0-.011.127c-.002.043 0 .085-.007.127-.007.043 0 .052 0 .08v.095c0 .21.016.42.048.629a4.4 4.4 0 0 1 .966.36 3.317 3.317 0 0 1-.15-.932v-.057c0-.076 0-.151.009-.231v-.06c0-.065.013-.131.022-.196v-.028a2.15 2.15 0 0 1 .042-.215l.012-.055c.015-.06.03-.118.049-.177l.012-.038c.02-.069.045-.136.071-.203l.02-.045c.022-.055.046-.11.071-.165l.019-.042c.031-.065.065-.128.1-.191l.019-.031a3.38 3.38 0 0 1 .099-.16l.025-.037c.041-.06.083-.116.128-.178l.008-.01c.043-.055.088-.108.134-.16l.025-.03c.211-.232.453-.435.72-.603l.368-.17c.197-.087 1.925-.878 1.925-2.05V6.607l7.839 13.82c-.7-.337-1.93-.932-2.89-1.42-.548-.28-.922-1.267-1.018-1.621l-.106-.415a4.114 4.114 0 0 0-.172-.655l-.008-.004zm5.31 4.35l-8.64-15.226A.867.867 0 0 0 16.495 5a.867.867 0 0 0-.755.436L7.11 20.663a.836.836 0 0 0 .31 1.136l8.637 5.08a.88.88 0 0 0 .888 0l8.636-5.076a.836.836 0 0 0 .311-1.135l.002-.006z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rep);


/***/ }),

/***/ "7+uW":
/*!******************************************!*\
  !*** ./node_modules/vue/dist/vue.esm.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.3.4
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */
/*  */

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}
/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return typeof value === 'string' || typeof value === 'number'
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

var _toString = Object.prototype.toString;

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /([^-])([A-Z])/g;
var hyphenate = cached(function (str) {
  return str
    .replace(hyphenateRE, '$1-$2')
    .replace(hyphenateRE, '$1-$2')
    .toLowerCase()
});

/**
 * Simple bind, faster than native
 */
function bind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }
  // record original fn length
  boundFn._length = fn.length;
  return boundFn
}

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 */
function noop () {}

/**
 * Always return false.
 */
var no = function () { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      return JSON.stringify(a) === JSON.stringify(b)
    } catch (e) {
      // possible circular reference
      return a === b
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

var emptyObject = Object.freeze({});

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

var warn = noop;
var tip = noop;
var formatComponentName = (null); // work around flow check

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.error("[Vue warn]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var name = typeof vm === 'string'
      ? vm
      : typeof vm === 'function' && vm.options
        ? vm.options.name
        : vm._isVue
          ? vm.$options.name || vm.$options._componentTag
          : vm.name;

    var file = vm._isVue && vm.$options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  var generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

function handleError (err, vm, info) {
  if (config.errorHandler) {
    config.errorHandler.call(null, err, vm, info);
  } else {
    if (true) {
      warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    }
    /* istanbul ignore else */
    if (inBrowser && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err
    }
  }
}

/*  */
/* globals MutationObserver */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0;
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    } )); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

/**
 * Defer a task to execute it asynchronously.
 */
var nextTick = (function () {
  var callbacks = [];
  var pending = false;
  var timerFunc;

  function nextTickHandler () {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
      copies[i]();
    }
  }

  // the nextTick behavior leverages the microtask queue, which can be accessed
  // via either native Promise.then or MutationObserver.
  // MutationObserver has wider support, however it is seriously bugged in
  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
  // completely stops working after triggering a few times... so, if native
  // Promise is available, we will use it:
  /* istanbul ignore if */
  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p = Promise.resolve();
    var logError = function (err) { console.error(err); };
    timerFunc = function () {
      p.then(nextTickHandler).catch(logError);
      // in problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.
      if (isIOS) { setTimeout(noop); }
    };
  } else if (typeof MutationObserver !== 'undefined' && (
    isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]'
  )) {
    // use MutationObserver where native Promise is not available,
    // e.g. PhantomJS IE11, iOS7, Android 4.4
    var counter = 1;
    var observer = new MutationObserver(nextTickHandler);
    var textNode = document.createTextNode(String(counter));
    observer.observe(textNode, {
      characterData: true
    });
    timerFunc = function () {
      counter = (counter + 1) % 2;
      textNode.data = String(counter);
    };
  } else {
    // fallback to setTimeout
    /* istanbul ignore next */
    timerFunc = function () {
      setTimeout(nextTickHandler, 0);
    };
  }

  return function queueNextTick (cb, ctx) {
    var _resolve;
    callbacks.push(function () {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });
    if (!pending) {
      pending = true;
      timerFunc();
    }
    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(function (resolve, reject) {
        _resolve = resolve;
      })
    }
  }
})();

var _Set;
/* istanbul ignore if */
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);[
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
]
.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var arguments$1 = arguments;

    // avoid leaking arguments:
    // http://jsperf.com/closure-with-arguments
    var i = arguments.length;
    var args = new Array(i);
    while (i--) {
      args[i] = arguments$1[i];
    }
    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
        inserted = args;
        break
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * By default, when a reactive property is set, the new value is
 * also converted to become reactive. However when passing down props,
 * we don't want to force conversion because the value may be a nested value
 * under a frozen data structure. Converting it would defeat the optimization.
 */
var observerState = {
  shouldConvert: true,
  isSettingProps: false
};

/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object's property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i], obj[keys[i]]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value)) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    observerState.shouldConvert &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;

  var childOb = observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
        }
        if (Array.isArray(value)) {
          dependArray(value);
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ("development" !== 'production' && customSetter) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (Array.isArray(target) && typeof key === 'number') {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (hasOwn(target, key)) {
    target[key] = val;
    return val
  }
  var ob = (target ).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "development" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (Array.isArray(target) && typeof key === 'number') {
    target.splice(key, 1);
    return
  }
  var ob = (target ).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "development" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (typeof childVal !== 'function') {
      "development" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        childVal.call(this),
        parentVal.call(this)
      )
    }
  } else if (parentVal || childVal) {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm)
        : undefined;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (parentVal, childVal) {
  var res = Object.create(parentVal || null);
  return childVal
    ? extend(res, childVal)
    : res
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal) {
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key in childVal) {
    var parent = ret[key];
    var child = childVal[key];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key] = parent
      ? parent.concat(child)
      : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.computed = function (parentVal, childVal) {
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  extend(ret, childVal);
  return ret
};

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    var lower = key.toLowerCase();
    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
      warn(
        'Do not use built-in or reserved HTML elements as component ' +
        'id: ' + key
      );
    }
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  }
  options.props = res;
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ("development" !== 'production' && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // handle boolean props
  if (isType(Boolean, prop.type)) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
      value = true;
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldConvert = observerState.shouldConvert;
    observerState.shouldConvert = true;
    observe(value);
    observerState.shouldConvert = prevShouldConvert;
  }
  if (true) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ("development" !== 'production' && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      'Invalid prop: type check failed for prop "' + name + '".' +
      ' Expected ' + expectedTypes.map(capitalize).join(', ') +
      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    valid = typeof value === expectedType.toLowerCase();
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isType (type, fn) {
  if (!Array.isArray(fn)) {
    return getType(fn) === getType(type)
  }
  for (var i = 0, len = fn.length; i < len; i++) {
    if (getType(fn[i]) === getType(type)) {
      return true
    }
  }
  /* istanbul ignore next */
  return false
}

/*  */

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      "referenced during render. Make sure to declare reactive data " +
      "properties in the data option.",
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' &&
    Proxy.toString().match(/native code/);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.functionalContext = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
};

var prototypeAccessors = { child: {} };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function () {
  var node = new VNode();
  node.text = '';
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.isCloned = true;
  return cloned
}

function cloneVNodes (vnodes) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i]);
  }
  return res
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      for (var i = 0; i < fns.length; i++) {
        fns[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, cur, old, event;
  for (name in on) {
    cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
      "development" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    last = res[res.length - 1];
    //  nested
    if (Array.isArray(c)) {
      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i)));
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        (last).text += String(c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[res.length - 1] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "development" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && isDef(c.componentOptions)) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once$$1) {
  if (once$$1) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        this$1.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (arguments.length === 1) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        cbs[i].apply(vm, args);
      }
    }
    return vm
  };
}

/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  var defaultSlot = [];
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.functionalContext === context) &&
      child.data && child.data.slot != null
    ) {
      var name = child.data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children);
      } else {
        slot.push(child);
      }
    } else {
      defaultSlot.push(child);
    }
  }
  // ignore whitespace
  if (!defaultSlot.every(isWhitespace)) {
    slots.default = defaultSlot;
  }
  return slots
}

function isWhitespace (node) {
  return node.isComment || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // remove reference to DOM nodes (prevents leak)
    vm.$options._parentElm = vm.$options._refElm = null;
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if ("development" !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure((name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure((name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  vm._watcher = new Watcher(vm, updateComponent, noop);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render
  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update props
  if (propsData && vm.$options.props) {
    observerState.shouldConvert = false;
    if (true) {
      observerState.isSettingProps = true;
    }
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      props[key] = validateProp(key, vm.$options.props, propsData, vm);
    }
    observerState.shouldConvert = true;
    if (true) {
      observerState.isSettingProps = false;
    }
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  // update listeners
  if (listeners) {
    var oldListeners = vm.$options._parentListeners;
    vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, oldListeners);
  }
  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ("development" !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdateHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdateHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options
) {
  this.vm = vm;
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "development" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  if (this.user) {
    try {
      value = this.getter.call(vm, vm);
    } catch (e) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    }
  } else {
    value = this.getter.call(vm, vm);
  }
  // "touch" every property so they are all tracked as
  // dependencies for deep watching
  if (this.deep) {
    traverse(value);
  }
  popTarget();
  this.cleanupDeps();
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
var seenObjects = new _Set();
function traverse (val) {
  seenObjects.clear();
  _traverse(val, seenObjects);
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch) { initWatch(vm, opts.watch); }
}

var isReservedProp = {
  key: 1,
  ref: 1,
  slot: 1
};

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  observerState.shouldConvert = isRoot;
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      if (isReservedProp[key] || config.isReservedAttr(key)) {
        warn(
          ("\"" + key + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (vm.$parent && !observerState.isSettingProps) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  observerState.shouldConvert = true;
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "development" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var i = keys.length;
  while (i--) {
    if (props && hasOwn(props, keys[i])) {
      "development" !== 'production' && warn(
        "The data property \"" + (keys[i]) + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(keys[i])) {
      proxy(vm, "_data", keys[i]);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  try {
    return data.call(vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  var watchers = vm._computedWatchers = Object.create(null);

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (true) {
      if (getter === undefined) {
        warn(
          ("No getter function has been defined for computed property \"" + key + "\"."),
          vm
        );
        getter = noop;
      }
    }
    // create internal watcher for the computed property.
    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (target, key, userDef) {
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = createComputedGetter(key);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
    if (true) {
      if (methods[key] == null) {
        warn(
          "method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
    }
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (vm, key, handler) {
  var options;
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  vm.$watch(key, handler, options);
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    // isArray here
    var isArray = Array.isArray(inject);
    var result = Object.create(null);
    var keys = isArray
      ? inject
      : hasSymbol
        ? Reflect.ownKeys(inject)
        : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = isArray ? key : inject[key];
      var source = vm;
      while (source) {
        if (source._provided && provideKey in source._provided) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
    }
    return result
  }
}

/*  */

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  context,
  children
) {
  var props = {};
  var propOptions = Ctor.options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || {});
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var _context = Object.create(context);
  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };
  var vnode = Ctor.options.render.call(null, h, {
    data: data,
    props: props,
    children: children,
    parent: context,
    listeners: data.on || {},
    injections: resolveInject(Ctor.options.inject, context),
    slots: function () { return resolveSlots(children, context); }
  });
  if (vnode instanceof VNode) {
    vnode.functionalContext = context;
    vnode.functionalOptions = Ctor.options;
    if (data.slot) {
      (vnode.data || (vnode.data = {})).slot = data.slot;
    }
  }
  return vnode
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

// hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    } else if (vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  if (isUndef(Ctor.cid)) {
    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);
    if (Ctor === undefined) {
      // return nothing if this is indeed an async component
      // wait for the callback to trigger parent update.
      return
    }
  }

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  data = data || {};

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners
    data = {};
  }

  // merge component management hooks onto the placeholder node
  mergeHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }
  );
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var vnodeComponentOptions = vnode.componentOptions;
  var options = {
    _isComponent: true,
    parent: parent,
    propsData: vnodeComponentOptions.propsData,
    _componentTag: vnodeComponentOptions.tag,
    _parentVnode: vnode,
    _parentListeners: vnodeComponentOptions.listeners,
    _renderChildren: vnodeComponentOptions.children,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnodeComponentOptions.Ctor(options)
}

function mergeHooks (data) {
  if (!data.hook) {
    data.hook = {};
  }
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var fromParent = data.hook[key];
    var ours = componentVNodeHooks[key];
    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
  }
}

function mergeHook$1 (one, two) {
  return function (a, b, c, d) {
    one(a, b, c, d);
    two(a, b, c, d);
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "development" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (isDef(vnode)) {
    if (ns) { applyNS(vnode, ns); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    return
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && isUndef(child.ns)) {
        applyNS(child, ns);
      }
    }
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      extend(props, bindObject);
    }
    return scopedSlotFn(props) || fallback
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes && "development" !== 'production') {
      slotNodes._rendered && warn(
        "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
        "- this will likely cause render errors.",
        this
      );
      slotNodes._rendered = true;
    }
    return slotNodes || fallback
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

/**
 * Runtime helper for checking keyCodes from config.
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInAlias
) {
  var keyCodes = config.keyCodes[key] || builtInAlias;
  if (Array.isArray(keyCodes)) {
    return keyCodes.indexOf(eventKeyCode) === -1
  } else {
    return keyCodes !== eventKeyCode
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp
) {
  if (value) {
    if (!isObject(value)) {
      "development" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      for (var key in value) {
        if (key === 'class' || key === 'style') {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];
        }
      }
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var tree = this._staticTrees[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree by doing a shallow clone.
  if (tree && !isInFor) {
    return Array.isArray(tree)
      ? cloneVNodes(tree)
      : cloneVNode(tree)
  }
  // otherwise, render a fresh tree.
  tree = this._staticTrees[index] =
    this.$options.staticRenderFns[index].call(this._renderProxy);
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null;
  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };
}

function renderMixin (Vue) {
  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var staticRenderFns = ref.staticRenderFns;
    var _parentVnode = ref._parentVnode;

    if (vm._isMounted) {
      // clone slot nodes on re-renders
      for (var key in vm.$slots) {
        vm.$slots[key] = cloneVNodes(vm.$slots[key]);
      }
    }

    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;

    if (staticRenderFns && !vm._staticTrees) {
      vm._staticTrees = [];
    }
    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render function");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (true) {
        vnode = vm.$options.renderError
          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)
          : vm._vnode;
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ("development" !== 'production' && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };

  // internal render helpers.
  // these are exposed on the instance prototype to reduce generated render
  // code size.
  Vue.prototype._o = markOnce;
  Vue.prototype._n = toNumber;
  Vue.prototype._s = toString;
  Vue.prototype._l = renderList;
  Vue.prototype._t = renderSlot;
  Vue.prototype._q = looseEqual;
  Vue.prototype._i = looseIndexOf;
  Vue.prototype._m = renderStatic;
  Vue.prototype._f = resolveFilter;
  Vue.prototype._k = checkKeyCodes;
  Vue.prototype._b = bindObjectProps;
  Vue.prototype._v = createTextVNode;
  Vue.prototype._e = createEmptyVNode;
  Vue.prototype._u = resolveScopedSlots;
}

/*  */

var uid$1 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$1++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ("development" !== 'production' && config.performance && mark) {
      startTag = "vue-perf-init:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if ("development" !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(((vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  opts.parent = options.parent;
  opts.propsData = options.propsData;
  opts._parentVnode = options._parentVnode;
  opts._parentListeners = options._parentListeners;
  opts._renderChildren = options._renderChildren;
  opts._componentTag = options._componentTag;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;
  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue$3 (options) {
  if ("development" !== 'production' &&
    !(this instanceof Vue$3)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue$3);
stateMixin(Vue$3);
eventsMixin(Vue$3);
lifecycleMixin(Vue$3);
renderMixin(Vue$3);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    /* istanbul ignore if */
    if (plugin.installed) {
      return this
    }
    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    plugin.installed = true;
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (true) {
      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
        warn(
          'Invalid component name: "' + name + '". Component names ' +
          'can only contain alphanumeric characters and the hyphen, ' +
          'and must start with a letter.'
        );
      }
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (true) {
          if (type === 'component' && config.isReservedTag(id)) {
            warn(
              'Do not use built-in or reserved HTML elements as component ' +
              'id: ' + id
            );
          }
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

var patternTypes = [String, RegExp];

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (cache, current, filter) {
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        if (cachedNode !== current) {
          pruneCacheEntry(cachedNode);
        }
        cache[key] = null;
      }
    }
  }
}

function pruneCacheEntry (vnode) {
  if (vnode) {
    vnode.componentInstance.$destroy();
  }
}

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes
  },

  created: function created () {
    this.cache = Object.create(null);
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache[key]);
    }
  },

  watch: {
    include: function include (val) {
      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });
    },
    exclude: function exclude (val) {
      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });
    }
  },

  render: function render () {
    var vnode = getFirstComponentChild(this.$slots.default);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      if (name && (
        (this.include && !matches(this.include, name)) ||
        (this.exclude && matches(this.exclude, name))
      )) {
        return vnode
      }
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (this.cache[key]) {
        vnode.componentInstance = this.cache[key].componentInstance;
      } else {
        this.cache[key] = vnode;
      }
      vnode.data.keepAlive = true;
    }
    return vnode
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue$3);

Object.defineProperty(Vue$3.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue$3.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode.ssrContext
  }
});

Vue$3.version = '2.3.4';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return genClassFromData(data)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function genClassFromData (data) {
  var dynamicClass = data.class;
  var staticClass = data.staticClass;
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (isUndef(value)) {
    return ''
  }
  if (typeof value === 'string') {
    return value
  }
  var res = '';
  if (Array.isArray(value)) {
    var stringified;
    for (var i = 0, l = value.length; i < l; i++) {
      if (isDef(value[i])) {
        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
          res += stringified + ' ';
        }
      }
    }
    return res.slice(0, -1)
  }
  if (isObject(value)) {
    for (var key in value) {
      if (value[key]) { res += key + ' '; }
    }
    return res.slice(0, -1)
  }
  /* istanbul ignore next */
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "development" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setAttribute (node, key, val) {
  node.setAttribute(key, val);
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setAttribute: setAttribute
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!key) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {
        refs[key].push(ref);
      } else {
        refs[key] = [ref];
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *

/*
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key &&
    a.tag === b.tag &&
    a.isComment === b.isComment &&
    isDef(a.data) === isDef(b.data) &&
    sameInputType(a, b)
  )
}

// Some browsers do not support dynamically changing type for <input>
// so they need to be treated as different nodes
function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  var inPre = 0;
  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {
    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (true) {
        if (data && data.pre) {
          inPre++;
        }
        if (
          !inPre &&
          !vnode.ns &&
          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&
          config.isUnknownElement(tag)
        ) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }
      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if ("development" !== 'production' && data && data.pre) {
        inPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref) {
    if (isDef(parent)) {
      if (isDef(ref)) {
        if (ref.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    var ancestor = vnode;
    while (ancestor) {
      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
      ancestor = ancestor.parent;
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setAttribute(vnode.elm, i, '');
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, elmToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
          newStartVnode = newCh[++newStartIdx];
        } else {
          elmToMove = oldCh[idxInOld];
          /* istanbul ignore if */
          if ("development" !== 'production' && !elmToMove) {
            warn(
              'It seems there are duplicate keys that is causing an update error. ' +
              'Make sure each v-for item has a unique key.'
            );
          }
          if (sameVnode(elmToMove, newStartVnode)) {
            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          }
        }
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }
    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.elm = oldVnode.elm;
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }
    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }
    var elm = vnode.elm = oldVnode.elm;
    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var bailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue) {
    if (true) {
      if (!assertNodeMatch(elm, vnode)) {
        return false
      }
    }
    vnode.elm = elm;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          var childrenMatch = true;
          var childNode = elm.firstChild;
          for (var i$1 = 0; i$1 < children.length; i$1++) {
            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
              childrenMatch = false;
              break
            }
            childNode = childNode.nextSibling;
          }
          // if childNode is not null, it means the actual childNodes list is
          // longer than the virtual children list.
          if (!childrenMatch || childNode) {
            if ("development" !== 'production' &&
              typeof console !== 'undefined' &&
              !bailed
            ) {
              bailed = true;
              console.warn('Parent: ', elm);
              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
            }
            return false
          }
        }
      }
      if (isDef(data)) {
        for (var key in data) {
          if (!isRenderedModule(key)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode) {
    if (isDef(vnode.tag)) {
      return (
        vnode.tag.indexOf('vue-component') === 0 ||
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (true) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }
        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        if (isDef(vnode.parent)) {
          // component root element replaced.
          // update parent placeholder node element, recursively
          var ancestor = vnode.parent;
          while (ancestor) {
            ancestor.elm = vnode.elm;
            ancestor = ancestor.parent;
          }
          if (isPatchable(vnode)) {
            for (var i = 0; i < cbs.create.length; ++i) {
              cbs.create[i](emptyNode, vnode.parent);
            }
          }
        }

        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  /* istanbul ignore if */
  if (isIE9 && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, key);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + "," + args)
  }
}

/*  */

function baseWarn (msg) {
  console.error(("[Vue compiler]: " + msg));
}

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
}

function addAttr (el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  modifiers
) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn
) {
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
    "development" !== 'production' && warn &&
    modifiers && modifiers.prevent && modifiers.passive
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.'
    );
  }
  // check capture modifier
  if (modifiers && modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers && modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers && modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }
  var events;
  if (modifiers && modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }
  var newHandler = { value: value, modifiers: modifiers };
  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

function getAndRemoveAttr (el, name) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  return val
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
        "? " + baseValueExpression + ".trim()" +
        ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: ("\"" + value + "\""),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var modelRs = parseModel(value);
  if (modelRs.idx === null) {
    return (value + "=" + assignment)
  } else {
    return "var $$exp = " + (modelRs.exp) + ", $$idx = " + (modelRs.idx) + ";" +
      "if (!Array.isArray($$exp)){" +
        value + "=" + assignment + "}" +
      "else{$$exp.splice($$idx, 1, " + assignment + ")}"
  }
}

/**
 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
 *
 * for loop possible cases:
 *
 * - test
 * - test[idx]
 * - test[test1[idx]]
 * - test["a"][idx]
 * - xxx.test[a[a].test1[idx]]
 * - test.xxx.a["asa"][test1[idx]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;

function parseModel (val) {
  str = val;
  len = str.length;
  index$1 = expressionPos = expressionEndPos = 0;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    return {
      exp: val,
      idx: null
    }
  }

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.substring(0, expressionPos),
    idx: val.substring(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (true) {
    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (tag === 'input' && dynamicType) {
      warn$1(
        "<input :type=\"" + dynamicType + "\" v-model=\"" + value + "\">:\n" +
        "v-model does not support dynamic input types. Use v-if branches instead."
      );
    }
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead."
      );
    }
  }

  if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (true) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.'
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
      "?_i(" + value + "," + valueBinding + ")>-1" + (
        trueValueBinding === 'true'
          ? (":(" + value + ")")
          : (":_q(" + value + "," + trueValueBinding + ")")
      )
  );
  addHandler(el, CHECKBOX_RADIO_TOKEN,
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$c){$$i<0&&(" + value + "=$$a.concat($$v))}" +
      "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;
  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number || type === 'number') {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  var event;
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    // Chrome fires microtasks in between click/change, leads to #4521
    event = isChrome ? 'click' : 'change';
    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  if (once$$1) {
    var oldHandler = handler;
    var _target = target$1; // save current target element in closure
    handler = function (ev) {
      var res = arguments.length === 1
        ? oldHandler(ev)
        : oldHandler.apply(null, arguments);
      if (res !== null) {
        remove$2(event, handler, capture, _target);
      }
    };
  }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(event, handler, capture);
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, vnode, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (
  elm,
  vnode,
  checkVal
) {
  return (!elm.composing && (
    vnode.tag === 'option' ||
    isDirty(elm, checkVal) ||
    isInputChanged(elm, checkVal)
  ))
}

function isDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value
  return document.activeElement !== elm && elm.value !== checkVal
}

function isInputChanged (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {
    return toNumber(value) !== toNumber(newVal)
  }
  if (isDef(modifiers) && modifiers.trim) {
    return value.trim() !== newVal.trim()
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var prefixes = ['Webkit', 'Moz', 'ms'];

var testEl;
var normalize = cached(function (prop) {
  testEl = testEl || document.createElement('div');
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in testEl.style)) {
    return prop
  }
  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < prefixes.length; i++) {
    var prefixed = prefixes[i] + upper;
    if (prefixed in testEl.style) {
      return prefixed
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likley wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    el.setAttribute('class', cur.trim());
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser && window.requestAnimationFrame
  ? window.requestAnimationFrame.bind(window)
  : setTimeout;

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  (el._transitionClasses || (el._transitionClasses = [])).push(cls);
  addClass(el, cls);
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if ("development" !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      addTransitionClass(el, toClass);
      removeTransitionClass(el, startClass);
      if (!cb.cancelled && !userWantsControl) {
        if (isValidDuration(explicitEnterDuration)) {
          setTimeout(cb, explicitEnterDuration);
        } else {
          whenTransitionEnds(el, type, cb);
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        addTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitLeaveDuration)) {
            setTimeout(cb, explicitLeaveDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var model$1 = {
  inserted: function inserted (el, binding, vnode) {
    if (vnode.tag === 'select') {
      var cb = function () {
        setSelected(el, binding, vnode.context);
      };
      cb();
      /* istanbul ignore if */
      if (isIE || isEdge) {
        setTimeout(cb, 0);
      }
    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        if (!isAndroid) {
          el.addEventListener('compositionstart', onCompositionStart);
          el.addEventListener('compositionend', onCompositionEnd);
        }
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var needReset = el.multiple
        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })
        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);
      if (needReset) {
        trigger(el, 'change');
      }
    }
  }
};

function setSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "development" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  for (var i = 0, l = options.length; i < l; i++) {
    if (looseEqual(getValue(options[i]), value)) {
      return false
    }
  }
  return true
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition && !isIE9) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (value === oldValue) { return }
    vnode = locateNode(vnode);
    var transition = vnode.data && vnode.data.transition;
    if (transition && !isIE9) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: model$1,
  show: show
};

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag; });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if ("development" !== 'production' && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if ("development" !== 'production' &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild && (oldChild.data.transition = extend({}, data));
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (true) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    var body = document.body;
    var f = body.offsetHeight; // eslint-disable-line

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      if (this._hasMove != null) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue$3.config.mustUseProp = mustUseProp;
Vue$3.config.isReservedTag = isReservedTag;
Vue$3.config.isReservedAttr = isReservedAttr;
Vue$3.config.getTagNamespace = getTagNamespace;
Vue$3.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue$3.options.directives, platformDirectives);
extend(Vue$3.options.components, platformComponents);

// install platform patch function
Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
setTimeout(function () {
  if (config.devtools) {
    if (devtools) {
      devtools.emit('init', Vue$3);
    } else if ("development" !== 'production' && isChrome) {
      console[console.info ? 'info' : 'log'](
        'Download the Vue Devtools extension for a better development experience:\n' +
        'https://github.com/vuejs/vue-devtools'
      );
    }
  }
  if ("development" !== 'production' &&
    config.productionTip !== false &&
    inBrowser && typeof console !== 'undefined'
  ) {
    console[console.info ? 'info' : 'log'](
      "You are running Vue in development mode.\n" +
      "Make sure to turn on production mode when deploying for production.\n" +
      "See more tips at https://vuejs.org/guide/deployment.html"
    );
  }
}, 0);

/*  */

// check whether current browser encodes a char inside attribute values
function shouldDecode (content, encoded) {
  var div = document.createElement('div');
  div.innerHTML = "<div a=\"" + content + "\">";
  return div.innerHTML.indexOf(encoded) > 0
}

// #3663
// IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? shouldDecode('\n', '&#10;') : false;

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/*  */

var decoder;

function decode (html) {
  decoder = decoder || document.createElement('div');
  decoder.innerHTML = html;
  return decoder.textContent
}

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var singleAttrIdentifier = /([^\s"'<>/=]+)/;
var singleAttrAssign = /(?:=)/;
var singleAttrValues = [
  // attr value double quotes
  /"([^"]*)"+/.source,
  // attr value, single quotes
  /'([^']*)'+/.source,
  // attr value, no quotes
  /([^\s"'=<>`]+)/.source
];
var attribute = new RegExp(
  '^\\s*' + singleAttrIdentifier.source +
  '(?:\\s*(' + singleAttrAssign.source + ')' +
  '\\s*(?:' + singleAttrValues.join('|') + '))?'
);

// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')';
var startTagOpen = new RegExp('^<' + qnameCapture);
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>');
var doctype = /^<!DOCTYPE [^>]+>/i;
var comment = /^<!--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          continue
        }
      }

      var text = (void 0), rest$1 = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest$1 = html.slice(textEnd);
        while (
          !endTag.test(rest$1) &&
          !startTagOpen.test(rest$1) &&
          !comment.test(rest$1) &&
          !conditionalComment.test(rest$1)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest$1.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest$1 = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var endTagLength = 0;
      var rest = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!--([\s\S]*?)-->/g, '$1')
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest.length;
      html = rest;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if ("development" !== 'production' && !stack.length && options.warn) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') { delete args[3]; }
        if (args[4] === '') { delete args[4]; }
        if (args[5] === '') { delete args[5]; }
      }
      var value = args[3] || args[4] || args[5] || '';
      attrs[i] = {
        name: args[1],
        value: decodeAttr(
          value,
          options.shouldDecodeNewlines
        )
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if ("development" !== 'production' &&
          (i > pos || !tagName) &&
          options.warn
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});

function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      tokens.push(JSON.stringify(text.slice(lastIndex, index)));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    tokens.push(JSON.stringify(text.slice(lastIndex)));
  }
  return tokens.join('+')
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
var forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;
  platformGetTagNamespace = options.getTagNamespace || no;
  platformMustUseProp = options.mustUseProp || no;
  platformIsPreTag = options.isPreTag || no;
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  transforms = pluckModuleFunction(options.modules, 'transformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function endPre (element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    start: function start (tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = {
        type: 1,
        tag: tag,
        attrsList: attrs,
        attrsMap: makeAttrsMap(attrs),
        parent: currentParent,
        children: []
      };
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "development" !== 'production' && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.'
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        preTransforms[i](element, options);
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else {
        processFor(element);
        processIf(element);
        processOnce(element);
        processKey(element);

        // determine whether this is a plain element after
        // removing structural attributes
        element.plain = !element.key && !attrs.length;

        processRef(element);
        processSlot(element);
        processComponent(element);
        for (var i$1 = 0; i$1 < transforms.length; i$1++) {
          transforms[i$1](element, options);
        }
        processAttrs(element);
      }

      function checkRootConstraints (el) {
        if (true) {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce(
              "Cannot use <" + (el.tag) + "> as component root element because it may " +
              'contain multiple nodes.'
            );
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce(
              'Cannot use v-for on stateful component root element because ' +
              'it renders multiple elements.'
            );
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (true) {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead."
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) { // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        endPre(element);
      }
      // apply post-transforms
      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {
        postTransforms[i$2](element, options);
      }
    },

    end: function end () {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      endPre(element);
    },

    chars: function chars (text) {
      if (!currentParent) {
        if (true) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.'
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored.")
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      text = inPre || text.trim()
        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var expression;
        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: expression,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if ("development" !== 'production' && el.tag === 'template') {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var inMatch = exp.match(forAliasRE);
    if (!inMatch) {
      "development" !== 'production' && warn$2(
        ("Invalid v-for expression: " + exp)
      );
      return
    }
    el.for = inMatch[2].trim();
    var alias = inMatch[1].trim();
    var iteratorMatch = alias.match(forIteratorRE);
    if (iteratorMatch) {
      el.alias = iteratorMatch[1].trim();
      el.iterator1 = iteratorMatch[2].trim();
      if (iteratorMatch[3]) {
        el.iterator2 = iteratorMatch[3].trim();
      }
    } else {
      el.alias = alias;
    }
  }
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (true) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if."
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if ("development" !== 'production' && children[i].text !== ' ') {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored."
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if ("development" !== 'production' && el.key) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead."
      );
    }
  } else {
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    }
    if (el.tag === 'template') {
      el.slotScope = getAndRemoveAttr(el, 'scope');
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(
              el,
              ("update:" + (camelize(name))),
              genAssignmentCode(value, "$event")
            );
          }
        }
        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if ("development" !== 'production' && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (true) {
        var expression = parseText(value, delimiters);
        if (expression) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.'
          );
        }
      }
      addAttr(el, name, JSON.stringify(value));
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
      "development" !== 'production' &&
      map[attrs[i].name] && !isIE && !isEdge
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead."
      );
    }
    _el = _el.parent;
  }
}

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      walkThroughConditionsBlocks(node.ifConditions, isInFor);
    }
  }
}

function walkThroughConditionsBlocks (conditionBlocks, isInFor) {
  for (var i = 1, len = conditionBlocks.length; i < len; i++) {
    markStaticRoots(conditionBlocks[i].block, isInFor);
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

// keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative,
  warn
) {
  var res = isNative ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    var handler = events[name];
    // #5330: warn click.right, since right clicks do not actually fire click events.
    if ("development" !== 'production' &&
      name === 'click' &&
      handler && handler.modifiers && handler.modifiers.right
    ) {
      warn(
        "Use \"contextmenu\" instead of \"click.right\" since right clicks " +
        "do not actually fire \"click\" events."
      );
    }
    res += "\"" + name + "\":" + (genHandler(name, handler)) + ",";
  }
  return res.slice(0, -1) + '}'
}

function genHandler (
  name,
  handler
) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    return isMethodPath || isFunctionExpression
      ? handler.value
      : ("function($event){" + (handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? handler.value + '($event)'
      : isFunctionExpression
        ? ("(" + (handler.value) + ")($event)")
        : handler.value;
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var alias = keyCodes[key];
  return ("_k($event.keyCode," + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + ")")
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  bind: bind$1,
  cloak: noop
};

/*  */

// configurable state
var warn$3;
var transforms$1;
var dataGenFns;
var platformDirectives$1;
var isPlatformReservedTag$1;
var staticRenderFns;
var onceCount;
var currentOptions;

function generate (
  ast,
  options
) {
  // save previous staticRenderFns so generate calls can be nested
  var prevStaticRenderFns = staticRenderFns;
  var currentStaticRenderFns = staticRenderFns = [];
  var prevOnceCount = onceCount;
  onceCount = 0;
  currentOptions = options;
  warn$3 = options.warn || baseWarn;
  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');
  dataGenFns = pluckModuleFunction(options.modules, 'genData');
  platformDirectives$1 = options.directives || {};
  isPlatformReservedTag$1 = options.isReservedTag || no;
  var code = ast ? genElement(ast) : '_c("div")';
  staticRenderFns = prevStaticRenderFns;
  onceCount = prevOnceCount;
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: currentStaticRenderFns
  }
}

function genElement (el) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el)
  } else if (el.for && !el.forProcessed) {
    return genFor(el)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el)
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el);
    } else {
      var data = el.plain ? undefined : genData(el);

      var children = el.inlineTemplate ? null : genChildren(el, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < transforms$1.length; i++) {
      code = transforms$1[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el) {
  el.staticProcessed = true;
  staticRenderFns.push(("with(this){return " + (genElement(el)) + "}"));
  return ("_m(" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
      "development" !== 'production' && warn$3(
        "v-once can only be used inside v-for that is keyed. "
      );
      return genElement(el)
    }
    return ("_o(" + (genElement(el)) + "," + (onceCount++) + (key ? ("," + key) : "") + ")")
  } else {
    return genStatic(el)
  }
}

function genIf (el) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice())
}

function genIfConditions (conditions) {
  if (!conditions.length) {
    return '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return el.once ? genOnce(el) : genElement(el)
  }
}

function genFor (el) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if (
    "development" !== 'production' &&
    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key
  ) {
    warn$3(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genElement(el)) +
    '})'
}

function genData (el) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < dataGenFns.length; i++) {
    data += dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + (genProps(el.attrs)) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + (genProps(el.props)) + "},";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false, warn$3)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true, warn$3)) + ",";
  }
  // slot target
  if (el.slotTarget) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el.scopedSlots)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  return data
}

function genDirectives (el) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, warn$3);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el) {
  var ast = el.children[0];
  if ("development" !== 'production' && (
    el.children.length > 1 || ast.type !== 1
  )) {
    warn$3('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, currentOptions);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (slots) {
  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + "])")
}

function genScopedSlot (key, el) {
  if (el.for && !el.forProcessed) {
    return genForScopedSlot(key, el)
  }
  return "{key:" + key + ",fn:function(" + (String(el.attrsMap.scope)) + "){" +
    "return " + (el.tag === 'template'
      ? genChildren(el) || 'void 0'
      : genElement(el)) + "}}"
}

function genForScopedSlot (key, el) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genScopedSlot(key, el)) +
    '})'
}

function genChildren (el, checkSkip) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      return genElement(el$1)
    }
    var normalizationType = checkSkip ? getNormalizationType(children) : 0;
    return ("[" + (children.map(genNode).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (children) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function maybeComponent (el) {
  return !isPlatformReservedTag$1(el.tag)
}

function genNode (node) {
  if (node.type === 1) {
    return genElement(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genSlot (el) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el);
  var res = "_t(" + slotName + (children ? ("," + children) : '');
  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (componentName, el) {
  var children = el.inlineTemplate ? null : genChildren(el, true);
  return ("_c(" + componentName + "," + (genData(el)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
  }
  return res.slice(0, -1)
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// check valid identifier for v-for
var identRE = /[A-Za-z_$][\w$]*/;

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors
}

function checkNode (node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), errors);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), errors);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent (exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
    );
  }
  checkExpression(exp, text, errors);
}

function checkFor (node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier (ident, type, text, errors) {
  if (typeof ident === 'string' && !identRE.test(ident)) {
    errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
  }
}

function checkExpression (exp, text, errors) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
      );
    } else {
      errors.push(("invalid expression: " + (text.trim())));
    }
  }
}

/*  */

function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  optimize(ast, options);
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
}

function makeFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompiler (baseOptions) {
  var functionCompileCache = Object.create(null);

  function compile (
    template,
    options
  ) {
    var finalOptions = Object.create(baseOptions);
    var errors = [];
    var tips = [];
    finalOptions.warn = function (msg, tip$$1) {
      (tip$$1 ? tips : errors).push(msg);
    };

    if (options) {
      // merge custom modules
      if (options.modules) {
        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
      }
      // merge custom directives
      if (options.directives) {
        finalOptions.directives = extend(
          Object.create(baseOptions.directives),
          options.directives
        );
      }
      // copy other options
      for (var key in options) {
        if (key !== 'modules' && key !== 'directives') {
          finalOptions[key] = options[key];
        }
      }
    }

    var compiled = baseCompile(template, finalOptions);
    if (true) {
      errors.push.apply(errors, detectErrors(compiled.ast));
    }
    compiled.errors = errors;
    compiled.tips = tips;
    return compiled
  }

  function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = options || {};

    /* istanbul ignore if */
    if (true) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (functionCompileCache[key]) {
      return functionCompileCache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (true) {
      if (compiled.errors && compiled.errors.length) {
        warn(
          "Error compiling template:\n\n" + template + "\n\n" +
          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
          vm
        );
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = makeFunction(compiled.render, fnGenErrors);
    var l = compiled.staticRenderFns.length;
    res.staticRenderFns = new Array(l);
    for (var i = 0; i < l; i++) {
      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);
    }

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (true) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (functionCompileCache[key] = res)
  }

  return {
    compile: compile,
    compileToFunctions: compileToFunctions
  }
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if ("development" !== 'production' && staticClass) {
    var expression = parseText(staticClass, options.delimiters);
    if (expression) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.'
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData$1
};

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (true) {
      var expression = parseText(staticStyle, options.delimiters);
      if (expression) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.'
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$2 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$2
};

var modules$1 = [
  klass$1,
  style$1
];

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue$3.prototype.$mount;
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    "development" !== 'production' && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if ("development" !== 'production' && !template) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (true) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        delimiters: options.delimiters
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile end');
        measure(((this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue$3.compile = compileToFunctions;

/* harmony default export */ __webpack_exports__["a"] = (Vue$3);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ "h6ac")))

/***/ }),

/***/ "70aZ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ins.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ins = {
  symbol: 'ins',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.554-19.713c.759 0 1.375-.601 1.375-1.342 0-.742-.616-1.343-1.375-1.343-.76 0-1.375.601-1.375 1.343 0 .741.615 1.342 1.375 1.342zm3.927-1.534c.76 0 1.375-.601 1.375-1.342 0-.742-.615-1.343-1.375-1.343-.759 0-1.375.601-1.375 1.343 0 .741.616 1.342 1.375 1.342zm1.573 9.205c.759 0 1.375-.6 1.375-1.342s-.616-1.343-1.375-1.343c-.76 0-1.375.601-1.375 1.343s.615 1.342 1.375 1.342zM5.786 18.04a.776.776 0 0 0 .785-.767c0-.423-.352-.767-.786-.767S5 16.85 5 17.273c0 .424.352.767.785.767zm2.16 4.988c.325 0 .59-.258.59-.576 0-.318-.265-.575-.59-.575s-.59.257-.59.575c0 .318.264.576.59.576zm6.285 3.835c.326 0 .59-.258.59-.576s-.264-.575-.59-.575-.59.257-.59.575.264.576.59.576zm10.215-3.452c.325 0 .59-.258.59-.576s-.265-.576-.59-.576c-.326 0-.59.258-.59.576s.264.576.59.576zm-6.286-1.15c.326 0 .59-.258.59-.576 0-.318-.264-.575-.59-.575s-.59.257-.59.575c0 .318.265.576.59.576zm3.536-2.685c.325 0 .59-.258.59-.576s-.265-.575-.59-.575c-.326 0-.59.257-.59.575s.264.576.59.576zm-4.125 7.287c.433 0 .785-.344.785-.767s-.352-.767-.785-.767c-.434 0-.786.343-.786.767s.352.767.786.767zm3.535-9.59a.776.776 0 0 0 .785-.767.776.776 0 0 0-.785-.767.776.776 0 0 0-.785.767c0 .424.351.767.785.767zm1.18 7.672a.776.776 0 0 0 .785-.767.776.776 0 0 0-.786-.767.776.776 0 0 0-.785.767c0 .423.352.767.785.767zM6.765 21.11c.543 0 .982-.43.982-.959s-.44-.958-.982-.958-.982.43-.982.958.44.959.982.959zm9.43 3.835c.759 0 1.375-.601 1.375-1.343s-.616-1.343-1.375-1.343c-.76 0-1.375.602-1.375 1.343s.615 1.343 1.375 1.343zm-7.465-6.52c.76 0 1.375-.602 1.375-1.343s-.616-1.343-1.375-1.343-1.375.601-1.375 1.343.615 1.343 1.375 1.343zm7.465 3.067c.542 0 .982-.429.982-.958s-.44-.958-.982-.958c-.543 0-.983.429-.983.958s.44.958.983.958zm-4.715-8.436c.326 0 .59-.258.59-.576s-.264-.576-.59-.576-.59.258-.59.576.264.576.59.576zm3.732 2.3c.65 0 1.178-.515 1.178-1.15 0-.636-.527-1.152-1.178-1.152-.65 0-1.178.516-1.178 1.151 0 .636.528 1.152 1.178 1.152zm2.75 1.15a.776.776 0 0 0 .785-.767.776.776 0 0 0-.785-.767.776.776 0 0 0-.785.767c0 .424.351.767.785.767zm1.375-9.588c.326 0 .59-.257.59-.575s-.264-.576-.59-.576c-.326 0-.59.258-.59.576s.264.575.59.575zm-2.75-.001a.97.97 0 0 0 .983-.959.97.97 0 0 0-.983-.958.97.97 0 0 0-.982.958c0 .53.44.959.982.959zm.59 6.137c.434 0 .785-.343.785-.767s-.351-.767-.785-.767c-.434 0-.785.344-.785.767s.351.767.785.767zm-7.465 8.44c.65 0 1.178-.515 1.178-1.151s-.527-1.151-1.178-1.151c-.65 0-1.178.515-1.178 1.15 0 .637.528 1.152 1.178 1.152zm11.393 1.15c.65 0 1.178-.516 1.178-1.152 0-.635-.528-1.15-1.178-1.15s-1.178.515-1.178 1.15c0 .636.527 1.152 1.178 1.152zm-1.57 2.685c.65 0 1.177-.516 1.177-1.151 0-.636-.527-1.152-1.178-1.152s-1.178.516-1.178 1.152c0 .635.528 1.15 1.178 1.15zm-9.233 0c.76 0 1.375-.601 1.375-1.343s-.616-1.342-1.375-1.342c-.76 0-1.375.6-1.375 1.342s.616 1.343 1.375 1.343zm-4.125-9.972c.65 0 1.178-.516 1.178-1.152 0-.635-.528-1.15-1.178-1.15S5 13.57 5 14.204c0 .636.527 1.152 1.178 1.152zm5.893 1.916c.868 0 1.572-.686 1.572-1.534 0-.847-.704-1.534-1.572-1.534-.869 0-1.573.687-1.573 1.534 0 .848.704 1.534 1.573 1.534zm8.25-2.3c.868 0 1.572-.687 1.572-1.535 0-.847-.704-1.534-1.572-1.534-.869 0-1.573.687-1.573 1.534 0 .848.704 1.534 1.573 1.534zm4.32 6.521c.65 0 1.178-.515 1.178-1.151s-.527-1.151-1.178-1.151-1.178.515-1.178 1.15c0 .637.528 1.152 1.178 1.152zm1.18-4.603c.65 0 1.177-.516 1.177-1.152 0-.635-.527-1.15-1.177-1.15-.651 0-1.178.515-1.178 1.15 0 .636.527 1.152 1.178 1.152zm-4.518-5.37c.542 0 .982-.43.982-.96s-.44-.958-.982-.958c-.543 0-.982.43-.982.959s.44.958.982.958zm.195-3.069c.434 0 .786-.343.786-.767s-.352-.767-.786-.767c-.433 0-.785.344-.785.767s.352.767.785.767zm1.768.767c.326 0 .59-.258.59-.575s-.264-.576-.59-.576-.59.258-.59.576.264.575.59.575zm3.144 4.604c.326 0 .59-.258.59-.576s-.264-.576-.59-.576-.59.258-.59.576.265.576.59.576zM9.516 8.836c.326 0 .59-.257.59-.575s-.264-.576-.59-.576-.59.258-.59.576.264.575.59.575zm-.785 4.987c.326 0 .59-.258.59-.576s-.264-.576-.59-.576-.59.258-.59.576.264.576.59.576zm1.572.767c.326 0 .59-.258.59-.576s-.264-.576-.59-.576c-.326 0-.59.258-.59.576s.264.576.59.576zm1.963-7.29c.326 0 .59-.258.59-.576s-.264-.575-.59-.575-.59.257-.59.575.264.576.59.576zM26.41 18.809c.326 0 .59-.258.59-.576s-.264-.575-.59-.575-.59.257-.59.575.265.576.59.576zm-1.964-6.138c.759 0 1.375-.6 1.375-1.342s-.616-1.343-1.375-1.343c-.76 0-1.375.601-1.375 1.343s.615 1.342 1.375 1.342zm-1.18 3.068c.543 0 .982-.429.982-.958s-.44-.958-.982-.958-.982.429-.982.958.44.958.982.958zM9.91 11.52c.543 0 .983-.429.983-.958s-.44-.959-.983-.959c-.542 0-.982.43-.982.959s.44.958.982.958zm4.32-2.685a.97.97 0 0 0 .983-.958.97.97 0 0 0-.982-.959.97.97 0 0 0-.983.959c0 .529.44.958.983.958zm-2.552.384c.434 0 .785-.343.785-.767s-.351-.767-.785-.767c-.434 0-.785.344-.785.767s.351.767.785.767zm-4.322 3.068a.776.776 0 0 0 .785-.767c0-.423-.351-.767-.785-.767s-.785.344-.785.767c0 .424.351.767.785.767zm16.5 6.138a.776.776 0 0 0 .785-.767.776.776 0 0 0-.785-.767.776.776 0 0 0-.785.767c0 .423.351.767.785.767zm-8.446.384c.76 0 1.375-.601 1.375-1.343s-.615-1.342-1.375-1.342-1.375.6-1.375 1.342.616 1.343 1.375 1.343zm-2.554.767a.776.776 0 0 0 .785-.767.776.776 0 0 0-.785-.767.776.776 0 0 0-.785.767c0 .423.351.767.785.767zm.392 3.068c.651 0 1.178-.516 1.178-1.152 0-.635-.527-1.15-1.178-1.15s-1.177.515-1.177 1.15c0 .636.527 1.152 1.177 1.152zm0 2.3a.776.776 0 0 0 .786-.766.776.776 0 0 0-.786-.767.776.776 0 0 0-.785.767c0 .423.352.767.785.767z"/><path d="M12.07 17.273c-.868 0-1.572-.686-1.572-1.534 0-.847.704-1.534 1.573-1.534.868 0 1.572.687 1.572 1.534 0 .848-.704 1.534-1.572 1.534zm8.25-2.3c-.868 0-1.572-.687-1.572-1.535 0-.847.704-1.534 1.573-1.534.868 0 1.572.687 1.572 1.534 0 .848-.704 1.534-1.572 1.534zm4.321 6.521c-.65 0-1.178-.515-1.178-1.151s.528-1.151 1.178-1.151 1.178.515 1.178 1.15c0 .637-.527 1.152-1.178 1.152zm1.18-4.603a1.165 1.165 0 0 1-1.178-1.152c0-.635.527-1.15 1.178-1.15.65 0 1.177.515 1.177 1.15 0 .636-.527 1.152-1.177 1.152zm-4.518-5.37c-.543 0-.982-.43-.982-.96s.44-.958.982-.958.982.43.982.959-.44.958-.982.958zm.195-3.069c-.433 0-.785-.343-.785-.767s.352-.767.785-.767c.434 0 .786.344.786.767s-.352.767-.786.767zm1.768.767c-.326 0-.59-.258-.59-.575s.264-.576.59-.576.59.258.59.576-.264.575-.59.575zm3.144 4.604c-.325 0-.59-.258-.59-.576s.265-.576.59-.576.59.258.59.576-.264.576-.59.576zM9.516 8.836c-.326 0-.59-.257-.59-.575s.264-.576.59-.576.59.258.59.576-.264.575-.59.575zm-.785 4.987c-.326 0-.59-.258-.59-.576s.264-.576.59-.576.59.258.59.576-.264.576-.59.576zm1.572.767c-.326 0-.59-.258-.59-.576s.264-.576.59-.576c.326 0 .59.258.59.576s-.264.576-.59.576zm1.963-7.29c-.326 0-.59-.258-.59-.576s.264-.575.59-.575.59.257.59.575-.264.576-.59.576zM26.41 18.809c-.325 0-.59-.258-.59-.576s.265-.575.59-.575.59.257.59.575-.264.576-.59.576zm-1.964-6.138c-.76 0-1.375-.6-1.375-1.342s.615-1.343 1.375-1.343c.759 0 1.375.601 1.375 1.343s-.616 1.342-1.375 1.342zm-1.18 3.068c-.542 0-.982-.429-.982-.958s.44-.958.982-.958c.543 0 .982.429.982.958s-.44.958-.982.958zM9.91 11.52c-.542 0-.982-.429-.982-.958s.44-.959.982-.959c.543 0 .983.43.983.959s-.44.958-.983.958zm4.32-2.685a.97.97 0 0 1-.982-.958c0-.53.44-.959.983-.959a.97.97 0 0 1 .982.959.97.97 0 0 1-.982.958zm-2.552.384c-.434 0-.785-.343-.785-.767s.351-.767.785-.767c.434 0 .785.344.785.767s-.351.767-.785.767zm-4.322 3.068a.776.776 0 0 1-.785-.767c0-.423.351-.767.785-.767s.785.344.785.767a.776.776 0 0 1-.785.767zm16.5 6.138a.776.776 0 0 1-.785-.767c0-.424.351-.767.785-.767.434 0 .785.343.785.767a.776.776 0 0 1-.785.767zm-8.446.384c-.76 0-1.375-.601-1.375-1.343s.616-1.342 1.375-1.342c.76 0 1.375.6 1.375 1.342s-.615 1.343-1.375 1.343zm-2.554.767a.776.776 0 0 1-.785-.767c0-.424.351-.767.785-.767.434 0 .785.343.785.767a.776.776 0 0 1-.785.767zm.392 3.068c-.65 0-1.177-.516-1.177-1.152 0-.635.527-1.15 1.177-1.15s1.178.515 1.178 1.15c0 .636-.527 1.152-1.178 1.152zm0 2.3a.776.776 0 0 1-.785-.766c0-.424.352-.767.785-.767.434 0 .786.343.786.767a.776.776 0 0 1-.786.767z" fill-rule="nonzero" opacity=".5"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#b2a3f6" r="16"/><g fill="#fff" fill-rule="nonzero"><path d="M13.446 12.287c-.76 0-1.375-.601-1.375-1.342s.615-1.343 1.375-1.343c.759 0 1.375.601 1.375 1.343s-.616 1.342-1.375 1.342zm3.927-1.534c-.759 0-1.375-.601-1.375-1.342 0-.742.616-1.343 1.375-1.343.76 0 1.375.601 1.375 1.343 0 .741-.615 1.342-1.375 1.342zm1.573 9.205c-.76 0-1.375-.6-1.375-1.342s.615-1.343 1.375-1.343c.759 0 1.375.601 1.375 1.343s-.616 1.342-1.375 1.342zM5.786 18.04A.776.776 0 0 1 5 17.273c0-.423.352-.767.785-.767s.786.344.786.767a.776.776 0 0 1-.786.767zm2.16 4.988a.583.583 0 0 1-.59-.576c0-.318.264-.575.59-.575s.59.257.59.575a.583.583 0 0 1-.59.576zm6.285 3.835c-.326 0-.59-.258-.59-.576s.264-.575.59-.575.59.257.59.575-.264.576-.59.576zm10.215-3.452c-.326 0-.59-.258-.59-.576s.264-.576.59-.576c.325 0 .59.258.59.576s-.265.576-.59.576zm-6.286-1.15a.583.583 0 0 1-.59-.576c0-.318.265-.575.59-.575s.59.257.59.575a.583.583 0 0 1-.59.576zm3.536-2.685c-.326 0-.59-.258-.59-.576s.264-.575.59-.575c.325 0 .59.257.59.575s-.265.576-.59.576zm-4.125 7.287c-.434 0-.786-.344-.786-.767s.352-.767.786-.767c.433 0 .785.343.785.767s-.352.767-.785.767zm3.535-9.59a.776.776 0 0 1-.785-.767c0-.423.351-.767.785-.767.434 0 .785.344.785.767a.776.776 0 0 1-.785.767zm1.18 7.672a.776.776 0 0 1-.786-.767c0-.424.352-.767.785-.767.434 0 .786.343.786.767a.776.776 0 0 1-.786.767zM6.765 21.11c-.542 0-.982-.43-.982-.959s.44-.958.982-.958.982.43.982.958-.44.959-.982.959zm9.43 3.835c-.76 0-1.375-.601-1.375-1.343s.615-1.343 1.375-1.343c.759 0 1.375.602 1.375 1.343s-.616 1.343-1.375 1.343zm-7.465-6.52c-.76 0-1.375-.602-1.375-1.343s.615-1.343 1.375-1.343 1.375.601 1.375 1.343-.616 1.343-1.375 1.343zm7.465 3.067c-.543 0-.983-.429-.983-.958s.44-.958.983-.958c.542 0 .982.429.982.958s-.44.958-.982.958zm-4.715-8.436c-.326 0-.59-.258-.59-.576s.264-.576.59-.576.59.258.59.576-.264.576-.59.576zm3.732 2.3c-.65 0-1.178-.515-1.178-1.15 0-.636.528-1.152 1.178-1.152.65 0 1.178.516 1.178 1.151 0 .636-.527 1.152-1.178 1.152zm2.75 1.15a.776.776 0 0 1-.785-.767c0-.423.351-.767.785-.767.434 0 .785.344.785.767a.776.776 0 0 1-.785.767zm1.375-9.588c-.326 0-.59-.257-.59-.575s.264-.576.59-.576c.326 0 .59.258.59.576s-.264.575-.59.575zm-2.75-.001a.97.97 0 0 1-.982-.959.97.97 0 0 1 .982-.958.97.97 0 0 1 .983.958.97.97 0 0 1-.983.959zm.59 6.137c-.434 0-.785-.343-.785-.767s.351-.767.785-.767c.434 0 .785.344.785.767s-.351.767-.785.767zm-7.465 8.44c-.65 0-1.178-.515-1.178-1.151s.528-1.151 1.178-1.151c.65 0 1.178.515 1.178 1.15 0 .637-.527 1.152-1.178 1.152zm11.393 1.15c-.65 0-1.178-.516-1.178-1.152 0-.635.527-1.15 1.178-1.15s1.178.515 1.178 1.15c0 .636-.528 1.152-1.178 1.152zm-1.57 2.685c-.651 0-1.179-.516-1.179-1.151 0-.636.528-1.152 1.178-1.152s1.178.516 1.178 1.152c0 .635-.527 1.15-1.178 1.15zm-9.233 0c-.76 0-1.375-.601-1.375-1.343s.616-1.342 1.375-1.342 1.375.6 1.375 1.342-.616 1.343-1.375 1.343zm-4.125-9.972c-.65 0-1.178-.516-1.178-1.152 0-.635.527-1.15 1.178-1.15s1.178.515 1.178 1.15c0 .636-.528 1.152-1.178 1.152z"/><path d="M12.07 17.273c-.868 0-1.572-.686-1.572-1.534 0-.847.704-1.534 1.573-1.534s1.572.687 1.572 1.534c0 .848-.704 1.534-1.572 1.534zm8.25-2.3c-.868 0-1.572-.687-1.572-1.535 0-.847.704-1.534 1.573-1.534.868 0 1.572.687 1.572 1.534 0 .848-.704 1.534-1.572 1.534zm4.321 6.521c-.65 0-1.178-.515-1.178-1.151s.528-1.151 1.178-1.151 1.178.515 1.178 1.15c0 .637-.527 1.152-1.178 1.152zm1.18-4.603a1.165 1.165 0 0 1-1.178-1.152c0-.635.527-1.15 1.178-1.15.65 0 1.177.515 1.177 1.15 0 .636-.527 1.152-1.177 1.152zm-4.518-5.37a.97.97 0 0 1-.982-.96.97.97 0 0 1 .982-.958.97.97 0 0 1 .982.959.97.97 0 0 1-.982.958zm.195-3.069c-.433 0-.785-.343-.785-.767s.352-.767.785-.767c.434 0 .786.344.786.767s-.352.767-.786.767zm1.768.767c-.326 0-.59-.258-.59-.575s.264-.576.59-.576.59.258.59.576-.264.575-.59.575zm3.144 4.604c-.325 0-.59-.258-.59-.576s.265-.576.59-.576.59.258.59.576-.264.576-.59.576zM9.516 8.836c-.326 0-.59-.257-.59-.575s.264-.576.59-.576.59.258.59.576-.264.575-.59.575zm-.785 4.987c-.326 0-.59-.258-.59-.576s.264-.576.59-.576.59.258.59.576-.264.576-.59.576zm1.572.767c-.326 0-.59-.258-.59-.576s.264-.576.59-.576.59.258.59.576-.264.576-.59.576zm1.963-7.29c-.326 0-.59-.258-.59-.576s.264-.575.59-.575.59.257.59.575-.264.576-.59.576zM26.41 18.809c-.325 0-.59-.258-.59-.576s.265-.575.59-.575.59.257.59.575-.264.576-.59.576zm-1.964-6.138c-.76 0-1.375-.6-1.375-1.342 0-.742.615-1.343 1.375-1.343.759 0 1.375.601 1.375 1.343 0 .741-.616 1.342-1.375 1.342zm-1.18 3.068a.97.97 0 0 1-.982-.958c0-.53.44-.958.982-.958a.97.97 0 0 1 .982.958.97.97 0 0 1-.982.958zM9.91 11.52a.97.97 0 0 1-.982-.958c0-.53.44-.959.982-.959s.983.43.983.959a.97.97 0 0 1-.983.958zm4.32-2.685a.97.97 0 0 1-.982-.958c0-.53.44-.959.983-.959s.982.43.982.959a.97.97 0 0 1-.982.958zm-2.552.384c-.434 0-.785-.343-.785-.767s.351-.767.785-.767.785.344.785.767-.351.767-.785.767zm-4.322 3.068a.776.776 0 0 1-.785-.767c0-.423.351-.767.785-.767s.785.344.785.767a.776.776 0 0 1-.785.767zm16.5 6.138a.776.776 0 0 1-.785-.767c0-.424.351-.767.785-.767.434 0 .785.343.785.767a.776.776 0 0 1-.785.767zm-8.446.384c-.76 0-1.375-.601-1.375-1.343s.616-1.342 1.375-1.342c.76 0 1.375.6 1.375 1.342s-.615 1.343-1.375 1.343zm-2.554.767a.776.776 0 0 1-.785-.767c0-.424.351-.767.785-.767s.785.343.785.767a.776.776 0 0 1-.785.767zm.392 3.068c-.65 0-1.177-.516-1.177-1.152 0-.635.527-1.15 1.177-1.15s1.178.515 1.178 1.15c0 .636-.527 1.152-1.178 1.152zm0 2.3a.776.776 0 0 1-.785-.766c0-.424.352-.767.785-.767s.786.343.786.767a.776.776 0 0 1-.786.767z" opacity=".5"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ins);


/***/ }),

/***/ "7333":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mln.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mln = {
  symbol: 'mln',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M8.627 20.124l1.36-.786-.178-.309-1.342.775v-7.851l6.82 4.042v11.56L16 28l.714-.445v-11.56l6.819-4.042v7.852l-1.343-.776-.178.31 1.36.785-5.27 3.092v1.729L25 20.885v-10.59L16 5l-9 5.295v10.59l6.899 4.06v-1.73l-5.272-3.091zm7.175-13.31v1.581h.357V6.791l6.66 3.908L16 14.742l-6.82-4.043 6.622-3.885zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.198-22.594v1.657h.357V9.406h-.357zm0 2.668v1.657l.178.081.179-.08v-1.658h-.357zm5.56 6.45l-1.435-.829-.179.31 1.436.828.178-.309zm-2.265-1.334l-1.436-.828-.159.114-.02.195 1.436.828.179-.309zm-8.46 1.334l.179.31 1.435-.83-.179-.309-1.435.83zm2.266-1.334l.178.31 1.435-.83-.019-.194-.159-.114-1.435.828z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#0B1529"/><path fill="#FFF" d="M8.627 20.124l5.272 3.092v1.729L7 20.885v-10.59L16 5l9 5.295v10.59l-6.899 4.06v-1.73l5.271-3.091-1.36-.786.178-.309 1.343.776v-7.852l-6.82 4.042v11.56L16 28l-.714-.445v-11.56l-6.819-4.042v7.851l1.342-.775.178.31-1.36.785zm7.175-13.31L9.18 10.699 16 14.742l6.82-4.043-6.661-3.908v1.604h-.357V6.814zm0 2.592h.357v1.657h-.357V9.406zm0 2.668h.357v1.657l-.179.081-.178-.08v-1.658zm5.56 6.45l-.178.31-1.436-.83.179-.309 1.435.83zm-2.265-1.334l-.179.31-1.435-.83.02-.194.158-.114 1.436.828zm-8.46 1.334l1.435-.829.179.31-1.435.828-.179-.309zm2.266-1.334l1.435-.828.16.114.018.195-1.435.828-.178-.309z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mln);


/***/ }),

/***/ "7DYF":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/index.js ***!
  \********************************************************/
/*! exports provided: Abt, Act, Actn, Ada, Add, Adx, Ae, Aeon, Aeur, Agi, Agrs, Aion, Amb, Amp, Ant, Apex, Appc, Ardr, Arg, Ark, Arn, Ary, Ast, Atm, Atom, Audr, Auto, Aywa, Bab, Bat, Bay, Bcbc, Bcc, Bcd, Bch, Bcio, Bcn, Bco, Bcpt, Bdl, Beam, Bela, Bix, Blcn, Blk, Block, Blz, Bnb, Bnt, Bnty, Booty, Bos, Bpt, Bq, Brd, Bsd, Bsv, Btc, Btcd, Btch, Btcp, Btcz, Btdx, Btg, Btm, Bts, Btt, Btx, Burst, Call, Cc, Cdn, Cenz, Chain, Chat, Chips, Cix, Clam, Cloak, Cmm, Cnd, Cmt, Cnx, Cny, Cob, Coqui, Colx, Crpt, Crw, Cs, Ctr, Ctxc, Cvc, Cred, Cdt, Dai, Dash, Dat, Data, Dbc, Dcn, Dcr, Deez, Dent, Dew, Dgb, Dgd, Dlt, Dnt, Dock, Doge, Drgn, Drop, Dta, Dth, Dtr, Ebst, Eca, Edg, Edo, Edoge, Ela, Elf, Elix, Ella, Emc, Emc2, Eng, Enj, Entrp, Eon, Eop, Eos, Eqli, Equa, Etc, Eth, Ethos, Etn, Etp, Eur, Evx, Exmo, Exp, Fair, Fct, Fil, Fjc, Fldc, Flo, Fsn, Ftc, Fuel, Fun, Game, Gas, Gbp, Gbx, Gbyte, Generic, Gin, Glxt, Gmr, Gno, Gnt, Gold, Grc, Grin, Grs, Gsc, Gto, Gup, Gusd, Gvt, Gxs, Gzr, Hight, Hodl, Hot, Hpb, Hsr, Ht, Html, Huc, Hush, Icn, Icx, Ignis, Ilk, Ink, Ins, Ion, Iop, Iost, Iotx, Iq, Itc, Jnt, Jpy, Kcs, Kin, Kmd, Knc, Krb, Lbc, Lend, Link, Lkk, Loom, Lpt, Lrc, Lsk, Ltc, Lun, Maid, Mana, Mcap, Mco, Mda, Mds, Med, Meetone, Miota, Mith, Mkr, Mln, Mnx, Mnz, Moac, Mod, Mona, Msr, Mth, Mtl, Music, Mzc, Nano, Nas, Nav, Ncash, Ndz, Nebl, Neo, Neos, Neu, Nexo, Ngc, Nio, Nlc2, Nlg, Nmc, Npxs, Nuls, Nxs, Nxt, Oax, Ok, Omg, Omni, Ong, Ont, Oot, Ost, Ox, Part, Pasc, Pasl, Pax, Pay, Payx, Pink, Pirl, Pivx, Plr, Poa, Poe, Polis, Poly, Pot, Powr, Ppc, Ppp, Ppt, Pre, Prl, Pungo, Pura, Qash, Qiwi, Qlc, Qrl, Qsp, Qtum, R, Rads, Rap, Rcn, Rdd, Rdn, Rep, Req, Rhoc, Ric, Rise, Rlc, Rpx, Rub, Rvn, Ryo, Safe, Salt, San, Sbd, Sberbank, Sc, Shift, Sib, Sky, Slr, Sls, Smart, Sngls, Snm, Snt, Soc, Spnk, Sphtx, Srn, Stak, Start, Steem, Storj, Storm, Stq, Strat, Sub, Sumo, Sys, Taas, Tau, Tbx, Tel, Ten, Tern, Theta, Tix, Tkn, Tks, Tnb, Tnc, Tnt, Tomo, Tpay, Trig, Trtl, Trx, Tusd, Tzc, Ubq, Unity, Usd, Usdc, Usdt, Utk, Veri, Vet, Via, Vib, Vibe, Vivo, Vrc, Vrsc, Vtc, Vtho, Wabi, Wan, Waves, Wax, Wgr, Wicc, Wings, Wpr, Wtc, X, Xas, Xbc, Xby, Xcp, Xdn, Xem, Xin, Xlm, Xmcc, Xmg, Xmo, Xmr, Xmy, Xp, Xpa, Xpm, Xrp, Xsg, Xtz, Xuc, Xvc, Xvg, Xzc, Yoyow, Zcl, Zec, Zel, Zen, Zest, Zil, Zla, Zrx, default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__abt__ = __webpack_require__(/*! ./abt */ "Z59u");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__act__ = __webpack_require__(/*! ./act */ "zB5q");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actn__ = __webpack_require__(/*! ./actn */ "H1ma");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ada__ = __webpack_require__(/*! ./ada */ "J6pL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__add__ = __webpack_require__(/*! ./add */ "DQ6d");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__adx__ = __webpack_require__(/*! ./adx */ "qw48");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ae__ = __webpack_require__(/*! ./ae */ "UOwz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__aeon__ = __webpack_require__(/*! ./aeon */ "vZ2o");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__aeur__ = __webpack_require__(/*! ./aeur */ "i4/e");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__agi__ = __webpack_require__(/*! ./agi */ "N6Yo");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__agrs__ = __webpack_require__(/*! ./agrs */ "Whqh");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__aion__ = __webpack_require__(/*! ./aion */ "Hy4J");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__amb__ = __webpack_require__(/*! ./amb */ "tQhH");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__amp__ = __webpack_require__(/*! ./amp */ "QJnu");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ant__ = __webpack_require__(/*! ./ant */ "pXIP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__apex__ = __webpack_require__(/*! ./apex */ "kI3e");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__appc__ = __webpack_require__(/*! ./appc */ "TD4r");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ardr__ = __webpack_require__(/*! ./ardr */ "ceYx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__arg__ = __webpack_require__(/*! ./arg */ "sgc9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__ark__ = __webpack_require__(/*! ./ark */ "TNsB");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__arn__ = __webpack_require__(/*! ./arn */ "t38I");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__ary__ = __webpack_require__(/*! ./ary */ "b4cL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__ast__ = __webpack_require__(/*! ./ast */ "E1+/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__atm__ = __webpack_require__(/*! ./atm */ "Q1K/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__atom__ = __webpack_require__(/*! ./atom */ "ciP+");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__audr__ = __webpack_require__(/*! ./audr */ "VumV");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__auto__ = __webpack_require__(/*! ./auto */ "z5MN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__aywa__ = __webpack_require__(/*! ./aywa */ "s5Gp");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__bab__ = __webpack_require__(/*! ./bab */ "B+zY");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__bat__ = __webpack_require__(/*! ./bat */ "EQc5");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__bay__ = __webpack_require__(/*! ./bay */ "a1+k");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__bcbc__ = __webpack_require__(/*! ./bcbc */ "hFbM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__bcc__ = __webpack_require__(/*! ./bcc */ "tPHC");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__bcd__ = __webpack_require__(/*! ./bcd */ "/Wsy");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__bch__ = __webpack_require__(/*! ./bch */ "I3ym");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__bcio__ = __webpack_require__(/*! ./bcio */ "aaFf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__bcn__ = __webpack_require__(/*! ./bcn */ "Ckay");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__bco__ = __webpack_require__(/*! ./bco */ "Iy0z");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__bcpt__ = __webpack_require__(/*! ./bcpt */ "RcnO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__bdl__ = __webpack_require__(/*! ./bdl */ "8BGg");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__beam__ = __webpack_require__(/*! ./beam */ "vEHE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__bela__ = __webpack_require__(/*! ./bela */ "xsPl");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__bix__ = __webpack_require__(/*! ./bix */ "Uoe2");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__blcn__ = __webpack_require__(/*! ./blcn */ "yGtN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__blk__ = __webpack_require__(/*! ./blk */ "Gfpd");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__block__ = __webpack_require__(/*! ./block */ "aD6T");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__blz__ = __webpack_require__(/*! ./blz */ "hdb3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__bnb__ = __webpack_require__(/*! ./bnb */ "TAkA");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__bnt__ = __webpack_require__(/*! ./bnt */ "ULZB");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__bnty__ = __webpack_require__(/*! ./bnty */ "dy/u");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__booty__ = __webpack_require__(/*! ./booty */ "ztL0");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__bos__ = __webpack_require__(/*! ./bos */ "uykT");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__bpt__ = __webpack_require__(/*! ./bpt */ "Nr6d");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__bq__ = __webpack_require__(/*! ./bq */ "JWy/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__brd__ = __webpack_require__(/*! ./brd */ "8a7l");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__bsd__ = __webpack_require__(/*! ./bsd */ "UeXW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__bsv__ = __webpack_require__(/*! ./bsv */ "UubL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__btc__ = __webpack_require__(/*! ./btc */ "iNZx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__btcd__ = __webpack_require__(/*! ./btcd */ "IZnk");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__btch__ = __webpack_require__(/*! ./btch */ "orbS");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__btcp__ = __webpack_require__(/*! ./btcp */ "I/7u");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__btcz__ = __webpack_require__(/*! ./btcz */ "1IVR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__btg__ = __webpack_require__(/*! ./btg */ "xfXz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__btm__ = __webpack_require__(/*! ./btm */ "htvg");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__bts__ = __webpack_require__(/*! ./bts */ "9yQH");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__btt__ = __webpack_require__(/*! ./btt */ "fPC3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__btx__ = __webpack_require__(/*! ./btx */ "oUXX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__burst__ = __webpack_require__(/*! ./burst */ "J+F7");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__call__ = __webpack_require__(/*! ./call */ "DkMU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__cc__ = __webpack_require__(/*! ./cc */ "9oa8");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__cdn__ = __webpack_require__(/*! ./cdn */ "NzJr");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__cdt__ = __webpack_require__(/*! ./cdt */ "dl+X");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__cenz__ = __webpack_require__(/*! ./cenz */ "8lsQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__chain__ = __webpack_require__(/*! ./chain */ "GHz0");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__chat__ = __webpack_require__(/*! ./chat */ "AWUt");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__chips__ = __webpack_require__(/*! ./chips */ "ApMj");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__cix__ = __webpack_require__(/*! ./cix */ "N8wM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__clam__ = __webpack_require__(/*! ./clam */ "7IJI");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__cloak__ = __webpack_require__(/*! ./cloak */ "qfUn");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__cmm__ = __webpack_require__(/*! ./cmm */ "8M56");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__cmt__ = __webpack_require__(/*! ./cmt */ "Okoa");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__cnd__ = __webpack_require__(/*! ./cnd */ "qgy0");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__cnx__ = __webpack_require__(/*! ./cnx */ "nPhf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__cny__ = __webpack_require__(/*! ./cny */ "DU2M");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__cob__ = __webpack_require__(/*! ./cob */ "tSE5");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__colx__ = __webpack_require__(/*! ./colx */ "biC6");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__coqui__ = __webpack_require__(/*! ./coqui */ "iXb3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__cred__ = __webpack_require__(/*! ./cred */ "csY+");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__crpt__ = __webpack_require__(/*! ./crpt */ "T5/H");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__crw__ = __webpack_require__(/*! ./crw */ "XPRJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__cs__ = __webpack_require__(/*! ./cs */ "6FIa");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__ctr__ = __webpack_require__(/*! ./ctr */ "6nxU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__ctxc__ = __webpack_require__(/*! ./ctxc */ "8wrN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__cvc__ = __webpack_require__(/*! ./cvc */ "HLBr");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__dai__ = __webpack_require__(/*! ./dai */ "iQv3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__dash__ = __webpack_require__(/*! ./dash */ "rNql");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__dat__ = __webpack_require__(/*! ./dat */ "Vrmp");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__data__ = __webpack_require__(/*! ./data */ "cBNS");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__dbc__ = __webpack_require__(/*! ./dbc */ "zG4e");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__dcn__ = __webpack_require__(/*! ./dcn */ "UoR/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__dcr__ = __webpack_require__(/*! ./dcr */ "jEzQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__deez__ = __webpack_require__(/*! ./deez */ "0gE9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__dent__ = __webpack_require__(/*! ./dent */ "s/aJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__dew__ = __webpack_require__(/*! ./dew */ "DCcR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__dgb__ = __webpack_require__(/*! ./dgb */ "t9TA");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__dgd__ = __webpack_require__(/*! ./dgd */ "Ujd3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__dlt__ = __webpack_require__(/*! ./dlt */ "gY/P");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__dnt__ = __webpack_require__(/*! ./dnt */ "MYek");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__dock__ = __webpack_require__(/*! ./dock */ "lSjg");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__doge__ = __webpack_require__(/*! ./doge */ "F1pP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__drgn__ = __webpack_require__(/*! ./drgn */ "aGHc");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__drop__ = __webpack_require__(/*! ./drop */ "tPX4");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__dta__ = __webpack_require__(/*! ./dta */ "1SO3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__dth__ = __webpack_require__(/*! ./dth */ "hY8z");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__dtr__ = __webpack_require__(/*! ./dtr */ "ULv5");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__ebst__ = __webpack_require__(/*! ./ebst */ "8fPC");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__eca__ = __webpack_require__(/*! ./eca */ "WALw");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__edg__ = __webpack_require__(/*! ./edg */ "tdQe");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__edo__ = __webpack_require__(/*! ./edo */ "eS1B");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__edoge__ = __webpack_require__(/*! ./edoge */ "y5bv");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__ela__ = __webpack_require__(/*! ./ela */ "DHbO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__elf__ = __webpack_require__(/*! ./elf */ "MjIg");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__elix__ = __webpack_require__(/*! ./elix */ "3NfZ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__ella__ = __webpack_require__(/*! ./ella */ "QzEK");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_124__emc__ = __webpack_require__(/*! ./emc */ "6GK/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_125__emc2__ = __webpack_require__(/*! ./emc2 */ "QZeu");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_126__eng__ = __webpack_require__(/*! ./eng */ "kxBZ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_127__enj__ = __webpack_require__(/*! ./enj */ "hi3C");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_128__entrp__ = __webpack_require__(/*! ./entrp */ "EF5I");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_129__eon__ = __webpack_require__(/*! ./eon */ "yCEO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_130__eop__ = __webpack_require__(/*! ./eop */ "9984");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_131__eos__ = __webpack_require__(/*! ./eos */ "jKc5");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_132__eqli__ = __webpack_require__(/*! ./eqli */ "M9vc");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_133__equa__ = __webpack_require__(/*! ./equa */ "z4U9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_134__etc__ = __webpack_require__(/*! ./etc */ "AQC3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_135__eth__ = __webpack_require__(/*! ./eth */ "beFY");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_136__ethos__ = __webpack_require__(/*! ./ethos */ "Dvfy");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_137__etn__ = __webpack_require__(/*! ./etn */ "WJzF");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_138__etp__ = __webpack_require__(/*! ./etp */ "R0Gr");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_139__eur__ = __webpack_require__(/*! ./eur */ "HWZX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_140__evx__ = __webpack_require__(/*! ./evx */ "JzVw");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_141__exmo__ = __webpack_require__(/*! ./exmo */ "vITG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_142__exp__ = __webpack_require__(/*! ./exp */ "gYMh");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_143__fair__ = __webpack_require__(/*! ./fair */ "f6Op");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_144__fct__ = __webpack_require__(/*! ./fct */ "0SdH");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_145__fil__ = __webpack_require__(/*! ./fil */ "MZZg");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_146__fjc__ = __webpack_require__(/*! ./fjc */ "BAMT");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_147__fldc__ = __webpack_require__(/*! ./fldc */ "WPWG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_148__flo__ = __webpack_require__(/*! ./flo */ "Ulzv");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_149__fsn__ = __webpack_require__(/*! ./fsn */ "39pN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_150__ftc__ = __webpack_require__(/*! ./ftc */ "bRkU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_151__fuel__ = __webpack_require__(/*! ./fuel */ "jzNG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_152__fun__ = __webpack_require__(/*! ./fun */ "r21l");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_153__game__ = __webpack_require__(/*! ./game */ "bk9O");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_154__gas__ = __webpack_require__(/*! ./gas */ "Curs");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_155__gbp__ = __webpack_require__(/*! ./gbp */ "AjzI");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_156__gbx__ = __webpack_require__(/*! ./gbx */ "zzoV");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_157__gbyte__ = __webpack_require__(/*! ./gbyte */ "6Fx9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_158__generic__ = __webpack_require__(/*! ./generic */ "EPAp");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_159__gin__ = __webpack_require__(/*! ./gin */ "2b4n");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_160__glxt__ = __webpack_require__(/*! ./glxt */ "dCk2");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_161__gmr__ = __webpack_require__(/*! ./gmr */ "YoTa");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_162__gno__ = __webpack_require__(/*! ./gno */ "ym6K");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_163__gnt__ = __webpack_require__(/*! ./gnt */ "VANy");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_164__gold__ = __webpack_require__(/*! ./gold */ "ftRV");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_165__grc__ = __webpack_require__(/*! ./grc */ "eUMz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_166__grin__ = __webpack_require__(/*! ./grin */ "/2pm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_167__grs__ = __webpack_require__(/*! ./grs */ "Vyct");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_168__gsc__ = __webpack_require__(/*! ./gsc */ "XRFR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_169__gto__ = __webpack_require__(/*! ./gto */ "Sx6G");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_170__gup__ = __webpack_require__(/*! ./gup */ "+j/K");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_171__gusd__ = __webpack_require__(/*! ./gusd */ "GDMn");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_172__gvt__ = __webpack_require__(/*! ./gvt */ "+XPM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_173__gxs__ = __webpack_require__(/*! ./gxs */ "0KCx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_174__gzr__ = __webpack_require__(/*! ./gzr */ "sMbu");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_175__hight__ = __webpack_require__(/*! ./hight */ "qxc4");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_176__hodl__ = __webpack_require__(/*! ./hodl */ "lDGA");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_177__hot__ = __webpack_require__(/*! ./hot */ "fLIG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_178__hpb__ = __webpack_require__(/*! ./hpb */ "Tz5f");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_179__hsr__ = __webpack_require__(/*! ./hsr */ "l1bq");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_180__ht__ = __webpack_require__(/*! ./ht */ "WZle");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_181__html__ = __webpack_require__(/*! ./html */ "Ms+R");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_182__huc__ = __webpack_require__(/*! ./huc */ "gryJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_183__hush__ = __webpack_require__(/*! ./hush */ "r5cm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_184__icn__ = __webpack_require__(/*! ./icn */ "sak1");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_185__icx__ = __webpack_require__(/*! ./icx */ "G/1r");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_186__ignis__ = __webpack_require__(/*! ./ignis */ "2zpD");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_187__ilk__ = __webpack_require__(/*! ./ilk */ "9oiR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_188__ink__ = __webpack_require__(/*! ./ink */ "+SSJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_189__ins__ = __webpack_require__(/*! ./ins */ "70aZ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_190__ion__ = __webpack_require__(/*! ./ion */ "v+1v");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_191__iop__ = __webpack_require__(/*! ./iop */ "irhm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_192__iost__ = __webpack_require__(/*! ./iost */ "kGm7");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_193__iotx__ = __webpack_require__(/*! ./iotx */ "bRBE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_194__iq__ = __webpack_require__(/*! ./iq */ "POvy");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_195__itc__ = __webpack_require__(/*! ./itc */ "oMH3");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_196__jnt__ = __webpack_require__(/*! ./jnt */ "CQ59");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_197__jpy__ = __webpack_require__(/*! ./jpy */ "ytGa");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_198__kcs__ = __webpack_require__(/*! ./kcs */ "/N5B");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_199__kin__ = __webpack_require__(/*! ./kin */ "f/eL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_200__kmd__ = __webpack_require__(/*! ./kmd */ "d761");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_201__knc__ = __webpack_require__(/*! ./knc */ "6sLO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_202__krb__ = __webpack_require__(/*! ./krb */ "n8yu");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_203__lbc__ = __webpack_require__(/*! ./lbc */ "ahZS");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_204__lend__ = __webpack_require__(/*! ./lend */ "xtUG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_205__link__ = __webpack_require__(/*! ./link */ "zkFx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_206__lkk__ = __webpack_require__(/*! ./lkk */ "OubD");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_207__loom__ = __webpack_require__(/*! ./loom */ "E2xZ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_208__lpt__ = __webpack_require__(/*! ./lpt */ "UnsY");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_209__lrc__ = __webpack_require__(/*! ./lrc */ "9pco");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_210__lsk__ = __webpack_require__(/*! ./lsk */ "TYvN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_211__ltc__ = __webpack_require__(/*! ./ltc */ "FW7H");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_212__lun__ = __webpack_require__(/*! ./lun */ "kMEs");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_213__maid__ = __webpack_require__(/*! ./maid */ "7mc8");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_214__mana__ = __webpack_require__(/*! ./mana */ "FxgV");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_215__mcap__ = __webpack_require__(/*! ./mcap */ "NP69");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_216__mco__ = __webpack_require__(/*! ./mco */ "8MrT");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_217__mda__ = __webpack_require__(/*! ./mda */ "PcHZ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_218__mds__ = __webpack_require__(/*! ./mds */ "1C5g");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_219__med__ = __webpack_require__(/*! ./med */ "ji6n");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_220__meetone__ = __webpack_require__(/*! ./meetone */ "IVh/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_221__miota__ = __webpack_require__(/*! ./miota */ "a4aG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_222__mith__ = __webpack_require__(/*! ./mith */ "ZsPm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_223__mkr__ = __webpack_require__(/*! ./mkr */ "qjNP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_224__mln__ = __webpack_require__(/*! ./mln */ "7333");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_225__mnx__ = __webpack_require__(/*! ./mnx */ "fecL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_226__mnz__ = __webpack_require__(/*! ./mnz */ "T2pP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_227__moac__ = __webpack_require__(/*! ./moac */ "sYP5");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_228__mod__ = __webpack_require__(/*! ./mod */ "8eEz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_229__mona__ = __webpack_require__(/*! ./mona */ "jvcQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_230__msr__ = __webpack_require__(/*! ./msr */ "ucAt");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_231__mth__ = __webpack_require__(/*! ./mth */ "PQ6C");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_232__mtl__ = __webpack_require__(/*! ./mtl */ "/nGs");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_233__music__ = __webpack_require__(/*! ./music */ "34Nj");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_234__mzc__ = __webpack_require__(/*! ./mzc */ "rza6");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_235__nano__ = __webpack_require__(/*! ./nano */ "ewxM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_236__nas__ = __webpack_require__(/*! ./nas */ "/dEf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_237__nav__ = __webpack_require__(/*! ./nav */ "SCA0");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_238__ncash__ = __webpack_require__(/*! ./ncash */ "H8D0");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_239__ndz__ = __webpack_require__(/*! ./ndz */ "6pI9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_240__nebl__ = __webpack_require__(/*! ./nebl */ "OiQM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_241__neo__ = __webpack_require__(/*! ./neo */ "kc2X");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_242__neos__ = __webpack_require__(/*! ./neos */ "I5pX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_243__neu__ = __webpack_require__(/*! ./neu */ "qw08");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_244__nexo__ = __webpack_require__(/*! ./nexo */ "Krxx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_245__ngc__ = __webpack_require__(/*! ./ngc */ "fOJh");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_246__nio__ = __webpack_require__(/*! ./nio */ "O772");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_247__nlc2__ = __webpack_require__(/*! ./nlc2 */ "JGsE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_248__nlg__ = __webpack_require__(/*! ./nlg */ "B/wV");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_249__nmc__ = __webpack_require__(/*! ./nmc */ "tJKO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_250__npxs__ = __webpack_require__(/*! ./npxs */ "fRQO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_251__nuls__ = __webpack_require__(/*! ./nuls */ "oqVq");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_252__nxs__ = __webpack_require__(/*! ./nxs */ "ANM4");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_253__nxt__ = __webpack_require__(/*! ./nxt */ "pMA1");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_254__oax__ = __webpack_require__(/*! ./oax */ "6sHc");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_255__ok__ = __webpack_require__(/*! ./ok */ "rwC7");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_256__omg__ = __webpack_require__(/*! ./omg */ "7WtJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_257__omni__ = __webpack_require__(/*! ./omni */ "DK6z");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_258__ong__ = __webpack_require__(/*! ./ong */ "jYtf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_259__ont__ = __webpack_require__(/*! ./ont */ "AAm9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_260__oot__ = __webpack_require__(/*! ./oot */ "eniR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_261__ost__ = __webpack_require__(/*! ./ost */ "lL4V");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_262__ox__ = __webpack_require__(/*! ./ox */ "J+yo");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_263__part__ = __webpack_require__(/*! ./part */ "RnzS");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_264__pasc__ = __webpack_require__(/*! ./pasc */ "GQyD");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_265__pasl__ = __webpack_require__(/*! ./pasl */ "0dju");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_266__pax__ = __webpack_require__(/*! ./pax */ "0/Tl");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_267__pay__ = __webpack_require__(/*! ./pay */ "3ziN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_268__payx__ = __webpack_require__(/*! ./payx */ "Pu1o");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_269__pink__ = __webpack_require__(/*! ./pink */ "Cerz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_270__pirl__ = __webpack_require__(/*! ./pirl */ "FpyU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_271__pivx__ = __webpack_require__(/*! ./pivx */ "SAcJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_272__plr__ = __webpack_require__(/*! ./plr */ "VkGn");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_273__poa__ = __webpack_require__(/*! ./poa */ "+KoH");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_274__poe__ = __webpack_require__(/*! ./poe */ "icOs");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_275__polis__ = __webpack_require__(/*! ./polis */ "eYVH");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_276__poly__ = __webpack_require__(/*! ./poly */ "gbNV");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_277__pot__ = __webpack_require__(/*! ./pot */ "JlcD");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_278__powr__ = __webpack_require__(/*! ./powr */ "VtW8");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_279__ppc__ = __webpack_require__(/*! ./ppc */ "pY+E");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_280__ppp__ = __webpack_require__(/*! ./ppp */ "jZFQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_281__ppt__ = __webpack_require__(/*! ./ppt */ "wnAX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_282__pre__ = __webpack_require__(/*! ./pre */ "UaGn");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_283__prl__ = __webpack_require__(/*! ./prl */ "u7PA");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_284__pungo__ = __webpack_require__(/*! ./pungo */ "m3a+");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_285__pura__ = __webpack_require__(/*! ./pura */ "YOYW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_286__qash__ = __webpack_require__(/*! ./qash */ "lB68");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_287__qiwi__ = __webpack_require__(/*! ./qiwi */ "/ekM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_288__qlc__ = __webpack_require__(/*! ./qlc */ "KxqC");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_289__qrl__ = __webpack_require__(/*! ./qrl */ "P2AB");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_290__qsp__ = __webpack_require__(/*! ./qsp */ "01Fu");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_291__qtum__ = __webpack_require__(/*! ./qtum */ "TPij");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_292__r__ = __webpack_require__(/*! ./r */ "ldnR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_293__rads__ = __webpack_require__(/*! ./rads */ "Olk0");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_294__rap__ = __webpack_require__(/*! ./rap */ "mxwP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_295__rcn__ = __webpack_require__(/*! ./rcn */ "kuiU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_296__rdd__ = __webpack_require__(/*! ./rdd */ "GSxG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_297__rdn__ = __webpack_require__(/*! ./rdn */ "We87");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_298__rep__ = __webpack_require__(/*! ./rep */ "6sNJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_299__req__ = __webpack_require__(/*! ./req */ "7tVH");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_300__rhoc__ = __webpack_require__(/*! ./rhoc */ "TFsn");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_301__ric__ = __webpack_require__(/*! ./ric */ "OB/m");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_302__rise__ = __webpack_require__(/*! ./rise */ "VEDR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_303__rlc__ = __webpack_require__(/*! ./rlc */ "iOOw");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_304__rpx__ = __webpack_require__(/*! ./rpx */ "ukJE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_305__rub__ = __webpack_require__(/*! ./rub */ "e3jQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_306__rvn__ = __webpack_require__(/*! ./rvn */ "wsiB");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_307__ryo__ = __webpack_require__(/*! ./ryo */ "fhva");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_308__safe__ = __webpack_require__(/*! ./safe */ "9twR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_309__salt__ = __webpack_require__(/*! ./salt */ "cIjQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_310__san__ = __webpack_require__(/*! ./san */ "RHqp");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_311__sbd__ = __webpack_require__(/*! ./sbd */ "3ITj");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_312__sberbank__ = __webpack_require__(/*! ./sberbank */ "Dj4C");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_313__sc__ = __webpack_require__(/*! ./sc */ "KVNE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_314__shift__ = __webpack_require__(/*! ./shift */ "/C92");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_315__sib__ = __webpack_require__(/*! ./sib */ "Nn7V");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_316__sky__ = __webpack_require__(/*! ./sky */ "k08I");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_317__slr__ = __webpack_require__(/*! ./slr */ "QXVz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_318__sls__ = __webpack_require__(/*! ./sls */ "Ygn9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_319__smart__ = __webpack_require__(/*! ./smart */ "RFdi");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_320__sngls__ = __webpack_require__(/*! ./sngls */ "9tzd");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_321__snm__ = __webpack_require__(/*! ./snm */ "NvwE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_322__snt__ = __webpack_require__(/*! ./snt */ "+f0H");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_323__soc__ = __webpack_require__(/*! ./soc */ "lHF8");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_324__spnk__ = __webpack_require__(/*! ./spnk */ "PeKf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_325__sphtx__ = __webpack_require__(/*! ./sphtx */ "bdue");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_326__srn__ = __webpack_require__(/*! ./srn */ "F5wB");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_327__stak__ = __webpack_require__(/*! ./stak */ "oGKv");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_328__start__ = __webpack_require__(/*! ./start */ "uoNQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_329__steem__ = __webpack_require__(/*! ./steem */ "Lrx/");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_330__storj__ = __webpack_require__(/*! ./storj */ "/71M");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_331__storm__ = __webpack_require__(/*! ./storm */ "O4h9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_332__stq__ = __webpack_require__(/*! ./stq */ "WyoM");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_333__strat__ = __webpack_require__(/*! ./strat */ "VBH2");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_334__sub__ = __webpack_require__(/*! ./sub */ "U1LX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_335__sumo__ = __webpack_require__(/*! ./sumo */ "nhib");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_336__sys__ = __webpack_require__(/*! ./sys */ "a7NE");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_337__taas__ = __webpack_require__(/*! ./taas */ "eBUG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_338__tau__ = __webpack_require__(/*! ./tau */ "//Yf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_339__tbx__ = __webpack_require__(/*! ./tbx */ "5bIN");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_340__tel__ = __webpack_require__(/*! ./tel */ "TWwh");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_341__ten__ = __webpack_require__(/*! ./ten */ "UDjD");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_342__tern__ = __webpack_require__(/*! ./tern */ "+RLW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_343__theta__ = __webpack_require__(/*! ./theta */ "OxVD");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_344__tix__ = __webpack_require__(/*! ./tix */ "ciRL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_345__tkn__ = __webpack_require__(/*! ./tkn */ "KBfC");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_346__tks__ = __webpack_require__(/*! ./tks */ "ujvx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_347__tnb__ = __webpack_require__(/*! ./tnb */ "wTt6");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_348__tnc__ = __webpack_require__(/*! ./tnc */ "JuvP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_349__tnt__ = __webpack_require__(/*! ./tnt */ "05DC");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_350__tomo__ = __webpack_require__(/*! ./tomo */ "aq4Q");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_351__tpay__ = __webpack_require__(/*! ./tpay */ "waGi");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_352__trig__ = __webpack_require__(/*! ./trig */ "7V9g");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_353__trtl__ = __webpack_require__(/*! ./trtl */ "BGAn");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_354__trx__ = __webpack_require__(/*! ./trx */ "hVwi");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_355__tusd__ = __webpack_require__(/*! ./tusd */ "2crP");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_356__tzc__ = __webpack_require__(/*! ./tzc */ "AsJz");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_357__ubq__ = __webpack_require__(/*! ./ubq */ "K/PY");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_358__unity__ = __webpack_require__(/*! ./unity */ "hJQ8");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_359__usd__ = __webpack_require__(/*! ./usd */ "d873");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_360__usdc__ = __webpack_require__(/*! ./usdc */ "qNsQ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_361__usdt__ = __webpack_require__(/*! ./usdt */ "c6E8");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_362__utk__ = __webpack_require__(/*! ./utk */ "TroT");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_363__veri__ = __webpack_require__(/*! ./veri */ "49F2");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_364__vet__ = __webpack_require__(/*! ./vet */ "cCPw");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_365__via__ = __webpack_require__(/*! ./via */ "57U+");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_366__vib__ = __webpack_require__(/*! ./vib */ "ZOMx");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_367__vibe__ = __webpack_require__(/*! ./vibe */ "1pIw");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_368__vivo__ = __webpack_require__(/*! ./vivo */ "mlig");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_369__vrc__ = __webpack_require__(/*! ./vrc */ "13OL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_370__vrsc__ = __webpack_require__(/*! ./vrsc */ "Vq6y");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_371__vtc__ = __webpack_require__(/*! ./vtc */ "tRT7");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_372__vtho__ = __webpack_require__(/*! ./vtho */ "CEzJ");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_373__wabi__ = __webpack_require__(/*! ./wabi */ "vTE9");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_374__wan__ = __webpack_require__(/*! ./wan */ "5GWo");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_375__waves__ = __webpack_require__(/*! ./waves */ "dCHs");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_376__wax__ = __webpack_require__(/*! ./wax */ "CVxC");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_377__wgr__ = __webpack_require__(/*! ./wgr */ "m7Be");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_378__wicc__ = __webpack_require__(/*! ./wicc */ "yhRp");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_379__wings__ = __webpack_require__(/*! ./wings */ "Etm1");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_380__wpr__ = __webpack_require__(/*! ./wpr */ "Ls7i");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_381__wtc__ = __webpack_require__(/*! ./wtc */ "tiLB");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_382__x__ = __webpack_require__(/*! ./x */ "S1nb");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_383__xas__ = __webpack_require__(/*! ./xas */ "aPbi");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_384__xbc__ = __webpack_require__(/*! ./xbc */ "/pDy");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_385__xby__ = __webpack_require__(/*! ./xby */ "yUyr");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_386__xcp__ = __webpack_require__(/*! ./xcp */ "wRYI");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_387__xdn__ = __webpack_require__(/*! ./xdn */ "q9VX");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_388__xem__ = __webpack_require__(/*! ./xem */ "fKRL");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_389__xin__ = __webpack_require__(/*! ./xin */ "tqlj");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_390__xlm__ = __webpack_require__(/*! ./xlm */ "Bco6");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_391__xmcc__ = __webpack_require__(/*! ./xmcc */ "Svvh");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_392__xmg__ = __webpack_require__(/*! ./xmg */ "IF2o");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_393__xmo__ = __webpack_require__(/*! ./xmo */ "wowO");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_394__xmr__ = __webpack_require__(/*! ./xmr */ "ou+M");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_395__xmy__ = __webpack_require__(/*! ./xmy */ "bxRk");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_396__xp__ = __webpack_require__(/*! ./xp */ "3qTY");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_397__xpa__ = __webpack_require__(/*! ./xpa */ "ORQW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_398__xpm__ = __webpack_require__(/*! ./xpm */ "AU93");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_399__xrp__ = __webpack_require__(/*! ./xrp */ "blBR");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_400__xsg__ = __webpack_require__(/*! ./xsg */ "B+zj");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_401__xtz__ = __webpack_require__(/*! ./xtz */ "aRPK");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_402__xuc__ = __webpack_require__(/*! ./xuc */ "KX8+");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_403__xvc__ = __webpack_require__(/*! ./xvc */ "Xxc6");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_404__xvg__ = __webpack_require__(/*! ./xvg */ "0pjy");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_405__xzc__ = __webpack_require__(/*! ./xzc */ "RzcW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_406__yoyow__ = __webpack_require__(/*! ./yoyow */ "juRA");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_407__zcl__ = __webpack_require__(/*! ./zcl */ "vcxU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_408__zec__ = __webpack_require__(/*! ./zec */ "1gjK");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_409__zel__ = __webpack_require__(/*! ./zel */ "LBfm");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_410__zen__ = __webpack_require__(/*! ./zen */ "C0Jo");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_411__zest__ = __webpack_require__(/*! ./zest */ "QarG");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_412__zil__ = __webpack_require__(/*! ./zil */ "RlCf");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_413__zla__ = __webpack_require__(/*! ./zla */ "VmEW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_414__zrx__ = __webpack_require__(/*! ./zrx */ "y571");
/* unused harmony reexport Abt */
/* unused harmony reexport Act */
/* unused harmony reexport Actn */
/* unused harmony reexport Ada */
/* unused harmony reexport Add */
/* unused harmony reexport Adx */
/* unused harmony reexport Ae */
/* unused harmony reexport Aeon */
/* unused harmony reexport Aeur */
/* unused harmony reexport Agi */
/* unused harmony reexport Agrs */
/* unused harmony reexport Aion */
/* unused harmony reexport Amb */
/* unused harmony reexport Amp */
/* unused harmony reexport Ant */
/* unused harmony reexport Apex */
/* unused harmony reexport Appc */
/* unused harmony reexport Ardr */
/* unused harmony reexport Arg */
/* unused harmony reexport Ark */
/* unused harmony reexport Arn */
/* unused harmony reexport Ary */
/* unused harmony reexport Ast */
/* unused harmony reexport Atm */
/* unused harmony reexport Atom */
/* unused harmony reexport Audr */
/* unused harmony reexport Auto */
/* unused harmony reexport Aywa */
/* unused harmony reexport Bab */
/* unused harmony reexport Bat */
/* unused harmony reexport Bay */
/* unused harmony reexport Bcbc */
/* unused harmony reexport Bcc */
/* unused harmony reexport Bcd */
/* unused harmony reexport Bch */
/* unused harmony reexport Bcio */
/* unused harmony reexport Bcn */
/* unused harmony reexport Bco */
/* unused harmony reexport Bcpt */
/* unused harmony reexport Bdl */
/* unused harmony reexport Beam */
/* unused harmony reexport Bela */
/* unused harmony reexport Bix */
/* unused harmony reexport Blcn */
/* unused harmony reexport Blk */
/* unused harmony reexport Block */
/* unused harmony reexport Blz */
/* unused harmony reexport Bnb */
/* unused harmony reexport Bnt */
/* unused harmony reexport Bnty */
/* unused harmony reexport Booty */
/* unused harmony reexport Bos */
/* unused harmony reexport Bpt */
/* unused harmony reexport Bq */
/* unused harmony reexport Brd */
/* unused harmony reexport Bsd */
/* unused harmony reexport Bsv */
/* unused harmony reexport Btc */
/* unused harmony reexport Btcd */
/* unused harmony reexport Btch */
/* unused harmony reexport Btcp */
/* unused harmony reexport Btcz */
/* unused harmony reexport Btdx */
/* unused harmony reexport Btg */
/* unused harmony reexport Btm */
/* unused harmony reexport Bts */
/* unused harmony reexport Btt */
/* unused harmony reexport Btx */
/* unused harmony reexport Burst */
/* unused harmony reexport Call */
/* unused harmony reexport Cc */
/* unused harmony reexport Cdn */
/* unused harmony reexport Cenz */
/* unused harmony reexport Chain */
/* unused harmony reexport Chat */
/* unused harmony reexport Chips */
/* unused harmony reexport Cix */
/* unused harmony reexport Clam */
/* unused harmony reexport Cloak */
/* unused harmony reexport Cmm */
/* unused harmony reexport Cnd */
/* unused harmony reexport Cmt */
/* unused harmony reexport Cnx */
/* unused harmony reexport Cny */
/* unused harmony reexport Cob */
/* unused harmony reexport Coqui */
/* unused harmony reexport Colx */
/* unused harmony reexport Crpt */
/* unused harmony reexport Crw */
/* unused harmony reexport Cs */
/* unused harmony reexport Ctr */
/* unused harmony reexport Ctxc */
/* unused harmony reexport Cvc */
/* unused harmony reexport Cred */
/* unused harmony reexport Cdt */
/* unused harmony reexport Dai */
/* unused harmony reexport Dash */
/* unused harmony reexport Dat */
/* unused harmony reexport Data */
/* unused harmony reexport Dbc */
/* unused harmony reexport Dcn */
/* unused harmony reexport Dcr */
/* unused harmony reexport Deez */
/* unused harmony reexport Dent */
/* unused harmony reexport Dew */
/* unused harmony reexport Dgb */
/* unused harmony reexport Dgd */
/* unused harmony reexport Dlt */
/* unused harmony reexport Dnt */
/* unused harmony reexport Dock */
/* unused harmony reexport Doge */
/* unused harmony reexport Drgn */
/* unused harmony reexport Drop */
/* unused harmony reexport Dta */
/* unused harmony reexport Dth */
/* unused harmony reexport Dtr */
/* unused harmony reexport Ebst */
/* unused harmony reexport Eca */
/* unused harmony reexport Edg */
/* unused harmony reexport Edo */
/* unused harmony reexport Edoge */
/* unused harmony reexport Ela */
/* unused harmony reexport Elf */
/* unused harmony reexport Elix */
/* unused harmony reexport Ella */
/* unused harmony reexport Emc */
/* unused harmony reexport Emc2 */
/* unused harmony reexport Eng */
/* unused harmony reexport Enj */
/* unused harmony reexport Entrp */
/* unused harmony reexport Eon */
/* unused harmony reexport Eop */
/* unused harmony reexport Eos */
/* unused harmony reexport Eqli */
/* unused harmony reexport Equa */
/* unused harmony reexport Etc */
/* unused harmony reexport Eth */
/* unused harmony reexport Ethos */
/* unused harmony reexport Etn */
/* unused harmony reexport Etp */
/* unused harmony reexport Eur */
/* unused harmony reexport Evx */
/* unused harmony reexport Exmo */
/* unused harmony reexport Exp */
/* unused harmony reexport Fair */
/* unused harmony reexport Fct */
/* unused harmony reexport Fil */
/* unused harmony reexport Fjc */
/* unused harmony reexport Fldc */
/* unused harmony reexport Flo */
/* unused harmony reexport Fsn */
/* unused harmony reexport Ftc */
/* unused harmony reexport Fuel */
/* unused harmony reexport Fun */
/* unused harmony reexport Game */
/* unused harmony reexport Gas */
/* unused harmony reexport Gbp */
/* unused harmony reexport Gbx */
/* unused harmony reexport Gbyte */
/* unused harmony reexport Generic */
/* unused harmony reexport Gin */
/* unused harmony reexport Glxt */
/* unused harmony reexport Gmr */
/* unused harmony reexport Gno */
/* unused harmony reexport Gnt */
/* unused harmony reexport Gold */
/* unused harmony reexport Grc */
/* unused harmony reexport Grin */
/* unused harmony reexport Grs */
/* unused harmony reexport Gsc */
/* unused harmony reexport Gto */
/* unused harmony reexport Gup */
/* unused harmony reexport Gusd */
/* unused harmony reexport Gvt */
/* unused harmony reexport Gxs */
/* unused harmony reexport Gzr */
/* unused harmony reexport Hight */
/* unused harmony reexport Hodl */
/* unused harmony reexport Hot */
/* unused harmony reexport Hpb */
/* unused harmony reexport Hsr */
/* unused harmony reexport Ht */
/* unused harmony reexport Html */
/* unused harmony reexport Huc */
/* unused harmony reexport Hush */
/* unused harmony reexport Icn */
/* unused harmony reexport Icx */
/* unused harmony reexport Ignis */
/* unused harmony reexport Ilk */
/* unused harmony reexport Ink */
/* unused harmony reexport Ins */
/* unused harmony reexport Ion */
/* unused harmony reexport Iop */
/* unused harmony reexport Iost */
/* unused harmony reexport Iotx */
/* unused harmony reexport Iq */
/* unused harmony reexport Itc */
/* unused harmony reexport Jnt */
/* unused harmony reexport Jpy */
/* unused harmony reexport Kcs */
/* unused harmony reexport Kin */
/* unused harmony reexport Kmd */
/* unused harmony reexport Knc */
/* unused harmony reexport Krb */
/* unused harmony reexport Lbc */
/* unused harmony reexport Lend */
/* unused harmony reexport Link */
/* unused harmony reexport Lkk */
/* unused harmony reexport Loom */
/* unused harmony reexport Lpt */
/* unused harmony reexport Lrc */
/* unused harmony reexport Lsk */
/* unused harmony reexport Ltc */
/* unused harmony reexport Lun */
/* unused harmony reexport Maid */
/* unused harmony reexport Mana */
/* unused harmony reexport Mcap */
/* unused harmony reexport Mco */
/* unused harmony reexport Mda */
/* unused harmony reexport Mds */
/* unused harmony reexport Med */
/* unused harmony reexport Meetone */
/* unused harmony reexport Miota */
/* unused harmony reexport Mith */
/* unused harmony reexport Mkr */
/* unused harmony reexport Mln */
/* unused harmony reexport Mnx */
/* unused harmony reexport Mnz */
/* unused harmony reexport Moac */
/* unused harmony reexport Mod */
/* unused harmony reexport Mona */
/* unused harmony reexport Msr */
/* unused harmony reexport Mth */
/* unused harmony reexport Mtl */
/* unused harmony reexport Music */
/* unused harmony reexport Mzc */
/* unused harmony reexport Nano */
/* unused harmony reexport Nas */
/* unused harmony reexport Nav */
/* unused harmony reexport Ncash */
/* unused harmony reexport Ndz */
/* unused harmony reexport Nebl */
/* unused harmony reexport Neo */
/* unused harmony reexport Neos */
/* unused harmony reexport Neu */
/* unused harmony reexport Nexo */
/* unused harmony reexport Ngc */
/* unused harmony reexport Nio */
/* unused harmony reexport Nlc2 */
/* unused harmony reexport Nlg */
/* unused harmony reexport Nmc */
/* unused harmony reexport Npxs */
/* unused harmony reexport Nuls */
/* unused harmony reexport Nxs */
/* unused harmony reexport Nxt */
/* unused harmony reexport Oax */
/* unused harmony reexport Ok */
/* unused harmony reexport Omg */
/* unused harmony reexport Omni */
/* unused harmony reexport Ong */
/* unused harmony reexport Ont */
/* unused harmony reexport Oot */
/* unused harmony reexport Ost */
/* unused harmony reexport Ox */
/* unused harmony reexport Part */
/* unused harmony reexport Pasc */
/* unused harmony reexport Pasl */
/* unused harmony reexport Pax */
/* unused harmony reexport Pay */
/* unused harmony reexport Payx */
/* unused harmony reexport Pink */
/* unused harmony reexport Pirl */
/* unused harmony reexport Pivx */
/* unused harmony reexport Plr */
/* unused harmony reexport Poa */
/* unused harmony reexport Poe */
/* unused harmony reexport Polis */
/* unused harmony reexport Poly */
/* unused harmony reexport Pot */
/* unused harmony reexport Powr */
/* unused harmony reexport Ppc */
/* unused harmony reexport Ppp */
/* unused harmony reexport Ppt */
/* unused harmony reexport Pre */
/* unused harmony reexport Prl */
/* unused harmony reexport Pungo */
/* unused harmony reexport Pura */
/* unused harmony reexport Qash */
/* unused harmony reexport Qiwi */
/* unused harmony reexport Qlc */
/* unused harmony reexport Qrl */
/* unused harmony reexport Qsp */
/* unused harmony reexport Qtum */
/* unused harmony reexport R */
/* unused harmony reexport Rads */
/* unused harmony reexport Rap */
/* unused harmony reexport Rcn */
/* unused harmony reexport Rdd */
/* unused harmony reexport Rdn */
/* unused harmony reexport Rep */
/* unused harmony reexport Req */
/* unused harmony reexport Rhoc */
/* unused harmony reexport Ric */
/* unused harmony reexport Rise */
/* unused harmony reexport Rlc */
/* unused harmony reexport Rpx */
/* unused harmony reexport Rub */
/* unused harmony reexport Rvn */
/* unused harmony reexport Ryo */
/* unused harmony reexport Safe */
/* unused harmony reexport Salt */
/* unused harmony reexport San */
/* unused harmony reexport Sbd */
/* unused harmony reexport Sberbank */
/* unused harmony reexport Sc */
/* unused harmony reexport Shift */
/* unused harmony reexport Sib */
/* unused harmony reexport Sky */
/* unused harmony reexport Slr */
/* unused harmony reexport Sls */
/* unused harmony reexport Smart */
/* unused harmony reexport Sngls */
/* unused harmony reexport Snm */
/* unused harmony reexport Snt */
/* unused harmony reexport Soc */
/* unused harmony reexport Spnk */
/* unused harmony reexport Sphtx */
/* unused harmony reexport Srn */
/* unused harmony reexport Stak */
/* unused harmony reexport Start */
/* unused harmony reexport Steem */
/* unused harmony reexport Storj */
/* unused harmony reexport Storm */
/* unused harmony reexport Stq */
/* unused harmony reexport Strat */
/* unused harmony reexport Sub */
/* unused harmony reexport Sumo */
/* unused harmony reexport Sys */
/* unused harmony reexport Taas */
/* unused harmony reexport Tau */
/* unused harmony reexport Tbx */
/* unused harmony reexport Tel */
/* unused harmony reexport Ten */
/* unused harmony reexport Tern */
/* unused harmony reexport Theta */
/* unused harmony reexport Tix */
/* unused harmony reexport Tkn */
/* unused harmony reexport Tks */
/* unused harmony reexport Tnb */
/* unused harmony reexport Tnc */
/* unused harmony reexport Tnt */
/* unused harmony reexport Tomo */
/* unused harmony reexport Tpay */
/* unused harmony reexport Trig */
/* unused harmony reexport Trtl */
/* unused harmony reexport Trx */
/* unused harmony reexport Tusd */
/* unused harmony reexport Tzc */
/* unused harmony reexport Ubq */
/* unused harmony reexport Unity */
/* unused harmony reexport Usd */
/* unused harmony reexport Usdc */
/* unused harmony reexport Usdt */
/* unused harmony reexport Utk */
/* unused harmony reexport Veri */
/* unused harmony reexport Vet */
/* unused harmony reexport Via */
/* unused harmony reexport Vib */
/* unused harmony reexport Vibe */
/* unused harmony reexport Vivo */
/* unused harmony reexport Vrc */
/* unused harmony reexport Vrsc */
/* unused harmony reexport Vtc */
/* unused harmony reexport Vtho */
/* unused harmony reexport Wabi */
/* unused harmony reexport Wan */
/* unused harmony reexport Waves */
/* unused harmony reexport Wax */
/* unused harmony reexport Wgr */
/* unused harmony reexport Wicc */
/* unused harmony reexport Wings */
/* unused harmony reexport Wpr */
/* unused harmony reexport Wtc */
/* unused harmony reexport X */
/* unused harmony reexport Xas */
/* unused harmony reexport Xbc */
/* unused harmony reexport Xby */
/* unused harmony reexport Xcp */
/* unused harmony reexport Xdn */
/* unused harmony reexport Xem */
/* unused harmony reexport Xin */
/* unused harmony reexport Xlm */
/* unused harmony reexport Xmcc */
/* unused harmony reexport Xmg */
/* unused harmony reexport Xmo */
/* unused harmony reexport Xmr */
/* unused harmony reexport Xmy */
/* unused harmony reexport Xp */
/* unused harmony reexport Xpa */
/* unused harmony reexport Xpm */
/* unused harmony reexport Xrp */
/* unused harmony reexport Xsg */
/* unused harmony reexport Xtz */
/* unused harmony reexport Xuc */
/* unused harmony reexport Xvc */
/* unused harmony reexport Xvg */
/* unused harmony reexport Xzc */
/* unused harmony reexport Yoyow */
/* unused harmony reexport Zcl */
/* unused harmony reexport Zec */
/* unused harmony reexport Zel */
/* unused harmony reexport Zen */
/* unused harmony reexport Zest */
/* unused harmony reexport Zil */
/* unused harmony reexport Zla */
/* unused harmony reexport Zrx */





























// B icons










































// C icons



























// D icons






















// E icons





























// F icons











// G icons






















// H icons









// I icons













// J icons



// K icons






// L icons











// M icons
























// N icons




















// O icons










// P icons
























// Q icons







// R icons

















// S icons






























// T icons





















// U icons







// V icons










// W icons










// X icons

























// Y icons


// Z icons









/* harmony default export */ __webpack_exports__["a"] = ([
  __WEBPACK_IMPORTED_MODULE_0__abt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__act__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_2__actn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_3__ada__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_4__add__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_5__adx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_6__ae__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_7__aeon__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_8__aeur__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_9__agi__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_10__agrs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_11__aion__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_12__amb__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_13__amp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_14__ant__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_15__apex__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_16__appc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_17__ardr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_18__arg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_19__ark__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_20__arn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_21__ary__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_22__ast__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_23__atm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_24__atom__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_25__audr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_26__auto__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_27__aywa__["a" /* default */],
  // B starts
  __WEBPACK_IMPORTED_MODULE_28__bab__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_29__bat__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_30__bay__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_31__bcbc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_32__bcc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_33__bcd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_34__bch__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_35__bcio__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_36__bcn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_37__bco__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_38__bcpt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_39__bdl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_40__beam__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_41__bela__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_42__bix__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_43__blcn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_44__blk__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_45__block__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_46__blz__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_47__bnb__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_48__bnt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_49__bnty__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_50__booty__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_51__bos__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_52__bpt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_53__bq__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_54__brd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_55__bsd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_56__bsv__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_57__btc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_58__btcd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_59__btch__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_60__btcp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_61__btcz__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_54__brd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_62__btg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_63__btm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_64__bts__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_65__btt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_66__btx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_67__burst__["a" /* default */],
  // C starts
  __WEBPACK_IMPORTED_MODULE_68__call__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_69__cc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_70__cdn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_72__cenz__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_73__chain__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_74__chat__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_75__chips__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_76__cix__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_77__clam__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_78__cloak__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_79__cmm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_81__cnd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_80__cmt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_82__cnx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_83__cny__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_84__cob__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_86__coqui__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_85__colx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_88__crpt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_89__crw__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_90__cs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_91__ctr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_92__ctxc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_93__cvc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_87__cred__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_71__cdt__["a" /* default */],
  // D starts
  __WEBPACK_IMPORTED_MODULE_94__dai__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_95__dash__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_96__dat__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_97__data__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_98__dbc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_99__dcn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_100__dcr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_101__deez__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_102__dent__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_103__dew__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_104__dgb__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_105__dgd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_106__dlt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_107__dnt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_108__dock__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_109__doge__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_110__drgn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_111__drop__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_112__dta__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_113__dth__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_114__dtr__["a" /* default */],
  // E starts
  __WEBPACK_IMPORTED_MODULE_115__ebst__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_116__eca__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_117__edg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_118__edo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_119__edoge__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_120__ela__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_121__elf__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_122__elix__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_123__ella__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_124__emc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_125__emc2__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_126__eng__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_127__enj__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_128__entrp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_129__eon__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_130__eop__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_131__eos__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_132__eqli__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_133__equa__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_134__etc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_135__eth__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_136__ethos__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_137__etn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_138__etp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_139__eur__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_140__evx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_141__exmo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_142__exp__["a" /* default */],

  // f starts
  __WEBPACK_IMPORTED_MODULE_143__fair__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_144__fct__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_145__fil__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_146__fjc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_147__fldc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_148__flo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_149__fsn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_150__ftc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_151__fuel__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_152__fun__["a" /* default */],
  // G starts
  __WEBPACK_IMPORTED_MODULE_153__game__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_154__gas__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_155__gbp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_156__gbx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_157__gbyte__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_158__generic__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_159__gin__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_160__glxt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_161__gmr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_162__gno__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_163__gnt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_164__gold__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_165__grc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_166__grin__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_167__grs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_168__gsc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_169__gto__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_170__gup__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_171__gusd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_172__gvt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_173__gxs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_174__gzr__["a" /* default */],
  // H starts
  __WEBPACK_IMPORTED_MODULE_175__hight__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_176__hodl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_177__hot__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_178__hpb__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_179__hsr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_180__ht__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_181__html__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_182__huc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_183__hush__["a" /* default */],
  // I starts
  __WEBPACK_IMPORTED_MODULE_184__icn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_185__icx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_186__ignis__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_187__ilk__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_188__ink__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_189__ins__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_190__ion__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_191__iop__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_192__iost__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_193__iotx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_194__iq__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_195__itc__["a" /* default */],
  // J starts
  __WEBPACK_IMPORTED_MODULE_196__jnt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_197__jpy__["a" /* default */],
  // K starts
  __WEBPACK_IMPORTED_MODULE_198__kcs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_199__kin__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_200__kmd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_201__knc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_202__krb__["a" /* default */],
  // L starts
  __WEBPACK_IMPORTED_MODULE_203__lbc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_204__lend__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_205__link__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_206__lkk__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_207__loom__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_208__lpt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_209__lrc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_210__lsk__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_211__ltc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_212__lun__["a" /* default */],
  // M starts
  __WEBPACK_IMPORTED_MODULE_213__maid__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_214__mana__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_215__mcap__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_216__mco__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_217__mda__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_218__mds__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_219__med__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_220__meetone__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_221__miota__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_222__mith__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_223__mkr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_224__mln__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_225__mnx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_226__mnz__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_227__moac__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_228__mod__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_229__mona__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_230__msr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_231__mth__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_232__mtl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_233__music__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_234__mzc__["a" /* default */],
  // N starts
  __WEBPACK_IMPORTED_MODULE_235__nano__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_236__nas__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_237__nav__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_238__ncash__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_239__ndz__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_240__nebl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_241__neo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_242__neos__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_243__neu__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_244__nexo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_245__ngc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_246__nio__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_247__nlc2__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_248__nlg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_249__nmc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_250__npxs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_251__nuls__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_252__nxs__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_253__nxt__["a" /* default */],
  // O starts
  __WEBPACK_IMPORTED_MODULE_254__oax__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_255__ok__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_256__omg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_257__omni__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_258__ong__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_259__ont__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_260__oot__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_261__ost__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_262__ox__["a" /* default */],
  //P Starts,
  __WEBPACK_IMPORTED_MODULE_263__part__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_264__pasc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_265__pasl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_266__pax__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_267__pay__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_268__payx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_269__pink__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_270__pirl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_271__pivx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_272__plr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_273__poa__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_274__poe__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_275__polis__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_276__poly__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_277__pot__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_278__powr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_279__ppc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_280__ppp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_281__ppt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_282__pre__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_283__prl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_284__pungo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_285__pura__["a" /* default */],
  //Q Starts,
  __WEBPACK_IMPORTED_MODULE_286__qash__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_287__qiwi__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_288__qlc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_289__qrl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_290__qsp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_291__qtum__["a" /* default */],
  // R starts
  __WEBPACK_IMPORTED_MODULE_292__r__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_293__rads__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_294__rap__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_295__rcn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_296__rdd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_297__rdn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_298__rep__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_299__req__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_300__rhoc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_301__ric__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_302__rise__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_303__rlc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_304__rpx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_305__rub__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_306__rvn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_307__ryo__["a" /* default */],
  // S starts
  __WEBPACK_IMPORTED_MODULE_308__safe__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_309__salt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_310__san__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_311__sbd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_312__sberbank__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_313__sc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_314__shift__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_315__sib__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_316__sky__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_317__slr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_318__sls__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_319__smart__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_320__sngls__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_321__snm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_322__snt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_323__soc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_324__spnk__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_325__sphtx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_326__srn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_327__stak__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_328__start__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_329__steem__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_330__storj__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_331__storm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_332__stq__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_333__strat__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_334__sub__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_335__sumo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_336__sys__["a" /* default */],
  // T starts
  __WEBPACK_IMPORTED_MODULE_337__taas__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_338__tau__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_339__tbx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_340__tel__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_341__ten__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_342__tern__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_343__theta__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_344__tix__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_345__tkn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_346__tks__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_347__tnb__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_348__tnc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_349__tnt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_350__tomo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_351__tpay__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_352__trig__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_353__trtl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_354__trx__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_355__tusd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_356__tzc__["a" /* default */],
  // U starts
  __WEBPACK_IMPORTED_MODULE_357__ubq__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_358__unity__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_359__usd__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_360__usdc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_361__usdt__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_362__utk__["a" /* default */],
  // V starts
  __WEBPACK_IMPORTED_MODULE_363__veri__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_364__vet__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_365__via__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_366__vib__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_367__vibe__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_368__vivo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_369__vrc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_370__vrsc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_371__vtc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_372__vtho__["a" /* default */],
  // W starts
  __WEBPACK_IMPORTED_MODULE_373__wabi__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_374__wan__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_375__waves__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_376__wax__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_377__wgr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_378__wicc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_379__wings__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_380__wpr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_381__wtc__["a" /* default */],
  // X starts
  __WEBPACK_IMPORTED_MODULE_382__x__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_383__xas__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_384__xbc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_385__xby__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_386__xcp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_387__xdn__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_388__xem__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_389__xin__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_390__xlm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_391__xmcc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_392__xmg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_393__xmo__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_394__xmr__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_395__xmy__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_396__xp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_397__xpa__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_398__xpm__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_399__xrp__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_400__xsg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_401__xtz__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_402__xuc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_403__xvc__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_404__xvg__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_405__xzc__["a" /* default */],
  // Y starts
  __WEBPACK_IMPORTED_MODULE_406__yoyow__["a" /* default */],
  // Z starts
  __WEBPACK_IMPORTED_MODULE_407__zcl__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_408__zec__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_409__zel__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_410__zen__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_411__zest__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_412__zil__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_413__zla__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_414__zrx__["a" /* default */]
]);


/***/ }),

/***/ "7IJI":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/clam.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Clam = {
  symbol: 'clam',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.81-24.13c0 .883-.028 4.005-.375 7.153-.327 2.967-.846 6.223-.965 6.954.15.014.292.037.426.067.286-.575 1.693-3.459 2.338-5.626.738-2.48 1.164-5.788 1.176-7.126l.002-.241c-.245-.373-.779-1.068-1.47-1.254-.604-.162-.955-.09-1.133-.016zm2.899 1.424c-.013 1.355-.443 4.701-1.189 7.207-.633 2.129-1.99 4.933-2.33 5.62.146.046.288.101.425.167.365-.47 2.038-2.663 3.086-4.645 1.235-2.34 2.383-5.442 2.538-6.044l.064-.247c-.137-.418-.465-1.196-1.101-1.605-.657-.423-1.232-.47-1.493-.464zm.257 8.484c-1.033 1.955-2.665 4.108-3.086 4.653.174.104.337.224.488.36.448-.435 2.317-2.267 3.561-3.811 1.436-1.783 2.863-4.285 3.097-4.828l.121-.282c-.033-.36-.135-.93-.444-1.352-.362-.494-.918-.743-1.177-.837-.196.745-1.384 3.87-2.56 6.097zm-9.961-8.252c.112.877.644 3.657 1.572 6.652.832 2.685 2.07 5.365 2.348 5.956.144-.047.292-.084.441-.11-.11-.64-.676-4.004-1.027-7.167-.384-3.457-.54-6.386-.561-6.981l-.002-.059c-.261-.076-.845-.17-1.594.173-.69.315-1.05.907-1.212 1.262l.035.274zm3.071-1.66c.021.592.177 3.511.56 6.96.351 3.168.92 6.54 1.026 7.155.143-.014.286-.022.43-.022l.078.002c.108-.664.637-3.967.968-6.97.346-3.133.373-6.242.373-7.12v-.142C17.23 7.483 16.578 7 15.78 7c-.797 0-1.435.483-1.709.73l.004.136zm2.016 14.387c-1.628 0-2.37.957-2.59 1.312C14.878 24.56 15.753 25 16.105 25c.352 0 1.349-.533 2.574-1.392-.225-.374-.97-1.355-2.587-1.355zm9.201-7.968c-.257.583-1.69 3.092-3.13 4.878-1.252 1.554-3.128 3.394-3.584 3.835.126.136.24.283.34.439a29.17 29.17 0 0 0 2.791-2.287c2.352-2.189 4.225-4.353 4.287-5.444a1.539 1.539 0 0 0-.704-1.421zM6.82 14.073c.537 1.341 1.56 2.93 3.042 4.722a33.811 33.811 0 0 0 3.91 3.996c.1-.09.207-.174.319-.25-.418-.488-1.91-2.308-3.283-4.941-1.538-2.95-2.122-4.99-2.372-5.862l-.037-.13-.002-.006c-.344.091-1.212.375-1.553.995a1.96 1.96 0 0 0-.231.929c.065.184.134.366.207.547zm6.74 8.928a34.204 34.204 0 0 1-3.93-4.02c-1.448-1.752-2.464-3.315-3.027-4.652-.21.182-.649.67-.6 1.533.066 1.131 1.715 2.922 4.726 5.496a45.31 45.31 0 0 0 2.532 2.03 2.91 2.91 0 0 1 .3-.387zM8.687 11.527l.037.13c.248.864.826 2.885 2.35 5.809 1.394 2.673 2.908 4.494 3.273 4.916.097-.053.196-.101.298-.144-.3-.638-1.525-3.304-2.353-5.974-.934-3.013-1.47-5.816-1.582-6.701l-.005-.034a2.169 2.169 0 0 0-1.378.41c-.465.339-.655.887-.732 1.253.024.092.053.202.092.335z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#20c5d3" r="16"/><path d="M17.81 7.87v-.089c.177-.075.528-.146 1.132.016.691.186 1.225.88 1.47 1.254l-.002.24c-.012 1.339-.438 4.647-1.176 7.127-.645 2.167-2.052 5.05-2.338 5.626a3.558 3.558 0 0 0-.426-.067c.119-.731.638-3.987.965-6.954.347-3.148.374-6.27.374-7.152zm2.899 1.424v-.011c.26-.006.836.041 1.493.464.636.409.964 1.187 1.1 1.605l-.063.247c-.155.602-1.303 3.705-2.538 6.044-1.048 1.982-2.721 4.175-3.086 4.645a3.27 3.27 0 0 0-.425-.167c.34-.687 1.697-3.491 2.33-5.62.746-2.506 1.176-5.852 1.189-7.207zm.257 8.484c1.176-2.227 2.364-5.352 2.56-6.097.259.094.815.343 1.177.837.31.422.411.993.444 1.352l-.121.282c-.234.543-1.66 3.045-3.097 4.828-1.244 1.544-3.113 3.376-3.561 3.81a3.167 3.167 0 0 0-.488-.36c.421-.544 2.053-2.697 3.086-4.652zm-9.961-8.252l-.035-.274c.163-.355.523-.947 1.212-1.262.75-.342 1.333-.249 1.594-.173l.002.059c.02.595.177 3.524.56 6.981.352 3.163.919 6.527 1.028 7.166-.15.027-.297.064-.441.11-.278-.59-1.516-3.27-2.348-5.955-.928-2.995-1.46-5.775-1.572-6.652zm3.071-1.66l-.004-.137c.274-.246.912-.729 1.71-.729.796 0 1.448.483 1.729.73v.14c0 .879-.027 3.988-.373 7.12-.331 3.004-.86 6.307-.968 6.971l-.078-.002c-.144 0-.287.008-.43.022-.106-.615-.675-3.987-1.027-7.156-.382-3.448-.538-6.367-.559-6.96zm2.016 14.387c1.617 0 2.362.981 2.587 1.355-1.225.86-2.222 1.392-2.574 1.392-.352 0-1.227-.44-2.603-1.435.22-.355.962-1.312 2.59-1.312zm9.201-7.968c.246.16.751.591.704 1.42-.062 1.092-1.935 3.256-4.287 5.445a29.17 29.17 0 0 1-2.79 2.287 3.089 3.089 0 0 0-.341-.439c.456-.441 2.332-2.28 3.584-3.835 1.44-1.786 2.873-4.295 3.13-4.878zM6.82 14.073a13.898 13.898 0 0 1-.207-.547 1.96 1.96 0 0 1 .23-.929c.342-.62 1.21-.904 1.554-.995l.002.006.037.13c.25.871.834 2.912 2.372 5.862 1.373 2.633 2.865 4.453 3.283 4.94a3.11 3.11 0 0 0-.32.251 33.811 33.811 0 0 1-3.909-3.996c-1.482-1.792-2.505-3.38-3.042-4.722zm6.74 8.928c-.11.12-.21.25-.3.388a45.838 45.838 0 0 1-2.53-2.03c-3.012-2.575-4.66-4.366-4.726-5.497-.05-.863.388-1.35.6-1.533.562 1.337 1.578 2.9 3.026 4.652A34.204 34.204 0 0 0 13.56 23zM8.687 11.527a10.296 10.296 0 0 1-.092-.335c.077-.366.267-.914.732-1.252a2.169 2.169 0 0 1 1.378-.411l.005.034c.113.885.648 3.688 1.582 6.7.828 2.671 2.053 5.337 2.353 5.975a3.177 3.177 0 0 0-.298.144c-.365-.422-1.879-2.243-3.272-4.916-1.525-2.924-2.103-4.945-2.35-5.808z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Clam);


/***/ }),

/***/ "7V9g":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/trig.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Trig = {
  symbol: 'trig',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10.123 7c-.312 1.658-2.188 1.762-2.188 1.762C3.56 23.062 15.958 27 15.958 27c13.44-5.492 7.918-18.342 7.918-18.342C22.21 8.554 21.896 7 21.896 7zm11.15 1.023l.012.259a1.367 1.367 0 0 0 .185.559c.19.318.5.516.986.548l.17.011.065.158a9.547 9.547 0 0 1 .15.41c.11.325.22.696.322 1.105.619 2.48.692 5.099-.137 7.56-1.004 2.98-3.246 5.375-6.952 6.96l-.095.04-.098-.031a5.527 5.527 0 0 1-.335-.125 10.89 10.89 0 0 1-.859-.39 12.48 12.48 0 0 1-2.595-1.752c-1.493-1.311-2.626-2.95-3.252-4.95-.763-2.44-.73-5.302.239-8.611l.052-.178.184-.018a1.756 1.756 0 0 0 .22-.046 1.89 1.89 0 0 0 .512-.226c.36-.23.604-.57.692-1.059l.014-.224zm-10.045.545a2.03 2.03 0 0 1-.885 1.197 2.435 2.435 0 0 1-.785.324c-.893 3.14-.912 5.84-.194 8.134.594 1.899 1.67 3.455 3.09 4.703.79.693 1.636 1.247 2.482 1.675a10.218 10.218 0 0 0 1.019.448c3.505-1.523 5.606-3.783 6.551-6.59.791-2.348.72-4.866.125-7.254a13.684 13.684 0 0 0-.39-1.29c-.576-.082-.987-.37-1.242-.794a1.905 1.905 0 0 1-.22-.55l-9.551-.003zm7.36 5.582a.86.86 0 0 1 .86.855v3.575a.86.86 0 0 1-.86.855h-5.157a.86.86 0 0 1-.86-.855v-3.575a.86.86 0 0 1 .86-.855h.223c.029-1.433.795-2.006 1.437-2.234.466-.157.966-.18 1.444-.066 1.645.368 1.78 1.692 1.75 2.3zm-2.005 4.042l-.303-1.507a.673.673 0 0 0-.27-1.291.673.673 0 1 0-.27 1.291l-.303 1.507zm-2.188-4.042h3.056c.03-1.747-1.597-1.658-1.597-1.658-1.233.082-1.43 1.19-1.459 1.658z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#30c0f2" r="16"/><path d="M10.123 7h11.774s.312 1.554 1.98 1.658c0 0 5.522 12.85-7.919 18.342 0 0-12.399-3.938-8.023-18.238 0 0 1.876-.104 2.188-1.762zm11.15 1.023h-10.52l-.014.224c-.088.489-.333.83-.692 1.06a1.89 1.89 0 0 1-.732.271l-.184.018-.052.178c-.969 3.31-1.002 6.17-.239 8.61.626 2 1.759 3.64 3.252 4.95a12.48 12.48 0 0 0 2.595 1.753c.31.157.6.286.859.39.157.063.272.104.335.125l.098.03.095-.04c3.706-1.584 5.948-3.978 6.952-6.96.83-2.46.756-5.079.137-7.559a14.225 14.225 0 0 0-.43-1.406 4.272 4.272 0 0 0-.042-.109l-.064-.158-.171-.011c-.486-.032-.795-.23-.986-.548a1.367 1.367 0 0 1-.185-.56zm-10.045.545c6.367.001 9.55.002 9.55.003.044.187.115.373.22.55.256.425.667.712 1.243.794a13.684 13.684 0 0 1 .39 1.29c.596 2.388.666 4.906-.125 7.254-.945 2.807-3.046 5.067-6.551 6.59a10.218 10.218 0 0 1-1.019-.449 11.936 11.936 0 0 1-2.481-1.674c-1.421-1.248-2.497-2.804-3.091-4.703-.718-2.295-.699-4.993.194-8.134a2.556 2.556 0 0 0 .785-.324 2.03 2.03 0 0 0 .885-1.197zm7.36 5.582h-.303c.03-.608-.105-1.932-1.75-2.3a2.612 2.612 0 0 0-1.444.066c-.642.228-1.408.801-1.437 2.234h-.223a.86.86 0 0 0-.86.855v3.575a.86.86 0 0 0 .86.855h5.158a.86.86 0 0 0 .86-.855v-3.575a.86.86 0 0 0-.86-.855zm-2.005 4.042h-1.146l.303-1.507a.673.673 0 0 1 .27-1.291.673.673 0 1 1 .27 1.291zm-2.188-4.042c.028-.468.226-1.576 1.459-1.658 0 0 1.626-.089 1.597 1.658z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Trig);


/***/ }),

/***/ "7WtJ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/omg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Omg = {
  symbol: 'omg',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.144-14.71a4.353 4.353 0 0 0-4.35 4.355A4.353 4.353 0 0 0 11.855 26a4.353 4.353 0 0 0 4.352-4.355 4.353 4.353 0 0 0-4.351-4.355zm0 7.393a3.035 3.035 0 0 1-3.033-3.036 3.035 3.035 0 0 1 3.033-3.037 3.035 3.035 0 0 1 3.034 3.037 3.04 3.04 0 0 1-3.034 3.036zM21.15 8a4.353 4.353 0 0 0-4.351 4.355 4.353 4.353 0 0 0 4.35 4.355 4.353 4.353 0 0 0 4.352-4.355A4.353 4.353 0 0 0 21.149 8zm0 7.393a3.035 3.035 0 0 1-3.034-3.036A3.035 3.035 0 0 1 21.15 9.32a3.035 3.035 0 0 1 3.033 3.037 3.04 3.04 0 0 1-3.033 3.036zM11.856 8a4.358 4.358 0 0 0-1.696 8.37 4.351 4.351 0 0 0 5.288-1.556 4.36 4.36 0 0 0-.475-5.497h1.233V8h-4.35zm3.034 4.355a3.035 3.035 0 0 1-3.034 3.036 3.035 3.035 0 0 1-3.033-3.036 3.035 3.035 0 0 1 3.033-3.036 3.04 3.04 0 0 1 3.035 3.036h-.001z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1A53F0"/><path fill="#FFF" fill-rule="nonzero" d="M11.856 17.29a4.353 4.353 0 0 0-4.35 4.355A4.353 4.353 0 0 0 11.855 26a4.353 4.353 0 0 0 4.352-4.355 4.353 4.353 0 0 0-4.351-4.355zm0 7.393a3.035 3.035 0 0 1-3.033-3.036 3.035 3.035 0 0 1 3.033-3.037 3.035 3.035 0 0 1 3.034 3.037 3.04 3.04 0 0 1-3.034 3.036zM21.15 8a4.353 4.353 0 0 0-4.351 4.355 4.353 4.353 0 0 0 4.35 4.355 4.353 4.353 0 0 0 4.352-4.355A4.353 4.353 0 0 0 21.149 8zm0 7.393a3.035 3.035 0 0 1-3.034-3.036A3.035 3.035 0 0 1 21.15 9.32a3.035 3.035 0 0 1 3.033 3.037 3.04 3.04 0 0 1-3.033 3.036zM11.856 8a4.358 4.358 0 0 0-1.696 8.37 4.351 4.351 0 0 0 5.288-1.556 4.36 4.36 0 0 0-.475-5.497h1.233V8h-4.35zm3.034 4.355a3.035 3.035 0 0 1-3.034 3.036 3.035 3.035 0 0 1-3.033-3.036 3.035 3.035 0 0 1 3.033-3.036 3.04 3.04 0 0 1 3.035 3.036h-.001z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Omg);


/***/ }),

/***/ "7mc8":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/maid.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Maid = {
  symbol: 'maid',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.291 19.333l10.955 6.308c2.263-1.282 3.394-1.692 3.394-5.436V7.59c-2.263-1.282-3.189-2.052-6.429-.205L6.257 13.692c0 2.564-.206 3.744 3.034 5.641zm8.234-5.108v2.854l-2.488-1.427 2.488-1.427z"/><path fill-rule="nonzero" d="M17.52 20.205L6.257 13.692l10.954-6.307c3.24-1.847 4.166-1.077 6.429.205l-11.263 6.513 5.143 2.974v3.128z" opacity=".402"/><path fill-rule="nonzero" d="M12.377 14.103L23.64 7.59v12.615c0 3.744-1.131 4.154-3.394 5.436V12.667L15.05 15.64l-2.674-1.538z" opacity=".802"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#5592D7"/><g fill="#FFF" fill-rule="nonzero"><path d="M20.246 12.667V25.64L9.29 19.333c-3.24-1.897-3.034-3.077-3.034-5.64l11.263 6.512v-5.949l2.726-1.59z"/><path d="M17.52 20.205L6.257 13.692l10.954-6.307c3.24-1.847 4.166-1.077 6.429.205l-11.263 6.513 5.143 2.974v3.128z" opacity=".6"/><path d="M12.377 14.103L23.64 7.59v12.615c0 3.744-1.131 4.154-3.394 5.436V12.667L15.05 15.64l-2.674-1.538z" opacity=".2"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Maid);


/***/ }),

/***/ "7tVH":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/req.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Req = {
  symbol: 'req',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10 6v1.722l6.916.001c.892-.012 1.547.062 1.963.221 1.506.513 2.536 2.065 2.415 3.622-.038 1.802-1.645 3.395-3.482 3.444-1.592.022-3.185.002-4.778.01 1.495 2.44 3.74 6.1 6.735 10.98l1.43-.898a5181.37 5181.37 0 0 0-5.165-8.418c1.007-.018 2.037.085 3.018-.193 1.546-.409 2.868-1.538 3.5-2.98.698-1.567.578-3.468-.34-4.925a5.389 5.389 0 0 0-3.59-2.436c-.44-.093-1.113-.143-2.015-.15H10z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#6CFCCD"/><path fill="#FFF" d="M10 6h6.607c.902.007 1.574.057 2.016.15a5.389 5.389 0 0 1 3.589 2.436c.918 1.457 1.038 3.358.34 4.925-.632 1.442-1.954 2.571-3.5 2.98-.981.278-2.01.175-3.018.193a5181.37 5181.37 0 0 1 5.165 8.418L19.77 26c-2.995-4.88-5.24-8.54-6.735-10.98 1.593-.008 3.186.012 4.778-.01 1.837-.049 3.444-1.642 3.482-3.444.12-1.557-.91-3.11-2.415-3.622-.416-.159-1.07-.233-1.963-.22L10 7.721V6z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Req);


/***/ }),

/***/ "8BGg":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bdl.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bdl = {
  symbol: 'bdl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.328 8.617c-.004 3.117 0 6.233-.004 9.351.644-2.079 2.288-3.825 4.35-4.537 1.794-.629 3.86-.513 5.542.39 0-.175 0-.349.002-.524-2.106-1.012-4.687-.962-6.736.168.02-2.716-.003-5.432.011-8.148a436.69 436.69 0 0 1-2.968 2.965c-.08.1-.216.188-.197.335zm13.39 11.662c.01-3.925-.012-7.851.01-11.776-1.08-1.085-2.16-2.172-3.25-3.246.03.509.021 1.019.02 1.528-.002 4.055.014 8.11.008 12.164-.007.786.073 1.607-.247 2.35-.503 1.31-1.86 2.23-3.266 2.195-1.462.016-2.845-1.005-3.282-2.396-.49-1.41.067-3.089 1.296-3.935 1.117-.81 2.725-.845 3.882-.098.585.366 1.027.918 1.325 1.535a290.645 290.645 0 0 1 0-4.482c-1.825-1.005-4.12-1.08-6.005-.192a6.749 6.749 0 0 0-3.268 3.253c-.593 1.274-.786 2.74-.501 4.119.328 1.742 1.399 3.322 2.878 4.295a6.697 6.697 0 0 0 8.503-.91 6.652 6.652 0 0 0 1.897-4.404z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#E54C40"/><path fill="#FFF" fill-rule="nonzero" d="M9.328 8.617c-.02-.147.118-.235.197-.335a436.69 436.69 0 0 0 2.968-2.965c-.014 2.716.008 5.432-.011 8.148 2.049-1.13 4.63-1.18 6.736-.168-.002.175-.002.349-.002.525-1.681-.904-3.748-1.02-5.541-.39-2.063.71-3.707 2.457-4.35 4.536.003-3.118-.001-6.234.003-9.351zm13.39 11.662a6.652 6.652 0 0 1-1.897 4.405 6.697 6.697 0 0 1-8.503.91c-1.48-.974-2.55-2.554-2.878-4.296-.285-1.38-.092-2.845.501-4.12a6.749 6.749 0 0 1 3.268-3.252c1.884-.888 4.18-.813 6.004.192-.011 1.494-.01 2.988.001 4.482-.298-.617-.74-1.169-1.325-1.535-1.157-.747-2.765-.712-3.882.098-1.23.846-1.785 2.524-1.296 3.935.437 1.391 1.82 2.412 3.282 2.396 1.406.035 2.763-.884 3.266-2.195.32-.743.24-1.564.247-2.35.006-4.055-.01-8.11-.008-12.164.001-.51.01-1.02-.02-1.528 1.09 1.074 2.17 2.161 3.25 3.246-.022 3.925 0 7.85-.01 11.777z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bdl);


/***/ }),

/***/ "8M56":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cmm.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cmm = {
  symbol: 'cmm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.57-27.993A11.788 11.788 0 0 0 9.058 6.38a1.765 1.765 0 0 0-.11 2.732c.622.588 1.58.634 2.256.109a8.386 8.386 0 0 1 11.294.91c.59.61.608 1.571.042 2.203a1.588 1.588 0 0 1-2.245.078l-.077-.078a5.238 5.238 0 1 0 0 7.059 1.556 1.556 0 0 1 1.86-.353 1.578 1.578 0 0 1 .462 2.47 8.414 8.414 0 0 1-11.34.996 1.765 1.765 0 0 0-2.27.11 1.786 1.786 0 0 0 .149 2.756 11.852 11.852 0 1 0 7.49-21.364zm-.22 14.788a2.933 2.933 0 1 1 .022-5.866 2.933 2.933 0 0 1-.021 5.866z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2FD2E5"/><path d="M16.57 4.007A11.788 11.788 0 0 0 9.058 6.38a1.765 1.765 0 0 0-.11 2.732c.622.588 1.58.634 2.256.109a8.386 8.386 0 0 1 11.294.91c.59.61.608 1.571.042 2.203a1.588 1.588 0 0 1-2.245.078l-.077-.078a5.238 5.238 0 1 0 0 7.059 1.556 1.556 0 0 1 1.86-.353 1.578 1.578 0 0 1 .462 2.47 8.414 8.414 0 0 1-11.34.996 1.765 1.765 0 0 0-2.27.11 1.786 1.786 0 0 0 .149 2.756 11.852 11.852 0 1 0 7.49-21.364zm-.22 14.788a2.933 2.933 0 1 1 .022-5.866 2.933 2.933 0 0 1-.021 5.866z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cmm);


/***/ }),

/***/ "8MrT":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mco.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mco = {
  symbol: 'mco',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.02-26.982h-.066L6.5 10.501v11l9.414 5.48.077.019 9.509-5.5V10.501l-9.52-5.483zm-.031 1.138l1.031.572 7.52 4.35v9.845l-7.52 4.325-1.032.597-8.448-4.92v-9.849l8.449-4.92zm-7.14 10.61l3.41 5.96h1.362l1.612-1.51v-.756l-1.672-1.612v-2.54l-2.21-1.413-2.502 1.872zm7.903 4.452l1.61 1.491h1.344l3.393-5.942-2.496-1.889-2.187 1.43v2.54l-1.667 1.61.003.76zm-2.37-4.91l-.25 2.39 1.845-.004 1.867-.004-.236-2.382.798-2.131h-4.838l.813 2.131zm1.595-2.715l4.622.003-.901-3.825h-7.464l-.855 3.82 4.598.002z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#103F68"/><path fill="#FFF" fill-rule="nonzero" d="M15.98 5.018l9.52 5.483v11L15.991 27l-.077-.019-9.414-5.48v-11l9.414-5.483h.066zm-.031 1.138L7.5 11.076v9.85l8.448 4.919 1.032-.597 7.52-4.325v-9.845l-7.52-4.35-1.031-.572zm-7.14 10.61l2.501-1.87 2.211 1.412v2.54l1.673 1.612-.001.756-1.612 1.51H12.22l-3.41-5.96zm7.903 4.452l-.003-.76 1.667-1.61v-2.54l2.187-1.43 2.496 1.889-3.393 5.942h-1.344l-1.61-1.491zm-2.37-4.91l-.814-2.131h4.838l-.798 2.131.236 2.382-1.867.004-1.845.003.25-2.389zm1.595-2.715l-4.598-.002.855-3.82h7.464l.9 3.825-4.621-.003z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mco);


/***/ }),

/***/ "8a7l":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/brd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Brd = {
  symbol: 'brd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8 9.039v13.922C8 23.535 8.472 24 9.054 24h7.432c4.684 0 6.424-.755 7.49-1.806a3.604 3.604 0 0 0 1.02-2.696c0-2.124-1.32-3.18-3.918-3.634 2.69-.551 3.687-1.806 3.687-3.657a3.43 3.43 0 0 0-.98-2.606C22.697 8.528 21.118 8 16.642 8H9.054C8.472 8 8 8.465 8 9.039zm5.761 5.962v1.817a.687.687 0 0 0 .204.51c.136.136.323.21.516.205h2.38c1.526 0 2.661.04 3.197.568.243.26.368.606.346.96a1.22 1.22 0 0 1-.346.936c-.53.528-1.665.642-3.197.642h-4.5v-9.232h4.546c1.411 0 2.454.085 2.944.567.22.237.33.555.3.875.021.328-.096.65-.323.891-.484.5-1.527.568-2.921.568h-2.443a.698.698 0 0 0-.703.693z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#fe5d86" r="16"/><path d="M8 9.039C8 8.465 8.472 8 9.054 8h7.588c4.476 0 6.055.528 7.143 1.601a3.43 3.43 0 0 1 .98 2.606c0 1.851-.997 3.106-3.687 3.657 2.598.454 3.917 1.51 3.917 3.634a3.604 3.604 0 0 1-1.02 2.696C22.91 23.244 21.17 24 16.487 24H9.054A1.047 1.047 0 0 1 8 22.961zm5.761 5.962c0-.383.315-.693.703-.693h2.443c1.394 0 2.437-.068 2.92-.568a1.18 1.18 0 0 0 .323-.891c.03-.32-.078-.638-.3-.875-.49-.482-1.532-.567-2.943-.567H12.36v9.232h4.5c1.532 0 2.667-.114 3.197-.642.244-.25.37-.59.346-.937.022-.353-.103-.7-.346-.96-.536-.527-1.67-.567-3.197-.567h-2.38a.708.708 0 0 1-.516-.205.687.687 0 0 1-.204-.51z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Brd);


/***/ }),

/***/ "8eEz":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mod.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mod = {
  symbol: 'mod',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.985-10.993V8.08l-6.312 6.45zM9 7v17.985l8.77-8.998-8.466-8.675z"/><path d="M22.985 21.007V8.08l-6.312 6.449z" opacity=".5"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#09547d" r="16"/><g fill="#fff"><path d="M22.985 21.007V8.08l-6.312 6.449z" opacity=".5"/><path d="M9 7l.304.312 8.467 8.675L9 24.985z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mod);


/***/ }),

/***/ "8fPC":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ebst.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ebst = {
  symbol: 'ebst',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M9.928 16.574H7.123L4 19.072h6.522A8.05 8.05 0 0 0 17.954 24C22.398 24 26 20.418 26 16s-3.602-8-8.046-8a8.049 8.049 0 0 0-7.46 4.996H4l3.123 2.498h2.8a8.076 8.076 0 0 0 .005 1.08zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.537-15.851v.306c0 .102-.006.204-.02.306H15.48a2.262 2.262 0 0 0 .849 1.617c.244.198.52.354.829.469s.63.172.964.172c.578 0 1.067-.105 1.465-.316.399-.21.726-.5.983-.87l1.543 1.224c-.913 1.225-2.237 1.838-3.972 1.838-.72 0-1.382-.112-1.986-.335a4.693 4.693 0 0 1-1.571-.948 4.269 4.269 0 0 1-1.041-1.502c-.251-.593-.376-1.266-.376-2.019 0-.74.125-1.413.376-2.019s.594-1.122 1.031-1.55c.437-.427.955-.759 1.552-.995s1.244-.354 1.938-.354c.643 0 1.237.105 1.783.316s1.019.523 1.418.937c.398.415.71.932.935 1.55s.337 1.343.337 2.173zm-2.314-1.034a2.8 2.8 0 0 0-.125-.842 1.923 1.923 0 0 0-.395-.708c-.18-.204-.408-.367-.685-.488s-.6-.182-.973-.182c-.694 0-1.282.208-1.765.622a2.261 2.261 0 0 0-.8 1.598z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1693d4" fill-rule="nonzero" r="16"/><path d="M9.928 16.574a8.07 8.07 0 0 1-.005-1.08h-2.8L4 12.996h6.494A8.049 8.049 0 0 1 17.954 8C22.398 8 26 11.582 26 16s-3.602 8-8.046 8a8.05 8.05 0 0 1-7.432-4.928H4l3.123-2.498zm12.609-.425c0-.83-.112-1.554-.337-2.172s-.537-1.136-.935-1.55c-.399-.415-.871-.728-1.418-.938s-1.14-.316-1.783-.316c-.694 0-1.34.118-1.938.354s-1.115.568-1.552.995c-.437.428-.78.944-1.031 1.55s-.376 1.28-.376 2.02c0 .752.125 1.425.376 2.018.25.593.597 1.094 1.04 1.502.444.409.968.724 1.572.948a5.688 5.688 0 0 0 1.986.335c1.735 0 3.06-.613 3.972-1.838l-1.543-1.224c-.257.37-.584.66-.983.87-.398.21-.887.316-1.465.316-.334 0-.656-.057-.964-.172s-.585-.271-.83-.469a2.262 2.262 0 0 1-.848-1.617h7.038c.013-.102.019-.204.019-.306zm-2.314-1.034H15.48c.052-.65.318-1.183.8-1.598.483-.414 1.07-.622 1.765-.622.372 0 .697.06.973.182s.505.284.685.488c.18.204.311.44.395.708a2.8 2.8 0 0 1 .125.842z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ebst);


/***/ }),

/***/ "8lsQ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cenz.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cenz = {
  symbol: 'cenz',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.016-21.378c.164.02.282.028.398.048 1.083.186 2.165.38 3.25.56 1.363.228 2.267 1.106 2.398 2.435.065.663-.009 1.34.03 2.007.011.202.145.481.304.567.163.087.487.06.632-.057a81.439 81.439 0 0 0 2.766-2.346c.126-.11.204-.337.214-.514.03-.557.026-1.116.019-1.675-.025-1.966-1.29-3.528-3.181-3.914-1.066-.217-2.144-.373-3.205-.61-1.911-.428-3.518.269-4.509 1.987a.776.776 0 0 1-.394.326c-1.476.48-2.64 1.933-2.666 3.499a239.097 239.097 0 0 0-.019 7.518c.027 1.862 1.262 3.418 2.934 3.776 1.298.278 2.602.555 3.916.73 1.603.212 3.1-.385 3.972-1.936a.938.938 0 0 1 .56-.47c1.417-.48 2.521-1.978 2.57-3.5.026-.842.008-1.687.02-2.53.005-.338-.079-.606-.4-.761-.304-.147-.536-.017-.762.173-.83.7-1.673 1.387-2.484 2.11-.159.141-.27.418-.28.638-.035.743-.01 1.488-.015 2.233-.003.486-.02.495-.505.441-.072-.008-.144-.015-.215-.029-1.022-.19-2.042-.39-3.066-.569-1.417-.248-2.31-1.308-2.312-2.784-.004-2.246-.002-4.492 0-6.738 0-.184.018-.368.03-.615zm8.643 7.256c.201 1.465-.3 2.698-1.262 3.104 0-.66-.002-1.297.004-1.935 0-.053.042-.119.084-.156.374-.327.752-.65 1.174-1.013zm-1.158-3.897c-.15-.592-.225-1.204-.46-1.743-.606-1.39-1.715-2.118-3.168-2.354-1.058-.172-2.11-.389-3.24-.6.466-.532.973-.857 1.594-.878.512-.017 1.034.057 1.543.144 1 .169 1.998.352 2.988.572 1.102.246 1.898 1.273 1.944 2.436.004.1.001.198 0 .298-.003 1.266-.13 1.487-1.2 2.125zm-8.823-3.008v.526c0 2.232-.002 4.463 0 6.695.003 1.952 1.471 3.629 3.364 3.91 1.106.165 2.2.405 3.367.624-.366.514-.83.733-1.35.863-.636.158-1.246-.024-1.862-.144-.972-.188-1.953-.332-2.914-.566-1.122-.274-1.9-1.283-1.909-2.46-.02-2.43-.027-4.86.007-7.29.013-.9.437-1.624 1.297-2.158z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3089F2"/><path fill="#FFF" fill-rule="nonzero" d="M21.627 17.878c-.422.363-.8.686-1.174 1.013-.042.037-.084.103-.084.156-.006.638-.004 1.275-.004 1.935.961-.406 1.463-1.64 1.262-3.104zm-1.158-3.897c1.071-.638 1.198-.859 1.202-2.125 0-.1.003-.199-.001-.298-.046-1.163-.842-2.19-1.944-2.436-.99-.22-1.988-.403-2.988-.572-.509-.087-1.03-.161-1.543-.144-.621.02-1.128.346-1.595.878 1.132.211 2.183.428 3.241.6 1.453.236 2.562.965 3.168 2.354.235.539.31 1.15.46 1.743zm-8.823-3.008c-.86.534-1.284 1.258-1.297 2.158a328.06 328.06 0 0 0-.007 7.29c.01 1.177.787 2.186 1.909 2.46.96.234 1.942.378 2.914.566.616.12 1.226.302 1.862.144.52-.13.984-.349 1.35-.863-1.166-.219-2.261-.46-3.367-.624-1.893-.281-3.361-1.958-3.363-3.91-.003-2.232-.001-4.463-.001-6.695v-.526zm1.338-.351c-.012.247-.03.431-.03.615a2522.26 2522.26 0 0 0 0 6.738c.003 1.476.895 2.536 2.312 2.784 1.024.18 2.044.38 3.066.57.071.013.143.02.215.028.485.054.502.045.505-.441.005-.745-.02-1.49.015-2.233.01-.22.121-.497.28-.638.811-.723 1.653-1.41 2.484-2.11.226-.19.458-.32.762-.173.321.155.405.423.4.76-.012.844.006 1.689-.02 2.531-.049 1.522-1.153 3.02-2.57 3.5a.938.938 0 0 0-.56.47c-.873 1.55-2.369 2.148-3.972 1.936-1.314-.175-2.618-.452-3.916-.73-1.672-.358-2.907-1.914-2.934-3.776-.036-2.506-.024-5.013.019-7.518.026-1.566 1.19-3.02 2.666-3.5a.776.776 0 0 0 .394-.325c.99-1.718 2.598-2.415 4.509-1.987 1.06.237 2.139.393 3.205.61 1.892.386 3.156 1.948 3.181 3.914.007.559.011 1.118-.02 1.675-.009.177-.087.403-.213.514-.907.8-1.825 1.588-2.766 2.346-.145.117-.47.144-.632.057-.159-.086-.293-.365-.304-.567-.039-.667.035-1.344-.03-2.007-.13-1.329-1.035-2.207-2.399-2.434-1.084-.18-2.166-.375-3.249-.561-.116-.02-.234-.029-.398-.048z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cenz);


/***/ }),

/***/ "8wrN":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ctxc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ctxc = {
  symbol: 'ctxc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.103-27.602v-.007L20.745 18a.3.3 0 0 1-.198.419l-3.594.99c-.293.073-.227.557.074.572l9.159 1.826c.176.029.352.088.535.088A31069.52 31069.52 0 0 0 16.425 4.148c-.146-.315-.674-.08-.528.25zm-.528.03C11.918 10.388 8.461 16.344 5 22.298v.17c.073.102.161.205.293.205.184-.022.279-.198.389-.315l9.445-11.096c.096-.14.308-.227.455-.095.91.968 1.79 1.965 2.713 2.933.176.19.536-.022.44-.278-1.078-3.08-2.192-6.16-3.278-9.24a1.05 1.05 0 0 0-.088-.154zM12.48 14.995c-2.207 2.625-4.4 5.28-6.6 7.92h20.98l.14-.147v-.205c-.073-.059-.14-.132-.235-.147-4.942-.99-9.885-2.016-14.828-3.006-.154-.008-.3-.154-.242-.316.382-1.268.77-2.537 1.137-3.813.059-.213-.176-.337-.352-.286z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><g fill="#FFF"><path d="M15.897 4.398c-.146-.33.382-.564.528-.25 3.432 5.912 6.864 11.827 10.296 17.748-.183 0-.359-.06-.535-.088l-9.16-1.826c-.3-.015-.366-.5-.073-.572l3.594-.99a.3.3 0 0 0 .198-.418L15.897 4.39v.007z"/><path d="M15.37 4.428c.033.048.062.1.087.154 1.086 3.08 2.2 6.16 3.278 9.24.096.256-.264.469-.44.278-.924-.968-1.804-1.965-2.713-2.933-.147-.132-.36-.044-.455.095L5.682 22.358c-.11.117-.205.293-.389.315-.132 0-.22-.103-.293-.205v-.17c3.461-5.954 6.918-11.91 10.37-17.87z"/><path d="M12.48 14.995c.176-.051.41.073.352.286-.367 1.276-.755 2.545-1.137 3.813-.058.162.088.308.242.316 4.943.99 9.886 2.016 14.828 3.006.096.015.162.088.235.147v.205l-.14.147H5.88c2.2-2.64 4.393-5.295 6.6-7.92z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ctxc);


/***/ }),

/***/ "9984":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eop.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eop = {
  symbol: 'eop',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M17 32C8.163 32 1 24.837 1 16S8.163 0 17 0s16 7.163 16 16-7.163 16-16 16zm-1.286-4l-5.348-14.263-2.16 9.84L15.714 28zM17.12 4.171l-5.863 7.132 5.863 14.983 5.897-14.983L17.12 4.17zM18.56 28l7.474-4.423-2.125-9.84L18.56 28z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#35A7DF"/><path d="M14.714 28L9.366 13.737l-2.16 9.84zM16.12 4.171l-5.863 7.132 5.863 14.983 5.897-14.983zM17.56 28l5.349-14.263 2.125 9.84z" fill="#FEFFFE"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eop);


/***/ }),

/***/ "9oa8":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cc.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cc = {
  symbol: 'cc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM14.09 4.261c-.805.138-1.594.358-2.354.657a12.59 12.59 0 0 0-3.729 2.3c-.886.77-1.622 1.706-2.252 2.693-.04.07-.078.139-.112.21a8.124 8.124 0 0 0-.326.611 2.97 2.97 0 0 0-.246.541l-.053.063c-.027.091-.06.18-.1.267-.067.19-.132.38-.204.567-.039.105-.072.21-.105.315a9.775 9.775 0 0 0-.315 1.257c-.077.239-.065.493-.126.736-.062.299-.042.606-.09.906-.044.36-.02.726-.02 1.088.063.434.044.878.142 1.308.01.183.042.365.096.54.025.156.059.31.103.463.111.496.258.984.44 1.459.077.217.193.42.235.648l.058.026c.332.796.785 1.54 1.297 2.233.257.365.556.7.847 1.038.182.19.368.373.556.556.177.173.386.31.55.497.05.033.134.125.18.033.149-.212.314-.416.528-.566.717-.39 1.54-.485 2.336-.6.698-.12 1.403-.204 2.096-.346 1.533-.286 3.07-.73 4.392-1.582.388-.247.733-.551 1.076-.856a2.08 2.08 0 0 0-.318.03c-.274.092-.559.144-.837.222-.436.116-.876.217-1.32.297-.846.154-1.72.256-2.58.144-.643-.1-1.3-.268-1.831-.662-.64-.415-1.09-1.068-1.38-1.765-.222-.491-.343-1.023-.444-1.548a2.263 2.263 0 0 1-.082-.574c-.003-.21-.06-.417-.06-.627-.005-.63-.023-1.26.015-1.89.057-.275.076-.555.11-.833.104-.424.173-.855.314-1.268.07-.194.144-.387.223-.578.108-.267.24-.522.37-.777.146-.24.3-.474.457-.705.827-1.092 1.97-1.909 3.213-2.465.669-.267 1.345-.525 2.048-.683 1.567-.425 3.192-.548 4.788-.822.354-.078.726-.135 1.037-.334.134-.087.215-.307.064-.417-.542-.506-1.241-.786-1.908-1.084-.917-.348-1.857-.658-2.832-.792a8.403 8.403 0 0 0-1.518-.137c-.814-.023-1.63.046-2.428.206zm9.151 3.129c-.409.265-.892.361-1.369.461-1.363.234-2.747.35-4.099.654-.617.145-1.237.292-1.834.513-1.039.372-2.028.916-2.836 1.676.568-.108 1.122-.276 1.684-.409 1.2-.27 2.451-.49 3.676-.262.738.128 1.453.463 1.978 1.002.687.67 1.05 1.597 1.257 2.517.227 1.066.252 2.16.207 3.246-.09 1.458-.466 2.93-1.28 4.157-.567.87-1.337 1.596-2.21 2.153-1.287.835-2.774 1.29-4.261 1.61-.895.198-1.806.299-2.708.456-.499.077-.998.158-1.484.299-.168.055-.349.132-.45.287-.066.127-.002.273.099.361.39.39.888.648 1.388.868.92.395 1.887.666 2.877.805 1.291.177 2.61.228 3.902.037 2.811-.389 5.449-1.855 7.287-4.012a12.003 12.003 0 0 0-1.301-16.951c-.152.197-.304.404-.523.532z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#36B0F3" fill-rule="nonzero"/><g fill="#FFF"><path d="M14.09 4.261c.8-.16 1.615-.229 2.43-.206.508 0 1.016.046 1.517.137.975.134 1.915.444 2.832.792.667.298 1.366.578 1.908 1.084.151.11.07.33-.064.417-.31.199-.683.256-1.037.334-1.596.274-3.22.397-4.788.822-.703.158-1.379.416-2.048.683-1.243.556-2.386 1.373-3.213 2.465a16.31 16.31 0 0 0-.456.705c-.131.255-.263.51-.37.777-.08.191-.154.384-.224.578-.141.413-.21.844-.315 1.268-.033.278-.052.558-.11.833-.037.63-.019 1.26-.014 1.89 0 .21.057.416.06.627.003.194.03.387.082.574.1.525.222 1.057.445 1.548.289.697.739 1.35 1.379 1.765.531.394 1.188.562 1.832.662.86.112 1.733.01 2.58-.144.443-.08.883-.18 1.32-.297.277-.078.562-.13.836-.223a2.08 2.08 0 0 1 .318-.03c-.343.306-.688.61-1.076.857-1.322.852-2.859 1.296-4.392 1.582-.693.142-1.398.226-2.096.346-.795.115-1.619.21-2.336.6-.214.15-.38.354-.529.566-.045.092-.13 0-.18-.033-.163-.187-.372-.324-.549-.497a20.82 20.82 0 0 1-.556-.556c-.291-.339-.59-.673-.847-1.038-.512-.694-.965-1.437-1.297-2.233l-.058-.026c-.042-.229-.158-.431-.235-.648a10.585 10.585 0 0 1-.44-1.46 3.77 3.77 0 0 1-.103-.462 2.268 2.268 0 0 1-.096-.54c-.098-.43-.08-.874-.142-1.308 0-.362-.024-.727.02-1.088.048-.3.028-.607.09-.906.061-.243.049-.497.126-.736a9.775 9.775 0 0 1 .42-1.572c.072-.188.137-.378.204-.567.04-.087.073-.176.1-.267l.053-.063a2.97 2.97 0 0 1 .247-.54 8.124 8.124 0 0 1 .325-.612c.034-.071.072-.14.112-.21.63-.987 1.366-1.922 2.252-2.694a12.59 12.59 0 0 1 3.729-2.299 11.95 11.95 0 0 1 2.355-.657z"/><path d="M23.241 7.39c.22-.128.371-.335.523-.532a12.003 12.003 0 0 1 1.3 16.95c-1.837 2.158-4.475 3.624-7.286 4.013-1.293.19-2.61.14-3.902-.037-.99-.14-1.958-.41-2.877-.805-.5-.22-.997-.478-1.388-.868-.101-.088-.165-.234-.098-.361.1-.155.28-.232.45-.287.485-.14.984-.222 1.483-.299.902-.157 1.813-.258 2.708-.455 1.487-.321 2.974-.776 4.26-1.61.874-.558 1.644-1.284 2.211-2.154.814-1.228 1.19-2.699 1.28-4.157.045-1.085.02-2.18-.207-3.246-.207-.92-.57-1.847-1.257-2.517-.525-.539-1.24-.874-1.978-1.002-1.225-.229-2.476-.008-3.676.262-.562.133-1.116.3-1.684.41.808-.761 1.797-1.305 2.836-1.677.597-.221 1.217-.368 1.834-.513 1.352-.304 2.736-.42 4.1-.654.476-.1.96-.196 1.368-.461z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cc);


/***/ }),

/***/ "9oiR":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ilk.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ilk = {
  symbol: 'ilk',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.21-28C9.279 4 4 9.279 4 15.79c0 6.511 5.279 11.79 11.79 11.79 6.511 0 11.79-5.279 11.79-11.79C27.569 9.283 22.297 4.011 15.79 4zm0 22c-5.632 0-10.198-4.565-10.2-10.197-.002-5.632 4.561-10.2 10.193-10.203 5.632-.004 10.201 4.558 10.207 10.19-.006 5.631-4.569 10.194-10.2 10.2V26zm-5.21-11.26v-3.7h2.6v3.7h1.88v-4.16a1 1 0 0 0-1.15-1.17H9.79c-.74 0-1.11.39-1.11 1.17v4.16h1.9zm2.6 1.22l.01-.02h-4.5v5a1 1 0 0 0 1.1 1.18h4.14a1 1 0 0 0 1.15-1.16v-5h-1.9zm7.8.07H18.4v-4.9h2.5v2.54h2v-3a1 1 0 0 0-1.2-1.17h-4.1a1 1 0 0 0-1.17 1.17v10.36a1 1 0 0 0 1.14 1.16h4.17a1 1 0 0 0 1.16-1.16v-5h-1.92z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#98C23A"/><path d="M15.79 4C9.279 4 4 9.279 4 15.79c0 6.511 5.279 11.79 11.79 11.79 6.511 0 11.79-5.279 11.79-11.79C27.569 9.283 22.297 4.011 15.79 4zm0 22c-5.632 0-10.198-4.565-10.2-10.197-.002-5.632 4.561-10.2 10.193-10.203 5.632-.004 10.201 4.558 10.207 10.19-.006 5.631-4.569 10.194-10.2 10.2V26zm-5.21-11.26h-1.9v-4.16c0-.78.37-1.17 1.11-1.17h4.12a1 1 0 0 1 1.15 1.17v4.16h-1.88v-3.7h-2.6v3.7zm2.6 1.22h1.9v5a1 1 0 0 1-1.15 1.16H9.79a1 1 0 0 1-1.1-1.18v-5h4.5l-.01.02zm7.8.07h1.92v5a1 1 0 0 1-1.16 1.16h-4.17a1 1 0 0 1-1.14-1.16V10.67A1 1 0 0 1 17.6 9.5h4.1a1 1 0 0 1 1.2 1.17v3h-2v-2.54h-2.5v4.9h2.58z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ilk);


/***/ }),

/***/ "9pco":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lrc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lrc = {
  symbol: 'lrc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-26L7 18.533 16 26l9-7.467zm-1.174 6.667V21.2L10.913 18zm2.348 0L21.087 18l-3.913 3.2z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2ab6f6" r="16"/><path d="M16 6l9 12.533L16 26l-9-7.467zm-1.174 6.667L10.913 18l3.913 3.2zm2.348 0V21.2l3.913-3.2z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lrc);


/***/ }),

/***/ "9twR":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/safe.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Safe = {
  symbol: 'safe',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.989-9.329V9.998L15.985 3.66l-.015.008-10.966 6.337v12.67l10.975 6.322.001.001 11.008-6.326zm-4.87-2.026l-1.877-1.076L16.054 22a.079.079 0 0 1-.08 0l-4.805-2.785-.002-4.845-4.221-2.42 8.998-5.275a.023.023 0 0 1 .024 0l8.357 4.778-1.478.855-6.875-3.956-6.097 3.579 2.115 1.215 3.986-2.318.002-.002 4.87 2.785-.002 4.61 4.151 2.377-.001.07-9.016 5.264-8.358-4.772 1.463-.857 6.881 3.947 6.153-3.606zm-4.814-5.5v-.034l-.001-.022-.001-.012-.002-.025v-.008l-.003-.027v-.007l-.004-.028v-.005l-.004-.029v-.004l-.005-.03-.001-.002-.006-.03-.001-.003-.007-.03v-.002a.354.354 0 0 0-.007-.03v-.002l-.009-.03v-.001l-.009-.032a.481.481 0 0 0-.02-.06l-.012-.031a.485.485 0 0 0-.012-.03l-.013-.03-.013-.028-.014-.03-.014-.028-.016-.028a1.103 1.103 0 0 1-.016-.027v-.001a.768.768 0 0 0-.016-.026l-.001-.001a.478.478 0 0 0-.017-.025v-.002l-.017-.024s0-.002-.002-.002l-.017-.024-.002-.002c-.006-.008-.01-.016-.017-.024l-.001-.002-.019-.023-.002-.002-.018-.022-.002-.002-.02-.021c0-.001 0-.002-.002-.003l-.019-.021a.01.01 0 0 1-.002-.003l-.019-.02a3663.992 3663.992 0 0 0-.023-.023l-.003-.003-.02-.02-.002-.002-.02-.018-.004-.003-.021-.019-.003-.003a.43.43 0 0 0-.021-.017l-.003-.002-.022-.018-.003-.002-.023-.017-.003-.002-.023-.017-.003-.002-.023-.016-.003-.001-.024-.016-.002-.002a.44.44 0 0 0-.025-.015h-.002l-.026-.016h-.002l-.027-.016h-.001a1.342 1.342 0 0 0-1.143 2.426l-.58 2.652h2.194l-.585-2.65c.502-.21.829-.7.829-1.243z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00688C"/><g fill="#FFF"><path d="M26.989 22.671V9.998L15.985 3.66l-.015.008-10.966 6.337v12.67l10.975 6.322.001.001 11.008-6.326zm-4.87-2.026l-1.877-1.076L16.054 22a.079.079 0 0 1-.08 0l-4.805-2.785-.002-4.845-4.221-2.42 8.998-5.275a.023.023 0 0 1 .024 0l8.357 4.778-1.478.855-6.875-3.956-6.097 3.579 2.115 1.215 3.986-2.318.002-.002 4.87 2.785-.002 4.61 4.151 2.377-.001.07-9.016 5.264-8.358-4.772 1.463-.857 6.881 3.947 6.153-3.606z"/><path d="M17.305 15.145v-.034l-.001-.022-.001-.012-.002-.025v-.008l-.003-.027v-.007l-.004-.028v-.005l-.004-.029v-.004l-.005-.03-.001-.002-.006-.03-.001-.003-.007-.03v-.002a.354.354 0 0 0-.007-.03v-.002l-.009-.03v-.001l-.009-.032a.481.481 0 0 0-.02-.06v-.001l-.012-.03a.485.485 0 0 0-.012-.03l-.013-.03-.013-.028-.014-.03-.014-.028-.016-.028a1.103 1.103 0 0 1-.016-.027v-.001l-.016-.026-.001-.001a.478.478 0 0 0-.017-.025v-.002l-.017-.024s0-.002-.002-.002l-.017-.024-.002-.002c-.006-.008-.01-.016-.017-.024l-.001-.002-.019-.023-.002-.002-.018-.022-.002-.002-.02-.021a.01.01 0 0 1-.002-.003l-.019-.021a.01.01 0 0 1-.002-.003l-.019-.02a3663.992 3663.992 0 0 0-.023-.023l-.003-.003-.02-.02a43.362 43.362 0 0 1-.023-.02l-.003-.003a.528.528 0 0 0-.021-.019l-.003-.003a.43.43 0 0 0-.021-.017l-.003-.002-.022-.018-.003-.002-.023-.017-.003-.002-.023-.017-.003-.002-.023-.016-.003-.001-.024-.016-.002-.002-.025-.015h-.002l-.026-.016h-.002l-.027-.016h-.001a1.342 1.342 0 0 0-1.143 2.426l-.58 2.652h2.194l-.585-2.65c.502-.21.829-.7.829-1.243z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Safe);


/***/ }),

/***/ "9tzd":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sngls.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sngls = {
  symbol: 'sngls',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.913-10.766c5.63-.437 10.049-4.635 10.049-4.635s-4.295-4.088-9.81-4.614l-.422-.735-.75-1.25-.441.734-.73 1.25C9.294 12.522 5 16.59 5 16.6c0 0 4.42 4.198 10.049 4.635l.932 1.736.932-1.736zM5.932 16.599s4.054-2.768 8.223-3.473l-.662 1.141.518 1.012 1.403-2.302c.192-.01.384-.02.567-.02.182 0 .374.01.557.02l1.374 2.302.528-1.061-.634-1.102c4.17.695 8.224 3.404 8.224 3.473 0 .08-4.256 2.918-8.531 3.523l2.084-3.91-.566-.982-1.086 2.024-1.49 2.967c-.162.01-.316.01-.48.01-.163 0-.326 0-.49-.01l-2.026-3.989.01-.01-.52-.972-.566.982 2.084 3.9c-4.275-.615-8.53-3.523-8.521-3.523z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#B30D23"/><path fill="#FFF" fill-rule="nonzero" d="M16.913 21.234l-.932 1.736-.932-1.736C9.419 20.797 5 16.599 5 16.599c0-.01 4.294-4.078 9.809-4.614l.73-1.25.442-.735.75 1.25.422.735c5.514.526 9.809 4.614 9.809 4.614s-4.42 4.198-10.05 4.635zM5.932 16.599c-.01 0 4.246 2.908 8.521 3.523l-2.084-3.9.566-.982.52.972-.01.01 2.027 3.99c.163.01.326.01.49.01.163 0 .317 0 .48-.01l1.489-2.968 1.086-2.024.566.982-2.084 3.91c4.275-.605 8.53-3.443 8.53-3.523 0-.07-4.053-2.778-8.223-3.473l.634 1.102-.528 1.061-1.374-2.302a10.45 10.45 0 0 0-.557-.02c-.183 0-.375.01-.567.02l-1.403 2.302-.518-1.012.662-1.141c-4.169.705-8.223 3.473-8.223 3.473z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sngls);


/***/ }),

/***/ "9yQH":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bts.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bts = {
  symbol: 'bts',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.03 5l.006.003c-.006 2.575 0 5.15-.006 7.73a.163.163 0 0 0 .059.145l5.544 5.542c.277-.158.575-.286.89-.345.009-2.394 0-4.789.003-7.186a.648.648 0 0 0-.009-.129c-.061-.072-.14-.128-.213-.195L9.03 5zm7.447 8.607h.003c0 1.49-.01 2.98 0 4.468.338.068.661.2.95.388.718-.706 1.427-1.423 2.141-2.135.338-.344.691-.673 1.018-1.023a6.97 6.97 0 0 0-4.112-1.698zm-7.444.668l-.003-.003v5.819h4.472c.076-.342.212-.668.402-.963-1.624-1.616-3.243-3.24-4.87-4.853zm11.606 2.333v.003c-.846.843-1.695 1.686-2.535 2.532.167.247.289.521.359.81.017.056.017.158.105.138 1.467-.003 2.937.003 4.404-.003a6.942 6.942 0 0 0-1.7-4.1c-.225.197-.42.416-.633.62zM9.03 21.042a6.917 6.917 0 0 0 1.68 4.074c.027.044.064-.011.088-.029l3.1-3.092a2.733 2.733 0 0 1-.388-.948c-.221-.014-.44-.005-.659-.005h-3.82zm9.462.005c-.061.31-.178.607-.344.875.446.461.907.908 1.359 1.363l1.808 1.802a6.883 6.883 0 0 0 1.657-4.045h-2.596c-.63.005-1.254-.01-1.884.005zm-1.254 1.73l-.003-.003a2.61 2.61 0 0 1-.758.28v4.463a6.936 6.936 0 0 0 4.127-1.707l-3.156-3.15c-.07.035-.14.076-.21.117zm-4.591 1.794v.003c-.411.417-.834.822-1.237 1.245a6.936 6.936 0 0 0 4.113 1.698v-4.463a2.895 2.895 0 0 1-.951-.394c-.647.63-1.283 1.275-1.925 1.91z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#35BAEB"/><path d="M9.03 5l6.274 5.565c.073.067.152.123.213.195a.7.7 0 0 1 .009.129c-.003 2.397.006 4.792-.003 7.186a2.876 2.876 0 0 0-.89.345L9.09 12.878a.163.163 0 0 1-.059-.146c.006-2.578 0-5.154.006-7.73L9.03 5zm7.447 8.607a6.97 6.97 0 0 1 4.112 1.698c-.327.35-.68.68-1.018 1.023-.714.712-1.423 1.43-2.14 2.135a2.707 2.707 0 0 0-.952-.388c-.008-1.487 0-2.977 0-4.468h-.002zm-7.444.668c1.628 1.613 3.246 3.237 4.871 4.853-.19.295-.326.62-.402.963H9.03v-5.819l.003.003zm11.606 2.333c.213-.204.408-.423.633-.62a6.942 6.942 0 0 1 1.7 4.1c-1.467.006-2.937 0-4.404.003-.088.02-.088-.082-.105-.137a2.497 2.497 0 0 0-.359-.811c.84-.846 1.689-1.689 2.535-2.532v-.003zM9.03 21.042h3.821c.219 0 .438-.01.66.005.068.338.2.66.387.948l-3.1 3.092c-.023.018-.061.073-.088.03a6.918 6.918 0 0 1-1.68-4.075zm9.462.005c.63-.014 1.254 0 1.884-.005h2.596a6.883 6.883 0 0 1-1.657 4.045l-1.808-1.802c-.452-.455-.913-.902-1.36-1.363.167-.268.284-.565.345-.875zm-1.254 1.73c.07-.04.14-.082.21-.117l3.156 3.15a6.936 6.936 0 0 1-4.127 1.707v-4.463a2.61 2.61 0 0 0 .758-.28l.003.003zm-4.591 1.794c.642-.636 1.277-1.28 1.925-1.91.29.186.613.32.95.393v4.463a6.936 6.936 0 0 1-4.112-1.698c.403-.423.826-.828 1.237-1.245v-.003z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bts);


/***/ }),

/***/ "AAm9":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ont.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ont = {
  symbol: 'ont',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9-7.783V15.61C25 10.854 21.06 7 16.2 7c-2.43 0-4.63.964-6.223 2.521zM7 7.783v8.608C7 21.146 10.94 25 15.8 25c2.43 0 4.63-.964 6.223-2.521z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#32a4be" fill-rule="nonzero" r="16"/><path d="M25 24.217L9.977 9.521A8.871 8.871 0 0 1 16.2 7c4.86 0 8.8 3.854 8.8 8.609zM7 7.783l15.023 14.696A8.871 8.871 0 0 1 15.8 25C10.94 25 7 21.146 7 16.391z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ont);


/***/ }),

/***/ "ANM4":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nxs.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nxs = {
  symbol: 'nxs',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M10.618 31.072c3.323-.561 7.186-2.1 10.933-4.533 5.432-3.528 9.244-8.042 10.398-11.82.034.422.051.85.051 1.281 0 8.837-7.163 16-16 16-1.888 0-3.7-.327-5.382-.928zM2.005 23.76A15.928 15.928 0 0 1 0 16C0 7.163 7.163 0 16 0c6.12 0 11.437 3.435 14.128 8.483-3.574-2.143-10.902-.705-17.836 3.798a34.973 34.973 0 0 0-4.105 3.11A2 2 0 0 0 5.4 18.2c-1.623 1.885-2.789 3.795-3.394 5.56zm3.75-5.195a2 2 0 0 0 2.881-2.716c.54-.423 1.114-.833 1.717-1.225 5.442-3.534 11.245-4.256 12.962-1.613 1.716 2.643-1.304 7.65-6.746 11.185-5.442 3.534-11.245 4.256-12.961 1.613-1.136-1.75-.197-4.536 2.146-7.244z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#4099CD"/><path fill="#FFF" d="M2.005 23.76c.605-1.764 1.771-3.674 3.395-5.56a2 2 0 0 1 2.788-2.81 34.973 34.973 0 0 1 4.104-3.109c6.934-4.503 14.262-5.94 17.836-3.798a15.9 15.9 0 0 1 1.821 6.236c-1.154 3.778-4.966 8.292-10.398 11.82-3.747 2.433-7.61 3.972-10.933 4.533a16.052 16.052 0 0 1-8.613-7.312zm3.75-5.195c-2.344 2.708-3.283 5.494-2.147 7.244 1.716 2.643 7.52 1.92 12.961-1.613 5.442-3.534 8.462-8.542 6.746-11.185-1.717-2.643-7.52-1.92-12.962 1.613-.603.392-1.177.802-1.717 1.225a2 2 0 0 1-2.881 2.716z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nxs);


/***/ }),

/***/ "AQC3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/etc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Etc = {
  symbol: 'etc',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.732-16L16 12.19 9.268 16 16 19.781l6.732-3.783zM16 21.047a3944.37 3944.37 0 0 0-7-3.952c2.079 3.248 4.66 7.26 7 10.904 2.34-3.643 4.921-7.656 7-10.904a3944.185 3944.185 0 0 0-7 3.952zm0-10.089l7 3.907L16 4 9 14.866l7-3.907z"/><path fill-opacity=".296" fill-rule="nonzero" d="M22.71 15.976l-6.721.577v-4.379l6.72 3.802zm-6.721 5.038c1.98-1.12 4.537-2.564 6.988-3.944-2.076 3.242-4.652 7.246-6.988 10.882v-6.938zm0-10.069V4l6.988 10.845-6.988-3.9z"/><path fill-opacity=".803" d="M15.989 16.553l6.72-.577-6.72 3.775z"/><path opacity=".311" d="M15.988 16.553l-6.721-.577 6.721 3.775z"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#328332"/><g fill="#FFF"><path fill-rule="nonzero" d="M15.989 16.553l-6.721-.577 6.72-3.802v4.379zm0 4.46v6.94C13.652 24.315 11.076 20.311 9 17.07c2.45 1.38 5.008 2.823 6.989 3.944zm0-10.068L9 14.845 15.989 4v6.945z"/><path fill-opacity=".601" fill-rule="nonzero" d="M22.71 15.976l-6.721.577v-4.379l6.72 3.802zm-6.721 5.038c1.98-1.12 4.537-2.564 6.988-3.944-2.076 3.242-4.652 7.246-6.988 10.882v-6.938zm0-10.069V4l6.988 10.845-6.988-3.9z"/><path opacity=".2" d="M15.989 16.553l6.72-.577-6.72 3.775z"/><path opacity=".603" d="M15.988 16.553l-6.721-.577 6.721 3.775z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Etc);


/***/ }),

/***/ "AU93":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xpm.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xpm = {
  symbol: 'xpm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8-16.438V8h-3.455v7.475c0 3.313-2.854 3.153-2.854 3.153V8h-3.47v10.628s-2.766.029-2.766-3.11V8H8v7.24c0 6.015 5.284 6.234 6.207 6.234v1.168h-2.123v1.562h2.127V26h3.48v-1.796h2.224v-1.562h-2.224V21.49c2.883 0 6.309-1.504 6.309-5.927z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ffd81b" r="16"/><path d="M24 15.562c0 4.423-3.426 5.927-6.31 5.927v1.153h2.225v1.562h-2.224V26h-3.48v-1.796h-2.127v-1.562h2.123v-1.168c-.923 0-6.207-.219-6.207-6.233V8h3.455v7.518c0 3.139 2.766 3.11 2.766 3.11V8h3.47v10.628s2.854.16 2.854-3.153V8H24z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xpm);


/***/ }),

/***/ "AWUt":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/chat.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Chat = {
  symbol: 'chat',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.28-8.675c1.028.711 2.332 1.134 3.744 1.134.351 0 .698-.026 1.039-.077.117.048.23.107.369.187.3.176.701.446 1.2.81.409.299.988.01.988-.493v-1.461c.21-.136.408-.283.595-.442C25.345 22.025 26 20.715 26 19.31c0-.925-.28-1.79-.772-2.537a7.929 7.929 0 0 1-.627 1.53c.104.323.159.66.159 1.007 0 1.034-.488 2.01-1.352 2.742a4.679 4.679 0 0 1-.717.499.612.612 0 0 0-.311.531v.624c-.593-.38-1-.559-1.31-.559a.627.627 0 0 0-.104.009 5.696 5.696 0 0 1-2.602-.17 11.45 11.45 0 0 1-2.083.34zm-7.466-2.922a9.27 9.27 0 0 0 1.044.765v2.492c0 .63.725.99 1.236.616 1.41-1.03 2.39-1.612 2.635-1.67.566.09 1.144.135 1.728.135 5.2 0 9.458-3.607 9.458-8.12 0-4.514-4.259-8.121-9.458-8.121S6 10.107 6 14.62c0 2.21 1.03 4.271 2.814 5.783zm4.949.666c-.503 0-1.238.355-2.354 1.104v-1.437a.765.765 0 0 0-.39-.664 7.815 7.815 0 0 1-1.196-.833C8.37 18.01 7.55 16.366 7.55 14.62c0-3.61 3.516-6.588 7.907-6.588 4.392 0 7.907 2.978 7.907 6.588s-3.515 6.589-7.907 6.589c-.53 0-1.053-.044-1.564-.13a.784.784 0 0 0-.13-.01zm-2.337-4.916c.685 0 1.24-.55 1.24-1.226 0-.677-.555-1.226-1.24-1.226-.685 0-1.24.549-1.24 1.226 0 .677.555 1.226 1.24 1.226zm4.031 0c.685 0 1.24-.55 1.24-1.226 0-.677-.555-1.226-1.24-1.226-.685 0-1.24.549-1.24 1.226 0 .677.555 1.226 1.24 1.226zm4.031 0c.685 0 1.24-.55 1.24-1.226 0-.677-.555-1.226-1.24-1.226-.685 0-1.24.549-1.24 1.226 0 .677.555 1.226 1.24 1.226z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1C98F7"/><path fill="#FFF" d="M16.28 23.325a11.45 11.45 0 0 0 2.084-.34 5.696 5.696 0 0 0 2.602.17.627.627 0 0 1 .104-.008c.31 0 .717.18 1.31.56v-.625a.61.61 0 0 1 .311-.531c.258-.146.498-.314.717-.499.864-.732 1.352-1.708 1.352-2.742 0-.347-.055-.684-.159-1.006.261-.487.472-.999.627-1.53A4.59 4.59 0 0 1 26 19.31c0 1.405-.654 2.715-1.785 3.673a5.843 5.843 0 0 1-.595.442v1.461c0 .503-.58.792-.989.493a15.032 15.032 0 0 0-1.2-.81 2.986 2.986 0 0 0-.368-.187c-.34.051-.688.077-1.039.077-1.412 0-2.716-.423-3.743-1.134zm-7.466-2.922C7.03 18.89 6 16.829 6 14.62c0-4.513 4.258-8.12 9.457-8.12 5.2 0 9.458 3.607 9.458 8.12 0 4.514-4.259 8.121-9.458 8.121-.584 0-1.162-.045-1.728-.135-.245.058-1.224.64-2.635 1.67-.511.374-1.236.013-1.236-.616v-2.492a9.27 9.27 0 0 1-1.044-.765zm4.949.666c.043 0 .087.003.13.01.51.086 1.034.13 1.564.13 4.392 0 7.907-2.978 7.907-6.589 0-3.61-3.515-6.588-7.907-6.588-4.39 0-7.907 2.978-7.907 6.588 0 1.746.821 3.39 2.273 4.62.365.308.766.588 1.196.832.241.136.39.39.39.664v1.437c1.116-.749 1.85-1.104 2.354-1.104zm-2.337-4.916c-.685 0-1.24-.55-1.24-1.226 0-.677.555-1.226 1.24-1.226.685 0 1.24.549 1.24 1.226 0 .677-.555 1.226-1.24 1.226zm4.031 0c-.685 0-1.24-.55-1.24-1.226 0-.677.555-1.226 1.24-1.226.685 0 1.24.549 1.24 1.226 0 .677-.555 1.226-1.24 1.226zm4.031 0c-.685 0-1.24-.55-1.24-1.226 0-.677.555-1.226 1.24-1.226.685 0 1.24.549 1.24 1.226 0 .677-.555 1.226-1.24 1.226z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Chat);


/***/ }),

/***/ "AjzI":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gbp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gbp = {
  symbol: 'gbp',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.913-17.185H9v2.637h2.087v4.462L9 22.523V24.5h13.947v-2.713h-8.585v-4.335h6.578v-2.637h-6.578V12.56c0-1.952 1.057-3.169 2.827-3.169 1.479 0 2.377.685 3.328 1.85L23 9.34c-1.268-1.598-2.906-2.84-5.838-2.84-3.856 0-6.075 2.307-6.075 5.983z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#bc3fe0" r="16"/><path d="M11.087 14.815v-2.332c0-3.676 2.219-5.983 6.075-5.983 2.932 0 4.57 1.242 5.838 2.84l-2.483 1.9c-.951-1.165-1.85-1.85-3.328-1.85-1.77 0-2.827 1.217-2.827 3.17v2.255h6.578v2.637h-6.578v4.335h8.585V24.5H9v-1.977l2.087-.609v-4.462H9v-2.637z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gbp);


/***/ }),

/***/ "ApMj":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/chips.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Chips = {
  symbol: 'chips',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M13.548 25.408c1.005.334 2.055.515 3.14.573a10.47 10.47 0 0 0 2.122-.082 9.368 9.368 0 0 0 3.379-1.17c.27-.157.522-.342.777-.511l-3.072-3.038c-.033.025-.073.059-.116.085-.304.184-.593.402-.916.542-.894.388-1.83.472-2.778.324a295794.354 295794.354 0 0 1-2.536 3.277zm-.966-.376a.49.49 0 0 1 .036-.149l1.445-3.49a5.052 5.052 0 0 1-1.124-.971 6.278 6.278 0 0 1-1.19-2.035l-.112.014c-.441.058-.746-.418-.498-.778l.308-.447a7.81 7.81 0 0 1-.089-1.004c-.016-.654.059-1.3.217-1.935.373-1.499 1.17-2.715 2.5-3.56a5.29 5.29 0 0 1 2.409-.815 683038.836 683038.836 0 0 0 2.572-3.734c-.397-.063-.8-.103-1.21-.12-.663-.03-1.333.028-1.996.084a9.661 9.661 0 0 0-2.565.59c-1.737.648-3.205 1.657-4.323 3.13C7.751 11.41 7.15 13.226 7.027 15.2c-.048.77-.034 1.542.062 2.308.125.989.376 1.946.786 2.86.794 1.768 2.024 3.157 3.711 4.15.326.192.658.363.996.514zm7.443-18.698a.49.49 0 0 1-.02.28l-.034.088-1.283 3.375c.425.134.826.33 1.2.596.122.086.185.07.285-.03.908-.9 1.82-1.796 2.732-2.694.029-.028.053-.06.095-.108l-.083-.058c-.132-.103-.258-.214-.396-.308a8.188 8.188 0 0 0-2.496-1.141zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.321-14.718l-3.223 7.789.043.03 8.9-11.51-5.576.88 3.055-8.03-.044-.02-7.908 11.482 4.753-.62z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#598182" fill-rule="nonzero" r="16"/><path d="M13.548 25.408a295794.354 295794.354 0 0 0 2.536-3.277c.949.148 1.884.064 2.778-.324.323-.14.612-.358.916-.542.043-.026.083-.06.116-.085l3.072 3.038c-.255.17-.508.354-.777.512a9.368 9.368 0 0 1-3.379 1.17 10.47 10.47 0 0 1-2.122.08 11.919 11.919 0 0 1-3.14-.572zm-.966-.376a9.992 9.992 0 0 1-.996-.514 8.953 8.953 0 0 1-3.71-4.15 9.975 9.975 0 0 1-.787-2.86 12.322 12.322 0 0 1-.062-2.308c.123-1.975.724-3.79 1.935-5.387 1.118-1.474 2.586-2.483 4.323-3.13a9.661 9.661 0 0 1 2.565-.59c.663-.057 1.333-.114 1.996-.085.41.017.813.057 1.21.12a683038.836 683038.836 0 0 1-2.572 3.734 5.29 5.29 0 0 0-2.41.816c-1.33.844-2.126 2.06-2.5 3.56a7.241 7.241 0 0 0-.216 1.934c.009.342.038.677.089 1.004l-.308.447c-.248.36.057.836.498.778l.112-.014c.258.729.649 1.41 1.19 2.035.336.386.711.71 1.124.97l-1.445 3.491a.49.49 0 0 0-.036.15zm7.443-18.698a8.188 8.188 0 0 1 2.496 1.141c.138.094.264.205.396.308.025.019.051.036.083.058-.042.048-.066.08-.095.108-.911.898-1.824 1.793-2.732 2.694-.1.1-.163.116-.284.03a4.28 4.28 0 0 0-1.201-.596l1.283-3.375.034-.087a.488.488 0 0 0 .02-.281zm-3.704 10.948l-4.753.621L19.476 6.42l.044.02-3.055 8.031 5.575-.88-8.899 11.51-.043-.03 3.223-7.789z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Chips);


/***/ }),

/***/ "AsJz":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tzc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tzc = {
  symbol: 'tzc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" dd="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.7-16.6h3.5v-2.8H10.8v2.8h3.5v10.456a10.065 10.065 0 0 0 4-.122v-2.91a7.144 7.144 0 0 1-.6.174zm1.4 10.11C23.105 24.205 26 20.44 26 16c0-5.523-4.477-10-10-10S6 10.477 6 16c0 4.44 2.895 8.205 6.9 9.51V22.5a7.2 7.2 0 1 1 6.2 0z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#374851" r="16"/><path d="M17.7 15.4v7.598c.204-.05.404-.107.6-.173v2.91a10.029 10.029 0 0 1-4 .121V15.4h-3.5v-2.8h10.4v2.8zm1.4 10.11V22.5a7.2 7.2 0 1 0-6.2 0v3.01C8.895 24.205 6 20.44 6 16c0-5.523 4.477-10 10-10s10 4.477 10 10c0 4.44-2.895 8.205-6.9 9.51z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tzc);


/***/ }),

/***/ "B+zY":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bab.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bab = {
  symbol: 'bab',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.77-18.05h4.87l.36-2h-4.71a4.78 4.78 0 0 0-2.59.86c-.28-1-3-.86-3-.86l.36-2H17l-.36 2h-1.11l.31-2h-1.15l-.42 2h-1.19l-.61 3.12-.81-3.06H9l-5 7.35h4.12l.42-1.95H7.7l2.4-3.51.9 3.53h-.9l-.39 1.93h3.06l-.25 1.34h1.2l.28-1.34h1l-.25 1.34H16l.25-1.34h1.56a3 3 0 0 0 1.87-.95 3.2 3.2 0 0 0 2.2.95h4.71l.31-1.95h-4.23c-2.91-.05-1.67-3.48.1-3.46zm-5.29 3.41h-3.12l.25-.95h3c.76.05.51.95-.13.95zm.47-2.56h-3.12l.25-.95h3c.76.05.48.99-.13.99v-.04z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F19F13"/><path d="M22.77 13.95h4.87l.36-2h-4.71a4.78 4.78 0 0 0-2.59.86c-.28-1-3-.86-3-.86l.36-2H17l-.36 2h-1.11l.31-2h-1.15l-.42 2h-1.19l-.61 3.12-.81-3.06H9l-5 7.35h4.12l.42-1.95H7.7l2.4-3.51.9 3.53h-.9l-.39 1.93h3.06l-.25 1.34h1.2l.28-1.34h1l-.25 1.34H16l.25-1.34h1.56a3 3 0 0 0 1.87-.95 3.2 3.2 0 0 0 2.2.95h4.71l.31-1.95h-4.23c-2.91-.05-1.67-3.48.1-3.46zm-5.29 3.41h-3.12l.25-.95h3c.76.05.51.95-.13.95zm.47-2.56h-3.12l.25-.95h3c.76.05.48.99-.13.99v-.04z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bab);


/***/ }),

/***/ "B+zj":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xsg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xsg = {
  symbol: 'xsg',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.14-26.145l8.169 4.705 2.457-1.428L16.14 3v2.855zm8.332 14.417l2.481 1.428V9.436l-2.48 1.428v9.408zm-8.332 5.009v2.855l10.626-6.132-2.457-1.427-8.169 4.704zM5.164 22.004l10.625 6.132v-2.855l-8.144-4.704-2.481 1.427zM5 9.436V21.7l2.457-1.428v-9.408L5 9.436zm.164-.304l2.48 1.428 8.145-4.705V3L5.164 9.132zm10.824-3.008L7.797 10.83v9.455l8.191 4.728 8.168-4.728V10.83l-8.168-4.705zm6.577 8.45l-.351.608-2.34-1.31-2.996 1.684 2.995 1.685 2.34-1.31.352.608-1.966 1.1 1.966 1.1-.351.609-1.966-1.1v2.2h-.726V17.85l-2.995-1.685v3.37l2.317 1.287-.351.597-1.966-1.1v2.2H15.8v-2.2l-1.966 1.1-.374-.608 2.34-1.288v-3.358l-2.996 1.685v2.598h-.749v-2.2l-1.942 1.1-.375-.609 1.966-1.1-1.966-1.1.375-.608 2.317 1.31 3.019-1.685-3.02-1.685-2.316 1.31-.375-.608 1.966-1.1-1.966-1.1.375-.608 1.942 1.1v-2.212h.75v2.598l2.995 1.685v-3.358l-2.317-1.288.351-.608 1.966 1.1v-2.2h.726v2.2l1.966-1.1.35.608-2.316 1.288v3.37l2.995-1.685v-2.61h.726v2.2l1.966-1.1.35.609-1.965 1.1 1.966 1.111z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#D21E2B"/><path d="M16.14 5.855V3l10.626 6.132-2.457 1.428zm8.332 14.417v-9.408l2.481-1.428V21.7l-2.48-1.428zm-8.332 5.009l8.169-4.704 2.457 1.427-10.626 6.132v-2.855zM5.164 22.004l2.48-1.427 8.145 4.704v2.855L5.164 22.004zM5 9.436l2.457 1.428v9.408L5 21.7zm.164-.304L15.789 3v2.855L7.645 10.56zm10.824-3.008L7.797 10.83v9.455l8.191 4.728 8.168-4.728V10.83l-8.168-4.705zm6.577 8.45l-.351.608-2.34-1.31-2.996 1.684 2.995 1.685 2.34-1.31.352.608-1.966 1.1 1.966 1.1-.351.609-1.966-1.1v2.2h-.726V17.85l-2.995-1.685v3.37l2.317 1.287-.351.597-1.966-1.1v2.2H15.8v-2.2l-1.966 1.1-.374-.608 2.34-1.288v-3.358l-2.996 1.685v2.598h-.749v-2.2l-1.942 1.1-.375-.609 1.966-1.1-1.966-1.1.375-.608 2.317 1.31 3.019-1.685-3.02-1.685-2.316 1.31-.375-.608 1.966-1.1-1.966-1.1.375-.608 1.942 1.1v-2.212h.75v2.598l2.995 1.685v-3.358l-2.317-1.288.351-.608 1.966 1.1v-2.2h.726v2.2l1.966-1.1.35.608-2.316 1.288v3.37l2.995-1.685v-2.61h.726v2.2l1.966-1.1.35.609-1.965 1.1 1.966 1.111z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xsg);


/***/ }),

/***/ "B/wV":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nlg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nlg = {
  symbol: 'nlg',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.515-17.196c-1.518.022-7.748.008-9.344.017-.059 0-.166.11-.167.169-.012.67-.013 1.339 0 2.008.002.063.117.178.18.178 2.394.009 4.788.007 7.183.014.043 0 .13.095.124.133-.643 3.832-4.157 6.577-8.035 6.285-4.278-.323-7.486-4.068-7.035-8.317.334-3.14 2.025-5.37 4.982-6.447 2.923-1.065 5.596-.439 7.903 1.675.032.029.136.033.164.005a119.48 119.48 0 0 0 1.521-1.521c.026-.026.03-.118.008-.14-2.236-2.13-4.892-3.096-7.968-2.816-5.432.494-9.5 5.41-8.987 10.827.528 5.58 5.358 9.596 10.922 9.082 5.396-.5 9.464-5.362 8.998-10.74-.015-.164-.044-.268-.113-.331-.067-.061-.171-.083-.336-.08z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2AB0FD"/><path fill="#FFF" d="M25.515 14.804c.165-.002.27.02.336.08.07.064.098.168.113.331.466 5.379-3.602 10.241-8.998 10.74-5.564.515-10.394-3.5-10.922-9.08C5.53 11.456 9.599 6.54 15.03 6.046c3.076-.28 5.732.686 7.968 2.816.023.022.018.114-.008.14a119.48 119.48 0 0 1-1.52 1.521c-.029.028-.133.024-.165-.005-2.307-2.114-4.98-2.74-7.903-1.675C10.446 9.92 8.755 12.15 8.42 15.29c-.45 4.249 2.757 7.994 7.035 8.317 3.878.292 7.392-2.453 8.035-6.285.006-.038-.08-.133-.124-.133-2.395-.007-4.79-.005-7.184-.014-.062 0-.177-.115-.179-.178a53.477 53.477 0 0 1 0-2.008c.001-.06.108-.168.167-.169 1.596-.009 7.826.005 9.344-.017z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nlg);


/***/ }),

/***/ "B1iE":
/*!**************************************!*\
  !*** /node_modules/lodash/lodash.js ***!
  \**************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.4';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(args) {
      args.push(undefined, customDefaultsAssignIn);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ "h6ac"), __webpack_require__(/*! ./../webpack/buildin/module.js */ "l262")(module)))

/***/ }),

/***/ "BAMT":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fjc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fjc = {
  symbol: 'fjc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16.194 12.326h-.003.003L15.51 15.3c.426.094.87.25 1.308.127a.9.9 0 0 0 .593-.604c.082-.263.123-.533.195-.795l.724.184c.032.005-.005.024.015.003l.018-.014c.3-.322.642-.675.912-1.016a5.262 5.262 0 0 0-1.403-.469l-1.634-.38.004-.009h-.046zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.306-20.172c.049-.079.093-.184.138-.274A12.038 12.038 0 0 0 22 5.644c-1.435-.828-2.95-1.35-4.598-1.531.61 2.662 1.474 5.24 2.723 7.669l.181.046zm-8.229-.455l-.044-.01-.35-.08v-.006h-.005l.315-1.373c.233.05.466.105.698.162h.005a32.523 32.523 0 0 0 1.976-5.953A11.977 11.977 0 0 0 8.76 6.468v.004A12.015 12.015 0 0 0 4 15.798v.24a12.169 12.169 0 0 0 4.144 1.466l.007-.007a33.108 33.108 0 0 0 3.93-6.123h-.003zm7.514 2.025l-.056-.038c-.27.342-.533.622-.833.937l.085.016.11.037-1.082 4.688-1.298-.3c.068-.383.237-.765.158-1.163a.938.938 0 0 0-.559-.637c-.292-.139-.618-.188-.93-.263l-.604 2.622c-.037.177-.037.375.075.525.09.132.244.2.394.237l.964.225-.289 1.155c3.38-.033 6.82.494 10.05 1.488.528-.714.75-.998 1.107-1.81-1.973-1.83-3.598-4.158-5.063-6.413l-.36 1.563-1.451-.337c.123-.585.24-1.208.067-1.8-.125-.393-.223-.591-.485-.732zM8.18 17.805c-.965 1.189-1.974 2.345-3.097 3.386.352.814.577.986 1.102 1.699a35.54 35.54 0 0 1 5.449-1.189c.094-.409.116-.521.206-.934l-2.216-.513c.105-.454.214-.912.315-1.37.334.065.664.155.994.222.162.04.333.01.472-.082.139-.102.21-.27.248-.432l.213-.817a1.89 1.89 0 0 0-.213.019c-.919.13-1.815.112-2.738.03-.258-.027-.452-.006-.704-.062l-.03.043zm5.145 3.304l-.09.45.949-.068.03-.176-.889-.206zm-1.639-3.578c.07-.01.14-.016.21-.019v-.004l1.143-4.95c.045-.225.135-.45.064-.675a.555.555 0 0 0-.348-.347l-.037-.012c-.19-.051-.044-.015-.237-.06-.021-.005-.117.027-.139.023a32.422 32.422 0 0 1-3.892 6.048c.252.052.21.037.461.063.925.085 1.856.062 2.775-.067zm2.543-7.114v.004c.176-.743.341-1.489.521-2.231l1.478.34-.514 2.232.885.206c.088-.371.175-.743.26-1.115l.129-.558.129-.558 1.477.338c-.02.1-.042.2-.064.3-.143.646-.302 1.287-.445 1.936l1.702.396c-1.25-2.43-2.077-4.97-2.686-7.632-.382-.045-.543-.03-.93-.037h-.236c-.424 0-.581-.011-.997.037-.467 2.043-1.02 4.186-1.87 6.102l1.161.24zm12.735.739C25.93 8.842 24.455 7.1 22.262 5.83c-.002 2.072-.5 3.921-1.518 5.726a4.087 4.087 0 0 0-.169.347c.686.15 1.114.242 1.8.396v.007l-.442 1.987c1.462 2.254 3.093 4.736 5.062 6.566.628-1.432.97-2.973 1.005-4.537v-.563a12.053 12.053 0 0 0-1.035-4.604zM4 16.3v.173c.023 1.599.365 2.914 1.005 4.38a28.767 28.767 0 0 0 2.951-3.165C6.501 17.456 5.275 17.04 4 16.3zm11.685 5.4l-.503 2.19h-.003l-1.485-.34.413-1.797-.945.067-.35 1.523h-.002l-1.486-.341c.075-.338.15-.668.233-1.001-1.769.24-3.515.625-5.22 1.151a12.015 12.015 0 0 0 9.457 4.886h.491a12.045 12.045 0 0 0 9.379-4.886 32.818 32.818 0 0 0-9.979-1.452z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00AFEC"/><g fill="#FFF"><path d="M20.306 11.828c.049-.079.093-.184.138-.274A12.038 12.038 0 0 0 22 5.644c-1.435-.828-2.95-1.35-4.598-1.531.61 2.662 1.474 5.24 2.723 7.669l.181.046zm-8.228-.455l-.045-.01-.35-.08v-.006h-.005l.315-1.373c.233.05.466.105.698.162h.005a32.523 32.523 0 0 0 1.977-5.953 11.977 11.977 0 0 0-5.914 2.355v.004A12.015 12.015 0 0 0 4 15.798v.24a12.169 12.169 0 0 0 4.144 1.466l.007-.007a33.108 33.108 0 0 0 3.93-6.123h-.003zm7.512 2.025c.263.14.361.34.486.732.173.592.056 1.215-.067 1.8l1.451.337.36-1.563c1.465 2.255 3.09 4.584 5.063 6.412-.358.813-.58 1.097-1.107 1.811-3.23-.994-6.67-1.521-10.05-1.488l.289-1.155-.964-.225c-.15-.038-.303-.105-.393-.237-.113-.15-.113-.348-.075-.525l.603-2.622c.312.075.638.124.93.263a.938.938 0 0 1 .559.637c.079.398-.09.78-.158 1.163l1.298.3 1.082-4.688-.11-.037-.085-.016c.3-.315.562-.595.833-.937l.056.038zM8.182 17.805l.031-.043c.252.056.446.035.704.062.923.082 1.819.1 2.738-.03.07-.01.142-.017.213-.02l-.213.818c-.038.162-.109.33-.248.432a.596.596 0 0 1-.472.082c-.33-.067-.66-.157-.994-.221-.101.457-.21.915-.315 1.369l2.216.513c-.09.413-.112.525-.206.934a35.54 35.54 0 0 0-5.449 1.189c-.525-.713-.75-.885-1.102-1.699 1.122-1.04 2.132-2.197 3.097-3.386zm5.145 3.304l.889.206-.03.176-.949.068.09-.45zm-1.639-3.579a2.06 2.06 0 0 1 .208-.018v-.004l1.144-4.95c.045-.225.135-.45.064-.675a.555.555 0 0 0-.348-.347l-.037-.012c-.19-.051-.044-.015-.237-.06-.021-.005-.117.027-.139.023a32.423 32.423 0 0 1-3.892 6.047c.251.053.21.038.461.064.925.085 1.856.062 2.775-.067z"/><path d="M14.23 10.417v.004c.176-.743.341-1.489.521-2.231l1.478.34-.514 2.232.885.206c.088-.371.175-.743.26-1.115l.129-.558.129-.558 1.477.337c-.02.1-.042.2-.064.3-.143.647-.302 1.288-.445 1.937l1.701.396c-1.249-2.43-2.076-4.97-2.685-7.632-.382-.045-.543-.03-.93-.037h-.236c-.424 0-.581-.011-.997.037-.468 2.043-1.02 4.186-1.87 6.102l1.161.24zm1.961 1.909l.045.01.005-.01z"/><path d="M16.195 12.325l-.686 2.974c.426.094.87.25 1.308.127a.9.9 0 0 0 .593-.604c.082-.263.123-.533.195-.795l.724.184c.032.005-.005.024.016.003l.018-.014c.3-.322.64-.675.91-1.016a5.262 5.262 0 0 0-1.402-.469l-1.676-.39zm10.77-1.169C25.93 8.842 24.455 7.1 22.262 5.83c-.002 2.072-.5 3.921-1.518 5.726a4.087 4.087 0 0 0-.169.347c.686.15 1.114.242 1.8.396v.007l-.442 1.987c1.462 2.254 3.093 4.736 5.062 6.566.628-1.432.97-2.973 1.005-4.537v-.563a12.053 12.053 0 0 0-1.035-4.604zM4 16.3v.173c.023 1.599.365 2.914 1.005 4.38a28.767 28.767 0 0 0 2.951-3.165C6.501 17.456 5.275 17.04 4 16.3zm11.685 5.4l-.503 2.19h-.003l-1.485-.34.413-1.797-.945.067-.35 1.523h-.002l-1.486-.341c.076-.338.15-.668.233-1.001-1.769.24-3.515.625-5.22 1.151a12.015 12.015 0 0 0 9.457 4.886h.491a12.045 12.045 0 0 0 9.379-4.886 32.818 32.818 0 0 0-9.979-1.452z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fjc);


/***/ }),

/***/ "BGAn":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/trtl.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Trtl = {
  symbol: 'trtl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.006-26.4c.394 0 .781.103 1.122.3l7.16 4.134a2.245 2.245 0 0 1 1.122 1.945v8.434c0 .802-.427 1.543-1.122 1.944l-7.161 4.135a2.245 2.245 0 0 1-2.245 0L7.72 22.357a2.246 2.246 0 0 1-1.123-1.944v-8.434c0-.802.428-1.543 1.123-1.945L14.88 5.9c.342-.197.73-.301 1.123-.301h.002zm-.002-1.561a3.81 3.81 0 0 0-1.902.51L6.94 8.682a3.816 3.816 0 0 0-1.903 3.296v8.434a3.816 3.816 0 0 0 1.903 3.296l7.16 4.134c1.178.68 2.629.68 3.806 0l7.161-4.134a3.816 3.816 0 0 0 1.903-3.296v-8.434a3.816 3.816 0 0 0-1.903-3.296l-7.16-4.135a3.81 3.81 0 0 0-1.904-.51zm4.89 11.91h-1.662a.468.468 0 0 0-.405.234l-.863 1.493a.468.468 0 0 0 0 .468L19 19.936a13.072 13.072 0 0 0 1.895-3.987zm-5.767 1.57h1.758a.467.467 0 0 0 .405-.233l.862-1.493a.468.468 0 0 0 0-.468l-.862-1.493a.468.468 0 0 0-.405-.234h-1.758a.468.468 0 0 0-.406.234l-.861 1.493a.468.468 0 0 0 0 .468l.861 1.493a.468.468 0 0 0 .406.234zm-2.349-2.35a.47.47 0 0 0 .406-.234l.861-1.493a.468.468 0 0 0 0-.468l-1.074-1.861-2.097 1.144a.468.468 0 0 0-.243.421c.017.838.115 1.672.291 2.491h1.856zm6.455 0h1.856c.176-.82.274-1.653.291-2.491a.468.468 0 0 0-.244-.421l-2.096-1.144-1.074 1.861a.468.468 0 0 0 0 .468l.862 1.493a.468.468 0 0 0 .405.234zm-3.003-5.59a.468.468 0 0 0-.448 0l-2.126 1.16 1.066 1.845a.468.468 0 0 0 .405.234h1.758a.467.467 0 0 0 .405-.234l1.066-1.845-2.126-1.16zM15.127 18.3a.468.468 0 0 0-.406.234l-1.2 2.08a13.21 13.21 0 0 0 2.199 2.159.47.47 0 0 0 .573 0 13.21 13.21 0 0 0 2.198-2.16l-1.2-2.079a.468.468 0 0 0-.405-.234h-1.76zm-4.011-2.351a13.072 13.072 0 0 0 1.895 3.987l1.035-1.792a.468.468 0 0 0 0-.468l-.862-1.493a.468.468 0 0 0-.405-.234h-1.663z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00843D"/><g fill="#FFF"><path d="M16.006 5.6c.394 0 .781.103 1.122.3l7.16 4.134a2.245 2.245 0 0 1 1.122 1.945v8.434c0 .802-.427 1.543-1.122 1.944l-7.161 4.135a2.245 2.245 0 0 1-2.245 0L7.72 22.357a2.246 2.246 0 0 1-1.123-1.944v-8.434c0-.802.428-1.543 1.123-1.945L14.88 5.9c.342-.197.73-.301 1.123-.301h.002zm-.002-1.561a3.81 3.81 0 0 0-1.902.51L6.94 8.682a3.816 3.816 0 0 0-1.903 3.296v8.434a3.816 3.816 0 0 0 1.903 3.296l7.16 4.134c1.178.68 2.629.68 3.806 0l7.161-4.134a3.816 3.816 0 0 0 1.903-3.296v-8.434a3.816 3.816 0 0 0-1.903-3.296l-7.16-4.135a3.81 3.81 0 0 0-1.904-.51z"/><path d="M15.127 17.52a.468.468 0 0 1-.406-.234l-.861-1.493a.468.468 0 0 1 0-.468l.861-1.493a.468.468 0 0 1 .406-.234h1.758a.47.47 0 0 1 .405.234l.862 1.493a.468.468 0 0 1 0 .468l-.862 1.493a.468.468 0 0 1-.405.234h-1.758zm-2.349-2.351a.47.47 0 0 0 .406-.234l.861-1.493a.468.468 0 0 0 0-.468l-1.074-1.861-2.097 1.144a.468.468 0 0 0-.243.421c.017.838.115 1.672.291 2.491h1.856zm6.455 0a.468.468 0 0 1-.405-.234l-.862-1.493a.468.468 0 0 1 0-.468l1.074-1.861 2.096 1.144a.468.468 0 0 1 .244.42 13.157 13.157 0 0 1-.29 2.492h-1.857zM16.23 9.578a.468.468 0 0 0-.448 0l-2.126 1.16 1.066 1.846a.468.468 0 0 0 .405.234h1.758a.467.467 0 0 0 .405-.234l1.066-1.845-2.126-1.16zm-5.114 6.371a13.072 13.072 0 0 0 1.895 3.987l1.035-1.792a.468.468 0 0 0 0-.468l-.862-1.493a.468.468 0 0 0-.405-.234h-1.663zm9.778 0A13.072 13.072 0 0 1 19 19.936l-1.035-1.792a.468.468 0 0 1 0-.468l.863-1.493a.468.468 0 0 1 .405-.234h1.662zM15.127 18.3a.468.468 0 0 0-.406.234l-1.2 2.08a13.21 13.21 0 0 0 2.199 2.159.47.47 0 0 0 .573 0 13.21 13.21 0 0 0 2.198-2.16l-1.2-2.079a.468.468 0 0 0-.405-.234h-1.76z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Trtl);


/***/ }),

/***/ "Bco6":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xlm.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xlm = {
  symbol: 'xlm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M12.779 13.527c-1.689-.356-4.167-.057-6.64 3.167-.119.156-.178.392.147.289.782-.247 2.4-.53 4.352.423l-.053.096c-.374.664-.166 1.026.5 1.506l.002.001a2.585 2.585 0 0 0-.62.635c-.02.029-.036.059-.055.089-1.418 2.128-1.656 4.486-.518 5.306 1.138.822 3.225-.203 4.705-2.286.02-.028.043-.054.063-.082.176-.256.3-.533.377-.819l.053.039c.667.48 1.071.559 1.557-.025l.1-.118c1.579 1.54 1.868 3.188 1.902 4.017.014.34.211.206.315.042 2.19-3.48 1.555-5.95.625-7.41.818-.98 1.73-2.092 2.641-3.242 2.549-3.213.994-8.742.688-8.962l-.004.004.002-.006c-.305-.22-5.926.147-8.028 3.68a172.718 172.718 0 0 0-2.111 3.656zm-1.046 5.947l1.356.976 1.484 1.068a1.826 1.826 0 0 1-.173.303c-.014.02-.03.038-.045.057-1.042 1.434-2.504 2.143-3.296 1.586-.793-.559-.617-2.175.382-3.64.013-.02.024-.04.038-.06a1.82 1.82 0 0 1 .254-.29zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.665-21.296a2.245 2.245 0 0 1 3.164-.558 2.336 2.336 0 0 1 .549 3.219 2.245 2.245 0 0 1-3.164.558 2.337 2.337 0 0 1-.549-3.22z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#14B6E7"/><path fill="#FFF" d="M12.779 13.527a172.718 172.718 0 0 1 2.11-3.656c2.103-3.533 7.724-3.9 8.03-3.68l-.003.006.004-.004c.306.22 1.86 5.75-.688 8.962a170.192 170.192 0 0 1-2.641 3.241c.93 1.462 1.564 3.931-.625 7.411-.104.164-.3.298-.315-.042-.034-.829-.323-2.477-1.903-4.017l-.1.118c-.485.584-.889.505-1.556.025l-.053-.039a2.64 2.64 0 0 1-.377.819c-.02.028-.042.054-.063.082-1.48 2.083-3.567 3.108-4.705 2.286-1.138-.82-.9-3.178.518-5.306.019-.03.035-.06.055-.09.175-.253.385-.465.62-.634h-.001c-.667-.481-.875-.843-.501-1.507l.053-.096c-1.952-.953-3.57-.67-4.352-.423-.325.103-.266-.133-.146-.29 2.472-3.223 4.95-3.522 6.639-3.166zm-1.046 5.947a1.823 1.823 0 0 0-.254.29c-.014.02-.025.04-.038.06-1 1.465-1.175 3.081-.382 3.64.792.557 2.254-.152 3.296-1.586.015-.02.031-.037.045-.057.069-.097.126-.199.173-.303L13.09 20.45l-1.356-.976zm4.932-8.77a2.337 2.337 0 0 0 .549 3.219 2.245 2.245 0 0 0 3.164-.558 2.336 2.336 0 0 0-.55-3.22 2.245 2.245 0 0 0-3.163.559z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xlm);


/***/ }),

/***/ "BrS8":
/*!************************!*\
  !*** ./src/js/site.js ***!
  \************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__myWallet_js__ = __webpack_require__(/*! ./myWallet.js */ "600x");



// import  './myWalletComponent.js';

/***/ }),

/***/ "C0Jo":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zen.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zen = {
  symbol: 'zen',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.555-14.918a11.72 11.72 0 0 0-4.085 2.006 5.52 5.52 0 0 0 4.6 2.392 5.52 5.52 0 0 0 5.456-4.508 15.52 15.52 0 0 0-2.917-.294 12.116 12.116 0 0 0-3.073.386l.019.018zm7.691-4.682a8.013 8.013 0 0 1-7.176 11.574 7.976 7.976 0 0 1-3.56-.829l-2.852 1.84A10.985 10.985 0 0 0 15.96 27C22.057 27 27 22.057 27 15.96a11.04 11.04 0 0 0-2.052-6.44l-1.812 2.88zm-14.73 6.237a8.013 8.013 0 0 1 11.16-9.835l2.852-1.84A11.04 11.04 0 0 0 7.11 22.556a13.294 13.294 0 0 1 14.416-6.596 5.533 5.533 0 0 0-11.04.754 14.582 14.582 0 0 0-2.07 1.905l-.01.018z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#16203A" fill-rule="nonzero"/><g fill="#FFF"><g opacity=".7"><path d="M15.445 17.082a11.72 11.72 0 0 0-4.085 2.006 5.52 5.52 0 0 0 4.6 2.392 5.52 5.52 0 0 0 5.456-4.508 15.52 15.52 0 0 0-2.917-.294 12.116 12.116 0 0 0-3.073.386"/><path d="M15.445 17.082a11.72 11.72 0 0 0-4.085 2.006 5.52 5.52 0 0 0 4.6 2.392 5.52 5.52 0 0 0 5.456-4.508 15.52 15.52 0 0 0-2.917-.294 12.116 12.116 0 0 0-3.073.386"/><path d="M23.136 12.4a8.013 8.013 0 0 1-7.176 11.574 7.976 7.976 0 0 1-3.56-.829l-2.852 1.84A10.985 10.985 0 0 0 15.96 27C22.057 27 27 22.057 27 15.96a11.04 11.04 0 0 0-2.052-6.44l-1.812 2.88z"/><path d="M23.136 12.4a8.013 8.013 0 0 1-7.176 11.574 7.976 7.976 0 0 1-3.56-.829l-2.852 1.84A10.985 10.985 0 0 0 15.96 27C22.057 27 27 22.057 27 15.96a11.04 11.04 0 0 0-2.052-6.44l-1.812 2.88z"/></g><path d="M8.407 18.637a8.013 8.013 0 0 1 11.16-9.835l2.851-1.84A11.04 11.04 0 0 0 7.11 22.556a13.294 13.294 0 0 1 14.416-6.596 5.533 5.533 0 0 0-11.04.754 14.582 14.582 0 0 0-2.07 1.905"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zen);


/***/ }),

/***/ "CEzJ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vtho.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vtho = {
  symbol: 'vtho',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.272-26.942h-5.763l-4.487 11.78h4.45l-3.94 10.104 12.18-14.3h-5.1l5.683-7.584h-3.023z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2A5284"/><g fill="#FFF"><path fill-opacity=".704" d="M20.272 5.058h3.023l-5.682 7.584h5.099l-12.18 14.3 3.94-10.104h-4.45l4.487-11.78z"/><path d="M20.272 5.058h.182l-5.107 8.713h4.67l-9.485 13.17 3.94-10.103h-4.45l4.487-11.78z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vtho);


/***/ }),

/***/ "CQ59":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/jnt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Jnt = {
  symbol: 'jnt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-6c.648 0 1.284-.174 1.844-.505l5.306-3.12a3.797 3.797 0 0 0 1.85-3.26v-6.23a3.785 3.785 0 0 0-1.85-3.259l-5.306-3.12A3.585 3.585 0 0 0 16.008 6c-.65 0-1.29.175-1.852.505L8.85 9.626A3.797 3.797 0 0 0 7 12.885v6.23a3.785 3.785 0 0 0 1.85 3.26l5.306 3.12c.56.33 1.196.505 1.844.505zm-3.052-6.429c.26.267.612.417.981.418.765 0 1.385-.631 1.385-1.41v-7.984h1.382v4.696c.001.776.62 1.405 1.382 1.407.369 0 .723-.15.983-.416l.982 1a2.663 2.663 0 0 1-1.965.812 2.715 2.715 0 0 1-1.382-.376v.852c-.002 1.559-1.243 2.821-2.774 2.823a2.69 2.69 0 0 1-1.957-.822z" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#0050db" r="16"/><path d="M16 26a3.626 3.626 0 0 1-1.844-.505l-5.306-3.12A3.785 3.785 0 0 1 7 19.114v-6.23a3.797 3.797 0 0 1 1.85-3.259l5.306-3.12A3.664 3.664 0 0 1 16.008 6c.645 0 1.28.174 1.836.505l5.306 3.121A3.785 3.785 0 0 1 25 12.885v6.23a3.797 3.797 0 0 1-1.85 3.26l-5.306 3.12c-.56.33-1.196.505-1.844.505zm-3.052-6.429l-.983 1a2.69 2.69 0 0 0 1.957.822c1.53-.002 2.772-1.264 2.774-2.823v-.852c.42.247.897.377 1.382.376a2.663 2.663 0 0 0 1.965-.812l-.982-1c-.26.266-.614.416-.983.416a1.397 1.397 0 0 1-1.382-1.407v-4.696h-1.382v7.984c0 .779-.62 1.41-1.385 1.41a1.37 1.37 0 0 1-.981-.418z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Jnt);


/***/ }),

/***/ "CVxC":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wax.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wax = {
  symbol: 'wax',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm12-13.038L20.516 12.5h-2.375l4.625 3.998-1.461 1.257-3.039-3.708h-2.01l-3.652 4.445-.398.486 1.788-4.923H12.37l-1.184 3.325L10 14.056H8l-1.188 3.332-1.192-3.346H4l1.773 4.911h2.112L9 15.823l1.124 3.155h2.08L10.96 20.5h1.997l4.305-5.241 1.233 1.508h-1.619l-.833 1.029h3.292l.955 1.16h1.998l1.671-1.43 1.677 1.436zm-2.345-2.972l2.249-1.902-2.251-.002-1.113.948z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f89022" r="16"/><path d="M28 18.962h-2.364l-1.677-1.436-1.671 1.43H20.29l-.955-1.16h-3.292l.833-1.029h1.619l-1.233-1.508-4.305 5.241H10.96l1.246-1.522h-2.081L9 15.824l-1.116 3.13H5.773L4 14.041h1.62l1.192 3.346L8 14.056h2l1.185 3.324 1.184-3.325h1.625l-1.788 4.923.398-.486 3.652-4.445h2.01l3.039 3.708 1.462-1.257L18.14 12.5h2.375zm-2.345-2.972l-1.115-.956 1.113-.948 2.25.002z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wax);


/***/ }),

/***/ "Cerz":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pink.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pink = {
  symbol: 'pink',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.452-23.071A9.865 9.865 0 0 0 16.43 6C10.946 6 6.5 10.477 6.5 16c0 2.624 1.003 5.011 2.644 6.795v-7.121h.008c.169-3.9 3.363-7.011 7.278-7.011 2.012 0 3.833.821 5.152 2.149zm0 14.142l-1.87-1.883a7.238 7.238 0 0 1-4.99 2.147V26a9.865 9.865 0 0 0 6.86-2.928zM11.68 24.784c.755.415 1.57.735 2.429.941v-5.511c.728.43 1.576.677 2.482.677 2.712 0 4.911-2.214 4.911-4.945 0-2.732-2.199-4.946-4.91-4.946-2.623 0-4.765 2.069-4.905 4.674h-.007zm4.911-6.338a2.491 2.491 0 0 1-2.482-2.5c0-1.381 1.111-2.5 2.482-2.5s2.483 1.119 2.483 2.5c0 1.38-1.112 2.5-2.483 2.5z"/><path d="M23.452 8.929l-1.87 1.883a7.238 7.238 0 0 0-5.152-2.149c-3.915 0-7.11 3.11-7.278 7.01h-.008v7.122A10.003 10.003 0 0 1 6.5 16c0-5.523 4.446-10 9.93-10a9.865 9.865 0 0 1 7.022 2.929zm0 14.142A9.865 9.865 0 0 1 16.592 26v-2.664a7.238 7.238 0 0 0 4.99-2.147z" opacity=".5"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ed79aa" r="16"/><g fill="#fff"><path d="M23.452 8.929l-1.87 1.883a7.238 7.238 0 0 0-5.152-2.149c-3.915 0-7.11 3.11-7.278 7.01h-.008v7.122A10.003 10.003 0 0 1 6.5 16c0-5.523 4.446-10 9.93-10a9.865 9.865 0 0 1 7.022 2.929zm0 14.142A9.865 9.865 0 0 1 16.592 26v-2.664a7.238 7.238 0 0 0 4.99-2.147z" opacity=".5"/><path d="M11.681 24.784v-9.11h.007C11.828 13.069 13.97 11 16.592 11c2.712 0 4.911 2.214 4.911 4.946 0 2.731-2.199 4.945-4.91 4.945a4.862 4.862 0 0 1-2.483-.677v5.511a9.822 9.822 0 0 1-2.429-.94zm4.911-6.338a2.491 2.491 0 0 0 2.483-2.5c0-1.381-1.112-2.5-2.483-2.5a2.491 2.491 0 0 0-2.482 2.5c0 1.38 1.111 2.5 2.482 2.5z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pink);


/***/ }),

/***/ "Ckay":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bcn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bcn = {
  symbol: 'bcn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M15.999 31.997C7.163 31.997 0 24.834 0 15.999 0 7.163 7.163 0 15.999 0c8.835 0 15.998 7.163 15.998 15.999 0 8.835-7.163 15.998-15.998 15.998zm7.438-15.243c-.63-.696-1.536-1.128-2.72-1.296v-.025c1.037-.168 1.852-.593 2.406-1.273a3.717 3.717 0 0 0 .862-2.404c0-1.461-.47-2.454-1.444-3.235-.974-.78-2.436-1.037-4.417-1.037h-7.481v6.963H6.347v2.667h11.727c.923 0 1.616.065 2.074.434.458.369.692.846.692 1.551s-.231 1.307-.692 1.685c-.46.377-1.154.626-2.074.626H14.05v-2.074h-3.407v4.741h7.727c1.965 0 3.467-.513 4.509-1.31 1.041-.797 1.53-1.974 1.53-3.419a3.81 3.81 0 0 0-.972-2.594zm-5.793-2.314H14.05v-4.296h3.594c1.848 0 2.77.721 2.77 2.148s-.922 2.148-2.77 2.148z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="15.999" cy="15.999" r="15.999" fill="#F04086"/><path fill="#FFF" d="M23.437 16.754c-.63-.696-1.536-1.128-2.72-1.296v-.025c1.037-.168 1.852-.593 2.406-1.273a3.717 3.717 0 0 0 .862-2.404c0-1.461-.47-2.454-1.444-3.235-.974-.78-2.436-1.037-4.417-1.037h-7.481v6.963H6.347v2.667h11.727c.923 0 1.616.065 2.074.434.458.369.692.846.692 1.551s-.231 1.307-.692 1.685c-.46.377-1.154.626-2.074.626H14.05v-2.074h-3.407v4.741h7.727c1.965 0 3.467-.513 4.509-1.31 1.041-.797 1.53-1.974 1.53-3.419a3.81 3.81 0 0 0-.972-2.594zm-5.793-2.314H14.05v-4.296h3.594c1.848 0 2.77.721 2.77 2.148s-.922 2.148-2.77 2.148z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bcn);


/***/ }),

/***/ "Curs":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gas.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gas = {
  symbol: 'gas',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9-9.42V9.621l-6.99 2.48v7.22L25 22.58zM14.823 26V13.139L8 9.958V22.82L14.823 26zm10.01-16.843l.061-.021L18.165 6l-.062.021-.177.063-.084.03L8.27 9.51l6.729 3.136 2.843-1.008.167-.06 6.711-2.38.112-.04z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#58BF00"/><path fill="#FFF" fill-rule="nonzero" d="M25 22.58l-6.99-3.258v-7.22L25 9.623V22.58zM14.823 26L8 22.821V9.958l6.823 3.18V26zm10.01-16.843l-.113.04-6.71 2.381-.168.06-2.843 1.008-6.73-3.136 9.573-3.396.084-.03.177-.063.062-.021 6.73 3.136-.063.021z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gas);


/***/ }),

/***/ "DCcR":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dew.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dew = {
  symbol: 'dew',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.839-9.184h-.271V9.183h.345c.296 0 .581-.115.791-.32.21-.204.328-.482.328-.771 0-.603-.501-1.092-1.12-1.092h-1.556c-.313 0-.612.12-.833.336a1.136 1.136 0 0 0-.345.813v15.673c0 .312.127.612.354.833.226.22.533.345.854.345h1.453c.618 0 1.12-.489 1.12-1.092 0-.603-.502-1.091-1.12-1.092zm12.17-11.452a8.368 8.368 0 0 0-3.222-3.15c-1.369-.761-2.9-1.142-4.591-1.142h-.349c-.297 0-.581.115-.791.32-.21.204-.328.482-.328.772 0 .603.501 1.091 1.12 1.091h.296c1.227 0 2.343.29 3.347.866a6.372 6.372 0 0 1 2.376 2.372c.58 1.004.87 2.133.871 3.388 0 1.238-.286 2.36-.858 3.362-.573 1.004-1.205 1.935-2.191 2.503-.987.569-1.865 1.07-3.076 1.07h-.69c-.618 0-1.12.488-1.12 1.091S15.628 25 16.246 25h.567c1.709 0 3.088-.504 4.407-1.358 1.437-.93 2.312-1.955 3.099-3.294s1.182-2.835 1.182-4.492-.39-3.153-1.169-4.491z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#fec907" r="16"/><path d="M12.161 22.816c.618 0 1.12.49 1.12 1.092 0 .603-.502 1.092-1.12 1.092h-1.453c-.32 0-.628-.124-.854-.345a1.163 1.163 0 0 1-.354-.833V8.149c0-.305.124-.597.345-.813.22-.215.52-.336.833-.336h1.557c.618 0 1.12.489 1.12 1.092 0 .29-.119.567-.329.772-.21.204-.495.32-.791.32h-.345v13.632zm12.17-11.452c.779 1.338 1.169 2.835 1.169 4.491s-.395 3.153-1.182 4.492-1.662 2.365-3.099 3.294c-1.32.854-2.698 1.358-4.407 1.358h-.567c-.618 0-1.12-.489-1.12-1.092 0-.603.502-1.091 1.12-1.091h.69c1.21 0 2.089-.501 3.076-1.07.986-.568 1.618-1.499 2.19-2.503.573-1.003.86-2.124.86-3.362-.001-1.255-.291-2.384-.872-3.388a6.372 6.372 0 0 0-2.376-2.372c-1.004-.577-2.12-.866-3.347-.866h-.297c-.618 0-1.12-.488-1.12-1.091 0-.29.119-.568.329-.772.21-.205.494-.32.791-.32h.349c1.692 0 3.222.38 4.59 1.142a8.368 8.368 0 0 1 3.223 3.15z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dew);


/***/ }),

/***/ "DHbO":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ela.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ela = {
  symbol: 'ela',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd"><path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 10.23l10 5.704 10-5.704-5-2.8-5.004 2.872L11 7.432l-5 2.799zm0 9l10 5.704 10-5.704-5-2.8-5 2.874-5-2.871-5 2.798z"/><g fill-rule="nonzero"><path fill-opacity=".604" d="M11 22.119l5-2.82v5.635l-5-2.815zm0-9l5-2.82v5.635l-5-2.815z"/><path fill-opacity=".299" d="M26 19.23l-5 2.886V16.43l5 2.8zm0-9l-5 2.886V7.43l5 2.8z"/><path fill-opacity=".197" d="M11 22.116v-5.683l5 2.87-5 2.813zm0-9V7.433l5 2.87-5 2.813z"/><path fill-opacity=".404" d="M21 22.116l-5 2.818v-5.63l5 2.812zm0-9l-5 2.818v-5.63l5 2.812z"/><path fill-opacity=".5" d="M11 16.433v5.683l-5-2.885 5-2.798zm0-9v5.683l-5-2.885 5-2.798z"/></g></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3FBADF"/><g fill="#FFF" fill-rule="nonzero"><path fill-opacity=".4" d="M11 22.119l5-2.82v5.635l-5-2.815zm0-9l5-2.82v5.635l-5-2.815z"/><path fill-opacity=".7" d="M26 19.23l-5 2.886V16.43l5 2.8zm0-9l-5 2.886V7.43l5 2.8z"/><path fill-opacity=".8" d="M11 22.116v-5.683l5 2.87-5 2.813zm0-9V7.433l5 2.87-5 2.813z"/><path d="M21 22.116l-5-2.812 5-2.874v5.686zm0-9l-5-2.812 5-2.874v5.686z"/><path fill-opacity=".6" d="M21 22.116l-5 2.818v-5.63l5 2.812zm0-9l-5 2.818v-5.63l5 2.812z"/><path fill-opacity=".5" d="M11 16.433v5.683l-5-2.885 5-2.798zm0-9v5.683l-5-2.885 5-2.798z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ela);


/***/ }),

/***/ "DK6z":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/omni.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Omni = {
  symbol: 'omni',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10.065 6.888h-3.19v3.196a10.93 10.93 0 0 1 3.19-3.196zm15.004 3.11v-3.11h-3.134a10.93 10.93 0 0 1 3.134 3.11zm-3.088 15.084h3.088v-3.08a10.933 10.933 0 0 1-3.088 3.08zM6.875 21.916v3.166h3.144a10.93 10.93 0 0 1-3.144-3.166zM26 16c0-5.514-4.486-10-10-10S6 10.486 6 16s4.486 10 10 10 10-4.486 10-10zm-10 7.292c-4.02 0-7.292-3.271-7.292-7.292 0-4.02 3.271-7.292 7.292-7.292 4.02 0 7.292 3.271 7.292 7.292 0 4.02-3.271 7.292-7.292 7.292z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1c347a" r="16"/><path d="M10.065 6.888a10.93 10.93 0 0 0-3.19 3.196V6.888zm15.004 3.11a10.93 10.93 0 0 0-3.134-3.11h3.134zm-3.088 15.084a10.933 10.933 0 0 0 3.088-3.08v3.08zM6.875 21.916a10.93 10.93 0 0 0 3.144 3.166H6.875zM26 16c0 5.514-4.486 10-10 10S6 21.514 6 16 10.486 6 16 6s10 4.486 10 10zm-10 7.292c4.02 0 7.292-3.271 7.292-7.292 0-4.02-3.271-7.292-7.292-7.292-4.02 0-7.292 3.271-7.292 7.292 0 4.02 3.271 7.292 7.292 7.292z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Omni);


/***/ }),

/***/ "DQ6d":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/add.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Add = {
  symbol: 'add',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.984-14.369h-4.928l-.88-2.64h5.8a.748.748 0 1 0 0-1.496H18.7l-2.517-7.673a1.074 1.074 0 0 0-2.12-.07l-6.02 18.303c-.016.1-.016.2 0 .3a1.012 1.012 0 0 0 1.989.246l5.051-15.4 1.443 4.294h-1.25a.748.748 0 1 0 0 1.496h1.76l.88 2.64h-2.64a.748.748 0 1 0 0 1.496h3.16l1.425 4.224h-7.559a1.056 1.056 0 1 0 0 2.112h8.941c.554 0 1.003-.449 1.003-1.003a1.03 1.03 0 0 0-.097-.44l-1.61-4.893h4.4a.748.748 0 1 0 0-1.496h.044z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FEC807" fill-rule="nonzero"/><path d="M24.984 17.631h-4.928l-.88-2.64h5.8a.748.748 0 1 0 0-1.496H18.7l-2.517-7.673a1.074 1.074 0 0 0-2.12-.07l-6.02 18.303c-.016.1-.016.2 0 .3a1.012 1.012 0 0 0 1.989.246l5.051-15.4 1.443 4.294h-1.25a.748.748 0 1 0 0 1.496h1.76l.88 2.64h-2.64a.748.748 0 1 0 0 1.496h3.16l1.425 4.224h-7.559a1.056 1.056 0 1 0 0 2.112h8.941c.554 0 1.003-.449 1.003-1.003a1.03 1.03 0 0 0-.097-.44l-1.61-4.893h4.4a.748.748 0 1 0 0-1.496h.044z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Add);


/***/ }),

/***/ "DU2M":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cny.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cny = {
  symbol: 'cny',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.171 8v1.925h13.816V8zm-1.54 5.641v1.945h4.895v.385c-.079 1.886-.473 3.407-1.223 4.6-.75 1.08-2.171 2.003-4.303 2.735L8.105 25c2.21-.75 3.79-1.81 4.777-3.157 1.006-1.464 1.559-3.427 1.657-5.872v-.385h2.922v6.93c0 1.406.69 2.118 2.092 2.118h3.138c.69 0 1.204-.212 1.559-.597.355-.404.612-1.694.75-3.87l-1.855-.577c-.04 1.56-.138 2.503-.277 2.81-.118.29-.315.444-.552.444h-2.171c-.454 0-.671-.25-.671-.751v-6.507h5.23V13.64z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ff4314" r="16"/><path d="M9.171 8h13.816v1.925H9.17zm-1.54 5.641h17.073v1.945h-5.23v6.507c0 .5.217.75.67.75h2.172c.237 0 .434-.153.552-.442.139-.308.237-1.252.277-2.811l1.855.578c-.138 2.175-.395 3.465-.75 3.87-.355.384-.868.596-1.56.596h-3.137c-1.402 0-2.092-.712-2.092-2.118v-6.93h-2.922v.385c-.098 2.445-.65 4.408-1.657 5.872-.987 1.347-2.566 2.406-4.777 3.157L7 23.306c2.132-.732 3.553-1.656 4.303-2.734.75-1.194 1.144-2.715 1.223-4.601v-.385H7.632z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cny);


/***/ }),

/***/ "Dj4C":
/*!***********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sberbank.js ***!
  \***********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sberbank = {
  symbol: 'sberbank',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.681-24.632l-10.987 6.249-5.236-2.977-.54 1.073 5.776 3.325 11.932-6.812-.945-.858zM20.279 6l-8.585 4.908-3.806-2.172-.782.938 4.588 2.602 9.853-5.632L20.28 6zm4.184 3.111l-12.769 7.295-6.208-3.54-.297 1.18 6.505 3.701 13.47-7.697-.701-.939zm1.943 3.46l-.594-1.502-14.118 8.046L5 15.333v.724c0 1.465.293 2.915.864 4.265a10.568 10.568 0 0 0 2.348 3.486 11.341 11.341 0 0 0 3.482 2.307c1.368.59 2.799.885 4.293.885 1.476 0 2.906-.295 4.292-.885a10.85 10.85 0 0 0 3.509-2.307 11.142 11.142 0 0 0 2.348-3.486l.27-.724c.396-1.144.594-2.325.594-3.54 0-1.217-.198-2.378-.594-3.487z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#48B254" fill-rule="nonzero"/><path fill="#FFF" d="M22.681 7.368l.945.858-11.932 6.812-5.776-3.325.54-1.073 5.236 2.977 10.987-6.25zM20.279 6l1.268.644-9.853 5.632-4.588-2.602.782-.938 3.806 2.172L20.28 6zm4.184 3.111l.701.939-13.47 7.697-6.505-3.701.297-1.18 6.208 3.54 12.769-7.295zm1.943 3.46c.396 1.109.594 2.27.594 3.486 0 1.216-.198 2.397-.594 3.54l-.27.725a11.142 11.142 0 0 1-2.348 3.486 10.85 10.85 0 0 1-3.51 2.307c-1.385.59-2.815.885-4.291.885-1.494 0-2.925-.295-4.293-.885a11.341 11.341 0 0 1-3.482-2.307 10.568 10.568 0 0 1-2.348-3.486c-.57-1.35-.865-2.8-.864-4.265v-.724l6.694 3.782 14.118-8.046.594 1.502z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sberbank);


/***/ }),

/***/ "DkMU":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/call.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Call = {
  symbol: 'call',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.017-10.196a4.964 4.964 0 0 1-2.227-.416 5.592 5.592 0 0 1-1.937-1.386 5.267 5.267 0 0 1-1.38-3.591c-.026-.74.075-1.48.298-2.186.199-.596.5-1.153.888-1.646a5.356 5.356 0 0 1 1.643-1.398 5.086 5.086 0 0 1 1.92-.606 5.92 5.92 0 0 1 1.65.021c.7.116 1.37.374 1.966.758A5.44 5.44 0 0 1 20.4 12.87c.051.071.11.1.186.025l.488-.489c.16-.16.333-.315.476-.48.143-.164.316-.29.467-.45.434-.459.893-.897 1.34-1.347.075-.076.083-.114.163.02.08.135.19.25.278.375a9.482 9.482 0 0 1 1.642 3.84c.068.338.109.68.123 1.024.032.605.02 1.211-.038 1.814-.096.787-.278 1.56-.543 2.308a9.634 9.634 0 0 1-1.188 2.24c-.084.105-.097.18 0 .278.468.463.93.938 1.394 1.406.139.164.177.16.299 0 .8-1.047 1.418-2.22 1.831-3.47.17-.504.31-1.017.421-1.536.131-.62.165-1.255.232-1.883.059-.551-.063-1.103-.063-1.654a.143.143 0 0 0 0-.034c-.13-.594-.185-1.2-.354-1.794-.2-.721-.46-1.425-.775-2.105a11.79 11.79 0 0 0-1.452-2.307c-.451-.57-.95-1.101-1.49-1.588-.178-.16-.22-.155-.384.021l-1.402 1.49-.973 1.028c-.063.068-.126.101-.206.03a7.192 7.192 0 0 0-1.318-.842 6.514 6.514 0 0 0-1.402-.552 6.783 6.783 0 0 0-1.756-.278 1.554 1.554 0 0 1-.193 0 5.356 5.356 0 0 0-1.09.025c-.47.045-.934.135-1.386.27a8 8 0 0 0-1.604.657 8.084 8.084 0 0 0-3.217 3.099 8.636 8.636 0 0 0-.817 1.983c-.113.453-.194.913-.244 1.377a5.701 5.701 0 0 0-.021 1.414c.048.642.167 1.276.353 1.891.113.337.239.667.38.99.185.41.41.802.669 1.17a8.69 8.69 0 0 0 1.642 1.802 7.579 7.579 0 0 0 2.345 1.318 8.354 8.354 0 0 0 3.082.421c.82-.03 1.632-.18 2.409-.446a7.524 7.524 0 0 0 1.772-.897c.135-.093.14-.13.026-.249l-1.58-1.625a.181.181 0 0 0-.269-.034c-.218.14-.45.255-.695.342a4.573 4.573 0 0 1-1.94.336zm9.02 1.907l-4.26-4.337c-.093-.097-.17-.1-.245 0a5.36 5.36 0 0 1-1.082 1.162c-.101.08-.101.143 0 .236.383.383.762.775 1.141 1.158.493.501.985 1.002 1.482 1.503.088.088.084.13 0 .206-.198.148-.392.3-.598.421a9.288 9.288 0 0 1-3.596 1.491 7.158 7.158 0 0 1-1.528.177h-.206c-.364.025-.73.014-1.09-.034-.422-.063-.818-.114-1.218-.202a8.981 8.981 0 0 1-1.482-.476 9.638 9.638 0 0 1-2.27-1.335 9.941 9.941 0 0 1-1.814-1.86 9.196 9.196 0 0 1-1.297-2.396 7.924 7.924 0 0 1-.573-2.64 1.916 1.916 0 0 1 0-.287v-.993a.775.775 0 0 1 0-.325c0-.08.034-.155.047-.235.042-.373.108-.743.198-1.108.115-.49.268-.97.459-1.436a9.684 9.684 0 0 1 4.362-4.859 9.293 9.293 0 0 1 3.79-1.14h.243a9.444 9.444 0 0 1 4.064.64l.362.151a9.933 9.933 0 0 1 1.579.88.173.173 0 0 0 .256-.025c.447-.51.918-.994 1.386-1.482.088-.093.092-.177 0-.253a12.03 12.03 0 0 0-5.217-2.156 13.158 13.158 0 0 0-1.634-.156 11.663 11.663 0 0 0-2.526.236 12.21 12.21 0 0 0-1.566.421c-.912.305-1.782.723-2.59 1.242-.97.62-1.847 1.372-2.606 2.236a11.907 11.907 0 0 0-2.303 3.933c-.212.612-.38 1.238-.501 1.874-.093.557-.156 1.12-.19 1.684a8.842 8.842 0 0 0 .084 1.814c.066.597.18 1.187.341 1.765.114.391.228.783.375 1.162.294.76.663 1.49 1.103 2.177a12.707 12.707 0 0 0 1.924 2.315c.473.436.98.833 1.516 1.188.718.491 1.49.9 2.3 1.217.806.32 1.647.548 2.504.682.643.096 1.292.152 1.942.168.42 0 .842-.067 1.237-.076.3-.022.597-.067.889-.134.324-.055.644-.14.964-.224a11.368 11.368 0 0 0 3.368-1.499c.937-.6 1.787-1.325 2.527-2.155.122-.14.118-.164-.05-.316z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FBB413"/><g fill="#FFF"><path d="M16.017 21.804a4.573 4.573 0 0 0 1.941-.336c.244-.087.477-.202.695-.342a.181.181 0 0 1 .27.034l1.579 1.625c.113.118.109.156-.026.249a7.524 7.524 0 0 1-1.772.897 8.396 8.396 0 0 1-2.409.446 8.354 8.354 0 0 1-3.082-.421 7.579 7.579 0 0 1-2.345-1.318 8.69 8.69 0 0 1-1.642-1.802 7.133 7.133 0 0 1-.67-1.17 12.4 12.4 0 0 1-.379-.99 8.808 8.808 0 0 1-.353-1.89 5.701 5.701 0 0 1 .02-1.415c.05-.464.132-.924.245-1.377a8.636 8.636 0 0 1 .817-1.983 8.084 8.084 0 0 1 3.217-3.1 8 8 0 0 1 1.604-.656 7.183 7.183 0 0 1 1.385-.27 5.356 5.356 0 0 1 1.09-.025c.065.004.13.004.194 0a6.783 6.783 0 0 1 1.756.278c.487.13.958.314 1.402.552.469.232.91.514 1.318.842.08.071.143.038.206-.03l.973-1.027 1.402-1.49c.164-.177.206-.182.383-.022.54.487 1.04 1.018 1.49 1.588a11.79 11.79 0 0 1 1.453 2.307c.315.68.574 1.384.775 2.105.169.594.223 1.2.354 1.794a.143.143 0 0 1 0 .034c0 .551.122 1.103.063 1.654-.067.628-.101 1.264-.232 1.883-.111.52-.252 1.032-.42 1.536a11.832 11.832 0 0 1-1.832 3.47c-.122.16-.16.164-.3 0-.462-.468-.925-.943-1.393-1.406-.097-.097-.084-.173 0-.278a9.634 9.634 0 0 0 1.188-2.24c.265-.747.447-1.521.543-2.308.058-.603.07-1.21.038-1.814a6.585 6.585 0 0 0-.123-1.024 9.482 9.482 0 0 0-1.642-3.84c-.088-.126-.198-.24-.278-.374-.08-.135-.088-.097-.164-.021-.446.45-.905.888-1.339 1.347-.151.16-.324.286-.467.45-.143.165-.316.32-.476.48l-.488.489c-.076.076-.135.046-.186-.025a5.44 5.44 0 0 0-1.562-1.516 5.196 5.196 0 0 0-1.966-.758 5.92 5.92 0 0 0-1.65-.021 5.086 5.086 0 0 0-1.92.606 5.356 5.356 0 0 0-1.643 1.398 5.414 5.414 0 0 0-.888 1.646 6.514 6.514 0 0 0-.299 2.186 5.267 5.267 0 0 0 1.381 3.591 5.592 5.592 0 0 0 1.937 1.386c.7.308 1.463.451 2.227.416z"/><path d="M25.037 23.711l-4.26-4.337c-.093-.097-.17-.1-.245 0a5.36 5.36 0 0 1-1.082 1.162c-.101.08-.101.143 0 .236.383.383.762.775 1.141 1.158.493.501.985 1.002 1.482 1.503.088.088.084.13 0 .206-.198.148-.392.3-.598.421a9.288 9.288 0 0 1-3.596 1.491 7.158 7.158 0 0 1-1.528.177h-.206c-.364.025-.73.014-1.09-.034-.422-.063-.818-.114-1.218-.202a8.981 8.981 0 0 1-1.482-.476 9.638 9.638 0 0 1-2.27-1.335 9.941 9.941 0 0 1-1.814-1.86 9.196 9.196 0 0 1-1.297-2.396 7.924 7.924 0 0 1-.573-2.64 1.916 1.916 0 0 1 0-.287v-.993a.775.775 0 0 1 0-.325c0-.08.034-.155.047-.235.042-.373.108-.743.198-1.108.115-.49.268-.97.459-1.436a9.684 9.684 0 0 1 4.362-4.859 9.293 9.293 0 0 1 3.79-1.14h.243a9.444 9.444 0 0 1 4.064.64l.362.151a9.933 9.933 0 0 1 1.579.88.173.173 0 0 0 .256-.025c.447-.51.918-.994 1.386-1.482.088-.093.092-.177 0-.253a12.03 12.03 0 0 0-5.217-2.156 13.158 13.158 0 0 0-1.634-.156 11.663 11.663 0 0 0-2.526.236 12.21 12.21 0 0 0-1.566.421c-.912.305-1.782.723-2.59 1.242-.97.62-1.847 1.372-2.606 2.236a11.907 11.907 0 0 0-2.303 3.933c-.212.612-.38 1.238-.501 1.874-.093.557-.156 1.12-.19 1.684a8.842 8.842 0 0 0 .084 1.814c.066.597.18 1.187.341 1.765.114.391.228.783.375 1.162.294.76.663 1.49 1.103 2.177a12.707 12.707 0 0 0 1.924 2.315c.473.436.98.833 1.516 1.188.718.491 1.49.9 2.3 1.217.806.32 1.647.548 2.504.682.643.096 1.292.152 1.942.168.42 0 .842-.067 1.237-.076.3-.022.597-.067.889-.134.324-.055.644-.14.964-.224a11.368 11.368 0 0 0 3.368-1.499c.937-.6 1.787-1.325 2.527-2.155.122-.14.118-.164-.05-.316z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Call);


/***/ }),

/***/ "Dvfy":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ethos.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ethos = {
  symbol: 'ethos',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16.035 14.286a2.188 2.188 0 0 0 2.159-2.188 1.698 1.698 0 0 1 .756-1.42 1.705 1.705 0 0 1 2.477.64c.228.451.248.979.053 1.445a1.726 1.726 0 0 1-1.067.969 1.71 1.71 0 0 1-.51.076 2.188 2.188 0 0 0-2.183 2.326 2.188 2.188 0 0 0 2.184 2.058 1.694 1.694 0 0 1 1.419.756c.319.475.38 1.078.162 1.608a1.718 1.718 0 0 1-.905.918 1.723 1.723 0 0 1-1.341.005 1.727 1.727 0 0 1-.754-.622 1.696 1.696 0 0 1-.291-.955 2.188 2.188 0 0 0-2.2-2.188c-1.21 0-2.188.98-2.188 2.188a1.7 1.7 0 0 1-.756 1.42 1.706 1.706 0 0 1-2.184-.231v-.002a1.71 1.71 0 0 1 1.23-2.897 2.188 2.188 0 0 0 2.18-2.39 2.188 2.188 0 0 0-2.18-1.994 1.72 1.72 0 0 1-.665-.133 1.726 1.726 0 0 1-.754-.623 1.707 1.707 0 0 1 .754-2.53 1.723 1.723 0 0 1 1.33 0c.306.13.568.346.754.621.19.282.292.615.29.955a2.188 2.188 0 0 0 2.23 2.188zM16 7.426a6.081 6.081 0 0 0-8.208.367 6.086 6.086 0 0 0-.37 8.208 6.087 6.087 0 0 0 .293 8.127 6.085 6.085 0 0 0 8.284.447 6.084 6.084 0 0 0 8.27-.43 6.094 6.094 0 0 0 .307-8.147 6.093 6.093 0 0 0 .744-6.68 6.103 6.103 0 0 0-1.78-2.103l-.005-.003A6.085 6.085 0 0 0 16 7.425zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/><path d="M14.275 15.803a2.188 2.188 0 0 1-2.179 2.39 1.69 1.69 0 0 0-.954.29 1.726 1.726 0 0 0-.622.754 1.71 1.71 0 0 0 .346 1.852v.002a1.706 1.706 0 0 0 2.184.23 1.7 1.7 0 0 0 .755-1.42 2.188 2.188 0 0 1 2.201-2.187c-1.208 0-2.188.98-2.188 2.188A6.084 6.084 0 0 0 16 24.575a6.085 6.085 0 0 1-8.284-.447 6.087 6.087 0 0 1-.293-8.127 6.086 6.086 0 0 0 4.674 2.184 2.188 2.188 0 0 0 2.18-2.382zm10.3.195a6.081 6.081 0 0 0-4.671-2.183 2.188 2.188 0 0 0-2.189 2.182c0-1.209.98-2.189 2.188-2.189a1.71 1.71 0 0 0 1.577-1.045 1.721 1.721 0 0 0-.054-1.444 1.705 1.705 0 0 0-2.477-.64 1.698 1.698 0 0 0-.756 1.42 2.188 2.188 0 1 1-4.375-.001 6.085 6.085 0 0 1 9.717-4.886l.004.003a6.09 6.09 0 0 1 1.037 8.783z" opacity=".622"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00FFBA"/><g fill="#FFF"><path d="M10.871 10.904a1.707 1.707 0 0 0-.194 2.148 1.693 1.693 0 0 0 1.42.756 2.188 2.188 0 0 1-.001 4.377A6.086 6.086 0 0 1 7.819 7.767 6.084 6.084 0 0 1 16 7.425a6.085 6.085 0 0 0-2.182 4.673 2.188 2.188 0 0 0 2.175 2.189 2.188 2.188 0 0 1-2.188-2.189 1.69 1.69 0 0 0-.29-.955 1.727 1.727 0 0 0-.754-.622 1.723 1.723 0 0 0-1.33 0 1.714 1.714 0 0 0-.56.383zm14.64 6.628a6.094 6.094 0 0 1-1.242 6.613 6.084 6.084 0 0 1-10.45-4.243 2.188 2.188 0 1 1 4.375 0 1.7 1.7 0 0 0 1.045 1.577c.43.18.913.178 1.341-.005a1.721 1.721 0 0 0 .905-.918 1.717 1.717 0 0 0-.916-2.23 1.694 1.694 0 0 0-.665-.134 2.188 2.188 0 0 1 0-4.377 6.081 6.081 0 0 1 5.606 3.717z"/><path d="M15.994 17.714c1.208 0 2.188.98 2.188 2.188a6.085 6.085 0 0 1-10.467 4.226 6.087 6.087 0 0 1 4.381-10.313 2.188 2.188 0 0 1 0 4.377c-.34-.001-.672.1-.954.29a1.726 1.726 0 0 0-.622.755 1.71 1.71 0 0 0 .346 1.852v.002a1.706 1.706 0 0 0 2.184.23 1.7 1.7 0 0 0 .755-1.42c0-1.207.98-2.187 2.189-2.187zm9.326-8.396a6.09 6.09 0 0 1-5.417 8.868 2.189 2.189 0 0 1 0-4.378 1.71 1.71 0 0 0 1.577-1.045 1.721 1.721 0 0 0-.054-1.444 1.705 1.705 0 0 0-2.477-.64 1.698 1.698 0 0 0-.756 1.42 2.188 2.188 0 1 1-4.375-.001 6.085 6.085 0 0 1 9.717-4.886l.004.003a6.103 6.103 0 0 1 1.78 2.103z" opacity=".7"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ethos);


/***/ }),

/***/ "E1+/":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ast.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ast = {
  symbol: 'ast',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.01-26l-8.915 9.029L6 16.14l.385.34a17.624 17.624 0 0 0 1.233.991 14.27 14.27 0 0 0 4.033 2.012c1.41.45 2.88.671 4.359.671a14.5 14.5 0 0 0 3.471-.42 14.275 14.275 0 0 0 4.596-2.042c.345-.23.69-.49 1.016-.751.187-.15.365-.3.532-.46l.375-.34zm8.738 10.47c-.313.258-.639.499-.977.721a13.826 13.826 0 0 1-4.418 1.962 13.962 13.962 0 0 1-3.343.41 13.747 13.747 0 0 1-8.067-2.582c-.316-.22-.621-.47-.927-.72l-.187-.161L16 6.81l9.172 9.29c-.129.13-.276.25-.424.37zm-15.03-.48l-.444.19h.543c2.962 0 5.866.831 8.392 2.402l.03.02.04-.01c1.65-.3 3.227-.922 4.644-1.831l.139-.09-.139-.08a13.933 13.933 0 0 0-7.07-1.922c-2.113.01-4.2.46-6.135 1.32zm8.639 2.002a16.18 16.18 0 0 0-6.272-2.232 14.002 14.002 0 0 1 3.757-.51c2.11 0 4.182.49 6.065 1.451a11.735 11.735 0 0 1-3.55 1.291zm3.304 1.972s-1.46.92-2.012 1.191a13.757 13.757 0 0 1-5.986 1.792l-.631.04L16.01 26l4.23-4.284a23.88 23.88 0 0 0 1.42-1.752zm-7.347 3.504a14.239 14.239 0 0 0 4.694-1.322L16.01 25.19z" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#0061ff" r="16"/><path d="M16.01 6L26 16.14l-.375.34a7.99 7.99 0 0 1-.532.46c-.326.261-.67.521-1.016.752a14.275 14.275 0 0 1-4.596 2.042c-1.136.28-2.302.42-3.471.42-1.48 0-2.95-.22-4.36-.67a14.27 14.27 0 0 1-4.033-2.013 17.925 17.925 0 0 1-1.232-.99L6 16.14l1.095-1.112zm8.738 10.47c.148-.12.295-.24.424-.37L16 6.81 6.829 16.1l.187.16c.306.25.611.5.927.72a13.747 13.747 0 0 0 8.067 2.583 13.962 13.962 0 0 0 3.343-.41 13.826 13.826 0 0 0 4.418-1.962c.338-.222.664-.463.977-.72zm-15.03-.48a15.263 15.263 0 0 1 6.134-1.321c2.486 0 4.931.66 7.071 1.922l.139.08-.139.09a12.883 12.883 0 0 1-4.645 1.832l-.039.01-.03-.02a15.887 15.887 0 0 0-8.393-2.403h-.542zm8.639 2.002c1.252-.24 2.446-.67 3.55-1.291a13.312 13.312 0 0 0-6.065-1.452c-1.27 0-2.533.17-3.757.51 2.22.3 4.354 1.06 6.272 2.233zm3.304 1.972a23.88 23.88 0 0 1-1.42 1.752L16.01 26l-2.978-3.013.63-.04a13.766 13.766 0 0 0 5.987-1.792c.552-.27 2.012-1.191 2.012-1.191zm-7.347 3.504l1.696 1.721 2.998-3.043a14.252 14.252 0 0 1-4.694 1.322z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ast);


/***/ }),

/***/ "E2xZ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/loom.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Loom = {
  symbol: 'loom',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M24.92 15.62l.551-.387a28.18 28.18 0 0 1-.005-.006l.697-.487a4.247 4.247 0 0 0 0-6.953l.008.01L22.21 5.02l-4.9 3.429 1.314.925 3.58-2.505 3.09 2.167a2.729 2.729 0 0 1 0 4.473l-1.697 1.184L9.78 5 5.809 7.791a4.247 4.247 0 0 0 0 6.953l1.241.871-.304.214.005.007-.942.658a4.247 4.247 0 0 0 0 6.953l3.957 2.779 4.897-3.429-1.314-.926-3.586 2.506-3.09-2.167a2.729 2.729 0 0 1 0-4.473l1.705-1.19 13.816 9.692 3.972-2.792a4.247 4.247 0 0 0 0-6.953l-1.247-.874zm-1.326.93l1.697 1.19a2.729 2.729 0 0 1 0 4.473l-3.094 2.164-12.49-8.757 4.966-3.466-1.32-.928-.367.256-.01-.015-4.6 3.22L6.683 13.5a2.729 2.729 0 0 1 0-4.473l3.093-2.164 12.492 8.757-4.974 3.471 1.315.926 3.71-2.592.01.012 1.265-.887zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#48BEFF"/><g fill="#FFF"><path d="M22.194 26.239L5.81 14.744a4.247 4.247 0 0 1 0-6.953L9.78 5l16.386 11.494a4.247 4.247 0 0 1 0 6.953l-3.972 2.792zM9.776 6.863L6.683 9.027a2.729 2.729 0 0 0 0 4.473l15.514 10.877 3.094-2.164a2.729 2.729 0 0 0 0-4.473L9.776 6.863z"/><path d="M9.763 24.377l-3.09-2.167a2.729 2.729 0 0 1 0-4.473l8-5.583-1.32-.928-7.544 5.268a4.247 4.247 0 0 0 0 6.953l3.957 2.779 4.897-3.429-1.314-.926-3.586 2.506zM26.17 7.797L22.21 5.02l-4.9 3.429 1.314.925 3.58-2.505 3.09 2.167a2.729 2.729 0 0 1 0 4.473l-8 5.582 1.315.926 7.554-5.277a4.247 4.247 0 0 0 0-6.953l.008.01z"/><path d="M6.746 15.829l6.23-4.362.868 1.24-6.231 4.362zm17.75-1.758l-3.035 2.125.868 1.241 3.142-2.204c-.334-.382-.657-.772-.981-1.163l.006.001z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Loom);


/***/ }),

/***/ "EF5I":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/entrp.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Entrp = {
  symbol: 'entrp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM14.737 4.502c-.108.015-.525.093-.926.154-2.238.378-4.305 1.474-6.018 3.194-1.72 1.713-2.77 3.696-3.21 6.057-.2 1.073-.2 3.171 0 4.244.44 2.36 1.49 4.343 3.21 6.056 1.713 1.72 3.695 2.77 6.056 3.21 1.073.2 3.171.2 4.244 0 2.36-.44 4.344-1.49 6.057-3.21 1.72-1.713 2.77-3.695 3.21-6.056.2-1.073.2-3.171 0-4.244-.44-2.36-1.49-4.344-3.21-6.057-1.675-1.682-3.565-2.708-5.856-3.17-.71-.147-3.071-.263-3.557-.178zm4.12 4.09c.092.038.123.153.123.462v.417h-.486c-.617 0-1.103.231-1.304.617-.131.247-.139.548-.139 4.205 0 2.16-.03 3.973-.061 4.027-.162.247-1.35.317-1.883.108l-.216-.085v-3.988c0-3.72-.008-4.02-.139-4.267-.2-.386-.687-.617-1.304-.617h-.486v-.417c0-.262.039-.432.1-.455.14-.062 5.648-.062 5.795-.008zm-4.429 3.216v.95l-.224.13c-.331.194-.887.772-1.11 1.15a4.008 4.008 0 0 0-.325.78l-.123.44h-.887c-1.011 0-.98.038-.764-.81.27-1.027.926-2.069 1.72-2.701.44-.355 1.412-.888 1.605-.888.085 0 .108.201.108.95zm3.827-.678a5.173 5.173 0 0 1 2.693 3.317c.216.849.247.81-.764.81h-.887l-.124-.44a4.008 4.008 0 0 0-.324-.779c-.224-.378-.78-.956-1.111-1.15l-.224-.13v-.95c0-.748.023-.949.108-.949.054 0 .34.124.633.27zm-5.601 4.853c0 .362.239 1.103.486 1.489 1.319 2.09 4.343 2.09 5.663 0 .247-.386.486-1.127.486-1.49v-.262h1.844l-.039.401c-.193 1.875-1.227 3.388-2.847 4.19-.748.37-1.404.525-2.276.525-2.7 0-4.837-1.968-5.123-4.715l-.038-.4h1.844v.262zm4.436 5.578c.1.54.656.872 1.489.872h.401v.848h-6.018v-.826l.563-.038c.363-.023.656-.092.818-.185.24-.139.548-.602.548-.818 0-.077.247-.1 1.072-.1h1.08l.047.247z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FA5836"/><path d="M14.737 4.502c-.108.015-.525.093-.926.154-2.238.378-4.305 1.474-6.018 3.194-1.72 1.713-2.77 3.696-3.21 6.057-.2 1.073-.2 3.171 0 4.244.44 2.36 1.49 4.343 3.21 6.056 1.713 1.72 3.695 2.77 6.056 3.21 1.073.2 3.171.2 4.244 0 2.36-.44 4.344-1.49 6.057-3.21 1.72-1.713 2.77-3.695 3.21-6.056.2-1.073.2-3.171 0-4.244-.44-2.36-1.49-4.344-3.21-6.057-1.675-1.682-3.565-2.708-5.856-3.17-.71-.147-3.071-.263-3.557-.178zm4.12 4.09c.092.038.123.153.123.462v.417h-.486c-.617 0-1.103.231-1.304.617-.131.247-.139.548-.139 4.205 0 2.16-.03 3.973-.061 4.027-.162.247-1.35.317-1.883.108l-.216-.085v-3.988c0-3.72-.008-4.02-.139-4.267-.2-.386-.687-.617-1.304-.617h-.486v-.417c0-.262.039-.432.1-.455.14-.062 5.648-.062 5.795-.008zm-4.429 3.216v.95l-.224.13c-.331.194-.887.772-1.11 1.15a4.008 4.008 0 0 0-.325.78l-.123.44h-.887c-1.011 0-.98.038-.764-.81.27-1.027.926-2.069 1.72-2.701.44-.355 1.412-.888 1.605-.888.085 0 .108.201.108.95zm3.827-.678a5.173 5.173 0 0 1 2.693 3.317c.216.849.247.81-.764.81h-.887l-.124-.44a4.008 4.008 0 0 0-.324-.779c-.224-.378-.78-.956-1.111-1.15l-.224-.13v-.95c0-.748.023-.949.108-.949.054 0 .34.124.633.27zm-5.601 4.853c0 .362.239 1.103.486 1.489 1.319 2.09 4.343 2.09 5.663 0 .247-.386.486-1.127.486-1.49v-.262h1.844l-.039.401c-.193 1.875-1.227 3.388-2.847 4.19-.748.37-1.404.525-2.276.525-2.7 0-4.837-1.968-5.123-4.715l-.038-.4h1.844v.262zm4.436 5.578c.1.54.656.872 1.489.872h.401v.848h-6.018v-.826l.563-.038c.363-.023.656-.092.818-.185.24-.139.548-.602.548-.818 0-.077.247-.1 1.072-.1h1.08l.047.247z" fill="#FEFFFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Entrp);


/***/ }),

/***/ "EPAp":
/*!**********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/generic.js ***!
  \**********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Generic = {
  symbol: 'generic',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm5.002-22.145l.81-3.241-2.596-.646-.643 2.575a8.277 8.277 0 0 0-1.298-.323l.644-2.575L15.323 5l-.81 3.241c-2.983.542-5.509 2.737-6.28 5.823s.426 6.206 2.804 8.08l-.81 3.242 2.596.646.643-2.575a8.277 8.277 0 0 0 1.298.323l-.644 2.575 2.596.645.81-3.241a7.974 7.974 0 0 0 5.2-3.385l-2.847-.708a5.373 5.373 0 0 1-5.134 1.43c-2.866-.712-4.62-3.572-3.917-6.387s3.599-4.519 6.466-3.806a5.357 5.357 0 0 1 3.86 3.667l2.846.708a7.947 7.947 0 0 0-2.998-5.423z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#efb914" fill-rule="nonzero" r="16"/><path d="M21.002 9.855A7.947 7.947 0 0 1 24 15.278l-2.847-.708a5.357 5.357 0 0 0-3.86-3.667c-2.866-.713-5.76.991-6.465 3.806s1.05 5.675 3.917 6.388a5.373 5.373 0 0 0 5.134-1.43l2.847.707a7.974 7.974 0 0 1-5.2 3.385L16.716 27l-2.596-.645.644-2.575a8.28 8.28 0 0 1-1.298-.323l-.643 2.575-2.596-.646.81-3.241c-2.378-1.875-3.575-4.996-2.804-8.081s3.297-5.281 6.28-5.823L15.323 5l2.596.645-.644 2.575a8.28 8.28 0 0 1 1.298.323l.643-2.575 2.596.646z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Generic);


/***/ }),

/***/ "EQc5":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bat.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bat = {
  symbol: 'bat',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 23.5l20-.023L16.051 6.5 6 23.5zm10.027-10.12l4.127 6.786H11.92l4.108-6.786z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FF5000"/><path fill="#FFF" d="M6 23.5l10.051-17L26 23.477 6 23.5zm10.027-10.12l-4.108 6.786h8.235l-4.127-6.786z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bat);


/***/ }),

/***/ "Etm1":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wings.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wings = {
  symbol: 'wings',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16.895 17.299L8.27 23.993 22 18.118l.796-.338-.001-.003 1.285-.55.065-3.264 1.855.513-1.414-3.146-3.818 2.963-2.719-4.674L6 9l9.183 2.461.233.795-8.028-.413 7.224 1.935 1.247 4.325zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/><g fill-rule="nonzero"><path d="M16.895 17.299l-1.036.804-1.247-4.325-7.224-1.935 8.028.413z" fill-opacity=".7"/><path d="M16.895 17.299l.778 2.652L22 18.118 8.27 23.993zm3.873-3.006l3.818-2.963L26 14.476l-1.855-.513-.065 3.264-1.285.55z" fill-opacity=".3"/></g></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#0dc9f7" r="16"/><g fill="#fff" fill-rule="nonzero"><path d="M18.904 15.739l-3.045 2.364-1.247-4.325-7.224-1.935 9.481.487z" fill-opacity=".305"/><path d="M8.27 23.993L24.586 11.33 26 14.476l-1.855-.513-.065 3.264z" fill-opacity=".7"/><path d="M22.796 17.78l-4.747-8.161L6 9l9.183 2.461 2.49 8.49z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wings);


/***/ }),

/***/ "F1pP":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/doge.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Doge = {
  symbol: 'doge',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.518-15.104V24h6.549c1.21 0 2.257-.21 3.142-.627.885-.419 1.607-.99 2.168-1.715.56-.724.977-1.572 1.25-2.543.273-.971.409-2.01.409-3.115a11.47 11.47 0 0 0-.41-3.115c-.272-.97-.689-1.819-1.25-2.543-.56-.725-1.282-1.296-2.167-1.715C19.288 8.21 18.24 8 17.03 8h-6.549v6.61H9v2.286h1.482zm2.766-2.285v-4.325h2.721c1.077 0 1.958.145 2.644.437.686.291 1.224.694 1.615 1.21a4.4 4.4 0 0 1 .796 1.815c.14.695.21 1.445.21 2.252a11.4 11.4 0 0 1-.21 2.252c-.14.695-.405 1.3-.796 1.815-.391.516-.93.919-1.615 1.21-.686.292-1.567.437-2.644.437h-2.721v-4.818h4.314v-2.285h-4.314z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#C3A634"/><path fill="#FFF" d="M13.248 14.61h4.314v2.286h-4.314v4.818h2.721c1.077 0 1.958-.145 2.644-.437.686-.291 1.224-.694 1.615-1.21a4.4 4.4 0 0 0 .796-1.815 11.4 11.4 0 0 0 .21-2.252 11.4 11.4 0 0 0-.21-2.252 4.396 4.396 0 0 0-.796-1.815c-.391-.516-.93-.919-1.615-1.21-.686-.292-1.567-.437-2.644-.437h-2.721v4.325zm-2.766 2.286H9v-2.285h1.482V8h6.549c1.21 0 2.257.21 3.142.627.885.419 1.607.99 2.168 1.715.56.724.977 1.572 1.25 2.543.273.971.409 2.01.409 3.115a11.47 11.47 0 0 1-.41 3.115c-.272.97-.689 1.819-1.25 2.543-.56.725-1.282 1.296-2.167 1.715-.885.418-1.933.627-3.142.627h-6.549v-7.104z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Doge);


/***/ }),

/***/ "F5wB":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/srn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Srn = {
  symbol: 'srn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.285-18.567c-.244.935-.795 1.31-.979 1.434 0 .312.429 2.121 1.285 2.121.612 0 1.163-.561 1.346-2.12-.306-.25-.611-.811-.795-1.435-.245.062-.55.125-.857 0zm-.918 5.489c.123.499.49 1.746 1.285 1.746.551 0 1.163-.686 1.285-1.684-.428-.25-.611-.81-.795-1.684-.245.062-.612.125-.857 0-.306.81-.55 1.31-.918 1.622zm-4.895 1.933c.306.5.918 1.31 1.591.998.184-.062.245-.561.184-.998-.49-.312-.796-.873-1.163-1.746-.122.062-.306.062-.49 0 .123.935.123 1.434-.122 1.746zm-2.57-1.684c.245 1.372.306 1.497.245 1.684.428.811.857 1.185 1.407 1.123.184 0 .062-.499-.183-.998 0 0-.734-.624-1.163-1.746-.122-.063-.183-.063-.306-.063zm-1.652 0c0-.187.429.998.98 1.56.244.187.489.374.734.81.06.125-1.102.25-1.714-2.37zm7.465 1.684c.306 1.123 1.163 1.123 1.469.998.428-.062.612-.436.673-1.122-.55-.375-.734-1.186-.857-1.747-.183.062-.49.062-.734 0-.061.873-.122 1.56-.55 1.871zm-5.262-1.933c.245.623.98 1.809 1.53 1.809.245 0 .367-.437.245-1.747-.368-.25-.674-.748-.857-1.56-.122.063-.367.063-.55 0-.062.687-.123 1.186-.368 1.498zm-1.897 0c.184.499.612 1.56 1.163 1.746.245.125.245-.25-.061-1.684 0 0-.429-.374-.735-1.56H6.11a28.168 28.168 0 0 0-.123 1.498zm4.895 0c.062.25.673 1.497 1.408 1.684.856.187.918-.936.918-1.622-.429-.25-.735-.748-.918-1.56-.184.063-.49.125-.796 0-.122.812-.306 1.248-.612 1.498zm-.55-.187c.367 0 .673-.562.795-1.622-.306-.312-.673-.873-.734-2.183-.184.062-.367.062-.49 0-.183 1.185-.367 1.871-.734 2.245 0 .374.428 1.56 1.163 1.56zm-3.794-1.56c.306 1.248.612 1.56.857 1.56.55 0 .428-.936.49-1.622-.185-.25-.552-.873-.552-2.183h-.306c-.367 1.933-.367 1.996-.49 2.245zm-1.224-2.183c-.122-.062-.734 2.557.184 3.68.122.125.122-1.434.122-1.434-.245-.562-.122-2.183-.306-2.246zm7.343 2.183c.061.187.428 1.56 1.407 1.56.612 0 1.102-.687 1.224-1.685-.49-.498-.734-1.185-.857-2.12-.183.062-.49.062-.734 0-.367 1.247-.612 1.933-1.04 2.245zm-5.018-2.432c.061 1.122.306 2.245.796 2.245.55 0 .795-1.247.979-2.308-.184-.124-.429-.499-.429-1.31a.367.367 0 0 1-.489 0c-.061.125-.367 1.186-.857 1.373zm-1.53 2.307c.307 0 .612-2.307.612-2.307-.122-.187-.244-.562-.183-1.373-.061.063-.184 0-.245 0a5.84 5.84 0 0 1-.612 1.373c-.122.686 0 2.307.429 2.307zm4.651-2.307c.061.748.428 2.245 1.163 2.245.795 0 1.162-1.123 1.346-2.245-.429-.25-.612-.686-.735-1.373-.306.063-.55.063-.795-.062-.245.624-.734 1.31-.979 1.435zm.55-1.684c-.183-.25-.428-.687-.305-1.622h-.429c-.306.624-.673 1.372-1.162 1.746 0 .125.061 1.435.673 1.435.49 0 .857-.561 1.224-1.56zm-2.998-1.56h-.244c0 .063-.796 1.497-1.163 1.747-.122.623-.122 1.372.245 1.434.367 0 .612-.312 1.101-1.56-.122-.31-.245-.748.061-1.62zm-1.774.063c-.918.623-1.407 2.869-1.163 2.931.061.063.796-.998.735-1.622-.062-.436.611-1.372.428-1.31zm8.689 1.497c-.245-.25-.55-.687-.673-1.622a1.24 1.24 0 0 1-.673 0c-.184.561-.49 1.31-1.102 1.746.123.624.429 1.373.98 1.435 1.04 0 1.284-.873 1.468-1.56zm-8.322-1.685c-.612.936-.612 1.747-.367 1.747.306 0 1.162-1.56 1.346-1.871-.061-.312.612-.936.367-.998-.428 0-1.224 1.06-1.346 1.122zm15.053 7.735c-.184.062-.368.062-.49 0-.245.81-.612 1.434-1.163 1.746-.06.437-.06.936.184.998.673.25 1.346-.499 1.591-.998-.184-.312-.184-.81-.122-1.746zm2.447 0c-.428 1.123-1.162 1.746-1.162 1.746-.306.562-.429.998-.184.998.55 0 .979-.312 1.407-1.122-.06-.188 0-.312.245-1.685-.122.125-.245.125-.306.063zm.98 1.622c.55-.562.917-1.747 1.04-1.56-.612 2.62-1.775 2.495-1.714 2.37.184-.436.428-.561.673-.81zm-7.038-1.622c-.244.062-.49.062-.734 0-.122.561-.367 1.31-.856 1.746.122.624.244.998.673 1.123.306.062 1.162.062 1.468-.998-.367-.437-.55-1.123-.55-1.871zm5.507-1.747a.562.562 0 0 1-.55 0c-.184.686-.49 1.31-.857 1.56-.122 1.31 0 1.746.245 1.746.49 0 1.285-1.185 1.53-1.809-.306-.25-.368-.748-.368-1.497zm2.203.125h-.244c-.306 1.123-.735 1.56-.735 1.56-.306 1.372-.367 1.746-.06 1.684.489-.188.917-1.248 1.162-1.747-.123-.187-.123-.998-.123-1.497zm-5.446-.125c-.306.125-.611.063-.795 0-.184.749-.49 1.31-.918 1.56 0 .623.061 1.809.918 1.621.673-.124 1.346-1.372 1.407-1.684-.367-.187-.49-.623-.612-1.497zm2.326-.187c-.306-.374-.49-1.122-.735-2.245a.664.664 0 0 1-.49 0c-.06 1.31-.427 1.933-.733 2.183.122.998.428 1.622.795 1.622.612 0 1.101-1.186 1.163-1.56zm2.141-2.245c-.122 0-.183.062-.306 0 0 1.31-.306 1.933-.55 2.183.06.624-.062 1.622.49 1.622.244 0 .55-.375.856-1.56-.123-.25-.184-.312-.49-2.245zm1.285 2.245s0 1.56.123 1.435c.917-.998.367-3.743.183-3.68-.122.125 0 1.746-.306 2.245zM18.53 14.93c-.306.062-.612.062-.734 0-.123.935-.429 1.622-.857 2.12.184.936.55 1.747 1.224 1.685.857 0 1.346-1.373 1.407-1.56-.55-.312-.856-.998-1.04-2.245zm5.079-1.56a.585.585 0 0 1-.551.063c0 .748-.245 1.185-.428 1.372.183 1.123.428 2.308.979 2.308.49 0 .795-1.185.795-2.246-.428-.311-.795-1.372-.795-1.497zm2.753 1.373s-.306-.562-.55-1.373a.183.183 0 0 1-.245 0c.061.687-.061 1.123-.184 1.31 0 0 .306 2.308.612 2.308.306.062.428-1.56.367-2.245zm-5.996-1.373c-.245.125-.551.125-.796.063-.061.624-.306 1.123-.673 1.372.184 1.185.428 2.308 1.346 2.245.673 0 1.102-1.496 1.163-2.245-.367-.187-.796-.873-1.04-1.435zm1.53 1.186c.611 0 .672-1.248.672-1.435-.428-.312-.795-.998-1.162-1.684-.122.062-.245.062-.428 0 .122.873-.062 1.372-.306 1.622.428.998.795 1.559 1.223 1.497zm1.957-1.497c.429 1.247.674 1.559.98 1.559.367-.062.367-.749.244-1.435-.306-.187-1.162-1.684-1.162-1.746h-.245c.367.935.245 1.372.183 1.622zm2.08-.188c-.06.562.613 1.685.674 1.622.184-.062-.184-2.308-1.163-2.931-.06-.063.551.873.49 1.31zm-7.77 1.685c.612-.063.918-.687.979-1.435-.49-.374-.796-1.123-.98-1.684a1.237 1.237 0 0 1-.672 0c-.061.873-.367 1.434-.673 1.622.183.686.428 1.559 1.346 1.497zm5.69-4.304c-.244 0 .429.686.368.998.183.312.979 1.87 1.346 1.87.245 0 .245-.748-.429-1.746-.06-.062-.979-1.122-1.285-1.122zm-13.584.187s.123-.312-.06-.374c-.307 0-1.163 1.185-1.53 1.372-.062.125-.551 1.56.06 1.684.551.062 1.163-.998 1.53-1.747-.183-.187-.122-.56 0-.935zm2.876-.062c0-.063 0-.375-.306-.375-.367 0-.856 1.185-1.407 1.372-.122.687 0 1.622.55 1.685.796.062 1.286-.936 1.53-1.685-.305-.187-.367-.623-.367-.997zm8.69.997c.366.687.917 1.81 1.529 1.747.612-.125.122-1.56.061-1.684-.367-.187-1.224-1.372-1.53-1.372-.183 0-.06.312-.06.374.122.374.122.748 0 .935zm-3.244 0c.245.687.673 1.81 1.53 1.685.612-.063.734-.874.55-1.685-.489-.187-1.1-1.434-1.407-1.372-.306 0-.306.312-.306.375-.06.374-.122.81-.367.997zm-2.57-1.372c-.673 0-.428 1.123-1.162 1.435.06.561.244 1.684 1.101 1.684.98 0 1.163-1.372 1.163-1.684-.49-.25-.49-1.435-1.102-1.435z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1c1c1c" r="16"/><path d="M15.715 13.433c.306.125.612.062.857 0 .184.624.49 1.185.795 1.434-.183 1.56-.734 2.121-1.346 2.121-.856 0-1.285-1.809-1.285-2.12.184-.125.735-.5.98-1.435zm-.918 5.489c.368-.312.612-.811.918-1.622.245.125.612.062.857 0 .184.873.367 1.435.795 1.684-.122.998-.734 1.684-1.285 1.684-.795 0-1.162-1.247-1.285-1.746zm-4.895 1.933c.245-.312.245-.81.123-1.746.183.062.367.062.49 0 .366.873.672 1.434 1.162 1.746.061.437 0 .936-.184.998-.673.312-1.285-.499-1.59-.998zm-2.57-1.684c.123 0 .184 0 .306.063.429 1.122 1.163 1.746 1.163 1.746.245.499.367.998.183.998-.55.062-.979-.312-1.407-1.123.061-.187 0-.312-.245-1.684zm-1.652 0c.612 2.62 1.775 2.495 1.714 2.37-.245-.436-.49-.623-.735-.81-.55-.562-.979-1.747-.979-1.56zm7.465 1.684c.429-.312.49-.998.551-1.87.245.061.55.061.734 0 .123.56.306 1.371.857 1.746-.061.686-.245 1.06-.673 1.122-.306.125-1.163.125-1.469-.998zm-5.262-1.933c.245-.312.306-.811.367-1.497.184.062.429.062.55 0 .184.81.49 1.31.858 1.56.122 1.309 0 1.746-.245 1.746-.55 0-1.285-1.186-1.53-1.81zm-1.897 0c0-.125.061-.936.123-1.497h.244c.306 1.185.735 1.56.735 1.56.306 1.434.306 1.808.06 1.683-.55-.187-.978-1.247-1.162-1.746zm4.895 0c.306-.25.49-.686.612-1.497.306.124.612.062.796 0 .183.81.49 1.31.918 1.56 0 .685-.062 1.808-.918 1.62-.735-.186-1.346-1.434-1.408-1.683zm-.55-.187c-.735 0-1.163-1.186-1.163-1.56.367-.374.55-1.06.734-2.245.123.062.306.062.49 0 .061 1.31.428 1.871.734 2.183-.122 1.06-.428 1.622-.795 1.622zm-3.794-1.56c.122-.25.122-.312.49-2.245h.305c0 1.31.367 1.933.551 2.183-.061.686.061 1.622-.49 1.622-.244 0-.55-.312-.856-1.56zm-1.224-2.183c.184.063.061 1.684.306 2.246 0 0 0 1.559-.122 1.434-.918-1.123-.306-3.742-.184-3.68zm7.343 2.183c.428-.312.673-.998 1.04-2.245.245.062.55.062.734 0 .123.935.367 1.622.857 2.12-.122.998-.612 1.685-1.224 1.685-.979 0-1.346-1.373-1.407-1.56zm-5.018-2.432c.49-.187.796-1.248.857-1.373a.367.367 0 0 0 .49 0c0 .811.244 1.186.428 1.31-.184 1.06-.429 2.308-.98 2.308-.489 0-.734-1.123-.795-2.245zm-1.53 2.307c-.428 0-.55-1.621-.428-2.307 0 0 .367-.562.612-1.373.061 0 .184.063.245 0-.061.811.061 1.186.183 1.373 0 0-.305 2.307-.611 2.307zm4.651-2.307c.245-.125.734-.811.979-1.435.245.125.49.125.795.062.123.687.306 1.123.735 1.373-.184 1.122-.551 2.245-1.346 2.245-.735 0-1.102-1.497-1.163-2.245zm.55-1.684c-.366.998-.734 1.559-1.223 1.559-.612 0-.673-1.31-.673-1.435.49-.374.856-1.122 1.162-1.746h.429c-.123.935.122 1.372.306 1.622zm-2.998-1.56c-.306.873-.183 1.31-.06 1.622-.49 1.247-.735 1.56-1.102 1.56-.367-.063-.367-.812-.245-1.435.367-.25 1.163-1.684 1.163-1.747zm-1.774.063c.183-.063-.49.873-.428 1.31.06.623-.674 1.684-.735 1.621-.244-.062.245-2.308 1.163-2.931zm8.689 1.497c-.184.686-.429 1.559-1.469 1.559-.55-.062-.856-.81-.979-1.435.612-.436.918-1.185 1.102-1.746.183.062.49.062.673 0 .122.935.428 1.372.673 1.622zm-8.322-1.685c.122-.062.918-1.122 1.346-1.122.245.062-.428.686-.367.998-.184.312-1.04 1.87-1.346 1.87-.245 0-.245-.81.367-1.746zm15.053 7.735c-.062.935-.062 1.434.122 1.746-.245.5-.918 1.248-1.59.998-.246-.062-.246-.561-.185-.998.551-.312.918-.935 1.163-1.746.122.062.306.062.49 0zm2.447 0c.061.062.184.062.306-.063-.245 1.373-.306 1.497-.245 1.685-.428.81-.856 1.122-1.407 1.122-.245 0-.122-.436.184-.998 0 0 .734-.623 1.162-1.746zm.98 1.622c-.246.249-.49.374-.674.81-.061.125 1.102.25 1.713-2.37-.122-.187-.49.998-1.04 1.56zm-7.038-1.622c0 .748.184 1.434.551 1.871-.306 1.06-1.162 1.06-1.468.998-.429-.125-.551-.499-.673-1.123.489-.436.734-1.185.856-1.746.245.062.49.062.734 0zm5.507-1.747c0 .749.062 1.248.368 1.497-.245.624-1.04 1.81-1.53 1.81-.245 0-.367-.437-.245-1.747.367-.25.673-.874.857-1.56a.562.562 0 0 0 .55 0zm2.203.125c0 .5 0 1.31.123 1.497-.245.5-.673 1.56-1.163 1.747-.306.062-.245-.312.061-1.685 0 0 .429-.436.735-1.559zm-5.446-.125c.123.874.245 1.31.612 1.497-.06.312-.734 1.56-1.407 1.684-.857.188-.918-.998-.918-1.621.428-.25.734-.811.918-1.56.184.063.49.125.795 0zm2.326-.187c-.062.374-.551 1.56-1.163 1.56-.367 0-.673-.624-.795-1.622.306-.25.673-.873.734-2.183a.664.664 0 0 0 .49 0c.244 1.123.428 1.871.734 2.245zm2.141-2.245c.306 1.933.367 1.996.49 2.245-.306 1.185-.612 1.56-.857 1.56-.55 0-.428-.998-.49-1.622.245-.25.551-.873.551-2.183.123.062.184 0 .306 0zm1.285 2.245c.306-.499.184-2.12.306-2.245.184-.063.734 2.682-.183 3.68-.123.125-.123-1.435-.123-1.435zM18.53 14.93c.184 1.247.49 1.933 1.04 2.245-.061.187-.55 1.56-1.407 1.56-.673.062-1.04-.749-1.224-1.685.428-.498.734-1.185.857-2.12.122.062.428.062.734 0zm5.079-1.56c0 .125.367 1.186.795 1.497 0 1.06-.306 2.246-.795 2.246-.551 0-.796-1.185-.98-2.308.184-.187.429-.624.429-1.372a.585.585 0 0 0 .55-.063zm2.753 1.373c.061.686-.061 2.307-.367 2.245-.306 0-.612-2.308-.612-2.308.123-.187.245-.623.184-1.31a.183.183 0 0 0 .245 0c.244.811.55 1.373.55 1.373zm-5.996-1.373c.244.562.673 1.248 1.04 1.435-.061.749-.49 2.245-1.163 2.245-.918.063-1.162-1.06-1.346-2.245.367-.25.612-.748.673-1.372.245.062.55.062.796-.063zm1.53 1.186c-.429.062-.796-.5-1.224-1.497.244-.25.428-.749.306-1.622.183.062.306.062.428 0 .367.686.734 1.372 1.162 1.684 0 .187-.06 1.435-.673 1.435zm1.957-1.497c.062-.25.184-.687-.183-1.622h.245c0 .062.856 1.56 1.162 1.746.123.686.123 1.373-.245 1.435-.305 0-.55-.312-.979-1.56zm2.08-.188c.062-.436-.55-1.372-.489-1.31.98.624 1.347 2.87 1.163 2.932-.061.063-.734-1.06-.673-1.622zm-7.77 1.685c-.918.062-1.163-.811-1.346-1.497.306-.188.612-.749.673-1.622.183.062.49.062.673 0 .183.561.49 1.31.979 1.684-.061.748-.367 1.372-.98 1.435zm5.69-4.304c.306 0 1.224 1.06 1.285 1.122.674.998.674 1.747.429 1.747-.367 0-1.163-1.56-1.346-1.871.06-.312-.612-.998-.368-.998zm-13.584.187c-.122.374-.183.748 0 .935-.367.749-.979 1.81-1.53 1.747-.611-.125-.122-1.56-.06-1.684.367-.187 1.223-1.372 1.53-1.372.183.062.06.374.06.374zm2.876-.062c0 .374.062.81.367.997-.244.749-.734 1.747-1.53 1.685-.55-.063-.672-.998-.55-1.685.55-.187 1.04-1.372 1.407-1.372.306 0 .306.312.306.375zm8.69.997c.122-.187.122-.56 0-.935 0-.062-.123-.374.06-.374.306 0 1.163 1.185 1.53 1.372.061.125.55 1.56-.061 1.684-.612.062-1.163-1.06-1.53-1.747zm-3.244 0c.245-.187.306-.623.367-.997 0-.063 0-.375.306-.375.306-.062.918 1.185 1.408 1.372.183.811.06 1.622-.551 1.685-.857.124-1.285-.998-1.53-1.685zm-2.57-1.372c.612 0 .612 1.185 1.102 1.435 0 .312-.184 1.684-1.163 1.684-.857 0-1.04-1.123-1.101-1.684.734-.312.49-1.435 1.162-1.435z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Srn);


/***/ }),

/***/ "FW7H":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ltc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ltc = {
  symbol: 'ltc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.573-12.786L9.252 24h12.875L23 20.429h-7.722l.848-3.483 1.427-.571.68-2.75-1.41.571L18.342 8h-5.129l-2.081 8.429-1.444.58L9 19.768l1.427-.554z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#BFBBBB"/><path fill="#FFF" d="M10.427 19.214L9 19.768l.688-2.759 1.444-.58L13.213 8h5.129l-1.519 6.196 1.41-.571-.68 2.75-1.427.571-.848 3.483H23L22.127 24H9.252z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ltc);


/***/ }),

/***/ "FpyU":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pirl.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pirl = {
  symbol: 'pirl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.406-15.895c.092.254.224.492.391.705l.031.04-.045-.054c.058.083.12.162.187.237l.092.092c.036.035.065.07.094.095l1.996 2.011c.35.352.86.49 1.337.36.477-.128.85-.504.978-.985s-.009-.994-.358-1.346L12.4 13.333a.286.286 0 0 0 .007-.007l.06-.051 3.943-3.944.024.026.009.01 7.37 7.44a1.423 1.423 0 0 0 1.779-.195c.48-.483.543-1.244.15-1.8L17.4 6.408a1.376 1.376 0 0 0-1.953-.003L12.9 8.954l-.091.08c-.06.055-.122.106-.187.154l-3.145 3.146a1.399 1.399 0 0 0 0 1.971l2.493 2.518a2.507 2.507 0 0 1-.377-.718zm8.146 2.573a.352.352 0 0 0-.006.006l-.058.047-3.935 3.935-.025-.03-7.384-7.457a1.383 1.383 0 0 0-1.872-.01 1.408 1.408 0 0 0-.185 1.877l8.477 8.547c.54.543 1.414.543 1.954 0l2.624-2.624c.06-.053.124-.104.19-.15l3.148-3.149c.54-.544.54-1.427 0-1.972l-2.611-2.627a4.957 4.957 0 0 1 .064.092 1.92 1.92 0 0 0-.144-.183l-.091-.092c-.037-.035-.066-.07-.094-.095l-1.997-2.01a1.378 1.378 0 0 0-2.361.98c0 .37.145.725.405.986z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#96b73d" r="16"/><path d="M11.594 16.105c.086.258.213.5.377.718l-2.493-2.518a1.399 1.399 0 0 1 0-1.97l3.145-3.147c.065-.048.127-.1.187-.154l.091-.08 2.547-2.549a1.376 1.376 0 0 1 1.953.003l8.343 8.403a1.408 1.408 0 0 1-.151 1.801 1.423 1.423 0 0 1-1.78.195l-7.37-7.44-.008-.01-.024-.026-3.943 3.944-.06.05a.286.286 0 0 1-.007.008l3.896 3.927a1.399 1.399 0 0 1-.62 2.332 1.377 1.377 0 0 1-1.337-.361l-1.996-2.01c-.029-.026-.058-.06-.094-.096l-.092-.092a2.586 2.586 0 0 1-.187-.237l.045.053-.03-.039a2.531 2.531 0 0 1-.392-.705zm8.146 2.573l-3.901-3.929a1.399 1.399 0 0 1 0-1.97 1.378 1.378 0 0 1 1.956.004l1.997 2.01c.028.025.057.06.094.095l.091.092c.052.058.1.12.144.183l.022.027a4.957 4.957 0 0 0-.086-.119l2.61 2.627a1.4 1.4 0 0 1 0 1.972l-3.147 3.148a2.362 2.362 0 0 0-.19.151l-2.624 2.624a1.376 1.376 0 0 1-1.954 0l-8.477-8.547a1.408 1.408 0 0 1 .185-1.876 1.383 1.383 0 0 1 1.872.01l7.384 7.455.025.03 3.935-3.934.058-.047a.352.352 0 0 1 .006-.006z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pirl);


/***/ }),

/***/ "FxgV":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mana.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mana = {
  symbol: 'mana',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-27C9.939 5 5 9.939 5 16s4.939 11 11 11 11-4.939 11-11S22.061 5 16 5zm8.855 9.889l-.946.165-1.364-1.892h-.44a3.756 3.756 0 0 0-3.322-5.5c-2.068 0-3.762 1.672-3.762 3.74 0 1.716 1.166 3.168 2.739 3.619l-.055.055-.539.275-.88-.319-.869-.506-1.221 1.54-.979-.539-1.881.484-.946-3.102H8.08l-1.683 2.948-.517.011C5.946 10.346 10.467 5.88 16 5.88c5.577 0 10.12 4.543 10.12 10.12v.319l-1.265-1.43zM16 26.12c-4.301 0-7.986-2.695-9.449-6.49.286 0 .594.011.902.011.165.046.335.068.506.066.143 0 .286-.011.407-.044.07-.002.14.002.209.011-.022.066-.022.088-.022.11 0 .484.517.836 1.232.836.693 0 1.199-.33 1.221-.792l.341.033c2.926.319 3.124.847 3.124.869.011.044-.055.275-.649.671-1.243.858-1.672 1.375-1.562 1.914.132.649.979.814 2.266 1.056.363.066.77.143 1.188.242.462.099.957.198 1.43.297.858.176 1.738.352 2.442.561A10.17 10.17 0 0 1 16 26.12zm4.708-1.166c-.825-.407-2.079-.649-3.399-.913a63.833 63.833 0 0 1-1.408-.286 23.798 23.798 0 0 0-1.221-.242c-.594-.11-1.309-.253-1.54-.385.077-.121.319-.407 1.177-.99.308-.209 1.243-.847.99-1.661-.231-.759-1.43-1.221-3.872-1.485-.22-.022-.451-.044-.693-.066-.121-.363-.297-.88-.55-1.628l-.418-1.221-.418 1.221c-.143.407-.253.737-.352 1.023-.11-.352-.308-.924-.649-1.914l-.385-1.243-.418 1.221c-.572 1.672-.737 2.167-.781 2.354h-.506a10.769 10.769 0 0 1-.352-1.991l1.012-.033 1.672-2.926h1.155l1.001 3.289 2.354-.605.539.297-1.144 1.441.693.55 2.442-3.091.286.165 1.32.484.572-.297c-.11.231-.176.484-.176.748s.165.825 1.419 1.034c.399.065.692.41.693.814v1.43a2.526 2.526 0 0 0-.594-.308h.011c-.484-.154-.935-.385-1.078-.858-.11.385-.418.605-.814.759-1.023.275-1.76 1.045-1.76 1.958 0 .33.253 1.111 2.552 1.111 2.31 0 2.552-.781 2.552-1.111v-1.727c.154.055.33.099.539.132.399.065.692.41.693.814v.99c0 .231.165.44.396.462a.446.446 0 0 0 .484-.44v-1.012a.827.827 0 0 1 .693-.814c1.254-.209 1.419-.759 1.419-1.034 0-.737-.484-1.375-1.199-1.738h.011c-.011 0-.022-.011-.044-.011-.121-.066-.264-.11-.396-.154a1.362 1.362 0 0 1-.495-.396c-.055-.781-.638-1.441-1.474-1.76h-.011c-.055-.022-.11-.033-.165-.055-.418-.154-.781-.385-.902-.792-.132.451-.517.682-1.012.836-.033.011-.077.022-.11.044l1.375-1.463.825 1.111.66-.528h.165l1.43 1.969 1.012-.176 1.485 1.683c-.484 3.212-2.497 5.94-5.291 7.414zm-.968-3.421c-.154.11-.726.286-1.672.286s-1.518-.176-1.672-.286c.044-.616.792-1.122 1.672-1.122.88 0 1.628.506 1.672 1.122zm2.563-3.751c.88 0 1.628.506 1.672 1.122-.154.11-.737.286-1.672.286-.935 0-1.518-.176-1.672-.286.044-.616.792-1.122 1.672-1.122zm-.451-1.078c-.154.11-.737.286-1.672.286-.935 0-1.518-.176-1.672-.286.044-.616.792-1.122 1.672-1.122.88 0 1.628.506 1.672 1.122zm-.671-3.729l-.66-.891-2.046 2.189a2.874 2.874 0 0 1 .308-5.731 2.873 2.873 0 0 1 2.871 2.871 2.84 2.84 0 0 1-.473 1.562zM9.499 19.696l.297-.891.297.891c-.194.059-.4.059-.594 0zm-1.815-.935c.066-.198.165-.517.286-.858.121.352.231.671.286.869-.198 0-.385-.011-.572-.011zm4.224-5.907a2.56 2.56 0 0 0 2.552-2.552 2.554 2.554 0 0 0-2.552-2.552 2.554 2.554 0 0 0-2.552 2.552 2.554 2.554 0 0 0 2.552 2.552zm0-4.224c.913 0 1.672.748 1.672 1.672a1.672 1.672 0 1 1-1.672-1.672z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#BFB5AF"/><path fill="#FFF" d="M16 5c6.061 0 11 4.939 11 11s-4.939 11-11 11S5 22.061 5 16 9.939 5 16 5zm8.855 9.889l1.265 1.43V16c0-5.577-4.543-10.12-10.12-10.12-5.533 0-10.054 4.466-10.12 9.988l.517-.011 1.683-2.948h2.31l.946 3.102 1.881-.484.979.539 1.221-1.54.869.506.88.319.539-.275.055-.055c-1.573-.451-2.739-1.903-2.739-3.619 0-2.068 1.694-3.74 3.762-3.74a3.756 3.756 0 0 1 3.322 5.5h.44l1.364 1.892.946-.165zM16 26.12a10.17 10.17 0 0 0 3.586-.649c-.704-.209-1.584-.385-2.442-.561-.473-.099-.968-.198-1.43-.297a22.913 22.913 0 0 0-1.188-.242c-1.287-.242-2.134-.407-2.266-1.056-.11-.539.319-1.056 1.562-1.914.594-.396.66-.627.649-.671 0-.022-.198-.55-3.124-.869l-.341-.033c-.022.462-.528.792-1.221.792-.715 0-1.232-.352-1.232-.836 0-.022 0-.044.022-.11a1.403 1.403 0 0 0-.209-.011 1.593 1.593 0 0 1-.407.044c-.17.002-.341-.02-.506-.066-.308 0-.616-.011-.902-.011 1.463 3.795 5.148 6.49 9.449 6.49zm4.708-1.166c2.794-1.474 4.807-4.202 5.291-7.414l-1.485-1.683-1.012.176-1.43-1.969h-.165l-.66.528-.825-1.111-1.375 1.463c.033-.022.077-.033.11-.044.495-.154.88-.385 1.012-.836.121.407.484.638.902.792.055.022.11.033.165.055h.011c.836.319 1.419.979 1.474 1.76.121.165.297.297.495.396.132.044.275.088.396.154.022 0 .033.011.044.011h-.011c.715.363 1.199 1.001 1.199 1.738 0 .275-.165.825-1.419 1.034a.827.827 0 0 0-.693.814v1.012c0 .253-.22.462-.484.44-.231-.022-.396-.231-.396-.462v-.99a.827.827 0 0 0-.693-.814 2.973 2.973 0 0 1-.539-.132v1.727c0 .33-.242 1.111-2.552 1.111-2.299 0-2.552-.781-2.552-1.111 0-.913.737-1.683 1.76-1.958.396-.154.704-.374.814-.759.143.473.594.704 1.078.858h-.011c.22.077.418.187.594.308v-1.43a.827.827 0 0 0-.693-.814c-1.254-.209-1.419-.77-1.419-1.034s.066-.517.176-.748l-.572.297-1.32-.484-.286-.165-2.442 3.091-.693-.55 1.144-1.441-.539-.297-2.354.605-1.001-3.289H8.597l-1.672 2.926-1.012.033c.055.673.172 1.34.352 1.991h.506c.044-.187.209-.682.781-2.354l.418-1.221.385 1.243c.341.99.539 1.562.649 1.914.099-.286.209-.616.352-1.023l.418-1.221.418 1.221c.253.748.429 1.265.55 1.628.242.022.473.044.693.066 2.442.264 3.641.726 3.872 1.485.253.814-.682 1.452-.99 1.661-.858.583-1.1.869-1.177.99.231.132.946.275 1.54.385.374.066.792.143 1.221.242.462.099.946.198 1.408.286 1.32.264 2.574.506 3.399.913zm-.968-3.421c-.044-.616-.792-1.122-1.672-1.122-.88 0-1.628.506-1.672 1.122.154.11.726.286 1.672.286s1.518-.176 1.672-.286zm2.563-3.751c-.88 0-1.628.506-1.672 1.122.154.11.737.286 1.672.286.935 0 1.518-.176 1.672-.286-.044-.616-.792-1.122-1.672-1.122zm-.451-1.078c-.044-.616-.792-1.122-1.672-1.122-.88 0-1.628.506-1.672 1.122.154.11.737.286 1.672.286.935 0 1.518-.176 1.672-.286zm-.671-3.729a2.84 2.84 0 0 0 .473-1.562 2.873 2.873 0 0 0-2.871-2.871 2.873 2.873 0 0 0-.308 5.731l2.046-2.189.66.891zM9.499 19.696c.194.059.4.059.594 0l-.297-.891-.297.891zm-1.815-.935c.187 0 .374.011.572.011-.055-.198-.165-.517-.286-.869-.121.341-.22.66-.286.858zm4.224-5.907a2.554 2.554 0 0 1-2.552-2.552 2.554 2.554 0 0 1 2.552-2.552 2.554 2.554 0 0 1 2.552 2.552 2.56 2.56 0 0 1-2.552 2.552zm0-4.224a1.672 1.672 0 1 0 1.672 1.672c0-.924-.759-1.672-1.672-1.672z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mana);


/***/ }),

/***/ "G/1r":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/icx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Icx = {
  symbol: 'icx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M11.296 22.472a8 8 0 0 0 11.176-11.176l-2.164 2.164a5 5 0 0 1-6.848 6.848zm-1.768-1.768l2.164-2.164a5 5 0 0 1 6.848-6.848l2.164-2.164A8 8 0 0 0 9.528 20.704zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8-22a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM8 26a2 2 0 1 0 0-4 2 2 0 0 0 0 4z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1fc5c9" r="16"/><path d="M11.296 22.472l2.164-2.164a5 5 0 0 0 6.848-6.848l2.164-2.164a8 8 0 0 1-11.176 11.176zm-1.768-1.768A8 8 0 0 1 20.704 9.528l-2.164 2.164a5 5 0 0 0-6.848 6.848zM24 10a2 2 0 1 1 0-4 2 2 0 0 1 0 4zM8 26a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Icx);


/***/ }),

/***/ "GDMn":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gusd.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gusd = {
  symbol: 'gusd',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.378-27c-3.87 0-7.157 2.976-7.57 6.807C7.975 12.221 5 15.508 5 19.377A7.627 7.627 0 0 0 12.622 27c3.87 0 7.17-2.976 7.57-6.807 3.832-.414 6.808-3.701 6.808-7.57A7.627 7.627 0 0 0 19.378 5zm5.836 8.476a5.93 5.93 0 0 1-4.97 4.97v-4.97h4.97zM6.786 18.524a5.93 5.93 0 0 1 4.97-4.983v4.97h-4.97v.013zm11.673 1.72a5.895 5.895 0 0 1-5.837 5.035 5.894 5.894 0 0 1-5.836-5.034h11.673zm.065-6.768v5.035h-5.048v-5.035h5.048zm6.69-1.72H13.541a5.895 5.895 0 0 1 5.837-5.035 5.894 5.894 0 0 1 5.836 5.034z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00DCFA"/><path d="M19.378 5c-3.87 0-7.157 2.976-7.57 6.807C7.975 12.221 5 15.508 5 19.377A7.627 7.627 0 0 0 12.622 27c3.87 0 7.17-2.976 7.57-6.807 3.832-.414 6.808-3.701 6.808-7.57A7.627 7.627 0 0 0 19.378 5zm5.836 8.476a5.93 5.93 0 0 1-4.97 4.97v-4.97h4.97zM6.786 18.524a5.93 5.93 0 0 1 4.97-4.983v4.97h-4.97v.013zm11.673 1.72a5.895 5.895 0 0 1-5.837 5.035 5.894 5.894 0 0 1-5.836-5.034h11.673zm.065-6.768v5.035h-5.048v-5.035h5.048zm6.69-1.72H13.541a5.895 5.895 0 0 1 5.837-5.035 5.894 5.894 0 0 1 5.836 5.034z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gusd);


/***/ }),

/***/ "GHz0":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/chain.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Chain = {
  symbol: 'chain',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.51 11.744l6.376-3.668 6.36 3.676-6.36 3.677-6.375-3.685zm12.976-.13l3.257-1.9L15.886 4 6 9.714v11.429l9.886 5.714 9.857-5.714-3.495-2.038-6.362 3.676-6.39-3.676v-3.296l6.4 3.696 6.418-3.715v3.315l3.457 2.038V9.714l-3.285 1.9z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00ACED" fill-rule="nonzero"/><g fill="#FFF"><path d="M6 9.714v4.076l9.895 5.715 6.42-3.715v3.315l3.456 2.038V9.714l-9.885 5.715z"/><path opacity=".7" d="M15.886 4L6 9.714v11.429l9.886 5.714 9.857-5.714-3.495-2.038-6.362 3.676-6.39-3.676v-7.353l6.39-3.676 6.362 3.676 3.495-2.038z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Chain);


/***/ }),

/***/ "GQyD":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pasc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pasc = {
  symbol: 'pasc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-28C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm6 5.813a2.25 2.25 0 0 1 2.25 2.25v3.374a2.25 2.25 0 0 1-2.25 2.25h-2.786l-.18.844a.488.488 0 0 1-.454.375h-.563a.294.294 0 0 1-.295-.375l.18-.843h-1.313l-.18.843a.488.488 0 0 1-.454.375h-.563a.294.294 0 0 1-.295-.375l.18-.843H13.87L12.634 23.5h-3l2.192-10.313h3l-.478 2.25h5.777c.621 0 1.125-.503 1.125-1.124v-1.126c0-.62-.504-1.124-1.125-1.124H7.75l1.875-2.25h7.326l.179-.844a.488.488 0 0 1 .454-.375h.563a.294.294 0 0 1 .295.375l-.179.844h1.313l.179-.844a.488.488 0 0 1 .454-.375h.563a.294.294 0 0 1 .295.375l-.179.844H22z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F7931E"/><path d="M16 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm6 5.813a2.25 2.25 0 0 1 2.25 2.25v3.374a2.25 2.25 0 0 1-2.25 2.25h-2.786l-.18.844a.488.488 0 0 1-.454.375h-.563a.294.294 0 0 1-.295-.375l.18-.843h-1.313l-.18.843a.488.488 0 0 1-.454.375h-.563a.294.294 0 0 1-.295-.375l.18-.843H13.87L12.634 23.5h-3l2.192-10.313h3l-.478 2.25h5.777c.621 0 1.125-.503 1.125-1.124v-1.126c0-.62-.504-1.124-1.125-1.124H7.75l1.875-2.25h7.326l.179-.844a.488.488 0 0 1 .454-.375h.563a.294.294 0 0 1 .295.375l-.179.844h1.313l.179-.844a.488.488 0 0 1 .454-.375h.563a.294.294 0 0 1 .295.375l-.179.844H22z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pasc);


/***/ }),

/***/ "GSxG":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rdd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rdd = {
  symbol: 'rdd',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M18.886 7.093a10.436 10.436 0 0 0-3.525-.609C9.64 6.484 5 11.077 5 16.742 5 22.407 9.639 27 15.361 27c5.723 0 10.362-4.593 10.362-10.258a10.14 10.14 0 0 0-.73-3.789 4.308 4.308 0 0 0 1.999-3.632C26.992 6.935 25.037 5 22.627 5a4.372 4.372 0 0 0-3.74 2.093zm-.59 1.686a4.32 4.32 0 0 0 .02 1.218 9.344 9.344 0 0 0-1.167-.574l.238-1.055c.315.13.618.267.909.41zm4.93 4.824c.084.174.163.35.238.53l-.931.648a14.47 14.47 0 0 0-.661-1.204 4.43 4.43 0 0 0 1.354.026zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/><path d="M18.886 7.093a4.266 4.266 0 0 0-.59 1.686 14.6 14.6 0 0 0-.909-.411l-.238 1.055c.408.167.796.359 1.166.574V10c1.454.847 2.622 2.061 3.554 3.577h.003c.235.383.455.784.661 1.204l.93-.647a9.738 9.738 0 0 0-.237-.531 4.364 4.364 0 0 0 1.767-.65c.471 1.173.73 2.45.73 3.79C25.723 22.406 21.083 27 15.36 27S5 22.407 5 16.742C5 11.077 9.639 6.484 15.361 6.484c1.238 0 2.425.215 3.525.609z" opacity=".6"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#E30613"/><g fill="#FFF"><path d="M15.361 27C9.64 27 5 22.407 5 16.742 5 11.077 9.639 6.484 15.361 6.484c5.723 0 10.362 4.593 10.362 10.258C25.723 22.407 21.083 27 15.36 27zM17.15 9.423c2.416.989 4.152 2.85 5.384 5.358l.93-.647c-1.044-2.512-2.973-4.486-6.076-5.766l-.238 1.055z" opacity=".75"/><path fill-rule="nonzero" d="M26.992 9.321C26.992 6.935 25.037 5 22.627 5s-4.365 1.935-4.365 4.321c0 .228.018.455.054.68 1.453.846 2.62 2.06 3.553 3.576.25.043.504.066.758.066 2.41 0 4.365-1.935 4.365-4.322z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rdd);


/***/ }),

/***/ "Gfpd":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/blk.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Blk = {
  symbol: 'blk',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.1-20.87c-.047-2.914-3.401-3.66-3.401-3.66s1.882 1.266 1.93 3.829c.047 2.563-.965 3.563-.965 3.563s2.483-.819 2.436-3.732zM11.936 24.819V7.169L8.5 7v.289s2.103.554 2.103 3.748v9.64c0 3.773-2.103 3.99-2.103 3.99v.32zm5.492.18c1.494-.011 3.789-1.058 4.213-3.912.423-2.854-.67-4.166-1.236-4.648-.565-.481-2.165-1.035-2.165-1.035s1.058-.542 1.541-1.325.86-2.215.506-3.72c-.353-1.505-1.647-3.01-3.154-3.227-1.506-.216-2.145.036-3.973.06v17.61s2.773.21 4.268.197zm3.971-.65s3.136-.903 3.1-4.334c-.034-3.431-3.1-4.202-3.1-4.202s1.487 1.354 1.558 4.235S21.4 24.35 21.4 24.35zm-3.1-10.334c-1.099 1.461-3.836 1.076-3.836 1.076s-.013-6.166.258-6.431c.27-.265 1.671-.735 3 .205 1.33.94 1.676 3.689.577 5.15zm.203 2.625c1.028.457 2.33 2.014 1.695 4.526-.635 2.513-2.565 2.585-3.577 2.545-1.012-.04-1.986-.024-2.095-2.938s-.063-4.47-.063-4.47 3.012-.121 4.04.337z" fill="#181818" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#181818" r="16"/><path d="M23.1 11.13a3.803 3.803 0 0 1-2.436 3.732s1.012-1 .965-3.563c-.048-2.563-1.93-3.83-1.93-3.83s3.354.747 3.4 3.66zM11.936 24.819l-3.436.169v-.321s2.103-.217 2.103-3.99v-9.64C10.603 7.843 8.5 7.29 8.5 7.29V7l3.436.168zm5.492.18c-1.495.013-4.268-.196-4.268-.196V7.193c1.828-.025 2.467-.277 3.973-.06 1.507.216 2.801 1.721 3.154 3.226.353 1.505-.023 2.938-.506 3.72s-1.541 1.325-1.541 1.325 1.6.554 2.165 1.035c.565.482 1.66 1.794 1.236 4.648-.424 2.854-2.719 3.9-4.213 3.912zm3.971-.65s1.63-1.42 1.558-4.301-1.558-4.235-1.558-4.235 3.066.77 3.1 4.202c.036 3.431-3.1 4.335-3.1 4.335zm-3.1-10.334c1.098-1.461.753-4.21-.577-5.15-1.33-.94-2.73-.47-3-.205-.272.265-.26 6.43-.26 6.43s2.738.386 3.836-1.075zm.203 2.625c-1.028-.458-4.04-.338-4.04-.338s-.047 1.557.063 4.471 1.083 2.898 2.095 2.938c1.012.04 2.942-.032 3.577-2.545.636-2.512-.667-4.069-1.695-4.526z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Blk);


/***/ }),

/***/ "H1ma":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/actn.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Actn = {
  symbol: 'actn',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM4.406 21.711a5.525 5.525 0 0 0-.406.773c0 .036.144.036.295.036.34-.03.673-.103.994-.218l.441-.11a7.68 7.68 0 0 0 1.325-.738l.809-.662c.392-.318.75-.676 1.068-1.068l.883-1.253c.627-.845 1.325-1.25 2.136-1.214a3 3 0 0 0 1.325-.367l2.282-1.472a5.44 5.44 0 0 0 .663-.48 3.12 3.12 0 0 0-.406-.736l-.441-.735c-.478-.773-.478-.811-.036-1.62l.036-.11a6.22 6.22 0 0 0 .37-.737 4.414 4.414 0 0 0-.15-1.078 2.136 2.136 0 0 0-.292.48c-.406.845-.663 1.325-.701 1.325-.11 0-.036-1.032.185-1.656l.993-3.12c.257-.921.295-.921.552 0l1.469 4.601c.187.626.336.737.96.737h1.03c.808-.039 1.322.331 1.73 1.214.222.39.495.75.811 1.068l5.117 5.309c.162.201.348.383.552.542v-.036c-.126-.225-.26-.446-.403-.662l-3.792-5.448c-.29-.416-.611-.81-.96-1.178l-1.176-1.25a1.853 1.853 0 0 0-1.253-.553h-.293c-.921 0-1.805-.662-2.172-1.584l-1.62-4.013A1.982 1.982 0 0 0 15.964 5c-.191.197-.353.42-.48.662l-3.749 5.744a.703.703 0 0 1-.993.292h-.039c-.372-.22-.739-.11-.96.296L4.406 21.71z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="red"/><path d="M4.406 21.711l5.337-9.717c.221-.406.588-.516.96-.296h.039a.703.703 0 0 0 .993-.292l3.749-5.744c.127-.242.289-.465.48-.662.168.206.293.443.367.698l1.62 4.013c.367.922 1.25 1.584 2.172 1.584h.293c.473.018.921.215 1.253.552l1.176 1.25c.349.37.67.763.96 1.179l3.792 5.448c.142.216.277.437.403.662v.036a3.36 3.36 0 0 1-.552-.542l-5.117-5.309a5.112 5.112 0 0 1-.811-1.068c-.408-.883-.922-1.253-1.73-1.214h-1.03c-.624 0-.773-.11-.96-.737l-1.469-4.6c-.257-.922-.295-.922-.552 0l-.993 3.12c-.221.623-.296 1.655-.185 1.655.038 0 .295-.48.7-1.325.077-.172.175-.333.293-.48.094.352.144.714.15 1.078-.108.254-.231.5-.37.737l-.036.11c-.442.809-.442.847.036 1.62l.441.735c.168.226.304.474.406.736a5.44 5.44 0 0 1-.663.48l-2.282 1.472a3 3 0 0 1-1.325.367c-.811-.036-1.51.37-2.136 1.214l-.883 1.253c-.318.392-.676.75-1.068 1.068l-.809.662a7.68 7.68 0 0 1-1.325.737l-.441.11c-.32.116-.655.19-.994.219-.151 0-.295 0-.295-.036.115-.268.25-.526.406-.773z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Actn);


/***/ }),

/***/ "H8D0":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ncash.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ncash = {
  symbol: 'ncash',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.31-13.525c-.175-.077-.395.036-.49.254a.45.45 0 0 0 .021.428l-2.25 3.976a.473.473 0 0 0-.242.034l-1.49-1.518a.566.566 0 0 0-.324-.641v-9.794a.562.562 0 0 0 .23-.188l3.669 1.966.012.049c.067.228.27.365.453.306.182-.058.276-.291.208-.52-.062-.209-.236-.34-.406-.317l-1.783-3.482.008-.01c.13-.189.048-.475-.18-.639a.53.53 0 0 0-.46-.09l-1.216-.818a.586.586 0 0 0-.286-.428.57.57 0 0 0-.473-.058l-2.826-1.612c-.04-.174-.205-.325-.424-.363-.242-.043-.466.062-.545.243l-6.119 1.112a.532.532 0 0 0-.469-.063c-.25.079-.41.301-.374.512L6.302 11.27c-.19-.012-.383.136-.462.369a.545.545 0 0 0 .069.516l-.239 5.687c-.127.104-.195.3-.161.506.04.23.192.404.368.439l1.62 3.757c-.065.172-.003.399.17.555a.528.528 0 0 0 .46.14l3.938 2.842c-.01.207.164.408.416.463a.534.534 0 0 0 .451-.094l5.098.357c.098.145.302.223.517.182a.524.524 0 0 0 .41-.326l4.338-2.598a.545.545 0 0 0 .43-.167c.148-.147.205-.347.16-.509l2.226-4.103a.445.445 0 0 0 .345-.277c.095-.218.03-.457-.145-.534zm.004.475c-.039.087-.127.133-.196.102-.071-.032-.097-.127-.059-.214.038-.087.126-.132.196-.102.07.03.097.126.059.214zm-2.665 4.792c-.08.08-.197.09-.26.025-.063-.066-.048-.185.031-.265.081-.08.197-.09.26-.024s.049.185-.031.264zm-.629-.25l-3.974 1.374a.545.545 0 0 0-.19-.135l-.186-2.707a.567.567 0 0 0 .23-.249h1.918c.09.19.279.32.499.32a.54.54 0 0 0 .285-.081l1.43 1.454-.012.024zm-4.168 2.786a.44.44 0 0 0-.102-.069l.096-.564a.52.52 0 0 0 .313-.35l3.16-1.093zm-.325.538c-.11.02-.213-.036-.23-.127-.016-.091.06-.182.17-.201.11-.022.213.035.229.126.016.091-.06.182-.17.202zm-.504-.398l-3.808-.265 3.978-.642c.057.062.13.11.213.142l-.091.535a.53.53 0 0 0-.292.23zm-3.721-4.336a.554.554 0 0 0 .173-.073l3.549 3.08-5.016.81zm-1.665 3.555l-1.257-3.781a.697.697 0 0 0 .047-.08h2.256c.042.09.107.166.188.222zm-.153.735c-.11-.024-.183-.116-.164-.207.019-.09.124-.144.233-.12.11.024.182.116.163.207-.018.09-.123.144-.232.12zM8.397 22.96a.44.44 0 0 0 .006-.115l2.123-.925a.55.55 0 0 0 .473.17l1.203 3.616zm-.356-.598l-.943-4.648 3.376 3.49a.576.576 0 0 0-.1.3l-2.183.951a.634.634 0 0 0-.15-.093zm-.023.609c-.06.07-.177.064-.26-.011-.085-.075-.104-.193-.044-.263s.177-.063.26.012c.085.076.103.194.044.262zm-1.79-4.333a.574.574 0 0 0 .076-.491l.307-.654.779 3.838zm-.028-4.34l.16 2.203a.558.558 0 0 0-.022.559l-.278.59zM6 11.647c.037-.108.135-.17.22-.14.087.03.126.143.09.25-.038.109-.136.171-.222.141-.085-.03-.126-.143-.089-.251zm.844 5.153c0 .115-.083.207-.183.207-.101 0-.184-.092-.184-.207 0-.114.083-.206.184-.206.1 0 .183.092.183.206zm-.23-4.886a.654.654 0 0 0 .028-.119l1.904-1.293-1.779 5.63-.29-3.99a.6.6 0 0 0 .137-.228zM9.64 8.329l-.743 1.21a.57.57 0 0 0-.302.187.597.597 0 0 0-.142.307l-1.247.846zm1.254-1.207c.085.015.18.01.273-.019a.572.572 0 0 0 .308-.224l3.268.724a.573.573 0 0 0 .11.259l-1.07 2.275a.557.557 0 0 0-.389.31h-1.967a.555.555 0 0 0-.5-.32.545.545 0 0 0-.397.171l-1.175-.36a.418.418 0 0 0-.048-.234zm.058-.653c.108-.034.215.011.241.1.027.088-.039.187-.146.22-.106.033-.214-.011-.241-.1-.026-.088.04-.187.146-.22zm6.248-.764l-1.727 1.276a.542.542 0 0 0-.624.193l-2.581-.571zm.605.097a.59.59 0 0 0 .115.033c.164.029.32-.01.428-.095l2.674 1.524-.011.038-5.045-.14zm.238-.619c.11.02.187.11.171.2-.016.092-.118.15-.228.13-.11-.02-.186-.11-.171-.2.015-.092.117-.15.228-.13zm3.233 2.725l-.192 2.271a.562.562 0 0 0-.266.267h-2.256a.555.555 0 0 0-.621-.305l-2.124-2.45a.489.489 0 0 0 .02-.09l5.264.145a.62.62 0 0 0 .175.162zm.04 2.558c.123 0 .223.102.223.227s-.1.226-.222.226-.222-.101-.222-.226.1-.227.222-.227zm.099-3.2c.055-.096.185-.123.291-.06.106.063.147.192.092.288-.055.097-.186.124-.29.06-.107-.062-.148-.192-.093-.288zm3.915 5.318l-3.46-1.938a.566.566 0 0 0-.35-.48l.183-2.169zm-2.293-3.997c-.02.167.068.357.239.478a.58.58 0 0 0 .296.11l1.278 2.285-2.627-3.42zm.38-.057c.052-.076.168-.084.26-.019s.124.18.072.256c-.052.076-.169.084-.26.019-.092-.066-.124-.18-.071-.256zm-5.57 2.163c0-.123.095-.222.216-.222.12 0 .217.1.217.222a.22.22 0 0 1-.217.221.218.218 0 0 1-.217-.221zm.119 4.773c.123 0 .221.101.221.226a.224.224 0 0 1-.221.227.224.224 0 0 1-.222-.227c0-.125.1-.226.222-.226zm-2.897-8.024c0-.125.099-.227.221-.227.123 0 .222.102.222.227s-.1.226-.222.226a.224.224 0 0 1-.221-.226zm.162.637a.553.553 0 0 0 .299-.052l2.059 2.373a.566.566 0 0 0 .257.814v3.926a.56.56 0 0 0-.096.03l-3.38-4.19a.575.575 0 0 0-.153-.746zm-1.56 2.614c0-.125.1-.227.222-.227.121 0 .221.102.221.227s-.1.226-.221.226a.224.224 0 0 1-.222-.226zm-2.96 0c0-.123.096-.222.216-.222s.217.1.217.222-.097.221-.217.221-.216-.099-.216-.221zm.216 10.61c.123 0 .222.1.222.226a.223.223 0 0 1-.222.226.223.223 0 0 1-.22-.226c0-.125.098-.226.22-.226zM8.731 9.843c.075-.086.19-.106.257-.044.068.06.063.18-.01.265-.075.087-.19.106-.258.045s-.062-.18.01-.266zm-1.625 6.659l1.92-6.077a.579.579 0 0 0 .126-.087l1.222.375a.565.565 0 0 0 .337.501v9.603l-3.602-3.722a.553.553 0 0 0 .082-.295.555.555 0 0 0-.085-.298zm11.294 4.46a.59.59 0 0 0-.143.02l-3.484-4.33a.56.56 0 0 0-.52-.763.56.56 0 0 0-.554.567.57.57 0 0 0 .266.483v4.069a.565.565 0 0 0-.303.324h-2.215a.567.567 0 0 0-.303-.324v-9.794a.565.565 0 0 0 .303-.324h1.926a.555.555 0 0 0 .647.354l3.428 4.248a.559.559 0 0 0-.036.2.56.56 0 0 0 .554.567.561.561 0 0 0 .555-.567.57.57 0 0 0-.24-.467v-4.01a.565.565 0 0 0 .301-.325h2.216a.559.559 0 0 0 .302.324v9.794a.56.56 0 0 0-.302.324H18.92a.555.555 0 0 0-.52-.37zm.24 4.047c.123 0 .223.09.223.202s-.1.201-.222.201c-.121 0-.22-.09-.22-.2s.099-.203.22-.203zm-.461-3.48c0-.125.099-.226.22-.226.124 0 .223.1.223.226a.223.223 0 0 1-.222.226.223.223 0 0 1-.221-.226zm-4.147-5.073c0-.126.1-.226.222-.226s.221.1.221.226a.223.223 0 0 1-.221.226.224.224 0 0 1-.222-.226zm.15 4.847c.122 0 .221.1.221.226a.223.223 0 0 1-.221.226.223.223 0 0 1-.222-.226c0-.125.1-.226.222-.226zm.216-.295v-4.006a.495.495 0 0 0 .075-.026l3.442 4.28a.566.566 0 0 0-.069.273c0 .255.165.47.39.542l.184 2.644a.575.575 0 0 0-.103.047l-3.593-3.117a.566.566 0 0 0-.326-.637zm7.14.52a.224.224 0 0 1-.221.227.223.223 0 0 1-.222-.226c0-.125.1-.226.222-.226s.222.1.222.226zm-15.71-3.021c-.09.017-.177-.062-.195-.175-.02-.113.037-.217.127-.232.09-.016.176.063.196.176.019.112-.039.216-.128.231zM25.8 12.793c.073-.023.155.031.18.123.028.091-.01.185-.082.208-.073.023-.154-.032-.181-.123-.027-.091.01-.185.083-.208z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#36a9cf" fill-rule="nonzero" r="16"/><path d="M26.31 18.475c.176.077.241.316.146.534a.445.445 0 0 1-.345.277l-2.225 4.103a.538.538 0 0 1-.162.509.545.545 0 0 1-.429.167l-4.339 2.598a.524.524 0 0 1-.41.326c-.214.041-.418-.037-.516-.182l-5.098-.357a.534.534 0 0 1-.451.094c-.252-.055-.426-.256-.416-.463l-3.939-2.842a.528.528 0 0 1-.46-.14c-.172-.156-.234-.383-.168-.555l-1.62-3.757c-.177-.035-.33-.209-.37-.439-.033-.207.035-.402.162-.506l.239-5.687a.545.545 0 0 1-.07-.516c.08-.233.273-.38.463-.37l4.252-4.455c-.037-.21.123-.433.374-.512a.532.532 0 0 1 .47.063l6.118-1.112c.079-.18.303-.286.545-.243.22.038.385.189.424.363l2.826 1.612a.57.57 0 0 1 .473.058.586.586 0 0 1 .286.428l1.216.818a.53.53 0 0 1 .46.09c.228.164.31.45.18.64l-.008.01 1.783 3.48c.17-.023.344.109.406.318.068.229-.026.462-.208.52-.183.06-.386-.078-.453-.306l-.012-.05-3.669-1.965a.562.562 0 0 1-.23.188v9.794a.566.566 0 0 1 .324.641l1.49 1.518a.473.473 0 0 1 .242-.034l2.25-3.976a.45.45 0 0 1-.021-.428c.095-.218.315-.331.49-.254zm.004.475c.038-.088.011-.183-.059-.214-.07-.03-.158.015-.196.102-.038.087-.012.182.059.214.07.03.157-.015.196-.102zm-2.665 4.792c.08-.08.094-.198.031-.264s-.179-.055-.26.024c-.08.08-.094.199-.031.265s.18.055.26-.025zm-.629-.25l.011-.024-1.429-1.454a.54.54 0 0 1-.285.082.551.551 0 0 1-.499-.32H18.9a.566.566 0 0 1-.23.248l.187 2.707c.074.032.14.078.19.135zm-4.168 2.786l3.467-2.076-3.16 1.092a.52.52 0 0 1-.313.351l-.096.564a.44.44 0 0 1 .102.069zm-.325.538c.11-.02.185-.11.169-.202-.016-.09-.12-.148-.23-.126-.109.02-.185.11-.169.201.017.091.12.148.23.127zm-.504-.398a.53.53 0 0 1 .292-.23l.091-.535a.557.557 0 0 1-.213-.142l-3.978.642zm-3.721-4.336l-1.294 3.817 5.016-.81-3.549-3.08a.554.554 0 0 1-.173.073zm-1.665 3.555l1.234-3.639a.559.559 0 0 1-.188-.223h-2.256a.697.697 0 0 1-.047.08zm-.153.735c.11.024.214-.03.232-.12.02-.09-.053-.183-.163-.208-.11-.023-.214.03-.233.12-.019.092.054.184.164.208zM8.397 22.96l3.805 2.746L11 22.09a.55.55 0 0 1-.473-.17l-2.123.925a.44.44 0 0 1-.006.115zm-.356-.598a.634.634 0 0 1 .15.093l2.183-.95a.576.576 0 0 1 .1-.302l-3.376-3.489zm-.023.609c.06-.068.04-.186-.043-.262-.084-.075-.2-.081-.26-.012-.06.07-.042.188.042.263.084.075.201.08.26.011zm-1.79-4.333l1.162 2.693-.779-3.838-.307.654a.574.574 0 0 1-.076.491zm-.028-4.34l-.14 3.352.278-.59a.558.558 0 0 1 .023-.56zM6 11.647c-.038.108.003.22.088.251.086.03.184-.032.221-.14.037-.108-.002-.22-.088-.251-.086-.03-.184.032-.222.14zm.844 5.153c0-.114-.083-.206-.183-.206-.101 0-.184.092-.184.206 0 .115.083.207.184.207.1 0 .183-.092.183-.207zm-.23-4.886a.6.6 0 0 1-.137.227l.29 3.99 1.78-5.629-1.905 1.293a.654.654 0 0 1-.028.119zM9.64 8.329l-2.434 2.55 1.247-.846a.597.597 0 0 1 .142-.307.57.57 0 0 1 .302-.187zm1.254-1.207L9.307 9.704a.416.416 0 0 1 .048.233l1.175.361a.546.546 0 0 1 .897.148h1.967a.557.557 0 0 1 .39-.31l1.069-2.274a.573.573 0 0 1-.11-.259l-3.268-.724a.572.572 0 0 1-.308.224.584.584 0 0 1-.273.02zm.058-.653c-.107.033-.172.132-.146.22.027.089.135.133.241.1.107-.033.173-.132.146-.22-.026-.089-.133-.134-.241-.1zm6.248-.764l-4.932.898 2.58.571a.548.548 0 0 1 .625-.193zm.605.097l-1.839 1.36 5.045.14.011-.038-2.674-1.524a.545.545 0 0 1-.428.095.59.59 0 0 1-.115-.033zm.238-.619c-.11-.02-.213.038-.228.13-.015.09.06.18.171.2.11.02.212-.038.228-.13.016-.09-.061-.18-.171-.2zm3.233 2.725a.62.62 0 0 1-.175-.162L15.838 7.6a.489.489 0 0 1-.021.092l2.124 2.449a.555.555 0 0 1 .62.306h2.257a.562.562 0 0 1 .266-.268zm.04 2.558c-.121 0-.22.102-.22.227s.099.226.22.226c.123 0 .223-.101.223-.226s-.1-.227-.222-.227zm.099-3.2c-.055.096-.014.226.092.288.105.064.236.037.29-.06.056-.096.015-.225-.091-.288-.106-.063-.236-.036-.291.06zm3.915 5.318l-3.627-4.587-.183 2.169a.566.566 0 0 1 .35.48zm-2.293-3.997l-.814-.546 2.627 3.42-1.278-2.287a.58.58 0 0 1-.296-.109c-.17-.121-.26-.31-.24-.478zm.38-.057c-.052.076-.02.19.072.256.091.065.208.057.26-.02.052-.075.02-.19-.071-.255-.093-.065-.209-.057-.26.02zm-5.57 2.163c0 .122.095.221.216.221a.22.22 0 0 0 .217-.221.22.22 0 0 0-.217-.222.22.22 0 0 0-.217.222zm.119 4.773a.224.224 0 0 0-.222.226c0 .125.1.227.222.227a.224.224 0 0 0 .221-.227.223.223 0 0 0-.221-.226zm-2.897-8.024c0 .125.099.226.221.226a.224.224 0 0 0 .222-.226c0-.125-.1-.227-.222-.227a.224.224 0 0 0-.221.227zm.162.637l-1.014 2.155a.568.568 0 0 1 .153.746l3.38 4.19a.56.56 0 0 1 .096-.03v-3.926a.566.566 0 0 1-.257-.814l-2.06-2.374a.553.553 0 0 1-.298.053zm-1.56 2.614c0 .125.1.226.222.226.121 0 .221-.101.221-.226s-.1-.227-.221-.227a.225.225 0 0 0-.222.227zm-2.96 0c0 .122.096.221.216.221s.217-.099.217-.221c0-.123-.097-.222-.217-.222s-.216.1-.216.222zm.216 10.61a.223.223 0 0 0-.22.226c0 .125.098.226.22.226a.224.224 0 0 0 .222-.226.223.223 0 0 0-.222-.226zM8.731 9.843c-.073.086-.079.205-.01.266.067.06.182.042.256-.045.074-.085.079-.204.011-.265-.068-.062-.182-.042-.257.044zm-1.625 6.659a.555.555 0 0 1 .085.298c0 .11-.03.212-.082.295l3.602 3.722v-9.603a.565.565 0 0 1-.337-.501l-1.222-.375a.579.579 0 0 1-.126.087zm11.294 4.46c.239 0 .442.155.52.37h1.878a.56.56 0 0 1 .302-.324v-9.794a.559.559 0 0 1-.302-.324h-2.216a.565.565 0 0 1-.302.324v4.01a.57.57 0 0 1 .24.468.561.561 0 0 1-.554.567.56.56 0 0 1-.554-.567c0-.07.012-.137.036-.2l-3.428-4.248a.555.555 0 0 1-.647-.354h-1.926a.565.565 0 0 1-.303.324v9.794c.14.06.249.178.303.324h2.215a.565.565 0 0 1 .303-.324v-4.07a.568.568 0 0 1-.266-.482.56.56 0 0 1 .555-.567.56.56 0 0 1 .52.763l3.483 4.33a.59.59 0 0 1 .143-.02zm.24 4.047c-.12 0-.22.09-.22.202s.1.201.22.201c.123 0 .223-.09.223-.2s-.1-.203-.222-.203zm-.461-3.48c0 .125.099.226.22.226a.224.224 0 0 0 .223-.226.224.224 0 0 0-.222-.226.224.224 0 0 0-.221.226zm-4.147-5.073c0 .125.1.226.222.226s.221-.101.221-.226c0-.126-.099-.226-.221-.226s-.222.1-.222.226zm.15 4.847a.224.224 0 0 0-.222.226c0 .125.1.226.222.226s.221-.101.221-.226a.223.223 0 0 0-.221-.226zm.216-.295a.566.566 0 0 1 .326.637l3.593 3.117a.575.575 0 0 1 .103-.047l-.184-2.644a.567.567 0 0 1-.39-.542c0-.1.025-.193.07-.273l-3.443-4.28a.495.495 0 0 1-.075.026zm7.14.52a.223.223 0 0 0-.221-.225.224.224 0 0 0-.222.226c0 .125.1.226.222.226s.222-.101.222-.226zm-15.71-3.021c.09-.015.147-.119.128-.231-.02-.113-.107-.192-.196-.176-.09.015-.146.12-.127.232.018.113.106.192.195.175zM25.8 12.793c-.072.023-.11.117-.083.208.027.091.108.146.18.123.074-.023.11-.117.084-.208-.026-.092-.108-.146-.18-.123z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ncash);


/***/ }),

/***/ "HHEV":
/*!*************************************!*\
  !*** /node_modules/qs/lib/utils.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hexTable = (function () {
    var array = new Array(256);
    for (var i = 0; i < 256; ++i) {
        array[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();
    }

    return array;
}());

exports.arrayToObject = function (source, options) {
    var obj = options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

exports.merge = function (target, source, options) {
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (Array.isArray(target)) {
            target.push(source);
        } else if (typeof target === 'object') {
            target[source] = true;
        } else {
            return [target, source];
        }

        return target;
    }

    if (typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (Array.isArray(target) && !Array.isArray(source)) {
        mergeTarget = exports.arrayToObject(target, options);
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (Object.prototype.hasOwnProperty.call(acc, key)) {
            acc[key] = exports.merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

exports.decode = function (str) {
    try {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    } catch (e) {
        return str;
    }
};

exports.encode = function (str) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = typeof str === 'string' ? str : String(str);

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D || // -
            c === 0x2E || // .
            c === 0x5F || // _
            c === 0x7E || // ~
            (c >= 0x30 && c <= 0x39) || // 0-9
            (c >= 0x41 && c <= 0x5A) || // a-z
            (c >= 0x61 && c <= 0x7A) // A-Z
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

exports.compact = function (obj, references) {
    if (typeof obj !== 'object' || obj === null) {
        return obj;
    }

    var refs = references || [];
    var lookup = refs.indexOf(obj);
    if (lookup !== -1) {
        return refs[lookup];
    }

    refs.push(obj);

    if (Array.isArray(obj)) {
        var compacted = [];

        for (var i = 0; i < obj.length; ++i) {
            if (obj[i] && typeof obj[i] === 'object') {
                compacted.push(exports.compact(obj[i], refs));
            } else if (typeof obj[i] !== 'undefined') {
                compacted.push(obj[i]);
            }
        }

        return compacted;
    }

    var keys = Object.keys(obj);
    for (var j = 0; j < keys.length; ++j) {
        var key = keys[j];
        obj[key] = exports.compact(obj[key], refs);
    }

    return obj;
};

exports.isRegExp = function (obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

exports.isBuffer = function (obj) {
    if (obj === null || typeof obj === 'undefined') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};


/***/ }),

/***/ "HLBr":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cvc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cvc = {
  symbol: 'cvc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.161-15.221a2.342 2.342 0 0 0 1.33-2.107c0-1.294-1.062-2.343-2.37-2.343-1.31 0-2.373 1.049-2.373 2.343a2.34 2.34 0 0 0 1.332 2.106v2.894h2.081v-2.893zm-1.04 6.721c-4.186 0-7.59-3.364-7.59-7.5s3.404-7.5 7.59-7.5c3.415 0 6.31 2.24 7.26 5.312h2.616C24.987 9.342 20.949 6 16.12 6 10.531 6 6 10.477 6 16s4.531 10 10.12 10c4.829 0 8.867-3.342 9.877-7.812H23.38c-.95 3.072-3.845 5.312-7.26 5.312z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#3AB03E"/><path fill="#FFF" d="M17.161 16.779a2.342 2.342 0 0 0 1.33-2.107c0-1.294-1.062-2.343-2.37-2.343-1.31 0-2.373 1.049-2.373 2.343a2.34 2.34 0 0 0 1.332 2.106v2.894h2.081v-2.893m-1.04 6.721c-4.186 0-7.59-3.364-7.59-7.5s3.404-7.5 7.59-7.5c3.415 0 6.31 2.24 7.26 5.312h2.616C24.987 9.342 20.949 6 16.12 6 10.531 6 6 10.477 6 16s4.531 10 10.12 10c4.829 0 8.867-3.342 9.877-7.812H23.38c-.95 3.072-3.845 5.312-7.26 5.312"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cvc);


/***/ }),

/***/ "HWZX":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eur.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eur = {
  symbol: 'eur',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8 19.004h1.994C11.097 23 13.733 25 17.9 25c1.585 0 2.951-.216 4.1-.648v-2.373c-1.209.494-2.32.74-3.334.74-1.419 0-2.512-.271-3.277-.815-.766-.545-1.416-1.511-1.949-2.9h4.956l.8-2.003h-6.184c-.03-.378-.045-.806-.045-1.285 0-.416.019-.748.056-.995h7.096l.811-2.003h-7.422c.713-2.292 2.316-3.438 4.809-3.438a8.92 8.92 0 0 1 3.683.776V7.532A14.002 14.002 0 0 0 18.103 7c-4.16 0-6.833 1.906-8.02 5.718H8.812L8 14.721h1.69a12.95 12.95 0 0 0-.057 1.25c0 .332.011.675.034 1.03H8.81z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#0f8ff8" r="16"/><path d="M8 19.004L8.81 17h.857a16.279 16.279 0 0 1-.034-1.03c0-.448.019-.864.056-1.25H8l.81-2.003h1.274C11.27 8.906 13.944 7 18.103 7c1.367 0 2.666.177 3.897.532v2.524a8.92 8.92 0 0 0-3.683-.776c-2.493 0-4.096 1.146-4.81 3.438h7.423l-.81 2.003h-7.097a6.938 6.938 0 0 0-.056.995c0 .479.015.907.045 1.285h6.183l-.8 2.003H13.44c.533 1.389 1.183 2.355 1.949 2.9.765.544 1.858.816 3.277.816 1.014 0 2.125-.247 3.334-.741v2.373c-1.149.432-2.515.648-4.1.648-4.167 0-6.803-1.999-7.906-5.996z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eur);


/***/ }),

/***/ "Hy4J":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/aion.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Aion = {
  symbol: 'aion',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.029-8.85c3.957 0 7.176-3.199 7.176-7.13 0-3.932-3.219-7.13-7.176-7.13-3.957 0-7.176 3.198-7.176 7.13 0 3.931 3.22 7.13 7.176 7.13zm0-12.864c3.182 0 5.77 2.572 5.77 5.734 0 3.161-2.588 5.733-5.77 5.733-3.181 0-5.77-2.572-5.77-5.733 0-3.162 2.589-5.734 5.77-5.734zm5.025-2.415l.736-1.19a11.053 11.053 0 0 0-5.76-1.614c-1.874 0-3.724.476-5.35 1.375l.683 1.221a9.67 9.67 0 0 1 4.666-1.198c1.78 0 3.517.486 5.025 1.406zm2.095 16.51a10.911 10.911 0 0 0 3.902-8.361h-1.406a9.519 9.519 0 0 1-3.405 7.294l.909 1.067zm-7.12 2.59c1.762 0 3.516-.423 5.07-1.224l-.648-1.24a9.558 9.558 0 0 1-4.422 1.068 9.667 9.667 0 0 1-6.12-2.185l-.896 1.076a11.083 11.083 0 0 0 7.016 2.506zm9.38-13.546l1.128-.31a10.71 10.71 0 0 0-2.125-4.026l-.9.745a9.558 9.558 0 0 1 1.897 3.591zM6.86 21.976l.978-.64a9.587 9.587 0 0 1-1.601-5.316 9.564 9.564 0 0 1 2.966-6.952l-.814-.837a10.717 10.717 0 0 0-3.323 7.789c0 2.127.62 4.187 1.793 5.956z"/><path d="M25.35 13.425a9.558 9.558 0 0 0-1.896-3.59l.9-.746a10.71 10.71 0 0 1 2.125 4.025l-1.128.311zM6.86 21.976a10.742 10.742 0 0 1-1.793-5.956c0-2.962 1.18-5.728 3.323-7.789l.814.837a9.564 9.564 0 0 0-2.966 6.952c0 1.899.554 3.737 1.6 5.316l-.978.64z" opacity=".5"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00BFEC"/><g fill="#FFF"><path d="M15.971 23.15c-3.957 0-7.176-3.199-7.176-7.13 0-3.932 3.22-7.13 7.176-7.13 3.957 0 7.176 3.198 7.176 7.13 0 3.931-3.219 7.13-7.176 7.13zm0-12.864c-3.181 0-5.77 2.572-5.77 5.734 0 3.161 2.589 5.733 5.77 5.733 3.182 0 5.77-2.572 5.77-5.733 0-3.162-2.588-5.734-5.77-5.734zm5.025-2.415a9.638 9.638 0 0 0-5.025-1.406 9.67 9.67 0 0 0-4.666 1.198l-.684-1.22a11.083 11.083 0 0 1 5.35-1.376c2.04 0 4.032.558 5.761 1.614l-.736 1.19zm2.095 16.51l-.909-1.067a9.519 9.519 0 0 0 3.405-7.294h1.406c0 3.226-1.422 6.273-3.902 8.36zm-7.12 2.59c-2.557 0-5.049-.89-7.016-2.505l.896-1.076a9.667 9.667 0 0 0 6.12 2.185c1.56 0 3.048-.36 4.422-1.068l.647 1.24a11.107 11.107 0 0 1-5.069 1.225z"/><path d="M25.35 13.425a9.558 9.558 0 0 0-1.896-3.59l.9-.746a10.71 10.71 0 0 1 2.125 4.025l-1.128.311zM6.86 21.976a10.742 10.742 0 0 1-1.793-5.956c0-2.962 1.18-5.728 3.323-7.789l.814.837a9.564 9.564 0 0 0-2.966 6.952c0 1.899.554 3.737 1.6 5.316l-.978.64z" opacity=".5"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Aion);


/***/ }),

/***/ "I/7u":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btcp.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btcp = {
  symbol: 'btcp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.215-24.8l-1.723-.43-.673 2.776c-.454-.117-.92-.221-1.373-.326l.686-2.79L15.41 6l-.7 2.842c-.375-.091-.737-.17-1.1-.26l-2.37-.6-.454 1.851s1.282.3 1.256.313c.7.17.83.639.804 1.004l-.519 2.086-.453 1.812-.971 3.912c-.091.208-.298.534-.79.417.012.026-1.257-.313-1.257-.313L8 21.033l2.24.56c.415.105.83.222 1.232.326l-.713 2.882 1.723.43.7-2.856.556-2.086.946-3.82c.194.053.402.092.622.144.7.156 1.425.221 2.137.274.44.039.868.052 1.308.052a6.459 6.459 0 0 0 1.93-.34c.519-.169 1.127-.39 1.516-.808.453-.482.674-1.12.764-1.76.311-2.099-1.282-3.233-3.445-3.99zm-.142 10.3c-.48.078-.726.117-1.205.143l-.674.039c.648.443 1.05 1.056.842 1.903-.388 1.591-2.448 1.37-3.976 1.03l-.519 2.113-.025.09-.661 2.752 1.71.43.712-2.881c2.928.56 5.143.339 6.062-2.347.583-1.656.156-2.947-.738-3.742-.013.013-.039.013-.052.026-.414.17-.997.365-1.476.443zm-.506-3.495c-.479 1.956-3.484.965-4.456.717l.855-3.468c.972.261 4.107.704 3.601 2.751z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#272d63" r="16"/><path d="M20.215 7.2l-.7 2.842c2.164.756 3.757 1.89 3.446 3.99-.09.638-.31 1.277-.764 1.76-.389.417-.997.638-1.516.808a6.459 6.459 0 0 1-1.93.339c-.44 0-.868-.013-1.308-.052-.712-.053-1.438-.118-2.137-.274-.22-.052-.428-.091-.622-.144l-.946 3.82-.557 2.086-.7 2.856-1.722-.43.713-2.882c-.402-.104-.817-.221-1.231-.326L8 21.033l.855-1.97s1.27.34 1.256.314c.493.117.7-.209.79-.417l.972-3.912.453-1.812.519-2.086c.025-.365-.104-.834-.804-1.004.026-.013-1.256-.313-1.256-.313l.453-1.851 2.37.6c.364.09.726.169 1.102.26L15.41 6l1.722.43-.686 2.79c.453.105.92.209 1.373.326l.673-2.777zm-.142 10.3c.479-.079 1.062-.274 1.476-.444.013-.013.04-.013.052-.026.894.795 1.321 2.086.738 3.742-.92 2.686-3.134 2.907-6.062 2.347L15.565 26l-1.71-.43.66-2.751.026-.091.519-2.113c1.528.34 3.588.561 3.976-1.03.208-.847-.194-1.46-.842-1.903l.674-.04c.48-.025.725-.064 1.205-.143zm-.506-3.495c.506-2.047-2.63-2.49-3.6-2.75l-.856 3.467c.972.248 3.977 1.239 4.456-.717z" fill="#fefefe" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btcp);


/***/ }),

/***/ "I3ym":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bch.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bch = {
  symbol: 'bch',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm5.236-21.309c-.777-1.972-2.722-2.15-4.988-1.71l-.807-2.813-1.712.491.785 2.74c-.45.128-.907.269-1.362.41l-.79-2.758-1.712.49.806 2.813c-.369.114-.73.225-1.086.327l-.002-.008-2.362.676.525 1.829s1.257-.387 1.243-.357c.693-.2 1.035.139 1.2.467l.92 3.205c.047-.013.11-.03.184-.04l-.181.052 1.287 4.49c.032.227.003.612-.481.752.027.013-1.245.356-1.245.356l.246 2.143 2.229-.64c.414-.118.824-.228 1.226-.34l.816 2.845 1.71-.49-.806-2.815a65.74 65.74 0 0 0 1.371-.38l.803 2.803 1.712-.491-.813-2.84c2.831-.991 4.638-2.294 4.113-5.07-.422-2.234-1.725-2.912-3.472-2.836.848-.79 1.214-1.859.643-3.301zm-.651 6.77c.61 2.127-3.1 2.929-4.26 3.263l-1.08-3.77c1.16-.333 4.704-1.71 5.34.508zm-2.322-5.09c.554 1.935-2.547 2.58-3.513 2.857l-.98-3.419c.966-.277 3.914-1.455 4.493.562z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#8dc351" r="16"/><path d="M21.207 10.534c-.776-1.972-2.722-2.15-4.988-1.71l-.807-2.813-1.712.491.786 2.74c-.45.128-.908.27-1.363.41l-.79-2.758-1.711.49.805 2.813c-.368.114-.73.226-1.085.328l-.003-.01-2.362.677.525 1.83s1.258-.388 1.243-.358c.694-.199 1.035.139 1.2.468l.92 3.204c.047-.013.11-.029.184-.04l-.181.052 1.287 4.49c.032.227.004.612-.48.752.027.013-1.246.356-1.246.356l.247 2.143 2.228-.64c.415-.117.825-.227 1.226-.34l.817 2.845 1.71-.49-.807-2.815a65.74 65.74 0 0 0 1.372-.38l.802 2.803 1.713-.491-.814-2.84c2.831-.991 4.638-2.294 4.113-5.07-.422-2.234-1.724-2.912-3.471-2.836.848-.79 1.213-1.858.642-3.3zm-.65 6.77c.61 2.127-3.1 2.929-4.26 3.263l-1.081-3.77c1.16-.333 4.704-1.71 5.34.508zm-2.322-5.09c.554 1.935-2.547 2.58-3.514 2.857l-.98-3.419c.966-.277 3.915-1.455 4.494.563z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bch);


/***/ }),

/***/ "I5pX":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/neos.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Neos = {
  symbol: 'neos',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10.5 9.358V26h2.429V13.948l5.714 3.433v-3.097zm11 13.284V6h-2.429v12.052l-5.714-3.433v3.097z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#e5f300" r="16"/><path d="M10.5 9.358l8.143 4.926v3.097l-5.714-3.433V26H10.5zm11 13.284l-8.143-4.926V14.62l5.714 3.433V6H21.5z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Neos);


/***/ }),

/***/ "IF2o":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xmg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xmg = {
  symbol: 'xmg',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7-12.46l-.741-.226a8.22 8.22 0 0 1-.498 1.022 5.602 5.602 0 0 1-.615.873 2.92 2.92 0 0 1-.785.654c-.302.173-.636.26-1 .26h-7.405l6.488-7.365v-.314l-5.249-6.54h3.503c.494 0 .918.02 1.273.063.354.043.632.113.834.211.286.118.611.418.975.899.365.481.807 1.206 1.327 2.175h.79L21.469 7H9.137v.992l6.653 8.376L9 24.087V25h12.517z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#004a80" r="16"/><path d="M23 19.54L21.517 25H9v-.913l6.79-7.719-6.653-8.376V7h12.331l.43 4.252h-.79c-.521-.969-.963-1.694-1.328-2.175-.364-.481-.689-.78-.975-.899-.202-.098-.48-.168-.834-.21a10.88 10.88 0 0 0-1.273-.065h-3.503l5.249 6.54v.315l-6.488 7.365h7.405c.364 0 .698-.087 1-.26.302-.174.564-.392.785-.654a5.63 5.63 0 0 0 .615-.873 8.22 8.22 0 0 0 .498-1.022z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xmg);


/***/ }),

/***/ "IVh/":
/*!**********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/meetone.js ***!
  \**********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Meetone = {
  symbol: 'meetone',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.916 21.379c.427-1.927.854-3.9 1.282-5.823.112-.449.224-.954.336-1.515.056.225.056.281.112.393a805.586 805.586 0 0 0 3.112 9.934L9.916 21.38zm7.234 3.048l.05-.176c1.066-3.253 2.076-6.507 3.141-9.76.057-.113.113-.281.169-.45.056.169.112.225.112.337.474 2.318.998 4.587 1.525 6.853l-4.997 3.196zm5.616-2.069a.553.553 0 0 0 .268-.014c.393-.112.561-.449.449-.954-.505-2.131-.954-4.32-1.459-6.451-.28-1.122-.504-2.3-.785-3.422a.62.62 0 0 0-.304-.428l.024-.02-4.488-6.732s-.393-.505-1.01 0l-4.6 6.9.065.033a1.227 1.227 0 0 0-.177.415c-.056.45-.169.898-.28 1.347-.618 2.805-1.291 5.61-1.908 8.414-.056.337 0 .617.28.786a.664.664 0 0 0 .364.11l6.146 3.866c.123.278.329.4.615.4.22 0 .392-.073.516-.233l6.284-4.017zm-2.843-10.57a9.214 9.214 0 0 1-.086.29c-1.01 3.142-2.02 6.34-3.03 9.48-.224.786-.505 1.515-.729 2.3h-.168c-1.229-4.02-2.513-8.096-3.797-12.116l3.853-5.835 3.957 5.882z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><g fill="#FFF"><path fill-opacity=".703" d="M8.673 22.007l6.956 4.376h.842l6.844-4.376-1.066-.841-6.227 3.983-6.451-3.983zm3.366-10.153l3.927-5.947 4.039 6.003.954-.842-4.488-6.731s-.393-.505-1.01 0l-4.6 6.9 1.178.617z"/><path d="M16.078 23.859c.224-.786.505-1.515.73-2.3 1.01-3.142 2.019-6.34 3.029-9.481.056-.168.112-.393.168-.56.112-.338.28-.506.617-.506a.61.61 0 0 1 .617.505c.28 1.122.505 2.3.785 3.422.505 2.132.954 4.32 1.459 6.451.112.505-.056.842-.449.954-.393.112-.673-.168-.785-.673-.561-2.412-1.122-4.825-1.627-7.293 0-.112-.056-.168-.112-.337a3.714 3.714 0 0 1-.169.45c-1.065 3.253-2.075 6.507-3.141 9.76-.168.617-.393 1.178-.561 1.795-.112.393-.337.561-.673.561-.337 0-.561-.168-.673-.56-1.234-3.871-2.469-7.742-3.647-11.613-.056-.112-.056-.168-.112-.393a32.883 32.883 0 0 1-.336 1.515c-.45 2.02-.898 4.095-1.347 6.115-.112.56-.56.841-1.01.56-.28-.168-.336-.448-.28-.785.617-2.805 1.29-5.61 1.907-8.414.112-.45.225-.898.28-1.347.113-.448.337-.673.674-.673s.56.225.673.673c1.29 4.04 2.58 8.135 3.815 12.174h.168z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Meetone);


/***/ }),

/***/ "IZnk":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btcd.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btcd = {
  symbol: 'btcd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.078-12.644c.908 1.422 1.345 4.4 1.268 5.467C30.31 20.71 26.562 7.567 18.586 7c0 2.945-.678 5.322-1.508 5.322 3.267.2 5.08 5.467 0 7.034zM6 17.8c5.954 0 10.773-4.823 10.773-10.79h-5.561c.01 2.923-2.317 5.312-5.201 5.323H6V17.8zm7.287-.99c-1.507 1.357-2.349 2.057-6.478 2.723 2.436 0 4.403 2.445 4.403 5.467h5.56c0-.911-.185-5.478-3.485-8.19z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F60"/><path fill="#FFF" d="M17.078 19.356c5.08-1.567 3.267-6.834 0-7.034.83 0 1.508-2.377 1.508-5.322 7.976.567 11.723 13.711-.24 17.823.077-1.067-.36-4.045-1.267-5.467zM6 17.8v-5.467h.01c2.885-.011 5.212-2.4 5.202-5.322h5.56C16.773 12.977 11.955 17.8 6 17.8zm7.287-.99c3.3 2.712 3.486 7.279 3.486 8.19h-5.561c0-3.022-1.967-5.467-4.403-5.467 4.13-.666 4.971-1.366 6.478-2.722z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btcd);


/***/ }),

/***/ "Iy0z":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bco.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bco = {
  symbol: 'bco',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.878-11.174a2.018 2.018 0 0 0-.258.99c0 1.115.903 2.023 2.034 2.065v.37a.885.885 0 0 0-.816.873c0 .484.402.876.898.876a.887.887 0 0 0 .898-.876.883.883 0 0 0-.735-.863v-.385c1.092-.081 1.953-.972 1.953-2.06 0-.36-.095-.7-.262-.995l1.534-.863c.372.522.992.864 1.693.864.708 0 1.333-.348 1.704-.879l.513.29a.856.856 0 0 0-.074.349c0 .484.402.876.898.876s.898-.392.898-.876-.402-.877-.898-.877a.905.905 0 0 0-.697.324l-.514-.29c.149-.279.233-.595.233-.93 0-1.105-.913-2.003-2.042-2.013v-1.618c1.115-.01 2.015-.896 2.015-1.987 0-.32-.078-.623-.216-.891l.5-.318a.904.904 0 0 0 .721.353c.496 0 .898-.393.898-.877s-.402-.876-.898-.876a.887.887 0 0 0-.898.876c0 .11.021.216.06.314l-.506.321a2.047 2.047 0 0 0-1.697-.889c-.717 0-1.347.362-1.71.908l-1.53-.861c.141-.273.221-.582.221-.908 0-1.072-.858-1.948-1.94-2.01v-.588a.884.884 0 0 0 .776-.869A.887.887 0 0 0 15.98 6a.887.887 0 0 0-.898.876c0 .444.337.81.775.869v.588c-1.082.062-1.94.938-1.94 2.01 0 .325.08.633.22.905l-1.533.85a2.048 2.048 0 0 0-1.686-.874c-.687 0-1.295.333-1.663.842l-.52-.29a.856.856 0 0 0 .06-.318.887.887 0 0 0-.897-.876c-.496 0-.898.392-.898.876s.402.877.898.877a.904.904 0 0 0 .718-.35l.51.284a1.94 1.94 0 0 0-.243.942c0 1.07.867 1.944 1.954 1.986v1.554c-1.116.042-2.008.938-2.008 2.038 0 .357.094.692.26.984l-.481.272a.904.904 0 0 0-.71-.34c-.496 0-.898.393-.898.877s.402.876.898.876a.887.887 0 0 0 .898-.876.856.856 0 0 0-.066-.33l.489-.277c.379.517.999.853 1.7.853.699 0 1.318-.335 1.697-.85zm.13-.203l-1.505-.847c.166-.293.26-.63.26-.987 0-1.073-.848-1.952-1.925-2.033v-1.564c1.048-.081 1.872-.937 1.872-1.98a1.94 1.94 0 0 0-.225-.91l1.531-.847c.37.543 1.002.9 1.72.9.716 0 1.348-.356 1.717-.898l1.534.863a1.94 1.94 0 0 0-.205.871c0 1.024.792 1.866 1.81 1.975v1.641c-1.033.11-1.837.964-1.837 2.002 0 .342.087.663.24.945l-1.535.865a2.13 2.13 0 0 0-1.724-.868 2.13 2.13 0 0 0-1.728.872zm-3.334-.766a1.082 1.082 0 0 1-1.094-1.068c0-.59.49-1.068 1.094-1.068.605 0 1.095.478 1.095 1.068 0 .59-.49 1.068-1.095 1.068zm0-5.605c-.589 0-1.066-.466-1.066-1.04s.477-1.042 1.066-1.042c.59 0 1.067.466 1.067 1.041s-.478 1.041-1.067 1.041zm5.062-2.855c-.597 0-1.08-.472-1.08-1.054 0-.583.483-1.055 1.08-1.055.596 0 1.08.472 1.08 1.055 0 .582-.484 1.054-1.08 1.054zm5.081 2.835a1.054 1.054 0 0 1-1.066-1.04c0-.576.477-1.042 1.066-1.042s1.067.466 1.067 1.041-.478 1.041-1.067 1.041zm0 5.631c-.596 0-1.08-.472-1.08-1.054 0-.583.484-1.055 1.08-1.055.597 0 1.08.472 1.08 1.055 0 .582-.483 1.054-1.08 1.054zM15.98 22.9c-.613 0-1.109-.485-1.109-1.082s.496-1.082 1.109-1.082c.612 0 1.108.484 1.108 1.082S16.592 22.9 15.98 22.9zm0-3.98c1.652 0 2.99-1.307 2.99-2.919s-1.338-2.92-2.99-2.92c-1.652 0-2.991 1.308-2.991 2.92s1.339 2.92 2.99 2.92zm0-1.775c-.648 0-1.173-.512-1.173-1.144s.525-1.144 1.173-1.144c.647 0 1.172.512 1.172 1.144s-.525 1.144-1.172 1.144z" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2c76b7" r="16"/><path d="M14.122 20.826l-1.506-.848c-.38.515-.998.85-1.698.85s-1.32-.336-1.699-.853l-.489.277a.856.856 0 0 1 .066.33.887.887 0 0 1-.898.876c-.496 0-.898-.392-.898-.876s.402-.877.898-.877c.289 0 .545.133.71.34l.48-.272a1.992 1.992 0 0 1-.259-.984c0-1.1.892-1.996 2.008-2.038v-1.554c-1.087-.042-1.954-.915-1.954-1.986 0-.34.088-.662.243-.942l-.51-.284a.904.904 0 0 1-.718.35c-.496 0-.898-.393-.898-.877s.402-.876.898-.876.898.392.898.876c0 .112-.022.22-.061.318l.52.29c.368-.51.976-.842 1.663-.842.702 0 1.32.346 1.686.873l1.533-.849c-.14-.272-.22-.58-.22-.905 0-1.072.858-1.948 1.94-2.01v-.588a.884.884 0 0 1-.775-.869c0-.484.402-.876.898-.876s.898.392.898.876c0 .444-.338.81-.776.869v.588c1.082.062 1.94.938 1.94 2.01 0 .326-.08.635-.221.908l1.53.861a2.047 2.047 0 0 1 1.71-.908c.709 0 1.332.353 1.697.889l.505-.321a.856.856 0 0 1-.059-.314c0-.484.402-.876.898-.876s.898.392.898.876-.402.877-.898.877a.904.904 0 0 1-.72-.353l-.5.318c.137.268.215.57.215.891 0 1.091-.9 1.977-2.015 1.987v1.618c1.13.01 2.042.908 2.042 2.013 0 .335-.084.651-.233.93l.514.29a.905.905 0 0 1 .697-.324c.496 0 .898.393.898.877s-.402.876-.898.876a.887.887 0 0 1-.898-.876.85.85 0 0 1 .074-.349l-.513-.29c-.371.53-.996.879-1.704.879-.701 0-1.32-.342-1.693-.864l-1.534.863c.167.295.262.635.262.996 0 1.087-.86 1.978-1.953 2.06v.384a.883.883 0 0 1 .735.863.887.887 0 0 1-.898.876.887.887 0 0 1-.898-.876c0-.458.358-.833.816-.873v-.37c-1.13-.042-2.034-.95-2.034-2.064 0-.36.093-.697.258-.991zm.13-.203a2.13 2.13 0 0 1 1.728-.872c.71 0 1.34.343 1.724.868l1.536-.865a1.966 1.966 0 0 1-.241-.945c0-1.038.804-1.892 1.838-2.002v-1.64c-1.019-.11-1.811-.952-1.811-1.976 0-.312.073-.608.205-.87l-1.534-.864c-.37.542-1 .899-1.717.899-.718 0-1.35-.358-1.72-.9l-1.53.847c.143.272.224.58.224.908 0 1.044-.824 1.9-1.872 1.98v1.565c1.077.08 1.926.96 1.926 2.033 0 .358-.095.694-.261.987zm-3.334-.766c.605 0 1.095-.478 1.095-1.068 0-.59-.49-1.068-1.095-1.068-.604 0-1.094.478-1.094 1.068 0 .59.49 1.068 1.094 1.068zm0-5.605c.59 0 1.067-.466 1.067-1.04s-.478-1.042-1.067-1.042-1.066.466-1.066 1.041.477 1.041 1.066 1.041zm5.062-2.855c.596 0 1.08-.472 1.08-1.054 0-.583-.484-1.055-1.08-1.055-.597 0-1.08.472-1.08 1.055 0 .582.483 1.054 1.08 1.054zm5.081 2.835c.59 0 1.067-.466 1.067-1.04 0-.576-.478-1.042-1.067-1.042s-1.066.466-1.066 1.041.477 1.041 1.066 1.041zm0 5.631c.597 0 1.08-.472 1.08-1.054 0-.583-.483-1.055-1.08-1.055-.596 0-1.08.472-1.08 1.055 0 .582.484 1.054 1.08 1.054zM15.98 22.9c.612 0 1.108-.485 1.108-1.082s-.496-1.082-1.108-1.082c-.613 0-1.109.484-1.109 1.082s.496 1.082 1.109 1.082zm0-3.98c-1.652 0-2.991-1.307-2.991-2.919s1.339-2.92 2.99-2.92c1.653 0 2.992 1.308 2.992 2.92s-1.34 2.92-2.991 2.92zm0-1.775c.647 0 1.172-.512 1.172-1.144s-.525-1.144-1.172-1.144c-.648 0-1.173.512-1.173 1.144s.525 1.144 1.173 1.144z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bco);


/***/ }),

/***/ "J+F7":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/burst.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Burst = {
  symbol: 'burst',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.294-12.704l.525-2.29h1.529L12.497 24h4.875c3.017 0 4.876-1.347 5.332-3.873l.228-1.265c.295-1.636-.1-2.77-1.272-3.371 1.184-.579 1.873-1.582 2.146-3.09l.1-.556C24.373 9.255 23.109 8 19.99 8h-4.606l-1.142 6.329-4.578-.003-.51 2.443H4zm5.066-2.747h1.49c1.513 0 2.047.614 1.769 2.157l-.245 1.354c-.218 1.207-.86 1.719-2.013 1.719h-1.945zm1.143-6.329h1.595c1.18 0 1.647.62 1.422 1.868l-.157.867c-.23 1.278-.984 1.83-2.272 1.83H17.09z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2d2d2d" r="16"/><path d="M11.706 19.296L4 16.77h5.155l.51-2.443 4.578.003L15.385 8h4.606c3.118 0 4.382 1.255 3.915 3.845l-.1.555c-.273 1.509-.962 2.512-2.146 3.091 1.173.6 1.567 1.735 1.272 3.37l-.228 1.266C22.248 22.653 20.39 24 17.372 24h-4.875l1.263-6.993h-1.53zm5.066-2.747l-.944 5.23h1.945c1.154 0 1.795-.512 2.013-1.72l.245-1.353c.278-1.543-.256-2.157-1.769-2.157zm1.143-6.329l-.824 4.564h1.412c1.288 0 2.041-.55 2.272-1.83l.157-.866c.225-1.247-.241-1.868-1.422-1.868H18.1z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Burst);


/***/ }),

/***/ "J+yo":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ox.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ox = {
  symbol: 'ox',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.858-6.5c1.288 0 1.653-1.194 1.653-2.106s-.065-1.325-.065-1.737c0-.65.328-2.273.923-2.953 1.159-1.325 1.889-2.512 1.889-4.234 1.008-.521 2.79-.999 3.476-1.78S26 10.8 26 9.214c0-.405-.086-.977-.258-1.715-.395 1.234-1.003 2.08-1.824 2.54-1.201.674-2.555 1.173-3.712 1.173h-8.412c-1.157 0-2.51-.5-3.712-1.173-.82-.46-1.429-1.306-1.824-2.54C6.086 8.238 6 8.81 6 9.215c0 1.585.58 2.693 1.266 3.474s2.468 1.26 3.476 1.78c0 1.723.73 2.91 1.889 4.235.595.68.923 2.303.923 2.953 0 .412-.065.825-.065 1.737s.365 2.106 1.653 2.106z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#4392cd" fill-rule="nonzero" r="16"/><path d="M16.858 25.5h-1.716c-1.288 0-1.653-1.194-1.653-2.106s.065-1.325.065-1.737c0-.65-.328-2.273-.923-2.953-1.159-1.325-1.889-2.512-1.889-4.234-1.008-.521-2.79-.999-3.476-1.78S6 10.8 6 9.214c0-.405.086-.977.258-1.715.395 1.234 1.003 2.08 1.824 2.54 1.201.674 2.555 1.173 3.712 1.173h8.412c1.157 0 2.51-.5 3.712-1.173.82-.46 1.429-1.306 1.824-2.54.172.738.258 1.31.258 1.715 0 1.585-.58 2.693-1.266 3.474s-2.468 1.26-3.476 1.78c0 1.723-.73 2.91-1.889 4.235-.595.68-.923 2.303-.923 2.953 0 .412.065.825.065 1.737s-.365 2.106-1.653 2.106z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ox);


/***/ }),

/***/ "J6pL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ada.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ada = {
  symbol: 'ada',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.275-25.94c-.39.152-.49.707-.186.988.287.293.847.19.995-.193.255-.471-.33-1.042-.81-.796zm-5.155.546c-.405.106-.45.734-.057.884.297.16.718-.089.687-.427.03-.313-.339-.575-.63-.457zm10.558.893c.31.078.54-.17.612-.44-.05-.317-.362-.622-.701-.46-.438.142-.366.846.089.9zm-9.385 1.265c-.456.23-.519.914-.105 1.212.428.38 1.186.054 1.211-.507.075-.557-.62-1.008-1.106-.705zm7.43.322c-.271.536.276 1.15.853 1.044.435-.142.736-.659.491-1.076-.247-.536-1.127-.519-1.344.032zm-4.069 1.013c-.026.386.255.702.588.863.218.013.455.054.655-.056.438-.19.654-.762.411-1.178-.13-.3-.46-.428-.763-.488-.458.033-.896.385-.891.859zm-7.666.69c-.388.175-.442.766-.1 1.012.322.262.884.095.976-.316.169-.475-.431-.966-.876-.697zm16.462-.002c-.388.234-.345.858.067 1.04.374.22.913-.102.887-.529.045-.468-.577-.799-.954-.51zm-6.64.851c-.776.232-1.236 1.158-.92 1.898.278.827 1.377 1.211 2.13.758.725-.383.974-1.4.506-2.067-.354-.546-1.094-.81-1.716-.589zm-3.653.073c-.735.323-1.073 1.276-.692 1.978.34.725 1.33 1.023 2.032.63.701-.349 1.004-1.29.612-1.966-.333-.694-1.262-.963-1.952-.642zM9.95 12.94c-.101.514.365 1.036.898.99.484.003.837-.436.867-.885a.978.978 0 0 0-.87-.857c-.423.03-.842.315-.895.752zm10.802-.656c-.587.272-.63 1.172-.065 1.492.544.384 1.384-.077 1.347-.732.024-.618-.735-1.073-1.282-.76zm-8.63 2.307c-.868.206-1.376 1.256-.958 2.039.365.854 1.626 1.106 2.31.48.534-.427.674-1.236.331-1.818-.314-.578-1.045-.874-1.684-.701zm6.927-.003c-.874.235-1.336 1.325-.877 2.096.38.746 1.447.996 2.136.52.657-.411.868-1.362.426-1.999-.334-.557-1.064-.792-1.685-.617zm-11.04.726c-.53.148-.687.904-.262 1.243.363.362 1.066.18 1.203-.31.223-.539-.389-1.138-.941-.933zm14.969.782c.092.21.203.43.42.538.464.251 1.119-.112 1.084-.647.03-.406-.338-.706-.716-.765a.836.836 0 0 0-.788.874zM5.294 15.58c-.275.123-.394.49-.194.729.226.343.843.185.86-.226.077-.363-.334-.646-.666-.503zm20.949-.009c-.39.205-.237.912.235.87.336.05.624-.353.467-.647-.093-.269-.468-.386-.702-.223zm-12.317 1.973c-.654.14-1.158.751-1.156 1.409-.023.687.52 1.343 1.212 1.453.895.206 1.82-.587 1.763-1.482-.005-.886-.945-1.603-1.82-1.38zm3.462-.001c-.526.128-.972.555-1.088 1.08-.23.787.378 1.678 1.203 1.783.876.174 1.773-.593 1.726-1.471.014-.906-.954-1.636-1.84-1.392zm-6.676.545c-.663.066-1.013.943-.545 1.422.4.5 1.304.334 1.486-.278.249-.573-.327-1.247-.94-1.144zm10.154.027c-.661.207-.772 1.2-.165 1.536.535.376 1.365-.068 1.343-.711.042-.585-.63-1.05-1.178-.825zm2.838 2.8c.145.398.75.493 1.017.16.197-.179.148-.457.119-.69-.141-.144-.296-.315-.517-.311-.444-.073-.833.448-.619.841zm-16.268-.732c-.395.198-.409.817-.027 1.034.356.24.896-.001.945-.423.094-.477-.503-.882-.918-.61zm8.193.883c-.654.207-.752 1.193-.163 1.528.531.39 1.387-.06 1.346-.71.052-.588-.64-1.053-1.183-.818zm-3.794.871c-.326.12-.459.474-.465.791.112.291.338.598.685.605.42.062.834-.294.82-.712.042-.51-.578-.923-1.04-.684zm7.686.008c-.464.233-.516.937-.088 1.23.443.374 1.207.01 1.195-.56.045-.544-.631-.96-1.107-.67zm1.337 3.25c.217.366.85.236.891-.19.058-.316-.234-.52-.51-.575-.344.072-.593.451-.381.766zm-10.611-.273c.03.359.428.67.77.443.381-.2.252-.845-.183-.875-.299-.065-.503.183-.587.432zm5.12.287c-.153.373.213.824.618.777.218.005.387-.148.518-.3.025-.103.051-.207.08-.31-.054-.198-.116-.43-.328-.52-.32-.196-.805-.016-.889.353z"/>`;
  },
  colorIcon() {
    return `<defs><path d="M15.725 6.06c.479-.247 1.064.324.81.795-.149.384-.71.486-.996.193-.303-.28-.204-.836.186-.989zm-5.155.546c.291-.118.66.144.63.457.03.338-.39.588-.687.427-.393-.15-.348-.778.057-.884zm10.558.893c-.455-.054-.527-.758-.09-.9.34-.162.652.143.702.46-.072.27-.302.518-.612.44zm-9.385 1.265c.487-.303 1.181.148 1.106.705-.025.561-.783.887-1.211.507-.414-.298-.351-.982.105-1.212zm7.43.322c.217-.55 1.097-.568 1.344-.032.245.417-.056.934-.491 1.076-.577.106-1.124-.508-.853-1.044zm-4.069 1.013c-.005-.474.433-.826.89-.859.304.06.634.187.764.488.243.416.027.987-.41 1.178-.2.11-.438.069-.656.056-.333-.16-.614-.477-.588-.863zm-7.666.69c.445-.27 1.045.22.876.696-.092.411-.654.578-.975.316-.343-.246-.289-.837.1-1.013zm16.462-.002c.377-.288 1 .043.954.511.026.427-.513.75-.887.53-.412-.183-.455-.807-.067-1.04zm-6.64.851c.622-.22 1.362.043 1.716.59.468.667.22 1.683-.507 2.066-.752.453-1.851.07-2.13-.758-.315-.74.145-1.666.92-1.898zm-3.653.073c.69-.32 1.619-.052 1.952.642.392.676.089 1.617-.612 1.966-.702.393-1.693.095-2.032-.63-.381-.702-.043-1.655.692-1.978zM9.95 12.94c.053-.437.472-.722.895-.752a.98.98 0 0 1 .87.857c-.03.45-.383.888-.867.886-.533.045-1-.477-.898-.991zm10.802-.656c.547-.313 1.306.142 1.282.76.037.655-.803 1.116-1.347.732-.566-.32-.522-1.22.065-1.492zm-8.63 2.307c.638-.173 1.37.123 1.683.701.343.582.203 1.39-.33 1.818-.685.626-1.946.374-2.31-.48-.419-.783.09-1.833.956-2.04zm6.927-.003c.621-.175 1.351.06 1.685.617.442.637.231 1.588-.426 1.998-.69.477-1.756.227-2.136-.519-.46-.771.003-1.861.877-2.096zm-11.04.726c.552-.205 1.164.394.94.933-.136.49-.839.672-1.202.31-.425-.34-.268-1.095.262-1.243zm14.969.782a.836.836 0 0 1 .788-.874c.378.06.746.36.716.765.035.535-.62.898-1.084.647-.217-.109-.328-.328-.42-.538zM5.294 15.58c.332-.143.743.14.667.503-.018.411-.635.57-.861.226-.2-.239-.08-.606.194-.73zm20.949-.009c.234-.163.61-.046.702.223.157.294-.131.696-.467.647-.472.042-.624-.665-.235-.87zm-12.317 1.973c.874-.223 1.814.494 1.82 1.38.056.895-.87 1.688-1.764 1.482-.692-.11-1.235-.766-1.212-1.453-.002-.658.502-1.27 1.156-1.409zm3.462-.001c.887-.244 1.855.486 1.841 1.392.047.878-.85 1.645-1.726 1.47-.825-.104-1.433-.995-1.203-1.783.116-.524.562-.95 1.088-1.08zm-6.676.545c.614-.103 1.19.57.941 1.144-.182.612-1.086.777-1.486.278-.468-.48-.118-1.356.545-1.422zm10.154.027c.548-.226 1.22.24 1.178.825.022.643-.808 1.087-1.343.711-.607-.337-.496-1.33.165-1.536zm2.838 2.8c-.214-.393.175-.914.62-.841.22-.004.375.167.516.311.029.233.078.511-.119.69-.267.333-.872.238-1.017-.16zm-16.268-.732c.415-.271 1.012.134.918.61-.05.423-.59.664-.945.424-.382-.217-.368-.836.027-1.034zm8.193.883c.543-.235 1.235.23 1.183.818.04.65-.815 1.1-1.346.71-.59-.335-.491-1.321.163-1.528zm-3.794.871c.462-.239 1.082.174 1.04.684.014.418-.4.774-.82.712-.347-.007-.573-.314-.685-.605.006-.317.139-.67.465-.79zm7.686.008c.476-.29 1.152.126 1.107.67.012.57-.752.934-1.195.56-.428-.293-.376-.997.088-1.23zm1.337 3.25c-.212-.314.037-.693.38-.765.277.055.57.26.511.574-.04.427-.674.557-.891.192zm-10.611-.273c.084-.25.288-.497.587-.432.435.03.564.676.183.875-.342.227-.74-.084-.77-.443zm5.12.287c.083-.37.568-.549.888-.353.212.09.274.322.328.52a8.822 8.822 0 0 0-.08.31c-.131.152-.3.305-.518.3-.405.047-.771-.404-.619-.777z" id="b"/><filter x="-7.5%" y="-6%" width="115.5%" height="117.2%" filterUnits="objectBoundingBox" id="a"><feOffset dy=".5" in="SourceAlpha" result="shadowOffsetOuter1"/><feGaussianBlur stdDeviation=".5" in="shadowOffsetOuter1" result="shadowBlurOuter1"/><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.204257246 0" in="shadowBlurOuter1"/></filter></defs><g fill="none"><circle cx="16" cy="16" r="16" fill="#0D1E30"/><use fill="#000" filter="url(#a)" xlink:href="#b"/><use fill="#FFF" xlink:href="#b"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ada);


/***/ }),

/***/ "JGsE":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nlc2.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nlc2 = {
  symbol: 'nlc2',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M18.151 13.719l1.842-3.743c.57-1.32 1.222-2.146 1.955-2.476H16c.543.193.815.495.815.908 0 .116-.202.614-.606 1.495zm-2.916 5.928l-1.904-3.815c-.452.908-.947 1.9-1.487 2.974-1.602 3.493-3.19 5.391-4.766 5.694h14.585l2.852-4.374c-.815.908-2.431 1.362-4.848 1.362H14.33zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5 20.25h4.604l3.585-7.262 3.626 7.262h4.237c-.082-.055-.122-.193-.122-.413 0-1.118 4.033-10.728 6.07-11.264h-4.807l-3.912 7.922-4.033-7.922H9.604c.597.44.896.908.896 1.403 0 2.102-4.319 9.573-5.5 10.274z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f28f01" r="16"/><path d="M18.151 13.719L16.21 9.903c.404-.88.606-1.38.606-1.495 0-.413-.272-.715-.815-.908h5.948c-.733.33-1.385 1.155-1.955 2.476zm-2.916 5.928l-.905 1.84h5.337c2.417 0 4.033-.453 4.848-1.36L21.663 24.5H7.078c1.575-.303 3.164-2.2 4.766-5.694.54-1.074 1.035-2.066 1.487-2.974zM5 20.25c1.181-.701 5.5-8.172 5.5-10.274 0-.495-.299-.963-.896-1.403h4.644l4.033 7.922 3.912-7.922H27c-2.037.536-6.07 10.146-6.07 11.264 0 .22.04.358.122.413h-4.237l-3.626-7.262-3.585 7.262z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nlc2);


/***/ }),

/***/ "JHOU":
/*!**************************!*\
  !*** ./src/js/mixins.js ***!
  \**************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var myMixin = {

    data: function data() {
        return {
            myWallet: [],
            bitcoinPrice: 0,
            totalHoldings: {}
        };
    },

    computed: {
        calculateHoldings: function calculateHoldings() {
            return this.myWallet.reduce(function (total, c) {
                return total + c.holding_value;
            }, 0);
        }
    },

    filters: {
        formatUSD: function formatUSD(n) {
            var num = (n * 1).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,');
            // if the amount is less than $0.10, add an extra decimal point.
            if (num < 0.10) {
                num = (n * 1).toFixed(3).replace(/(\d)(?=(\d{3})+\.)/g, '$1,');
            }
            return num;
        },

        formatWithCommas: function formatWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
    },

    methods: {

        // THIS GETS THE LOGO
        // this.CMC.getMetadata({ id: '1' }).then(
        //     function (re) {
        //         console.log('?? ~ ', re.data[1].logo);
        //     }
        // ).catch(console.error);


        mixinBuildWalletV2: function mixinBuildWalletV2(_myCoins, _allCoins) {
            // console.log('mixinBuildWalletV2() _myCoins ', _myCoins);
            // console.log('mixinBuildWalletV2() _allCoins ', _allCoins);
            var theseCoins = [];

            for (var thing in _myCoins) {
                // console.log(`${thing}: ${_myCoins[thing]}`);

                var thisCoin = this.filterCoin('' + thing)[0];
                // console.log('thisCoin ', thisCoin);

                if (thisCoin == undefined) {
                    thisCoin = {
                        'hasData': false,
                        'name': 'name_' + ('' + thing),
                        'symbol': '' + thing,
                        'holding': '' + _myCoins[thing],
                        'holding_value': 0,
                        'logo': ''
                        // 'quote': {
                        //     'USD': {
                        //         'last_updated': '0',
                        //         'market_cap': 0,
                        //         'percent_change_1h': 0,
                        //         'percent_change_7d': 0,
                        //         'percent_change_24h': 0,
                        //         'price': 0,
                        //         'volume_24h': 0
                        //     }
                        // }
                    };
                } else {
                    Object.assign(thisCoin, {
                        'hasData': true,
                        'holding': '' + _myCoins[thing],
                        'holding_value': thisCoin.quote.USD.price * ('' + _myCoins[thing]),
                        'logo': ''
                    });
                }
                theseCoins.push(thisCoin);
            }

            return theseCoins;
        },

        // OLD VERSION.. DEPRICATED.
        // mixinBuildWallet: function(_myCoins, _allCoins) {
        //     console.log('mixinBuildWallet() _myCoins ', _myCoins);

        //     // FILTERS THOUGH ALL OF THE COINS AND CHECK IF ONE OF MY COINS IS ONE OF THEM.
        //     return _allCoins.filter(coin => {
        //         // console.log('~!~ ', coin.symbol, Object.keys(_myCoins).indexOf(coin.symbol));

        //         // return Object.keys(_myCoins).indexOf(coin.symbol) >= 0;
        //         if (Object.keys(_myCoins).indexOf(coin.symbol) >= 0){
        //             // console.log('YES! ', coin, _myCoins);
        //             return Object.keys(_myCoins).indexOf(coin.symbol) >= 0;
        //         }else{
        //             // console.log('no ', coin, _myCoins);
        //             return null;
        //         }
        //     }).map(c => {
        //         // console.log('c ', c.symbol);
        //         return Object.assign({}, c, {
        //             holding: _myCoins[c.symbol],
        //             holding_value: c.quote.USD.price * (_myCoins[c.symbol])
        //         });
        //     }).sort((a, b) => {
        //         return a.holding_value - b.holding_value;
        //     }).reverse();
        // },


        // RETURNS ONLY THE COIN OBJECT YOU WANT:
        filterCoin: function filterCoin(x) {
            var arr = this.$store.getters.allCoins.slice();
            return arr.filter(function (coin) {
                if (coin.symbol === x) {
                    return coin.symbol.indexOf(x) > -1;
                }
            });
        },

        // THIS CREATES THE APPROPRIATE CLASSNAME FOR THE ICON
        // coinClass: function(c){
        //     let icon;
        //     switch(c) {
        //         case "EOS":
        //         case "ADA":
        //         case "RDD":
        //         case "OMG":
        //         case "SALT":
        //             icon = c;
        //             break;
        //         default:
        //             icon = c+'-alt';
        //     }
        //     return icon;
        // },

        wordifyNumber: function wordifyNumber(n) {
            // console.log( self.wordifyNumber(419281384539234123) );
            // console.log( self.wordifyNumber(419281384539234) );
            // console.log( self.wordifyNumber(419281384539) );
            // console.log( self.wordifyNumber(419281384) );
            // console.log( self.wordifyNumber(419281) );
            // console.log( self.wordifyNumber(419) );
            // console.log( self.wordifyNumber(41) );
            // console.log( self.wordifyNumber(4) );

            var incrementName = '';
            var num = void 0;

            if (Math.abs(Number(n)) >= 1.0e+15) {
                num = Math.abs(Number(n)) / 1.0e+15;
                incrementName = "Quadrillion";
            } else if (Math.abs(Number(n)) >= 1.0e+12) {
                num = Math.abs(Number(n)) / 1.0e+12;
                incrementName = "Trillion";
            } else if (Math.abs(Number(n)) >= 1.0e+9) {
                num = Math.abs(Number(n)) / 1.0e+9;
                incrementName = "Billion";
            } else if (Math.abs(Number(n)) >= 1.0e+6) {
                num = Math.abs(Number(n)) / 1.0e+6;
                incrementName = "Million";
            } else if (Math.abs(Number(n)) >= 1.0e+3) {
                num = Math.abs(Number(n)) / 1.0e+3;
                incrementName = "Thousand";
            } else {
                num = n;
                incrementName = "";
            }

            return Math.round(parseFloat(num) * 10) / 10 + ' ' + incrementName;
        },

        totalUSD: function totalUSD(_thisWallet_) {
            var N = _thisWallet_.reduce(function (total, c) {
                return total + c.holding_value;
            }, 0);
            this.myHoldingsTotalInUSD = N;
        },

        totalBTC: function totalBTC(_thisWallet_) {
            this.bitcoinPrice = this.filterCoin("BTC")[0].quote.USD.price;
            var n = Number(this.myHoldingsTotalInUSD) / Number(this.bitcoinPrice);
            this.myHoldingsTotalInBTC = n.toFixed(6);
        }
    }
};

/* harmony default export */ __webpack_exports__["a"] = (myMixin);

/***/ }),

/***/ "JWy/":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bq.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bq = {
  symbol: 'bq',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill="#1D1D1D" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.966 21.094c2.387 2.103 5.662 1.828 7.633.048 2.021-1.825 2.473-4.756 1.078-7.051-.923-1.519-2.28-2.408-4.044-2.677-1.781-.272-3.31.293-4.683 1.44 0-.992-.003-1.94.002-2.886a1.891 1.891 0 0 0-.542-1.363A1.925 1.925 0 0 0 8 8v14.367h1.966v-1.273zm-.004-4.14c0-2.11 1.726-3.818 3.858-3.82a3.834 3.834 0 0 1 3.858 3.868c-.001 2.084-1.725 3.787-3.847 3.8a3.849 3.849 0 0 1-3.87-3.848zm6.363 5.387c2.146.66 4.024.234 5.722-1.189v2.87c0 .531.18.995.552 1.376.379.388.845.587 1.401.602V11.631h-1.97v1.276c-.78-.648-1.614-1.122-2.58-1.341-.973-.22-1.932-.157-2.916.113l.158.096c.517.297 1.002.642 1.402 1.084.216.238.447.359.77.42 2.17.414 3.483 2.32 3.111 4.48-.283 1.643-1.787 2.988-3.457 3.084a.528.528 0 0 0-.38.18 5.713 5.713 0 0 1-1.651 1.221c-.043.022-.084.05-.162.097z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1D1D1D"/><path fill="#FFF" d="M9.962 16.954a3.849 3.849 0 0 0 3.869 3.848c2.122-.013 3.846-1.716 3.847-3.8a3.834 3.834 0 0 0-3.858-3.869c-2.132.003-3.858 1.712-3.858 3.821m.004 4.14v1.273H8V8c.559.01 1.031.21 1.41.605.363.38.544.835.542 1.363-.005.947-.002 1.894-.002 2.886 1.373-1.147 2.902-1.712 4.683-1.44 1.765.27 3.12 1.158 4.044 2.677 1.395 2.295.943 5.226-1.078 7.05-1.971 1.78-5.246 2.056-7.633-.047zm6.359 1.247c.078-.047.119-.075.162-.097a5.713 5.713 0 0 0 1.65-1.222.528.528 0 0 1 .38-.179c1.67-.096 3.175-1.44 3.458-3.084.372-2.16-.94-4.066-3.11-4.48a1.282 1.282 0 0 1-.77-.42c-.4-.442-.886-.787-1.403-1.084-.044-.025-.086-.052-.158-.096.984-.27 1.943-.334 2.915-.113.967.219 1.8.693 2.58 1.34v-1.275H24V26a1.959 1.959 0 0 1-1.401-.602 1.902 1.902 0 0 1-.552-1.376v-2.87c-1.698 1.423-3.576 1.849-5.722 1.189z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bq);


/***/ }),

/***/ "JlcD":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pot.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pot = {
  symbol: 'pot',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.967-13.82h.272c1.355.001 2.71.005 4.065.002 1.042-.002 2.076-.09 3.084-.368 1.271-.352 2.41-.93 3.238-1.963 1.125-1.403 1.496-3.01 1.221-4.762-.177-1.127-.814-1.94-1.872-2.411a5.738 5.738 0 0 0-1.169-.352c-1.152-.237-2.327-.297-3.5-.312-2.007-.026-4.016-.007-6.024-.013-.184 0-.215.097-.243.238-.234 1.186-.478 2.37-.706 3.558-.037.191-.113.248-.308.242-.409-.014-.819 0-1.228-.003-.14 0-.207.037-.233.187-.093.539-.204 1.075-.307 1.612-.008.042-.006.086-.01.16H9.99L8 23.934c.056.02.078.035.1.035.881.01 1.763.017 2.645.03.14.002.168-.073.189-.182.235-1.217.472-2.434.71-3.651l.389-1.986zm.555-2.738l.29-1.456h4.103l.376-1.938h-4.09c.085-.44.164-.84.244-1.248.07-.006.124-.014.177-.014 1.473.004 2.945-.007 4.417.02a9.754 9.754 0 0 1 1.569.17c.707.128 1.123.583 1.24 1.28.085.501.022.985-.228 1.433-.562 1.008-1.441 1.563-2.598 1.701a7.6 7.6 0 0 1-.918.05c-1.433.005-2.866.002-4.3.002h-.282z" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#105B2F"/><path fill="#FFF" d="M12.033 18.18l-.39 1.987-.71 3.651c-.02.11-.048.184-.188.182-.882-.013-1.764-.02-2.646-.03-.021 0-.043-.014-.099-.035l1.99-9.94H8.313c.004-.074.002-.118.01-.16.103-.537.214-1.073.307-1.612.026-.15.093-.188.233-.187.41.004.82-.011 1.228.003.195.006.27-.05.308-.242.228-1.188.472-2.372.706-3.558.028-.141.059-.238.243-.238 2.008.006 4.017-.013 6.025.013 1.172.015 2.347.075 3.5.312.397.082.8.188 1.168.352 1.058.47 1.695 1.284 1.872 2.411.275 1.751-.096 3.36-1.22 4.762-.83 1.032-1.968 1.611-3.239 1.963-1.008.279-2.042.366-3.084.368-1.355.003-2.71 0-4.065-.001h-.272zm.555-2.738h.283c1.433 0 2.866.003 4.3-.002.305 0 .614-.013.917-.05 1.157-.138 2.036-.693 2.598-1.7a2.14 2.14 0 0 0 .229-1.434c-.118-.697-.534-1.152-1.241-1.28a9.826 9.826 0 0 0-1.569-.17c-1.472-.027-2.944-.016-4.417-.02-.053 0-.106.008-.177.014l-.244 1.248h4.09l-.376 1.938h-4.103l-.29 1.456z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pot);


/***/ }),

/***/ "JuvP":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tnc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tnc = {
  symbol: 'tnc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.226-18.196l-1.83 3.114 2.132 3.481-8.412-.002-1.87 3.103h15.613zm-5.75 2.256h3.659l2.001-3.555 4.12 7.16H26L18.203 6.542zm4.885 3.619l-1.83-3.115h-4.167l4.303-6.918-1.86-3.146L6 19.625z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ff439b" fill-rule="nonzero" r="16"/><path d="M18.226 13.804l5.633 9.696H8.245l1.871-3.103 8.412.002-2.132-3.48zm-5.75 2.256l5.727-9.52L26 19.667h-3.744l-4.12-7.16-2.001 3.554zm4.885 3.619L6 19.625 13.807 6.5l1.86 3.146-4.303 6.918h4.167z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tnc);


/***/ }),

/***/ "JzVw":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/evx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Evx = {
  symbol: 'evx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M10.082 17.21a1.61 1.61 0 0 0 1.783-.01l1.114 1.114 1.163-1.162-1.583-1.582a1.622 1.622 0 0 0-1.593-1.334c-.807 0-1.477.592-1.6 1.365L6.88 18.089A9.35 9.35 0 0 1 6.644 16c0-5.16 4.197-9.356 9.356-9.356S25.356 10.84 25.356 16c0 .764-.092 1.506-.266 2.217l-3.874-3.874a1.621 1.621 0 0 0-1.61-1.456 1.62 1.62 0 0 0-1.614 1.491l-8.417 8.417-1.162 1.163c.398.38.825.73 1.277 1.047A10.939 10.939 0 0 0 16 27c6.065 0 11-4.935 11-11S22.065 5 16 5 5 9.935 5 16a10.957 10.957 0 0 0 1.234 5.058l1.23-1.23zm8.709-1.306a1.609 1.609 0 0 0 1.65-.012l4.045 4.046c-1.49 3.197-4.733 5.418-8.486 5.418a9.301 9.301 0 0 1-5.127-1.534zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.635-18.212a.728.728 0 1 1-.001 1.455.728.728 0 0 1 .001-1.455zm-8.66 1.327a.728.728 0 1 1-.002 1.456.728.728 0 0 1 .001-1.456z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#044aac" r="16"/><path d="M10.082 17.21l-2.618 2.62-1.23 1.23A10.937 10.937 0 0 1 5 16C5 9.935 9.935 5 16 5s11 4.935 11 11-4.935 11-11 11c-2.346 0-4.522-.739-6.31-1.995a11.08 11.08 0 0 1-1.277-1.047l1.162-1.163 8.417-8.417a1.621 1.621 0 0 1 1.614-1.49 1.62 1.62 0 0 1 1.61 1.455l3.874 3.874A9.346 9.346 0 0 0 25.356 16c0-5.16-4.197-9.356-9.356-9.356S6.644 10.84 6.644 16c0 .718.081 1.417.235 2.089L9.367 15.6a1.621 1.621 0 0 1 1.599-1.365 1.62 1.62 0 0 1 1.593 1.334l1.583 1.582-1.163 1.162-1.114-1.114a1.61 1.61 0 0 1-1.783.01zm8.709-1.306l-7.918 7.918A9.301 9.301 0 0 0 16 25.356c3.753 0 6.997-2.221 8.486-5.418l-4.045-4.046a1.609 1.609 0 0 1-1.65.012zm.844-2.116a.728.728 0 1 0 .002 1.455.728.728 0 0 0-.002-1.455zm-8.66 1.327a.728.728 0 1 0 0 1.456.728.728 0 0 0 0-1.456z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Evx);


/***/ }),

/***/ "K/PY":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ubq.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ubq = {
  symbol: 'ubq',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M13.503 15.844l3.318-2.01V5L6.008 11.278v9.103l7.777 4.068-.282-8.605zm4.994.275l-3.318 2.012V27l10.813-6.321v-9.103l-7.777-4.068.282 8.611zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/><path fill-opacity=".305" fill-rule="nonzero" d="M18.215 7.508l7.777 4.068-7.493 4.593-.284-8.661zm-4.43 16.941l-7.777-4.068 7.493-4.594.284 8.662z"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00EA90"/><path fill="#FFF" fill-opacity=".698" fill-rule="nonzero" d="M18.215 7.508l7.777 4.068-7.493 4.593-.284-8.661zm-4.43 16.941l-7.777-4.068 7.493-4.594.284 8.662z"/><path fill="#FFF" fill-rule="nonzero" d="M25.992 20.679L15.179 27v-8.869l10.813-6.555v9.103zm-19.984-9.4L16.821 5v8.834L6.008 20.381v-9.103z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ubq);


/***/ }),

/***/ "KBfC":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tkn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tkn = {
  symbol: 'tkn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM13.092 7.913h-.037v12.74c0 5.737 7.12 6.098 9.725 4.583l-1.064-3.176c-1.175.613-4.294.397-4.294-1.444v-6.063H23v-3.5h-5.541L17.495 6l-4.403 1.913zm-4.11 7.578c1.094 0 1.981-1.066 1.981-2.381 0-1.316-.887-2.382-1.981-2.382C7.887 10.728 7 11.794 7 13.11c0 1.315.887 2.381 1.982 2.381z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#24DD7B"/><path fill="#FFF" d="M13.092 7.913L17.495 6l-.036 5.053H23v3.5h-5.578v6.063c0 1.84 3.12 2.057 4.294 1.444l1.064 3.176c-2.606 1.515-9.725 1.154-9.725-4.584V7.912h.037zm-4.11 7.578C7.887 15.491 7 14.425 7 13.11c0-1.316.887-2.382 1.982-2.382 1.094 0 1.981 1.066 1.981 2.382 0 1.315-.887 2.381-1.981 2.381z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tkn);


/***/ }),

/***/ "KVNE":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sc.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sc = {
  symbol: 'sc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-24.5a8.5 8.5 0 1 0 0 17h8.5V16A8.5 8.5 0 0 0 16 7.5zm5.1 13.6h-5.023c-2.82 0-5.163-2.255-5.177-5.074a5.106 5.106 0 0 1 5.126-5.126c2.819.014 5.074 2.358 5.074 5.177V21.1z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#20EE82"/><path fill="#FFF" d="M16 7.5a8.5 8.5 0 0 1 8.5 8.5v8.5H16a8.5 8.5 0 1 1 0-17zm5.1 13.6v-5.023c0-2.82-2.255-5.163-5.074-5.177a5.106 5.106 0 0 0-5.126 5.126c.014 2.819 2.358 5.074 5.177 5.074H21.1z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sc);


/***/ }),

/***/ "KX8+":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xuc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xuc = {
  symbol: 'xuc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-16c0-6.075-4.925-11-11-11S5 9.924 5 16c0 6.075 4.925 11 11 11s11-4.925 11-11zm-3.77.346l-12.318.017a5.094 5.094 0 0 0 5.077 4.726 5.08 5.08 0 0 0 4.48-2.686h2.322a7.23 7.23 0 0 1-5.44 4.681v1.446l-2.24.698V23.16c-3.574-.435-6.345-3.474-6.345-7.165 0-3.605 2.647-6.587 6.103-7.125V7.467l2.239-.697v2.1c3.457.538 6.122 3.742 6.122 7.35 0 .126.007 0 0 .126zM11.25 14.13h9.477a5.095 5.095 0 0 0-4.738-3.229 5.093 5.093 0 0 0-4.738 3.23z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#25AAE3"/><path fill="#FFF" d="M27 16c0 6.075-4.925 11-11 11S5 22.075 5 16C5 9.924 9.925 5 16 5s11 4.925 11 11zm-3.77.346c.007-.125 0 0 0-.127 0-3.607-2.665-6.811-6.122-7.35v-2.1l-2.24.698V8.87c-3.455.538-6.102 3.52-6.102 7.125 0 3.69 2.77 6.73 6.344 7.165v2.068l2.24-.698v-1.446a7.23 7.23 0 0 0 5.441-4.68H20.47a5.08 5.08 0 0 1-4.48 2.685 5.094 5.094 0 0 1-5.077-4.726l12.318-.017zM11.25 14.13a5.093 5.093 0 0 1 4.74-3.229 5.095 5.095 0 0 1 4.737 3.23h-9.476z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xuc);


/***/ }),

/***/ "Krxx":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nexo.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nexo = {
  symbol: 'nexo',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M5 10.16l5.485 3.147v.012l10.923 6.31v-6.313L15.94 10.16l5.467 3.157-10.732-6.19h.009a.42.42 0 0 0-.42 0L5 10.158zm5.485 3.167v6.319l10.711 6.18a.44.44 0 0 0 .42 0l5.265-3.034-2.993-1.73-2.48-1.427v-.006.006l-10.923-6.308zm13.403 7.735l3.004 1.73V10.403a.42.42 0 0 0-.22-.367L21.408 7v12.63l2.48 1.432zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5 10.16v12.387a.42.42 0 0 0 .22.368l5.265 3.036v-6.305l-.02-.011v-6.32l.02.012v-.008l-.02-.012v.008L5 10.16z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#1A4199"/><g fill="#FFF"><path d="M10.676 7.125l10.732 6.191v6.319L5 10.159l5.265-3.034a.42.42 0 0 1 .42 0" opacity=".7"/><path opacity=".9" d="M21.408 7l-5.467 3.16 5.467 3.156z"/><path d="M21.408 7l5.264 3.036a.42.42 0 0 1 .22.367v12.389l-5.484-3.157V7z"/><path d="M26.881 22.792l-5.264 3.033a.44.44 0 0 1-.42 0l-10.732-6.19v-6.328l16.416 9.485z" opacity=".9"/><path d="M5 10.16v12.387a.42.42 0 0 0 .22.368l5.265 3.036V13.307L5 10.16z" opacity=".6"/><path opacity=".7" d="M10.476 25.95l5.465-3.158-5.465-3.157z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nexo);


/***/ }),

/***/ "KxqC":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/qlc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Qlc = {
  symbol: 'qlc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.49-26.997c-.173 0-.346-.007-.519.001-.502.025-.862.383-.876.864-.014.486.316.869.814.925.654.074 1.322.076 1.962.213 4.278.914 7.24 4.532 7.338 8.92.013.595.36.978.89.98.54 0 .932-.404.9-1.004-.038-.68-.074-1.367-.208-2.031-1.019-5.032-5.172-8.592-10.301-8.868zM15.532 27c.257-.017.524.002.77-.059.384-.095.636-.542.581-.942-.058-.423-.406-.718-.84-.763-.76-.08-1.536-.11-2.272-.292-4.08-1.006-6.923-4.624-6.996-8.828a1.333 1.333 0 0 0-.137-.584c-.18-.337-.592-.488-.947-.397-.426.11-.72.44-.689.901.05.753.103 1.513.245 2.252.934 4.833 5.362 8.564 10.285 8.712zm.452-15.003c-2.634.008-4.546 2.53-3.847 5.076.468 1.704 2.086 2.956 3.802 2.94.546-.004.949-.382.953-.893.004-.502-.372-.87-.907-.899a3.064 3.064 0 0 1-.48-.062c-1.153-.249-1.893-1.4-1.664-2.582.224-1.157 1.344-1.939 2.496-1.743a2.202 2.202 0 0 1 1.867 2.132c.014.384.16.67.5.843.627.32 1.305-.146 1.3-.887-.015-2.147-1.843-3.932-4.02-3.925zm7.555 3.757c-.03-.283-.051-.53-.083-.777-.465-3.657-3.671-6.497-7.342-6.504-.61-.002-1.012.35-1.017.888-.005.537.395.89.996.918 2.458.117 4.191 1.316 5.204 3.551.306.676.427 1.4.434 2.146.005.49.316.849.754.92.419.07.849-.165.98-.569.06-.19.054-.402.074-.573zm-15.061.461a7.32 7.32 0 0 0 1.947 4.85c1.485 1.618 3.342 2.443 5.544 2.463.416.004.72-.206.859-.565.246-.638-.205-1.2-.98-1.22a5.712 5.712 0 0 1-5.209-3.682 5.756 5.756 0 0 1-.378-1.994c-.012-.719-.653-1.157-1.265-.874-.465.214-.57.615-.518 1.022zm11.534 2.82c-.044-.106-.078-.32-.2-.45a24.792 24.792 0 0 0-1.44-1.448c-.339-.31-.893-.242-1.203.09-.305.328-.335.851-.024 1.183.45.482.917.95 1.4 1.397.268.247.607.271.94.115.337-.157.49-.44.527-.887z" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#610089" fill-rule="nonzero" r="16"/><path d="M16.49 5.003c5.13.276 9.282 3.836 10.301 8.868.134.664.17 1.351.207 2.03.033.6-.358 1.005-.899 1.004-.53 0-.877-.384-.89-.98-.097-4.387-3.06-8.005-7.338-8.92-.64-.136-1.308-.138-1.962-.212-.498-.056-.828-.439-.814-.925.014-.481.374-.839.876-.864.173-.008.346-.001.519-.001zM15.532 27c-4.923-.148-9.351-3.88-10.285-8.712-.142-.74-.196-1.499-.245-2.252-.03-.46.263-.79.69-.9.354-.092.766.059.946.396.09.171.133.387.137.584.073 4.204 2.916 7.822 6.996 8.828.736.182 1.512.211 2.272.292.434.045.782.34.84.763.055.4-.197.847-.58.942-.247.061-.514.042-.771.059zm.452-15.003c2.177-.007 4.005 1.778 4.02 3.925.005.74-.673 1.206-1.3.887-.34-.172-.486-.46-.5-.843a2.202 2.202 0 0 0-1.867-2.132c-1.152-.196-2.272.586-2.496 1.743-.229 1.182.511 2.333 1.663 2.582.158.034.32.053.48.062.536.028.912.397.908.9-.004.51-.407.888-.953.893-1.716.015-3.334-1.237-3.802-2.941-.699-2.545 1.213-5.068 3.847-5.076zm7.555 3.757c-.02.17-.013.383-.075.573-.13.404-.56.638-.98.57-.437-.072-.748-.43-.753-.92-.007-.746-.128-1.47-.434-2.147-1.013-2.235-2.746-3.434-5.204-3.55-.601-.03-1-.382-.996-.92.005-.538.407-.889 1.017-.887 3.67.007 6.877 2.847 7.342 6.504.032.247.053.494.083.777zm-15.061.461c-.051-.407.053-.808.518-1.022.612-.283 1.253.155 1.265.874.012.689.13 1.352.378 1.994a5.712 5.712 0 0 0 5.208 3.682c.776.02 1.227.582.98 1.22-.138.36-.442.569-.858.565-2.202-.02-4.059-.845-5.544-2.462a7.326 7.326 0 0 1-1.947-4.85zm11.534 2.82c-.037.447-.19.73-.526.887-.334.156-.673.132-.94-.115a27.145 27.145 0 0 1-1.401-1.397c-.31-.332-.28-.855.024-1.182.31-.333.864-.402 1.203-.091.502.458.977.948 1.44 1.447.122.132.156.345.2.45z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Qlc);


/***/ }),

/***/ "LBfm":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zel.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zel = {
  symbol: 'zel',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5 15.615v4.847L9.495 23l4.494-2.538v-4.847l-4.494-2.538L5 15.615zm13.01 0v4.847L22.506 23 27 20.462v-4.847l-4.495-2.538-4.494 2.538zm-.472 4.21v-4.594l4.021-2.271v-1.73L15.961 8l-5.599 3.23v1.685l4.1 2.316v4.638l1.499.823 1.577-.866z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#183C87" fill-rule="nonzero"/><path fill="#FFF" d="M5 15.615l4.495-2.538 4.494 2.538v4.847L9.495 23 5 20.462v-4.847zm13.01 0l4.495-2.538L27 15.615v4.847L22.505 23l-4.494-2.538v-4.847zm-.472 4.21l-1.577.867-1.499-.823V15.23l-4.1-2.316V11.23L15.961 8l5.598 3.23v1.73l-4.021 2.27v4.596z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zel);


/***/ }),

/***/ "Lrx/":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/steem.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Steem = {
  symbol: 'steem',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.021-25.91c-.246-.125-3.368 2.495-3.368 4.426-.003 2.637 3.642 8.61 4.255 10.92.528 1.981-.895 4.36-.506 4.466.36.232 3.758-3.265 3.892-4.759.172-2.375-3.972-9.303-4.301-11.095-.383-2.083.302-3.912.028-3.958zm-6.11 2.139c-.192-.098-2.64 1.958-2.64 3.471-.003 2.068 2.855 6.752 3.337 8.564.414 1.554-.703 3.419-.396 3.504.28.183 2.947-2.562 3.051-3.732.134-1.864-3.114-7.297-3.373-8.7-.3-1.638.238-3.07.022-3.107zm12.415 0c-.191-.098-2.64 1.958-2.64 3.471-.004 2.068 2.855 6.752 3.336 8.564.414 1.554-.702 3.419-.396 3.504.282.183 2.95-2.562 3.052-3.732.133-1.864-3.114-7.297-3.374-8.7-.3-1.638.238-3.07.022-3.107z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#4BA2F2"/><path fill="#FFF" fill-rule="nonzero" d="M9.87 8.229c.216.037-.322 1.47-.022 3.107.26 1.403 3.507 6.836 3.373 8.7-.104 1.17-2.77 3.915-3.051 3.732-.307-.085.81-1.95.396-3.504-.482-1.812-3.34-6.496-3.337-8.564 0-1.513 2.448-3.569 2.64-3.471zm6.109-2.14c.274.047-.41 1.876-.028 3.959.33 1.792 4.473 8.72 4.301 11.095-.134 1.494-3.532 4.991-3.892 4.76-.39-.107 1.034-2.486.506-4.468-.613-2.308-4.258-8.282-4.255-10.919 0-1.931 3.122-4.55 3.368-4.426zm6.305 2.14c.216.037-.321 1.47-.022 3.107.26 1.403 3.507 6.836 3.374 8.7-.103 1.17-2.77 3.915-3.052 3.732-.306-.085.81-1.95.396-3.504-.481-1.812-3.34-6.496-3.337-8.564 0-1.513 2.45-3.569 2.641-3.471z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Steem);


/***/ }),

/***/ "Ls7i":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wpr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wpr = {
  symbol: 'wpr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M3.993 5.425l4.854 17.382.035.15h4.186l1.87-6.932 1.87 6.932h4.185l.036-.15 1.96-7.078 3.435 12.41A15.937 15.937 0 0 1 16 32C7.163 32 0 24.837 0 16A15.94 15.94 0 0 1 3.993 5.425zm2.65-2.405A15.928 15.928 0 0 1 16 0c8.837 0 16 7.163 16 16a15.93 15.93 0 0 1-3.025 9.364L24.901 10.65l-.035-.15h-3.75l-2.336 8.438-1.973-8.438h-3.739l-1.973 8.438L6.642 3.02z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ffe600" r="16"/><path d="M3.993 5.425a16.096 16.096 0 0 1 2.65-2.405l4.452 15.918 1.973-8.438h3.74l1.972 8.438 2.337-8.438h3.749l.035.15 4.074 14.714a16.092 16.092 0 0 1-2.55 2.775l-3.437-12.41-1.96 7.078-.035.15h-4.186l-1.869-6.932-1.87 6.932H8.882l-.035-.15z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wpr);


/***/ }),

/***/ "M9vc":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eqli.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eqli = {
  symbol: 'eqli',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.973-12.62l.744-1.48a.378.378 0 0 0-.02-.362.381.381 0 0 0-.314-.171H8.835l4.197-7.756 3.749 6.82c.066.115.19.191.324.191h1.688a.346.346 0 0 0 .315-.18.396.396 0 0 0 .01-.373L13.346 5.691c-.133-.239-.515-.239-.648 0L5.296 19.036a.37.37 0 0 0 .01.372c.066.114.19.181.314.181h4.073a.372.372 0 0 0 .334-.21zm16.674-.344L19.29 5.69a.388.388 0 0 0-.334-.191.39.39 0 0 0-.324.2l-1.85 3.711a.407.407 0 0 0 0 .334l.744 1.478c.124.248.534.248.667 0l.792-1.583 4.188 7.727h-7.908c-.2 0-.372.162-.372.372v1.478c0 .2.162.372.372.372h11.113a.346.346 0 0 0 .315-.181.35.35 0 0 0 .01-.372zm-4.817 1.478a.381.381 0 0 0-.324-.19h-1.851a.381.381 0 0 0-.324.19.35.35 0 0 0 .01.372l.772 1.288H11.83l3.758-6.486a.358.358 0 0 0 .01-.353l-.744-1.479a.35.35 0 0 0-.325-.2.358.358 0 0 0-.334.19l-2.957 5.18-2.966 4.817a.37.37 0 0 0-.01.372.38.38 0 0 0 .325.191H23.41a.346.346 0 0 0 .315-.181.37.37 0 0 0 0-.372l-1.841-3.339z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#C9A35E"/><path fill="#FFF" d="M10.027 19.38a.372.372 0 0 1-.334.21H5.62a.368.368 0 0 1-.315-.182.37.37 0 0 1-.01-.372L12.699 5.69c.133-.239.515-.239.648 0l5.772 10.378a.396.396 0 0 1-.01.372.346.346 0 0 1-.315.181h-1.688a.381.381 0 0 1-.324-.19l-3.75-6.82-4.196 7.755h1.602a.38.38 0 0 1 .315.171.378.378 0 0 1 .019.363l-.744 1.478zm16.674-.344a.35.35 0 0 1-.01.372.346.346 0 0 1-.314.181H15.264a.372.372 0 0 1-.372-.372V17.74c0-.21.171-.372.372-.372h7.908L18.984 9.64l-.792 1.583c-.133.248-.543.248-.667 0l-.744-1.478a.407.407 0 0 1 0-.334l1.85-3.71a.39.39 0 0 1 .324-.201.39.39 0 0 1 .334.19l7.412 13.346zm-4.817 1.478l1.84 3.339a.37.37 0 0 1 0 .372.346.346 0 0 1-.314.181H8.587a.381.381 0 0 1-.325-.19.37.37 0 0 1 .01-.373l2.966-4.817 2.957-5.18c.067-.123.2-.2.334-.19a.35.35 0 0 1 .325.2l.744 1.479a.358.358 0 0 1-.01.353l-3.758 6.486h8.337l-.773-1.288a.35.35 0 0 1-.01-.372.381.381 0 0 1 .325-.19h1.85c.134 0 .258.076.325.19z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eqli);


/***/ }),

/***/ "MYek":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dnt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dnt = {
  symbol: 'dnt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.075-12.9c-.827-.046-.367-1.362-.735-2.863-.437-1.662.207-2.817 1.057-2.77.4.062.778.22 1.103.461a6.819 6.819 0 0 0-.781-2.055c-.759-1.27-2.413-3.117-4.481-4.571v13.922a1.398 1.398 0 1 1-2.666.6 5.435 5.435 0 0 1-6.978-1.05 5.498 5.498 0 0 1-.104-7.09 5.435 5.435 0 0 1 6.944-1.257V7.025c-.007-.421.18-.822.506-1.085-2.689-1.247-5.699-1.501-8.273.785-4.32 3.855-6.48 9.235-4.32 14.591.046.116.092.231.138.323.063-.13.149-.246.253-.346 1.126-1.154 2.367 1.2 5.01 2.563 1.677.854 2.642 1.985 3.01 3.047 2.458.3 4.986-.092 7.008-1.27 2.643-1.523 4.183-4.294 4.734-7.11a2.338 2.338 0 0 1-1.425.577zm-10.363.092c1.333.762 2.941.462 3.24-1.247.16-.992.069-2.54-.804-3.024-2.896-1.662-5.332 2.609-2.436 4.271zm1.356-11.036c.62-.023 1.194.716 1.217 1.062.023.347-.528.208-1.126.416-.666.23-1.149.023-1.171-.323-.023-.347.436-1.132 1.08-1.155z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#2c398f" r="16"/><path d="M25.075 19.1a2.338 2.338 0 0 0 1.425-.577c-.551 2.816-2.091 5.587-4.734 7.11-2.022 1.178-4.55 1.57-7.008 1.27-.368-1.062-1.333-2.193-3.01-3.047-2.643-1.362-3.884-3.717-5.01-2.563-.104.1-.19.217-.253.346a4.353 4.353 0 0 1-.138-.323c-2.16-5.356 0-10.736 4.32-14.591 2.574-2.286 5.584-2.032 8.273-.785a1.362 1.362 0 0 0-.506 1.085v5.402a5.435 5.435 0 0 0-6.944 1.258 5.498 5.498 0 0 0 .104 7.088 5.435 5.435 0 0 0 6.978 1.051 1.398 1.398 0 0 0 2.666-.6V7.302c2.068 1.454 3.722 3.301 4.48 4.571.37.638.634 1.332.782 2.055-.325-.24-.704-.4-1.103-.462-.85-.046-1.494 1.109-1.057 2.77.368 1.502-.092 2.818.735 2.864zm-10.363.092c-2.896-1.662-.46-5.933 2.436-4.271.873.485.965 2.032.804 3.024-.299 1.709-1.907 2.009-3.24 1.247zm1.356-11.036c-.644.023-1.103.808-1.08 1.155.022.346.505.554 1.171.323.598-.208 1.15-.07 1.126-.416-.023-.346-.597-1.085-1.217-1.062z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dnt);


/***/ }),

/***/ "MZZg":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fil.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fil = {
  symbol: 'fil',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.068-19.092l-4.217-.618-.237 1.615 4.12.603a31.19 31.19 0 0 0-.124.715l-.176 1.063-4.096-.6-.222 1.617 4.036.592c-.909 4.494-1.628 6.44-2.535 7.45-.091.106-.378.264-.625.293-.341.04-.62-.131-.831-.63a1.686 1.686 0 0 0-.541-.722 1.245 1.245 0 0 0-.89-.242c-.205-.028-.587.251-.688.601-.136.47.174.97.947 1.455 1.515.95 2.97.657 4.267-.497.779-.694 1.488-1.741 1.664-2.18.455-.88 1.1-3.106 1.588-5.184l4.233.62.237-1.615-4.137-.606a31.625 31.625 0 0 0 .126-.714l.175-1.064 4.096.6.222-1.617-4.036-.59c.61-3.012 1.048-4.465 1.524-5.258.137-.226.27-.398.484-.635l.235-.26c.09-.106.378-.264.625-.293.34-.04.62.132.83.63.136.32.32.559.542.722.288.212.59.271.89.242.205.028.587-.251.688-.6.136-.471-.174-.97-.947-1.455l-.133.211.133-.211c-1.515-.951-2.97-.658-4.267.497-.78.693-1.489 1.742-1.664 2.18-.475.917-.924 2.322-1.296 3.885z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#42C1CA"/><path fill="#FFF" d="M15.932 12.908c.372-1.563.82-2.968 1.296-3.885.175-.438.885-1.487 1.664-2.18 1.297-1.155 2.752-1.448 4.267-.497l-.133.211.133-.211c.773.485 1.083.984.947 1.454-.1.35-.483.63-.688.601-.3.03-.602-.03-.89-.242a1.685 1.685 0 0 1-.541-.721c-.212-.5-.49-.67-.831-.63-.247.028-.534.186-.625.292l-.235.26a3.894 3.894 0 0 0-.484.635c-.476.793-.915 2.246-1.524 5.257l4.036.591-.222 1.617-4.096-.6-.175 1.064-.045.266c-.024.138-.05.288-.08.448l4.136.606-.237 1.615-4.233-.62c-.489 2.078-1.133 4.305-1.588 5.184-.176.439-.885 1.486-1.664 2.18-1.297 1.154-2.752 1.448-4.267.497-.773-.485-1.083-.985-.947-1.455.1-.35.483-.629.688-.6.3-.03.602.03.89.241.222.164.406.402.541.722.212.499.49.67.831.63.247-.029.534-.187.625-.293.907-1.01 1.626-2.956 2.535-7.45l-4.036-.592.222-1.617 4.096.6.176-1.063a31.19 31.19 0 0 1 .125-.715l-4.12-.603.236-1.615 4.217.618z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fil);


/***/ }),

/***/ "MjIg":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/elf.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Elf = {
  symbol: 'elf',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10-16.038c.001-2.316-1.791-4.135-4.09-4.15-2.252-.015-4.11 1.849-4.122 4.135-.012 2.287 1.826 4.16 4.09 4.166 2.312.007 4.121-1.815 4.122-4.15zM9.09 23.92c.923.004 1.735-.319 2.287-1.054.344-.457.548-1.038.74-1.59.352-1.012.822-1.898 1.892-2.287.598-.217 1.182-.027 1.77.076.666.116 1.198-.232 1.375-.88a1.178 1.178 0 0 0-.67-1.402c-.586-.252-1.246-.031-1.537.563-.286.584-.737.983-1.267 1.312-.365.227-.76.322-1.173.186-.665-.218-1.318-.477-1.986-.686-.47-.147-.954-.327-1.436-.338-1.677-.039-3.01 1.34-3.016 3.046A3.019 3.019 0 0 0 9.09 23.92zM9.026 8.082c-2.224 0-3.684 2.34-2.728 4.37a3.018 3.018 0 0 0 4.234 1.358c.402-.223.803-.462 1.23-.623 1.23-.462 2.135-.192 2.95.838.12.15.22.317.327.477.3.447.853.654 1.342.502.553-.173.857-.603.844-1.194-.019-.852-.81-1.38-1.633-1.08-.928.339-2.391.218-2.974-1.023-.235-.5-.512-.987-.696-1.508-.464-1.316-1.529-2.117-2.896-2.117zm9.53 15.908c.013-1.122-.849-2.052-1.977-2.041-1.179.011-2.027.95-1.997 2.104.026 1.02.906 1.927 1.96 1.947 1.089.02 2.002-.891 2.015-2.01zM14.594 8.02c-.052.978.701 2.009 1.98 2.033 1.124.021 1.978-.894 1.986-2.035.009-1.085-.893-2.008-1.971-2.018-1.109-.01-1.996.888-1.995 2.02z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2b5ebb" r="16"/><path d="M26 15.962c-.001 2.336-1.81 4.158-4.122 4.151-2.264-.007-4.102-1.879-4.09-4.166.012-2.286 1.87-4.15 4.122-4.135 2.299.015 4.091 1.834 4.09 4.15zM9.09 23.92a3.019 3.019 0 0 1-3.021-3.054c.005-1.706 1.339-3.085 3.016-3.046.482.011.966.191 1.436.338.668.209 1.32.468 1.986.686.413.136.808.04 1.173-.186.53-.33.98-.728 1.267-1.312.29-.594.95-.815 1.537-.563.544.234.827.827.67 1.403-.177.647-.71.995-1.374.879-.589-.103-1.173-.293-1.771-.076-1.07.389-1.54 1.275-1.892 2.286-.192.553-.396 1.134-.74 1.59-.552.736-1.364 1.059-2.287 1.055zM9.026 8.082c1.367 0 2.432.8 2.896 2.117.184.52.46 1.007.696 1.508.583 1.24 2.046 1.362 2.974 1.023.822-.3 1.614.228 1.633 1.08.013.59-.29 1.02-.844 1.194-.49.152-1.042-.055-1.342-.502-.107-.16-.207-.326-.326-.477-.816-1.03-1.722-1.3-2.95-.838-.428.16-.829.4-1.231.623a3.018 3.018 0 0 1-4.234-1.358c-.956-2.03.504-4.37 2.728-4.37zm9.53 15.908c-.012 1.119-.925 2.03-2.015 2.01-1.053-.02-1.933-.927-1.96-1.947-.029-1.154.819-2.093 1.998-2.104 1.128-.011 1.99.919 1.978 2.04zM14.594 8.02c0-1.132.886-2.03 1.995-2.02 1.078.01 1.98.933 1.971 2.018-.008 1.141-.862 2.056-1.986 2.035-1.279-.024-2.032-1.055-1.98-2.033z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Elf);


/***/ }),

/***/ "Ms+R":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/html.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Html = {
  symbol: 'html',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16.02 16.945l-.529 1.64h-.788l1.317-4.107V7.945h7.344l-1.397 15.39-5.947 1.602zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-7.364-7.531L15.98 26.5l7.384-2.031L25 6.5H7zm5.163-6.793l-3.526-1.432v-.592l3.526-1.433v.742l-2.469.99 2.47.984zm7.933-1.432v-.592l-3.527-1.433v.742l2.47.987-2.47.987v.741zm-5.712.7l1.1-3.413h-.796l-.304.947z" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#cfa967" r="16"/><path d="M16.02 16.945v7.993l5.947-1.602 1.397-15.39H16.02v6.532l.304-.947h.796zm-7.384 7.524L7 6.5h18l-1.636 17.969L15.98 26.5zm5.163-6.793v-.741l-2.469-.984 2.47-.99v-.742l-3.527 1.433v.592zm7.933-1.432l-3.527 1.432v-.741l2.47-.987-2.47-.987v-.742l3.527 1.433zm-5.712.7v-2.466l-1.317 4.107h.788z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Html);


/***/ }),

/***/ "N6Yo":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/agi.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Agi = {
  symbol: 'agi',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.144-25.576c.502.483.956 1.01 1.356 1.576a5.047 5.047 0 0 1-.125 5.273.627.627 0 0 0 .063.727c.214.29.624.37.937.182 1.188-.97 1.25-3.03 1.313-3.455a4.497 4.497 0 0 0-.188-1.272 6.463 6.463 0 0 0-.5-1.152 3.709 3.709 0 0 0-.75-.97 5.63 5.63 0 0 0-1.875-1.272.289.289 0 0 0-.313 0 .28.28 0 0 0 .082.363zM15.3 25.006c-.51-.481-.97-1.01-1.375-1.576a5.047 5.047 0 0 1 .125-5.272.539.539 0 0 0 0-.728.714.714 0 0 0-.938-.182c-1.187.97-1.25 3.03-1.312 3.455 0 .43.064.86.188 1.273.128.398.295.784.5 1.151.193.361.446.689.75.97a5.63 5.63 0 0 0 1.875 1.273c.062.06.187 0 .25-.06s.062-.183-.063-.304zm5.394-5a5.473 5.473 0 0 0-1.313-3.151 10.816 10.816 0 0 0-2.625-1.94 14.466 14.466 0 0 1-2.375-1.642 4.032 4.032 0 0 1-1.187-2.121 4.243 4.243 0 0 1 .306-2.48 6.692 6.692 0 0 1 1.756-2.242.26.26 0 0 0 .063-.303.242.242 0 0 0-.375-.06 5.577 5.577 0 0 0-2.438 2.06 5.01 5.01 0 0 0-.881 3.273 5.25 5.25 0 0 0 .438 1.697 6 6 0 0 0 1 1.455 10.78 10.78 0 0 0 2.687 1.878c.848.44 1.645.969 2.375 1.576a3.603 3.603 0 0 1 1.188 2.182c.176.879.066 1.79-.313 2.606a6.13 6.13 0 0 1-1.813 2.182.207.207 0 0 0-.063.303c.035.064.1.11.173.121s.149-.01.203-.06a7.801 7.801 0 0 0 2.375-2.122c.62-.958.906-2.084.819-3.212z"/><path d="M17.144 6.424a.28.28 0 0 1-.081-.363.289.289 0 0 1 .312 0 5.63 5.63 0 0 1 1.875 1.272c.303.281.557.609.75.97.204.368.371.753.5 1.152.123.413.187.842.188 1.272-.063.425-.125 2.485-1.313 3.455a.714.714 0 0 1-.938-.182.627.627 0 0 1-.062-.727A5.047 5.047 0 0 0 18.5 8c-.4-.566-.854-1.093-1.356-1.576zM15.3 25.006c.125.121.125.242.063.303s-.188.121-.25.06a5.63 5.63 0 0 1-1.875-1.272 3.709 3.709 0 0 1-.75-.97 6.463 6.463 0 0 1-.5-1.151 4.482 4.482 0 0 1-.188-1.273c.063-.424.125-2.485 1.313-3.455a.714.714 0 0 1 .937.182.539.539 0 0 1 0 .728 5.047 5.047 0 0 0-.125 5.272c.405.567.866 1.095 1.375 1.576z" fill-opacity=".5"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#6916ff" r="16"/><g fill="#fff"><path d="M17.144 6.424a.28.28 0 0 1-.081-.363.289.289 0 0 1 .312 0 5.63 5.63 0 0 1 1.875 1.272c.303.281.557.609.75.97.204.368.371.753.5 1.152.123.413.187.842.188 1.272-.063.425-.125 2.485-1.313 3.455a.714.714 0 0 1-.938-.182.627.627 0 0 1-.062-.727A5.047 5.047 0 0 0 18.5 8c-.4-.566-.854-1.093-1.356-1.576zM15.3 25.006c.125.121.125.242.063.303s-.188.121-.25.06a5.63 5.63 0 0 1-1.875-1.272 3.709 3.709 0 0 1-.75-.97 6.463 6.463 0 0 1-.5-1.151 4.482 4.482 0 0 1-.188-1.273c.063-.424.125-2.485 1.313-3.455a.714.714 0 0 1 .937.182.539.539 0 0 1 0 .728 5.047 5.047 0 0 0-.125 5.272c.405.567.866 1.095 1.375 1.576z" fill-opacity=".5"/><path d="M20.694 20.006a5.473 5.473 0 0 0-1.313-3.151 10.816 10.816 0 0 0-2.625-1.94 14.466 14.466 0 0 1-2.375-1.642 4.032 4.032 0 0 1-1.187-2.121 4.243 4.243 0 0 1 .306-2.48 6.692 6.692 0 0 1 1.756-2.242.26.26 0 0 0 .063-.303.242.242 0 0 0-.375-.06 5.577 5.577 0 0 0-2.438 2.06 5.01 5.01 0 0 0-.881 3.273 5.25 5.25 0 0 0 .438 1.697 6 6 0 0 0 1 1.455 10.78 10.78 0 0 0 2.687 1.878c.848.44 1.645.969 2.375 1.576a3.603 3.603 0 0 1 1.188 2.182c.176.879.066 1.79-.313 2.606a6.13 6.13 0 0 1-1.813 2.182.207.207 0 0 0-.063.303c.035.064.1.11.173.121s.149-.01.203-.06a7.801 7.801 0 0 0 2.375-2.122c.62-.958.906-2.084.819-3.212z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Agi);


/***/ }),

/***/ "N8wM":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cix.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cix = {
  symbol: 'cix',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M24.668 18.863l-6.634 3.659-2.792-3.729-8.073 4.252v.94L15 19.862l2.792 3.728 7.364-4.062.145 1.27 1.62-2.636-.955.011v-.025l-.048.026-2.31.027 1.059.663zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.444-14.042V8.644h-3.06v10.925l3.06-1.611zm8.653.481V8.644h-3.06v11.495l3.06-1.7zm-4.326 2.404V9.893h-3.061v8.104l2.404 3.21.657-.364zm-8.654-.607v-8.924h-3.06v10.536l3.06-1.612z"/><path d="M18.883 20.843l-.657.364-2.404-3.21V9.894h3.06v10.949zm-8.654-.607l-3.06 1.612V11.312h3.06v8.924z" opacity=".5"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#0576B4"/><g fill="#FFF"><path d="M24.668 18.863l-1.059-.663 2.31-.027.048-.026v.025l.954-.01-1.619 2.634-.145-1.27-7.364 4.063L15 19.86l-7.83 4.126v-.94l8.073-4.253 2.792 3.729 6.634-3.659zm-10.112-.905l-3.06 1.611V8.644h3.06v9.314zm8.653.481l-3.06 1.7V8.644h3.06v9.795z"/><path d="M18.883 20.843l-.657.364-2.404-3.21V9.894h3.06v10.949zm-8.654-.607l-3.06 1.612V11.312h3.06v8.924z" opacity=".5"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cix);


/***/ }),

/***/ "NEop":
/*!***********************************!*\
  !*** ./src/js/component-chart.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__store_js__ = __webpack_require__(/*! ./store.js */ "iyJi");






__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].component('chart', {
    data: function data() {
        return {
            thisChart: null
        };
    },
    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_js__["a" /* default */]],
    template: '<div ref=\'chart\' class="chart tc "> [chart] </div>',

    mounted: function mounted() {
        this.setupEvents();
    },

    methods: {
        setupEvents: function setupEvents() {
            var _this = this;

            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$on('coin-mouseover-' + this.$parent._uid, function (c) {
                _this.thisChart.focus(c);
            });
            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$on('coin-mouseleave-' + this.$parent._uid, function (c) {
                _this.thisChart.defocus(c);
                _this.thisChart.revert();
            });
            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$on('wallet-built-' + this.$parent._uid, this.buildChart);
        },

        buildChart: function buildChart(_thisWallet_) {
            // console.log("~! component-chart : buildChart(){} ", _thisWallet_);
            var chartDiv = this.$refs.chart;
            var chartData = [];

            chartData = chartData.concat(_thisWallet_.filter(function (coin) {
                return coin.holding > 0;
            }).map(function (coin) {
                return [coin.name, coin.holding_value];
            }));

            this.thisChart = bb.generate({
                bindto: chartDiv,
                donut: {
                    // title: "",
                    labels: false,
                    expand: true,
                    label: {
                        show: false
                        // ratio: 0.01,
                    }
                },
                // legend:{
                // show:false,
                // position:"bottom",
                // },
                data: {
                    type: "donut",
                    labels: false,
                    columns: chartData,
                    colors: {
                        "Bitcoin": "#f9a021",
                        "Litecoin": "#b6b6b6",
                        "Ethereum": "#999999",
                        "OmiseGO": "#3979ff",
                        "EOS": "#9aa3ee",
                        "Populous": '#cfb949',
                        "ReddCoin": "#f01416",
                        "Veritaseum": "#ff991d",
                        "Pillar": "#00beff",
                        "Dent": "#af0000",
                        "Cardano": "#33c8c9",
                        "DigiByte": "#06c"
                    },
                    onclick: function onclick(d, i) {
                        // console.log("onclick", d, i);
                    },
                    onover: function onover(d, i) {
                        // console.log("onover", d, i);
                    },
                    onout: function onout(d, i) {
                        // console.log("onout", d, i);
                    }

                }

            });

            this.thisChart.legend.hide();
        }
    }

});

/* unused harmony default export */ var _unused_webpack_default_export = (' ');

/***/ }),

/***/ "NP69":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mcap.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mcap = {
  symbol: 'mcap',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.468-24.936c-.286.078-.542.229-.796.373-2.246 1.28-4.505 2.535-6.76 3.798a1.848 1.848 0 0 0-.957 1.671c-.003 3.246.021 6.492-.017 9.737-.022.197.161.37.36.352.99.002 1.98.009 2.97-.003.235.004.355-.242.332-.444.023-2.67.015-5.339.02-8.008.007-.288.067-.6.292-.805.346-.316.779-.514 1.182-.746.403-.21.784-.464 1.21-.63.195-.07.455-.126.618.041.17.191.166.462.18.7.014 1.36-.003 2.72 0 4.078.012.238.005.5.146.707.156.209.444.223.684.249.566.028 1.134.007 1.702.013.314-.005.675-.009.914-.243.234-.238.224-.594.225-.9a73.454 73.454 0 0 1 .01-3.88c.022-.26.02-.565.225-.758.185-.15.44-.065.636.013.518.23.989.546 1.489.808.305.168.646.313.862.596.213.267.276.615.277.945-.027 2.637-.062 5.275.03 7.91-.022.213.18.39.39.358.96.001 1.922.005 2.883-.001.244.022.39-.223.356-.438-.004-3.095.003-6.19.005-9.284.012-.934-.542-1.839-1.375-2.28a481.458 481.458 0 0 1-6.464-3.635c-.48-.29-1.072-.457-1.629-.294z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#033B4A"/><path fill="#FFF" fill-rule="nonzero" d="M15.532 7.064c.557-.163 1.148.003 1.629.294a470.684 470.684 0 0 0 6.464 3.635c.833.441 1.387 1.346 1.375 2.28-.002 3.094-.01 6.19-.005 9.284.034.215-.112.46-.356.438-.961.006-1.922.002-2.883.001-.21.031-.412-.145-.39-.358-.092-2.635-.057-5.273-.03-7.91 0-.33-.064-.678-.277-.945-.216-.283-.557-.428-.862-.596-.5-.262-.971-.579-1.489-.808-.196-.078-.451-.162-.636-.013-.205.193-.203.498-.224.758a73.454 73.454 0 0 0-.011 3.88c-.001.306.009.662-.225.9-.239.234-.6.238-.914.243-.568-.006-1.136.015-1.702-.013-.24-.026-.528-.04-.684-.25-.14-.207-.134-.468-.146-.706-.003-1.359.014-2.719 0-4.077-.014-.24-.01-.51-.18-.7-.163-.168-.423-.113-.619-.042-.425.166-.806.42-1.209.63-.403.232-.836.43-1.182.746-.225.205-.285.517-.292.805-.005 2.67.003 5.338-.02 8.008.023.202-.097.448-.333.444-.99.012-1.98.005-2.97.003-.198.019-.38-.155-.36-.352.04-3.245.015-6.491.018-9.737a1.848 1.848 0 0 1 .957-1.67c2.255-1.264 4.514-2.52 6.76-3.799.254-.144.51-.295.796-.373z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mcap);


/***/ }),

/***/ "NYxO":
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: default, Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export Store */
/* unused harmony export install */
/* unused harmony export mapState */
/* unused harmony export mapMutations */
/* unused harmony export mapGetters */
/* unused harmony export mapActions */
/* unused harmony export createNamespacedHelpers */
/**
 * vuex v3.1.1
 * (c) 2019 Evan You
 * @license MIT
 */
function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if (true) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

function update (path, targetModule, newModule) {
  if (true) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if (true) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if (true) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if (true) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });
  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    "development" !== 'production' &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if (true) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if (true) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return result.then(function (res) {
    try {
      this$1._actionSubscribers
        .filter(function (sub) { return sub.after; })
        .forEach(function (sub) { return sub.after(action, this$1.state); });
    } catch (e) {
      if (true) {
        console.warn("[vuex] error in after action subscribers: ");
        console.error(e);
      }
    }
    return res
  })
};

Store.prototype.subscribe = function subscribe (fn) {
  return genericSubscribe(fn, this._subscribers)
};

Store.prototype.subscribeAction = function subscribeAction (fn) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if (true) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if (true) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs) {
  if (subs.indexOf(fn) < 0) {
    subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure enviroment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if ("development" !== 'production' && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  var gettersProxy = {};

  var splitPos = namespace.length;
  Object.keys(store.getters).forEach(function (type) {
    // skip if the target getter is not match this namespace
    if (type.slice(0, splitPos) !== namespace) { return }

    // extract local getter type
    var localType = type.slice(splitPos);

    // Add a port to the getters proxy.
    // Define as getter property because
    // we do not want to evaluate the getters in this time.
    Object.defineProperty(gettersProxy, localType, {
      get: function () { return store.getters[type]; },
      enumerable: true
    });
  });

  return gettersProxy
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload, cb) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload, cb);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if (true) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if (true) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.length
    ? path.reduce(function (state, key) { return state[key]; }, state)
    : state
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if (true) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if (true) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if ("development" !== 'production' && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if ("development" !== 'production' && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index_esm = {
  Store: Store,
  install: install,
  version: '3.1.1',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};

/* harmony default export */ __webpack_exports__["a"] = (index_esm);


/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! ./../../../../node_modules/webpack/buildin/global.js */ "h6ac")))

/***/ }),

/***/ "Nn7V":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sib.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sib = {
  symbol: 'sib',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-28C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm4.176 16.527h-.488v2.732h-1.64v-2.732h-2.497v-1.015h2.537v-1.834a6.439 6.439 0 0 1-4.332.702c-.82-.195-1.639-.643-2.068-1.385a4.587 4.587 0 0 1-.586-2.38v-4.332h1.659v4.488c.039.975.663 1.951 1.62 2.244a4.991 4.991 0 0 0 3.687-.586c0-1.366-.02-3.414 0-6.146h1.678v9.23h.43v1.014z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#057BC1"/><path d="M16 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm4.176 16.527h-.488v2.732h-1.64v-2.732h-2.497v-1.015h2.537v-1.834a6.439 6.439 0 0 1-4.332.702c-.82-.195-1.639-.643-2.068-1.385a4.587 4.587 0 0 1-.586-2.38v-4.332h1.659v4.488c.039.975.663 1.951 1.62 2.244a4.991 4.991 0 0 0 3.687-.586c0-1.366-.02-3.414 0-6.146h1.678v9.23h.43v1.014z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sib);


/***/ }),

/***/ "Nr6d":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bpt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bpt = {
  symbol: 'bpt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.884-11.263c.02-.04.043-.076.063-.118a10.895 10.895 0 0 0-5.472-14.653V5.95c-.11-.049-.222-.084-.332-.13a9.252 9.252 0 0 0-.44-.17 7.744 7.744 0 0 0-.604-.197 10.34 10.34 0 0 0-1.469-.33A10.559 10.559 0 0 0 15.898 5c-.124 0-.248 0-.37.01a10.814 10.814 0 0 0-2.148.306 10.556 10.556 0 0 0-1.494.482 10.603 10.603 0 0 0-.936.426c-.197.103-.393.213-.59.327a7.59 7.59 0 0 0-.315.196 40.79 40.79 0 0 0-.574.393 12.45 12.45 0 0 0-.831.667 11.18 11.18 0 0 0-.755.745 10.595 10.595 0 0 0-.688.832 6.02 6.02 0 0 0-.273.393c-.067.098-.142.196-.207.29-.065.095-.098.176-.15.262-.07.118-.139.238-.196.36-.12.218-.234.438-.338.66a.34.34 0 0 0-.079.132 1.906 1.906 0 0 1-.064.167 10.451 10.451 0 0 0-.584 1.766 11.047 11.047 0 0 0-.293 2.074c0 .15-.012.3-.012.452 0 .196 0 .393.016.59 0 .155.017.31.031.465.018.197.045.394.073.59.014.142.047.3.067.45.037.197.084.393.133.59.044.146.07.281.109.423.059.196.127.405.196.605.045.128.09.256.14.382.08.196.17.405.263.603a9.464 9.464 0 0 0 .488.928c.069.118.137.234.21.348.112.175.232.346.354.515.088.124.179.246.273.366.095.12.244.293.37.436a9.447 9.447 0 0 0 .713.739 9.346 9.346 0 0 0 .8.684c.18.14.36.274.549.394.05.033.092.07.142.104a10.897 10.897 0 0 0 15.292-3.246h.012c.037-.059.067-.122.104-.183.08-.131.155-.269.232-.407.114-.186.22-.381.317-.58zm-14.056 4.5a10.13 10.13 0 0 1-2.816-1.893 8.744 8.744 0 0 1-.326-.318c-.106-.11-.224-.242-.33-.364s-.228-.263-.336-.393c-.109-.13-.17-.224-.252-.338-.112-.158-.224-.315-.326-.476-.067-.106-.13-.212-.197-.32-.102-.175-.197-.352-.295-.531-.055-.106-.104-.215-.155-.323-.077-.194-.16-.377-.234-.566-.045-.114-.085-.23-.126-.344a9.452 9.452 0 0 1-.185-.564c-.037-.128-.068-.254-.1-.38-.045-.184-.088-.37-.124-.554-.025-.145-.047-.273-.073-.409a10.262 10.262 0 0 1-.068-.55c-.014-.14-.022-.28-.03-.419 0-.187-.016-.373-.016-.56 0-.136 0-.271.012-.405 0-.197.022-.393.042-.59.011-.122.029-.246.045-.368a9.955 9.955 0 0 1 .179-.951c.055-.227.12-.452.196-.676.029-.092.06-.184.09-.275a10.198 10.198 0 0 1 .388-.962c.098-.212.197-.417.316-.62.061-.107.12-.215.185-.323a11.091 11.091 0 0 1 .582-.865 10.615 10.615 0 0 1 .635-.765c.142-.152.286-.302.433-.45a10.497 10.497 0 0 1 .757-.659c.087-.07.176-.135.267-.196.174-.132.352-.253.533-.366a11.112 11.112 0 0 1 .836-.48 11.651 11.651 0 0 1 .861-.393 9.842 9.842 0 0 1 1.8-.537 8.91 8.91 0 0 1 .566-.096c.123-.017.247-.033.372-.047.207-.021.414-.036.623-.045h.338c.215 0 .43.005.647.015l.336.024a9.427 9.427 0 0 1 .993.138 9.896 9.896 0 0 1 .994.241 9.174 9.174 0 0 1 .958.34 10.087 10.087 0 0 1 5.288 13.762c-.09.196-.197.37-.29.55-.07.122-.137.246-.21.366a10.146 10.146 0 0 1-12.783 3.933zm4.152-.825a8.428 8.428 0 0 0 8.412-8.422 8.418 8.418 0 1 0-8.412 8.422zm0-14.078v-.004a5.666 5.666 0 0 1 5.653 5.66 5.66 5.66 0 1 1-5.653-5.656z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#0f63d8" r="16"/><path d="M25.884 20.737a6.873 6.873 0 0 1-.317.58c-.077.138-.151.276-.232.407-.037.061-.067.124-.104.183h-.012a10.897 10.897 0 0 1-15.292 3.246c-.05-.034-.093-.071-.142-.104a6.998 6.998 0 0 1-.549-.394 9.346 9.346 0 0 1-.8-.684 9.664 9.664 0 0 1-.355-.346c-.124-.127-.232-.25-.358-.393a12.418 12.418 0 0 1-.37-.436 9.815 9.815 0 0 1-.273-.366 11.38 11.38 0 0 1-.354-.515c-.073-.114-.141-.23-.21-.348a9.464 9.464 0 0 1-.319-.576c-.059-.116-.114-.234-.169-.352a14.421 14.421 0 0 1-.263-.603c-.05-.126-.095-.254-.14-.382-.069-.2-.137-.409-.196-.605-.04-.142-.065-.277-.109-.423a10.418 10.418 0 0 1-.133-.59c-.02-.15-.053-.308-.067-.45a12.067 12.067 0 0 1-.073-.59c-.014-.155-.031-.31-.031-.466C5 16.334 5 16.137 5 15.94c0-.15.012-.3.012-.451a11.272 11.272 0 0 1 .096-1.04 11.047 11.047 0 0 1 .496-2.067c.085-.246.18-.49.285-.733.023-.055.05-.122.064-.167a.34.34 0 0 1 .08-.132c.103-.222.217-.442.337-.66.057-.122.126-.242.197-.36.05-.086.084-.167.15-.261.064-.095.139-.193.206-.291a6.02 6.02 0 0 1 .273-.393c.126-.17.257-.335.393-.496a11.18 11.18 0 0 1 .755-.808c.098-.092.195-.185.295-.273a16.295 16.295 0 0 1 .831-.667c.188-.13.38-.262.574-.393a7.59 7.59 0 0 1 .315-.196c.197-.114.393-.224.59-.327a10.603 10.603 0 0 1 1.378-.594 10.556 10.556 0 0 1 1.512-.417 12.126 12.126 0 0 1 1.016-.154c.222-.024.446-.04.672-.05.122-.01.246-.01.37-.01a10.353 10.353 0 0 1 1.065.042 10.559 10.559 0 0 1 1.707.29c.143.038.287.078.43.12.21.06.407.125.604.197.147.053.295.11.44.171.11.046.222.081.332.13v.016a10.895 10.895 0 0 1 5.472 14.653c-.02.042-.044.077-.063.118zm-14.056 4.5v-.002a10.146 10.146 0 0 0 12.784-3.933c.072-.12.14-.244.208-.366.094-.18.2-.354.291-.55a10.087 10.087 0 0 0-5.288-13.762 7.786 7.786 0 0 0-.393-.155 11.33 11.33 0 0 0-.958-.293 9.896 9.896 0 0 0-1.594-.271l-.336-.024c-.217-.01-.432-.015-.647-.015h-.338c-.209.009-.416.024-.623.045-.125.014-.249.03-.372.047a9.113 9.113 0 0 0-.989.19 9.313 9.313 0 0 0-.97.29c-.141.048-.277.1-.408.153a11.651 11.651 0 0 0-.86.393 11.112 11.112 0 0 0-.836.48 7.104 7.104 0 0 0-.533.366c-.09.061-.18.127-.268.196a10.497 10.497 0 0 0-.756.659c-.147.148-.291.298-.433.45a10.615 10.615 0 0 0-.635.765 11.091 11.091 0 0 0-.582.865c-.065.108-.124.216-.185.324-.12.202-.218.407-.316.62a10.198 10.198 0 0 0-.478 1.237 7.926 7.926 0 0 0-.267.991c-.043.21-.079.423-.108.635-.016.122-.034.246-.045.368-.02.197-.042.393-.042.59-.012.134-.012.27-.012.405 0 .187.016.373.016.56a10.262 10.262 0 0 0 .098.97c.026.135.048.263.073.408.036.185.079.37.124.555.032.125.063.251.1.379.055.19.118.377.185.564.041.114.08.23.126.344.075.189.157.372.234.566.051.108.1.217.155.323.098.179.193.356.295.53.067.109.13.215.197.321.102.161.214.318.326.476.083.114.143.208.252.338.108.13.23.271.336.393s.224.254.33.364c.106.11.189.188.326.318a8.352 8.352 0 0 0 .734.631 10.13 10.13 0 0 0 2.082 1.262zm4.152-.825a8.418 8.418 0 1 1 8.412-8.422 8.428 8.428 0 0 1-8.412 8.422zm0-14.078a5.66 5.66 0 1 0 5.653 5.656 5.666 5.666 0 0 0-5.653-5.66z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bpt);


/***/ }),

/***/ "NvwE":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/snm.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Snm = {
  symbol: 'snm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-5c6.068-.012 11-4.943 11-11S22.068 5.018 16 5C9.932 5.018 5 9.943 5 16s4.932 10.982 11 11zm9.755-9.25a10.003 10.003 0 0 1-.875 2.642c.037-.164.06-.328.06-.503 0-.6-.242-1.145-.63-1.55a1.11 1.11 0 0 0 1.445-.588zm-1.02.11h-.001zm.248-6.027a9.68 9.68 0 0 1 .924 4.173c0 .412-.03.812-.08 1.212a1.103 1.103 0 0 0-1.098-1.012c-.213 0-.407.067-.571.164a4.614 4.614 0 0 0 .825-4.537zm-.564 1.544a3.829 3.829 0 0 1-3.827 3.816 3.825 3.825 0 0 1-3.827-3.816 3.825 3.825 0 0 1 3.827-3.816 3.825 3.825 0 0 1 3.827 3.816zM20.44 19.89c0 .024.006.048 0 .085a4.65 4.65 0 0 0-1.604-2.284c.889.36 1.867.435 2.8.218a2.239 2.239 0 0 0-1.196 1.98zm.219 1.478a3.85 3.85 0 0 0-.05-.606c.208.484.577.88 1.046 1.12a.77.77 0 0 0-.17-.017c-.407 0-.778.23-.96.593a4.62 4.62 0 0 0 .134-1.09zm2.028-.067h.001c-.778 0-1.416-.63-1.416-1.411 0-.775.632-1.411 1.415-1.411s1.422.63 1.422 1.41a1.42 1.42 0 0 1-1.422 1.412zm.935-3.985h.001c0 .232.074.46.212.648a2.234 2.234 0 0 0-1.148-.315c-.103 0-.2.012-.298.024a4.82 4.82 0 0 0 1.373-.89c-.09.163-.138.346-.14.533zm-7.623-.6c-.619 0-1.208.127-1.749.339a4.632 4.632 0 0 0 1.75-2.92 4.621 4.621 0 0 0 1.748 2.92 4.662 4.662 0 0 0-1.749-.34zm0-6.173H16a2.23 2.23 0 0 0 1.197-.345A4.66 4.66 0 0 0 16 12.607a4.593 4.593 0 0 0-1.197-2.41 2.23 2.23 0 0 0 1.196.345zm2.272-2.265c0-.024-.005-.049 0-.073.164.412.565.703 1.033.703.018 0 .036-.006.06-.006a4.63 4.63 0 0 0-1.579.775 2.26 2.26 0 0 0 .486-1.399zm1.725-1.338c1.67.744 3.105 1.93 4.148 3.428a4.666 4.666 0 0 0-4.397-1.563c.403-.176.663-.573.662-1.011 0-.346-.164-.648-.413-.854zm-.698.309zm-2.612-1.133c.948.072 1.865.266 2.715.58a.671.671 0 0 0-.109-.011c-.583 0-1.057.454-1.1 1.024a2.263 2.263 0 0 0-1.506-1.593zm-2.12 2.162a1.434 1.434 0 0 1 2.867 0 1.434 1.434 0 0 1-2.866 0zm-1.973-1.581a10.088 10.088 0 0 1 2.715-.581A2.263 2.263 0 0 0 13.8 7.708a1.1 1.1 0 0 0-1.1-1.024.671.671 0 0 0-.108.012zm1.135 1.581c0 .509.173 1.002.492 1.4a4.685 4.685 0 0 0-1.579-.776c.018 0 .036.006.06.006.468 0 .87-.29 1.033-.703a.294.294 0 0 0-.006.073zm-1.579-.479a.554.554 0 0 1 1.106 0 .552.552 0 0 1-1.106 0zm-4.294 2.575a9.948 9.948 0 0 1 4.148-3.429 1.098 1.098 0 0 0 .25 1.866 4.647 4.647 0 0 0-4.397 1.563zm-.274 3.004c0-2.102 1.72-3.81 3.827-3.816a3.825 3.825 0 0 1 3.827 3.816 3.825 3.825 0 0 1-3.827 3.816 3.825 3.825 0 0 1-3.827-3.816zm3.979 6.512a2.25 2.25 0 0 0-1.203-1.987 4.657 4.657 0 0 0 2.8-.218 4.678 4.678 0 0 0-1.603 2.284c0-.024.006-.055.006-.08zm-3.183-2.575c0-.187-.05-.371-.146-.533.4.377.866.68 1.373.891a1.6 1.6 0 0 0-.298-.024 2.234 2.234 0 0 0-1.148.314c.143-.185.22-.413.219-.648zm-.486 2.575a1.41 1.41 0 0 1 1.415-1.412c.778 0 1.416.63 1.416 1.412a1.415 1.415 0 0 1-2.83 0zm2.448 1.993a2.242 2.242 0 0 0 1.039-1.127 5.008 5.008 0 0 0-.043.612c.001.367.046.733.134 1.09a1.075 1.075 0 0 0-.96-.594c-.06 0-.115.013-.17.019zm-4.173-4.67a9.79 9.79 0 0 1 .844-5.385 4.614 4.614 0 0 0 .826 4.537 1.099 1.099 0 0 0-.57-.164c-.578 0-1.051.448-1.1 1.011zm1.1-.449zM7.06 19.89c0 .175.023.339.06.503a9.807 9.807 0 0 1-.874-2.641 1.116 1.116 0 0 0 1.445.587 2.216 2.216 0 0 0-.631 1.55zm2.842 2.162c-.296.2-.473.534-.474.89 0 .261.098.491.25.68a10.005 10.005 0 0 1-1.896-2.09 2.245 2.245 0 0 0 2.12.52zm.085.89a.522.522 0 1 1 .523.521.522.522 0 0 1-.523-.52zm4.671 2.878a9.912 9.912 0 0 1-4.61-1.908 1.078 1.078 0 0 0 1.549-.969c0-.037-.012-.067-.012-.097a4.674 4.674 0 0 0 3.073 2.974zm5.163-4.452c0 2.102-1.713 3.81-3.821 3.816a3.823 3.823 0 0 1-3.82-3.816 3.82 3.82 0 0 1 7.64 0zm2.138 2.544a9.969 9.969 0 0 1-4.61 1.908 4.674 4.674 0 0 0 3.073-2.974.529.529 0 0 0-.012.097c-.002.37.189.717.504.914.315.197.71.218 1.045.055zm.055-.97a.522.522 0 1 1-.522-.52c.288 0 .522.233.522.52zm2.204-1.41a10.005 10.005 0 0 1-1.895 2.089 1.07 1.07 0 0 0 .25-.678 1.078 1.078 0 0 0-.475-.89 2.243 2.243 0 0 0 2.12-.521z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#0b1c26" r="16"/><path d="M16 27c-6.068-.018-11-4.943-11-11S9.932 5.018 16 5c6.068.018 11 4.943 11 11s-4.932 10.988-11 11zm9.755-9.25a1.115 1.115 0 0 1-1.446.588c.389.406.632.951.632 1.55 0 .176-.024.34-.06.504.412-.836.707-1.725.874-2.641zm-1.02.11a.552.552 0 1 0 .002-1.104.552.552 0 0 0-.003 1.104zm.248-6.027a4.614 4.614 0 0 1-.826 4.537 1.13 1.13 0 0 1 .572-.164c.577 0 1.05.442 1.099 1.012.049-.4.079-.8.079-1.212a9.68 9.68 0 0 0-.924-4.173zm-.564 1.544a3.825 3.825 0 0 0-3.827-3.816 3.825 3.825 0 0 0-3.827 3.816 3.825 3.825 0 0 0 3.827 3.816 3.829 3.829 0 0 0 3.827-3.816zM20.44 19.89c0-.83.46-1.593 1.197-1.98a4.657 4.657 0 0 1-2.8-.219 4.65 4.65 0 0 1 1.603 2.284c.006-.037 0-.061 0-.085zm.219 1.478a4.62 4.62 0 0 1-.134 1.09c.182-.363.553-.593.96-.593a.77.77 0 0 1 .17.018 2.263 2.263 0 0 1-1.045-1.12c.032.2.048.402.049.605zm2.028-.067a1.42 1.42 0 0 0 1.422-1.411c0-.781-.638-1.411-1.422-1.411s-1.415.636-1.415 1.41c0 .782.638 1.412 1.416 1.412zm.935-3.985c.002-.187.05-.37.14-.534a4.82 4.82 0 0 1-1.373.89c.098-.011.195-.023.298-.023a2.23 2.23 0 0 1 1.148.315 1.09 1.09 0 0 1-.212-.649zm-7.623-.6c.6 0 1.194.115 1.75.339a4.621 4.621 0 0 1-1.75-2.92 4.632 4.632 0 0 1-1.749 2.92 4.787 4.787 0 0 1 1.75-.34zm0-6.173a2.23 2.23 0 0 1-1.196-.345A4.593 4.593 0 0 1 16 12.607a4.66 4.66 0 0 1 1.197-2.41 2.23 2.23 0 0 1-1.197.345zm2.272-2.265c0 .507-.171 1-.486 1.4a4.63 4.63 0 0 1 1.58-.776c-.025 0-.043.006-.061.006-.468 0-.87-.29-1.033-.703-.005.024 0 .049 0 .073zm1.725-1.338c.25.206.413.508.413.854 0 .438-.26.835-.662 1.011a4.666 4.666 0 0 1 4.397 1.563 10.038 10.038 0 0 0-4.147-3.429zm-.698.309a.552.552 0 1 0-.003 1.104.552.552 0 0 0 .003-1.105zm-2.612-1.133a2.263 2.263 0 0 1 1.507 1.593 1.105 1.105 0 0 1 1.1-1.024.671.671 0 0 1 .108.012 10.042 10.042 0 0 0-2.715-.581zm-2.12 2.162a1.434 1.434 0 0 0 2.867 0 1.434 1.434 0 0 0-2.866 0zm-1.973-1.581a.671.671 0 0 1 .109-.012 1.1 1.1 0 0 1 1.1 1.024 2.263 2.263 0 0 1 1.506-1.593c-.948.072-1.86.266-2.715.581zm1.135 1.581a.294.294 0 0 1 .006-.073 1.112 1.112 0 0 1-1.032.703c-.025 0-.043-.006-.061-.006.57.156 1.107.42 1.58.775a2.23 2.23 0 0 1-.493-1.399zm-1.579-.479a.552.552 0 1 0 1.104-.001.552.552 0 0 0-1.104.001zm-4.294 2.575a4.647 4.647 0 0 1 4.397-1.563 1.1 1.1 0 0 1-.249-1.866 9.948 9.948 0 0 0-4.148 3.429zm-.274 3.004a3.825 3.825 0 0 0 3.827 3.816 3.825 3.825 0 0 0 3.827-3.816 3.825 3.825 0 0 0-3.827-3.816c-2.108.006-3.827 1.714-3.827 3.816zm3.979 6.512c0 .024-.006.055-.006.079a4.678 4.678 0 0 1 1.603-2.284 4.657 4.657 0 0 1-2.8.218 2.249 2.249 0 0 1 1.203 1.987zm-3.183-2.575c.001.235-.076.463-.219.648a2.234 2.234 0 0 1 1.148-.314c.1-.001.2.007.298.024a4.574 4.574 0 0 1-1.373-.89c.096.16.146.345.146.532zm-.486 2.575a1.415 1.415 0 0 0 2.83 0c0-.782-.637-1.412-1.415-1.412a1.41 1.41 0 0 0-1.415 1.412zm2.448 1.993c.055-.006.11-.019.17-.019.407.001.778.23.96.594a4.62 4.62 0 0 1-.134-1.09c.002-.205.016-.41.043-.612-.203.486-.57.885-1.039 1.127zm-4.173-4.67a1.108 1.108 0 0 1 1.1-1.012c.201.001.399.058.57.164a4.614 4.614 0 0 1-.826-4.537 9.79 9.79 0 0 0-.844 5.384zm1.1-.449a.552.552 0 1 0-.002 1.104.552.552 0 0 0 .002-1.104zM7.06 19.89c0-.58.226-1.136.631-1.55a1.116 1.116 0 0 1-1.446-.588c.17.932.463 1.817.875 2.64a2.256 2.256 0 0 1-.06-.502zm2.842 2.162a2.245 2.245 0 0 1-2.12-.521c.53.783 1.168 1.486 1.895 2.09a1.07 1.07 0 0 1-.249-.678c0-.357.178-.69.474-.89zm.085.89a.522.522 0 1 0 1.044 0 .522.522 0 0 0-1.044 0zm4.671 2.878a4.674 4.674 0 0 1-3.073-2.974c0 .03.012.06.012.097a1.079 1.079 0 0 1-1.549.97 9.912 9.912 0 0 0 4.61 1.907zm5.163-4.452a3.82 3.82 0 1 0-7.641 0A3.823 3.823 0 0 0 16 25.183a3.827 3.827 0 0 0 3.82-3.816zm2.138 2.544a1.08 1.08 0 0 1-1.045-.055 1.073 1.073 0 0 1-.504-.914.529.529 0 0 1 .012-.097 4.674 4.674 0 0 1-3.074 2.974 9.969 9.969 0 0 0 4.61-1.908zm.055-.97a.522.522 0 1 0-.523.522.526.526 0 0 0 .522-.521zm2.204-1.41a2.243 2.243 0 0 1-2.12.52c.296.2.474.534.474.89 0 .261-.097.491-.249.679a10.005 10.005 0 0 0 1.895-2.09z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Snm);


/***/ }),

/***/ "NzJr":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cdn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cdn = {
  symbol: 'cdn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-26l-1.66 3.016c-.188.328-.525.298-.863.115l-1.2-.607.894 4.633c.189.847-.415.847-.713.48L10.36 11.35l-.34 1.162c-.04.153-.212.313-.471.275l-2.65-.544.695 2.468c.15.549.266.776-.15.92l-.945.434 4.563 3.612a.575.575 0 0 1 .208.605l-.4 1.278c1.572-.177 2.98-.442 4.552-.606.139-.014.371.209.37.366L15.585 26h.764l-.12-4.67c-.001-.157.21-.39.348-.376 1.572.164 2.98.43 4.551.606l-.399-1.278a.574.574 0 0 1 .208-.605l4.563-3.612-.945-.433c-.416-.145-.3-.372-.15-.921l.696-2.468-2.651.544c-.259.038-.432-.122-.47-.275l-.341-1.162-2.097 2.288c-.298.366-.902.366-.713-.48l.895-4.634-1.201.607c-.338.183-.675.213-.863-.115z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f70808" r="16"/><path d="M16 6l-1.66 3.016c-.188.328-.525.298-.863.115l-1.2-.607.894 4.633c.189.847-.415.847-.713.48L10.36 11.35l-.34 1.162c-.04.153-.212.313-.471.275l-2.65-.544.695 2.468c.15.549.266.776-.15.92l-.945.434 4.563 3.612a.575.575 0 0 1 .208.605l-.4 1.278c1.572-.177 2.98-.442 4.552-.606.139-.014.371.209.37.366L15.585 26h.764l-.12-4.67c-.001-.157.21-.39.348-.376 1.572.164 2.98.43 4.551.606l-.399-1.278a.574.574 0 0 1 .208-.605l4.563-3.612-.945-.433c-.416-.145-.3-.372-.15-.921l.696-2.468-2.651.544c-.259.038-.432-.122-.47-.275l-.341-1.162-2.097 2.288c-.298.366-.902.366-.713-.48l.895-4.634-1.201.607c-.338.183-.675.213-.863-.115z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cdn);


/***/ }),

/***/ "O4h9":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/storm.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Storm = {
  symbol: 'storm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7-26l-12.03 8.25 6.077 3.875L9 26l13.302-9.208-5.994-3.875z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#080d98" r="16"/><path d="M23 6l-12.029 8.25 6.076 3.875L9 26l13.302-9.208-5.994-3.875z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Storm);


/***/ }),

/***/ "O772":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nio.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nio = {
  symbol: 'nio',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-18.236h4.822L16 5.5l-4.822 8.264H16zm.655 9.736H26.5l-4.919-8.44-2.41 4.131-2.516 4.309zm-3.825-4.309l-2.411-4.131L5.5 23.5h9.845l-2.515-4.309z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#70C9C9"/><path fill="#FFF" d="M16 13.764h-4.822L16 5.5l4.822 8.264H16zm.655 9.736l2.515-4.309 2.411-4.131L26.5 23.5h-9.845zm-3.825-4.309l2.515 4.309H5.5l4.919-8.44 2.41 4.131z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nio);


/***/ }),

/***/ "OB/m":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ric.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ric = {
  symbol: 'ric',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M10.144 20.024h-3.05a.093.093 0 0 0-.094.093v.637c0 .051.042.093.093.093h2.514a177.13 177.13 0 0 0-2 3.153h7.319c-1.909-.936-2.887-1.987-2.936-3.153h2.749a.093.093 0 0 0 .093-.093v-.637a.093.093 0 0 0-.093-.093h-2.631c.097-.364.252-.8.46-1.28h3.01a.093.093 0 0 0 .093-.093v-.636a.093.093 0 0 0-.093-.093h-2.624c1.52-3.012 4.687-7.038 8.405-7.038 2.368 0 2.412 2.103 3.59 2.103S27 12.673 27 12.073c0-.6-.746-2.788-3.543-2.788-4.655 0-6.57 3.564-8.811 3.564-1.9 0-2.75-1.645-2.75-2.604 0-1.435 1.63-2.925 2.377-2.97.279-.018.186-.275-.42-.275-1.306 0-3.543 1.68-3.543 3.062 0 2.542 2.145 3.473 3.45 3.473.66 0 .7.091.7.274 0 .12-.97 1.284-2.906 4.113H7.932a.093.093 0 0 0-.093.093v.636c0 .052.042.094.093.094h3.064c-.268.398-.552.824-.852 1.28zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#60e4dd" r="16"/><path d="M10.144 20.024c.3-.455.584-.881.852-1.28H7.932a.093.093 0 0 1-.093-.093v-.636c0-.051.042-.093.093-.093h3.622c1.937-2.829 2.905-3.994 2.905-4.113 0-.183-.04-.274-.7-.274-1.304 0-3.449-.931-3.449-3.473C10.31 8.679 12.547 7 13.853 7c.606 0 .699.257.42.274-.746.046-2.378 1.536-2.378 2.97 0 .96.852 2.605 2.75 2.605 2.242 0 4.157-3.564 8.812-3.564 2.797 0 3.543 2.188 3.543 2.788 0 .6-.873.914-2.051.914-1.178 0-1.222-2.103-3.59-2.103-3.718 0-6.884 4.026-8.405 7.038h2.624c.052 0 .093.042.093.093v.636a.093.093 0 0 1-.093.094h-3.01c-.208.48-.363.915-.46 1.28h2.63c.052 0 .094.04.094.092v.637a.093.093 0 0 1-.093.093H11.99c.049 1.166 1.027 2.217 2.936 3.153h-7.32a185.324 185.324 0 0 1 2-3.153H7.094A.093.093 0 0 1 7 20.754v-.637c0-.051.042-.093.093-.093z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ric);


/***/ }),

/***/ "OFf3":
/*!*************************************!*\
  !*** /node_modules/qs/lib/index.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Stringify = __webpack_require__(/*! ./stringify */ "SZfA");
var Parse = __webpack_require__(/*! ./parse */ "r1+p");

module.exports = {
    stringify: Stringify,
    parse: Parse
};


/***/ }),

/***/ "ORQW":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xpa.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xpa = {
  symbol: 'xpa',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.575-19.154l-8.11-2.324-2.774 4.725-3.222-3.737 1.46-.188 1.505 1.768 1.67-2.959-7.35-2.107a.586.586 0 0 0-.736.7L11.274 21.8l3.497-5.888 3.222 3.737-1.46.188-1.504-1.768-3.31 5.517.49 1.97a.59.59 0 0 0 .98.28l12.63-12.01a.58.58 0 0 0-.244-.98z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#4FA784"/><path fill="#FFF" d="M25.575 12.846l-8.11-2.324-2.774 4.725-3.222-3.737 1.46-.188 1.505 1.768 1.67-2.959-7.35-2.107a.586.586 0 0 0-.736.7L11.274 21.8l3.497-5.888 3.222 3.737-1.46.188-1.504-1.768-3.31 5.517.49 1.97a.59.59 0 0 0 .98.28l12.63-12.01a.58.58 0 0 0-.244-.98z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xpa);


/***/ }),

/***/ "OiQM":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nebl.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nebl = {
  symbol: 'nebl',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M11.29 8.162L7.823 10.06a2.93 2.93 0 0 0-.918.938 2.763 2.763 0 0 0-.405 1.436l.007 2.572L6.5 15v4.566c0 .53.155 1.038.432 1.478.259.41.625.76 1.075 1.007l6.486 3.566a3.13 3.13 0 0 0 1.562.382v-4.323l-.364-.2-4.416-2.428-.344-.203-.007-.198v-5.045l-3.647 2.005 3.647-2.005v-.4l4.756-2.622-.012-.012.023.013.364-.2V6a3.14 3.14 0 0 0-1.37.286l-3.402 1.87.007.005zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.36-18.34l-4.307 2.368v4.782l4.307-2.367V13.66zm5.14-1.226c0-.495-.135-.97-.379-1.39l-3.934 2.163v5.679l-.406.223v4.707l3.212-1.765a2.947 2.947 0 0 0 1.104-1.052 2.76 2.76 0 0 0 .403-1.434v-7.13zM23.993 9.95l-3.212-1.766-4.334 2.383 4.334 2.382.406.223v.036l3.934-2.163a2.94 2.94 0 0 0-1.128-1.095zm-7.938.431l.392.185 4.334-2.382-3.274-1.8a3.124 3.124 0 0 0-1.452-.382v4.38zm.028 11.311l-.028-.015V26a3.126 3.126 0 0 0 1.452-.382l3.222-1.772-4.282-2.354-.364.2zm4.698-2.582l-4.334 2.382 4.282 2.354.052-.029V19.11z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#50479E"/><path fill="#FFF" fill-rule="nonzero" d="M20.36 13.66v4.784l-4.307 2.367v-4.782l4.306-2.367zm5.14-1.226v7.131c0 .507-.14 1.003-.403 1.434-.26.43-.637.795-1.104 1.052l-3.212 1.765V19.11l.406-.223v-5.679l3.934-2.163c.244.42.379.895.379 1.39zM8.007 22.051a2.944 2.944 0 0 1-1.075-1.007 2.763 2.763 0 0 1-.432-1.478V15l4.424 3.455v.192l.007.198.344.203 4.416 2.428.364.2V26a3.13 3.13 0 0 1-1.562-.382L8.007 22.05zM7.823 10.06L12.5 7.5l3.18 3.08-4.756 2.623v.4L6.51 16.027l-.01-3.594c0-.507.14-1.005.405-1.436.232-.38.546-.7.918-.938zm16.17-.111a2.94 2.94 0 0 1 1.128 1.095l-3.934 2.163v-.036l-.406-.223-4.334-2.382 4.334-2.383 3.212 1.766zM6.51 16.029l4.414-2.427v4.853L6.51 16.028zm9.545-5.649V6a3.124 3.124 0 0 1 1.452.383l3.274 1.8-4.334 2.382-.392-.185zm-.364.2l-4.408-2.422 3.402-1.871A3.14 3.14 0 0 1 16.055 6v4.38l-.364.2zm.392 11.111l.364-.2 4.282 2.354-3.222 1.772a3.126 3.126 0 0 1-1.452.382v-4.323l.028.015zm4.698-2.582v4.707l-.052.029-4.282-2.354 4.334-2.382z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nebl);


/***/ }),

/***/ "Okoa":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cmt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cmt = {
  symbol: 'cmt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.276-6a10.152 10.152 0 0 0 3.937-.77c1.694-.69 3.111-1.743 4.219-3.186a9.784 9.784 0 0 0 1.99-4.799c.244-1.918-.089-3.736-.907-5.472-.594-1.26-1.448-2.338-2.504-3.26-1.427-1.244-3.09-2.012-4.957-2.35a10.126 10.126 0 0 0-4.145.11 10.305 10.305 0 0 0-4.115 1.974c-.254.202-.28.36-.092.626.124.176.268.34.412.502.305.342.441.348.8.068a8.264 8.264 0 0 1 2.403-1.31c1.645-.566 3.319-.667 5.023-.255 1.909.46 3.489 1.435 4.705 2.944 1.736 2.154 2.226 4.607 1.567 7.255-.525 2.11-1.78 3.76-3.618 4.947-1.533.989-3.23 1.43-5.075 1.366a8.564 8.564 0 0 1-4.823-1.646c-.609-.438-.606-.441-1.12.116l-.037.039c-.42.452-.405.659.088 1.02 1.854 1.363 3.93 2.075 6.249 2.08zm-.636-6.383c-.098-.006-.12-.013-.133-.007-.04.02-.079.044-.118.066-.47.263-.964.359-1.498.218-.201-.053-.255-.134-.136-.32.437-.686.59-1.447.552-2.242-.047-.992-.36-1.88-1.133-2.568a4.243 4.243 0 0 0-2.883-1.106c-.463-.003-.927.028-1.391.045-.195.007-.268-.07-.211-.262.075-.259.145-.52.211-.78.04-.156.127-.216.292-.217.737-.004 1.474-.014 2.211-.031.71-.017 1.362-.217 1.932-.647.482-.363.742-.83.704-1.436-.004-.074-.036-.172-.09-.207-.035-.024-.146.028-.2.073-.454.374-.97.632-1.556.662-.789.04-1.582.031-2.372.012-.527-.012-1.051-.091-1.578-.12-.358-.02-.603.139-.697.446-.43 1.4-.852 2.801-1.269 4.205-.058.194-.21.413.017.597.219.176.423.012.61-.074 1.268-.585 2.557-.63 3.875-.18 1.502.512 1.899 1.897 1.284 3.153-.136.278-.217.284-.489.122-.474-.283-.938-.589-1.434-.83-1.086-.526-2.221-.74-3.414-.39-.646.19-1.273.768-1.223 1.615.029.486.27.832.612 1.125.454.39.987.619 1.582.745 1.808.384 3.524.238 5.118-.762a.78.78 0 0 1 .382-.096c.345-.008.691.022 1.036.01.498-.015.91-.228 1.25-.583.055-.058.09-.134.157-.236zm-4.568.226c-.235.1-.464.225-.708.297-.952.282-1.9.272-2.834-.088a1.069 1.069 0 0 1-.264-.137c-.246-.188-.457-.403-.37-.748.08-.313.352-.382.624-.445.604-.141 1.181.004 1.736.207.544.198 1.067.458 1.597.693.072.032.136.083.203.124l.016.097z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#c1a05c" r="16"/><path d="M16.276 26c-2.319-.006-4.395-.718-6.249-2.08-.493-.362-.508-.57-.088-1.021l.038-.04c.513-.556.51-.553 1.119-.115a8.564 8.564 0 0 0 4.823 1.646c1.846.064 3.542-.377 5.075-1.366 1.839-1.186 3.093-2.838 3.618-4.947.659-2.648.169-5.1-1.567-7.255-1.216-1.51-2.796-2.483-4.705-2.944-1.704-.412-3.378-.311-5.023.255-.871.3-1.676.742-2.403 1.31-.359.28-.495.274-.8-.068a5.714 5.714 0 0 1-.412-.502c-.188-.266-.162-.424.092-.626a10.305 10.305 0 0 1 4.115-1.974 10.126 10.126 0 0 1 4.145-.11c1.868.338 3.53 1.106 4.957 2.35 1.056.922 1.91 2 2.504 3.26.818 1.736 1.151 3.554.906 5.472a9.784 9.784 0 0 1-1.99 4.8c-1.107 1.442-2.524 2.494-4.218 3.185a10.15 10.15 0 0 1-3.937.77zm-.636-6.383c-.067.102-.102.178-.158.236-.338.355-.751.568-1.249.584-.345.01-.691-.019-1.036-.011a.78.78 0 0 0-.382.096c-1.594 1-3.31 1.146-5.118.762-.595-.126-1.128-.355-1.582-.745-.342-.293-.583-.639-.612-1.125-.05-.847.577-1.425 1.223-1.614 1.193-.35 2.328-.137 3.414.39.496.24.96.546 1.434.83.272.161.353.155.489-.123.615-1.256.218-2.641-1.284-3.153-1.318-.45-2.607-.405-3.876.18-.186.086-.39.25-.609.074-.227-.184-.075-.403-.017-.597.417-1.404.84-2.805 1.269-4.205.094-.307.339-.465.697-.446.527.029 1.051.108 1.578.12.79.02 1.583.027 2.372-.012.587-.03 1.102-.288 1.555-.662.055-.045.166-.097.202-.073.053.035.085.133.09.207.037.606-.223 1.073-.705 1.436-.57.43-1.221.63-1.932.647-.737.017-1.474.027-2.21.03-.166.002-.254.062-.293.218-.066.26-.136.521-.211.78-.057.193.016.27.211.262.464-.017.928-.048 1.391-.045a4.246 4.246 0 0 1 2.883 1.106c.773.688 1.086 1.576 1.133 2.568.037.795-.115 1.556-.552 2.241-.119.187-.065.268.136.321.534.141 1.027.045 1.498-.218.04-.022.077-.047.118-.066.014-.006.035.001.133.007zm-4.568.226l-.016-.097c-.067-.041-.13-.092-.203-.124-.53-.235-1.053-.495-1.597-.693-.555-.203-1.132-.348-1.736-.207-.272.063-.544.132-.623.445-.088.345.123.56.369.748.077.059.172.101.264.137.934.36 1.882.37 2.834.088.244-.072.473-.197.708-.297z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cmt);


/***/ }),

/***/ "Olk0":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rads.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rads = {
  symbol: 'rads',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.47 7.661a3.808 3.808 0 1 0 0 7.617 3.808 3.808 0 0 0 0-7.617zm3.807 12.87a5.253 5.253 0 0 1 5.253-5.253 3.808 3.808 0 1 0-3.808-3.808c0 2.9-2.352 5.253-5.253 5.253a3.808 3.808 0 1 0 3.808 3.808zm5.253 3.808a3.808 3.808 0 1 0 .001-7.616 3.808 3.808 0 0 0 0 7.616zm0-2.66a1.148 1.148 0 1 1 0-2.296 1.148 1.148 0 0 1 0 2.296zm-9.06 0a1.148 1.148 0 1 1 0-2.296 1.148 1.148 0 0 1 0 2.296zm9.06-9.062a1.148 1.148 0 1 1 0-2.296 1.148 1.148 0 0 1 0 2.296zm-9.06 0a1.148 1.148 0 1 1 0-2.296 1.148 1.148 0 0 1 0 2.296z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#9d4bef" r="16"/><path d="M11.47 7.661a3.808 3.808 0 1 1 0 7.616 3.808 3.808 0 0 1 0-7.616zm3.807 12.87a3.808 3.808 0 1 1-3.808-3.808 5.253 5.253 0 0 0 5.253-5.253 3.808 3.808 0 1 1 3.808 3.808 5.253 5.253 0 0 0-5.252 5.253zm5.253 3.808a3.808 3.808 0 1 1 0-7.616 3.808 3.808 0 0 1 0 7.616zm0-2.66a1.148 1.148 0 1 0 0-2.296 1.148 1.148 0 0 0 0 2.296zm-9.06 0a1.148 1.148 0 1 0 0-2.296 1.148 1.148 0 0 0 0 2.296zm9.06-9.062a1.148 1.148 0 1 0 0-2.296 1.148 1.148 0 0 0 0 2.296zm-9.06 0a1.148 1.148 0 1 0 0-2.296 1.148 1.148 0 0 0 0 2.296z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rads);


/***/ }),

/***/ "OubD":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lkk.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lkk = {
  symbol: 'lkk',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.995-6L16 19.894 21.976 26v-3.656L16 16.24l-5.995 6.105V26zM5 13.633l2.531 2.606H16l-2.531-2.606H5zm22 0h-8.469V7.586L16 5v11.239h8.469L27 13.633z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#9D01EB"/><path fill="#FFF" fill-rule="nonzero" d="M10.005 26v-3.656L16 16.24l5.976 6.105V26L16 19.894 10.005 26zM5 13.633h8.469L16 16.24H7.531L5 13.633zm22 0l-2.531 2.606H16V5l2.531 2.586v6.047H27z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lkk);


/***/ }),

/***/ "OxVD":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/theta.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Theta = {
  symbol: 'theta',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10.96 6l-.96.993v18.014l.96.993h10.08l.96-.993V6.993L21.04 6zm.96 18.013V7.987h8.16v16.026zm7.134-5.17v-1.948h-6.058v1.949h2.087v2.262h1.884v-2.262zm0-5.582h-2.087v-2.263h-1.884v2.263h-2.087v1.948h6.058z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2ab8e6" r="16"/><path d="M10.96 6h10.08l.96.993v18.014l-.96.993H10.96l-.96-.993V6.993zm.96 18.013h8.16V7.987h-8.16zm7.134-5.17h-2.087v2.263h-1.884v-2.262h-2.087v-1.949h6.058zm0-5.582v1.948h-6.058v-1.948h2.087v-2.263h1.884v2.263z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Theta);


/***/ }),

/***/ "P2AB":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/qrl.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Qrl = {
  symbol: 'qrl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.628-10.791a.38.38 0 0 0-.372.384v1.152h-4.802l-.012-.731c2.761-2.002 3.946-5.618 2.93-8.938-1.018-3.32-4.003-5.576-7.378-5.576s-6.36 2.256-7.377 5.576c-1.017 3.32.168 6.936 2.93 8.938h.011l-.012.718H6.744V21.58c0-.212-.166-.384-.372-.384S6 21.368 6 21.58v1.908h6.279l.024-1.66a.397.397 0 0 0-.229-.36.244.244 0 0 0-.096-.098c-1.88-1.335-3.003-3.54-3-5.896 0-3.445 2.357-6.412 5.631-7.09 3.275-.677 6.558 1.122 7.847 4.301 1.289 3.18.225 6.854-2.542 8.784a.564.564 0 0 0-.084.087.376.376 0 0 0-.133.284l.024 1.66H26v-1.907a.38.38 0 0 0-.372-.384zm-4.958-5.176a6.934 6.934 0 0 0-.492-.57c.174-.18.338-.37.492-.57.828-1.052 1.08-1.981.72-2.625-.276-.483-.864-.743-1.717-.743a6.53 6.53 0 0 0-1.584.235c-.456-1.647-1.213-2.7-2.077-2.7s-1.62 1.053-2.089 2.688a6.53 6.53 0 0 0-1.584-.236c-.853 0-1.441.26-1.717.743-.36.644-.108 1.573.72 2.626.154.2.318.39.492.57-1.152 1.226-1.656 2.427-1.212 3.195.276.483.864.743 1.717.743a6.53 6.53 0 0 0 1.584-.235c.456 1.635 1.213 2.688 2.077 2.688s1.62-1.053 2.089-2.688a6.53 6.53 0 0 0 1.584.235c.853 0 1.441-.26 1.717-.743.36-.619.108-1.56-.72-2.613zm-.985-4.05c.469 0 1.08.087 1.309.508.252.458 0 1.214-.684 2.093-.144.173-.3.359-.468.532-.43-.408-.883-.788-1.357-1.139a14.46 14.46 0 0 0-.276-1.783 6.798 6.798 0 0 1 1.476-.211zm-2.64 5.338a10.79 10.79 0 0 1-1.045.557 15.667 15.667 0 0 1-2.04-1.214 19.313 19.313 0 0 1-.049-1.213c0-.421.012-.83.048-1.214.312-.223.636-.433.997-.644.338-.205.686-.391 1.044-.557.348.173.696.359 1.044.557.349.21.685.421.997.644.024.384.048.793.048 1.214 0 .42-.012.817-.048 1.214a15.74 15.74 0 0 1-.997.656zm.948-.037c-.06.47-.132.904-.216 1.313a10.38 10.38 0 0 1-1.213-.459c.24-.123.48-.26.72-.408.24-.149.469-.298.709-.446zm-2.533.854c-.396.176-.8.33-1.213.459a9.923 9.923 0 0 1-.216-1.313c.228.148.468.297.708.446zm-1.969-1.833c-.347-.265-.68-.55-.996-.854.314-.306.647-.591.996-.855-.012.285-.024.558-.024.855 0 .297.012.582.024.854zm.54-2.662c.06-.471.132-.905.216-1.313.413.127.818.28 1.213.458-.24.124-.48.26-.733.409a9.75 9.75 0 0 0-.696.446zm2.521-.855c.396-.176.8-.329 1.213-.458.101.432.173.87.216 1.313a36.506 36.506 0 0 0-.708-.446c-.24-.149-.48-.285-.72-.409zm1.981 1.82c.346.263.675.548.984.855-.3.285-.636.57-.984.855.012-.273.024-.558.024-.855 0-.297-.012-.57-.024-.854zm-2.521-5.077c.6 0 1.236.867 1.645 2.34-.562.177-1.111.392-1.645.643a13.146 13.146 0 0 0-1.645-.644c.409-1.472 1.033-2.34 1.645-2.34zm-4.982 2.96c.24-.421.84-.508 1.309-.508.498.01.994.081 1.476.21a14.572 14.572 0 0 0-.276 1.784c-.476.348-.93.728-1.357 1.138a9.449 9.449 0 0 1-.468-.545c-.696-.853-.948-1.621-.684-2.08zm1.309 6.44c-.469 0-1.08-.087-1.309-.508-.3-.545.108-1.535 1.14-2.638.428.415.886.796 1.369 1.14.055.6.147 1.195.276 1.782-.48.14-.977.215-1.476.224zm3.673 2.452c-.6 0-1.236-.867-1.645-2.34a13.32 13.32 0 0 0 1.645-.644 13.32 13.32 0 0 0 1.645.644c-.409 1.473-1.045 2.34-1.645 2.34zm4.982-2.96c-.24.421-.84.508-1.309.508a6.197 6.197 0 0 1-1.476-.21c.129-.588.22-1.184.276-1.784.476-.348.93-.729 1.357-1.14.168.174.324.36.468.533.684.88.936 1.647.684 2.093zm-4.982-4.78c-.966.006-1.745.819-1.74 1.816.004.997.79 1.802 1.756 1.8.966-.002 1.749-.811 1.749-1.808-.007-1-.795-1.808-1.765-1.808zm0 3.158c-.716 0-1.297-.599-1.297-1.338 0-.739.581-1.337 1.297-1.337s1.297.598 1.297 1.337c-.006.737-.583 1.332-1.297 1.338z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#252525" r="16"/><path d="M25.628 21.209a.38.38 0 0 1 .372.384V23.5h-6.279l-.024-1.66a.375.375 0 0 1 .133-.284.564.564 0 0 1 .084-.087c2.767-1.93 3.83-5.605 2.542-8.784-1.289-3.179-4.572-4.978-7.847-4.3-3.274.677-5.631 3.644-5.632 7.09-.002 2.355 1.12 4.56 3.001 5.895a.241.241 0 0 1 .096.099.397.397 0 0 1 .229.359l-.024 1.66H6V21.58c0-.212.167-.384.372-.384s.372.172.372.384v1.152h4.802l.012-.718h-.012c-2.761-2.002-3.946-5.618-2.93-8.938C9.635 9.756 12.62 7.5 15.995 7.5s6.36 2.256 7.377 5.576c1.017 3.32-.168 6.936-2.93 8.938l.013.73h4.802v-1.151a.38.38 0 0 1 .372-.384zm-4.958-5.176c.828 1.053 1.08 1.994.72 2.613-.276.483-.864.743-1.717.743a6.53 6.53 0 0 1-1.584-.235c-.468 1.635-1.225 2.688-2.089 2.688s-1.62-1.053-2.077-2.688a6.53 6.53 0 0 1-1.584.235c-.853 0-1.441-.26-1.717-.743-.444-.768.06-1.969 1.212-3.195a6.934 6.934 0 0 1-.492-.57c-.828-1.053-1.08-1.982-.72-2.626.276-.483.864-.743 1.717-.743a6.53 6.53 0 0 1 1.584.236c.468-1.635 1.225-2.688 2.089-2.688s1.62 1.053 2.077 2.7a6.53 6.53 0 0 1 1.584-.235c.853 0 1.441.26 1.717.743.36.644.108 1.573-.72 2.626a7.03 7.03 0 0 1-.492.57c.174.18.338.37.492.569zm-.985-4.05a6.798 6.798 0 0 0-1.476.21c.129.588.22 1.184.276 1.784.474.35.927.731 1.357 1.14.168-.174.324-.36.468-.533.684-.88.936-1.635.684-2.093-.228-.421-.84-.508-1.309-.508zm-2.64 5.338c.348-.21.684-.433.996-.656.036-.397.048-.793.048-1.214 0-.421-.024-.83-.048-1.214a15.667 15.667 0 0 0-.997-.644A21.38 21.38 0 0 0 16 13.036c-.358.166-.706.352-1.044.557-.36.21-.685.421-.997.644-.036.384-.048.793-.048 1.214 0 .42.024.83.048 1.214A15.667 15.667 0 0 0 16 17.878c.358-.166.706-.352 1.044-.557zm.948-.037c-.24.148-.468.297-.708.446-.24.148-.48.285-.72.408.394.178.799.331 1.212.459.084-.409.156-.843.216-1.313zm-2.533.854l-.72-.408c-.24-.149-.48-.298-.709-.446.043.442.115.88.216 1.313.412-.13.817-.283 1.213-.459zm-1.969-1.833a19.183 19.183 0 0 1-.024-.854c0-.297.012-.57.024-.855-.349.264-.682.549-.996.855.316.303.649.589.996.854zm.54-2.662a9.75 9.75 0 0 1 .696-.446c.253-.149.493-.285.733-.409-.395-.178-.8-.33-1.213-.458-.084.408-.156.842-.216 1.313zm2.521-.855c.24.124.48.26.72.409.24.148.48.297.709.446a9.923 9.923 0 0 0-.216-1.313c-.412.13-.817.282-1.213.458zm1.981 1.82c.012.286.024.558.024.855 0 .297-.012.582-.024.855.348-.285.684-.57.984-.855a9.765 9.765 0 0 0-.984-.854zm-2.521-5.077c-.612 0-1.236.867-1.645 2.34.562.177 1.111.392 1.645.643a13.145 13.145 0 0 1 1.645-.642c-.409-1.474-1.045-2.341-1.645-2.341zm-4.982 2.96c-.264.458-.012 1.226.684 2.08.144.185.3.358.468.544.428-.41.88-.79 1.357-1.138.055-.6.147-1.196.276-1.783-.482-.13-.978-.2-1.476-.211-.469 0-1.069.087-1.309.508zm1.309 6.44c.499-.01.995-.085 1.476-.224a14.572 14.572 0 0 1-.276-1.782c-.483-.344-.94-.725-1.369-1.14-1.032 1.103-1.44 2.093-1.14 2.638.228.421.84.508 1.309.508zm3.673 2.452c.6 0 1.236-.867 1.645-2.34a13.146 13.146 0 0 1-1.645-.644 13.32 13.32 0 0 1-1.645.644c.409 1.473 1.045 2.34 1.645 2.34zm4.982-2.96c.252-.446 0-1.213-.684-2.093a9.288 9.288 0 0 0-.468-.532c-.428.41-.88.79-1.357 1.14a14.518 14.518 0 0 1-.276 1.783c.482.129.978.2 1.476.21.469 0 1.069-.087 1.309-.508zm-4.982-4.78c.97 0 1.758.807 1.765 1.808 0 .997-.783 1.806-1.749 1.808-.966.002-1.752-.803-1.757-1.8-.004-.997.775-1.81 1.741-1.816zm0 3.158c.714-.006 1.291-.601 1.297-1.338 0-.739-.58-1.337-1.297-1.337s-1.297.598-1.297 1.337.581 1.338 1.297 1.338z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Qrl);


/***/ }),

/***/ "POvy":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/iq.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Iq = {
  symbol: 'iq',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.17-21.88a7.62 7.62 0 0 1 2-5.12c.35-.35.39-.42.39-.7 0-.28 0-.3-.21-.3a5.63 5.63 0 0 0-.77.14 12.1 12.1 0 0 0-7.29 5.07 11.28 11.28 0 0 0-1.7 4 14.07 14.07 0 0 0-.18 4 11.67 11.67 0 0 0 4.16 7.57c1.23 1 2.61 1.8 2.61 1.44a1.43 1.43 0 0 0-.32-.41 6.34 6.34 0 0 1-1.59-5.09 7.27 7.27 0 0 1 3.4-5.6 5.58 5.58 0 0 1 .77-.46c.15 0 .06-.3-.31-1a6.91 6.91 0 0 1-.96-3.54zm15.51 3.12a12 12 0 0 0-6.08-8.16c-.56-.31-.84-.38-.84-.19a1.4 1.4 0 0 0 .24.44 5.5 5.5 0 0 1 1 3 4 4 0 0 1-1 3.12 1.08 1.08 0 0 1-1.51.06c-.4-.29-.4-.49-.15-.86A4.36 4.36 0 0 0 19.75 8a2.55 2.55 0 0 0-.74-2.07 1.93 1.93 0 0 0-1.94-.51 3.17 3.17 0 0 0-1.92 2.3 9.15 9.15 0 0 0-.4 2.28 7.41 7.41 0 0 0 .85 3.4 6.92 6.92 0 0 0 1.41 1.6c.11.072.207.16.29.26a.88.88 0 0 1-.33.17 6.41 6.41 0 0 0-3.32 3.71 7.15 7.15 0 0 0-.48 2.95 3.43 3.43 0 0 0 1 2.57 3.32 3.32 0 0 0 2.8.75 5.27 5.27 0 0 0 3.46-1.66c.41-.44.49-.49.57-.39.08.1.06.16-.09.41a7.5 7.5 0 0 1-4.27 3.38c-.35.09-.5.16-.5.24 0 .26 2.19-.1 3.52-.57a12.1 12.1 0 0 0 7.3-7.46 9.43 9.43 0 0 0 .55-3.72 9.47 9.47 0 0 0-.17-2.4z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#5DF"/><path d="M11.83 10.12a7.62 7.62 0 0 1 2-5.12c.35-.35.39-.42.39-.7 0-.28 0-.3-.21-.3a5.63 5.63 0 0 0-.77.14 12.1 12.1 0 0 0-7.29 5.07 11.28 11.28 0 0 0-1.7 4 14.07 14.07 0 0 0-.18 4 11.67 11.67 0 0 0 4.16 7.57c1.23 1 2.61 1.8 2.61 1.44a1.43 1.43 0 0 0-.32-.41 6.34 6.34 0 0 1-1.59-5.09 7.27 7.27 0 0 1 3.4-5.6 5.58 5.58 0 0 1 .77-.46c.15 0 .06-.3-.31-1a6.91 6.91 0 0 1-.96-3.54zm15.51 3.12a12 12 0 0 0-6.08-8.16c-.56-.31-.84-.38-.84-.19a1.4 1.4 0 0 0 .24.44 5.5 5.5 0 0 1 1 3 4 4 0 0 1-1 3.12 1.08 1.08 0 0 1-1.51.06c-.4-.29-.4-.49-.15-.86A4.36 4.36 0 0 0 19.75 8a2.55 2.55 0 0 0-.74-2.07 1.93 1.93 0 0 0-1.94-.51 3.17 3.17 0 0 0-1.92 2.3 9.15 9.15 0 0 0-.4 2.28 7.41 7.41 0 0 0 .85 3.4 6.92 6.92 0 0 0 1.41 1.6c.11.072.207.16.29.26a.88.88 0 0 1-.33.17 6.41 6.41 0 0 0-3.32 3.71 7.15 7.15 0 0 0-.48 2.95 3.43 3.43 0 0 0 1 2.57 3.32 3.32 0 0 0 2.8.75 5.27 5.27 0 0 0 3.46-1.66c.41-.44.49-.49.57-.39.08.1.06.16-.09.41a7.5 7.5 0 0 1-4.27 3.38c-.35.09-.5.16-.5.24 0 .26 2.19-.1 3.52-.57a12.1 12.1 0 0 0 7.3-7.46 9.43 9.43 0 0 0 .55-3.72 9.47 9.47 0 0 0-.17-2.4z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Iq);


/***/ }),

/***/ "PQ6C":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mth.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mth = {
  symbol: 'mth',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9-12.101V9.559c-2.025-1.133-4.615-.46-5.784 1.5l-3.219 5.4-3.213-5.39C11.615 9.107 9.025 8.435 7 9.568v10.33C7 22.165 8.896 24 11.234 24v-7.33l1.23 2.063c.505.74.977 1.166 1.416 1.277l.22.123a4.33 4.33 0 0 0 1.9.435 4.267 4.267 0 0 0 3.536-1.844l1.229-2.06V24c2.339 0 4.234-1.836 4.234-4.101z"/><path d="M7 9.568l4.234 7.103V24C8.896 24 7 22.164 7 19.899z" fill-opacity=".5"/><path d="M20.765 16.663l4.232-7.099h.002V19.9C25 22.164 23.104 24 20.765 24z" fill-opacity=".4"/><path d="M15.997 16.458L13.88 20.01c-.439-.11-.911-.536-1.416-1.277L7 9.568c2.025-1.133 4.615-.46 5.784 1.5z" fill-opacity=".198"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#104fca" r="16"/><g fill="#fff"><path d="M7 9.568l4.234 7.103V24C8.896 24 7 22.164 7 19.899z" fill-opacity=".5"/><path d="M20.765 16.663l4.232-7.099h.002V19.9C25 22.164 23.104 24 20.765 24z" fill-opacity=".6"/><path d="M15.997 16.458L13.88 20.01c-.439-.11-.911-.536-1.416-1.277L7 9.568c2.025-1.133 4.615-.46 5.784 1.5z" fill-opacity=".8"/><path d="M19.216 11.06C20.385 9.098 22.975 8.426 25 9.559l-5.464 9.165A4.267 4.267 0 0 1 16 20.568a4.33 4.33 0 0 1-1.9-.435l-.22-.123z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mth);


/***/ }),

/***/ "PcHZ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mda.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mda = {
  symbol: 'mda',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.663-24.008C19.419 6.636 17.879 6 16.013 6c-1.891 0-3.432.636-4.675 1.936C10.095 9.21 9.5 10.841 9.5 12.805c0 1.936.622 3.569 1.865 4.869.973 1.023 2.135 1.632 3.46 1.853v1.162h-2.73v1.245h2.756v.664h-2.756v1.161h2.73V26h2.35v-2.24h2.757v-1.162h-2.784v-.664h2.784v-1.245h-2.756v-1.134c1.351-.222 2.513-.83 3.486-1.854 1.217-1.3 1.838-2.932 1.838-4.868 0-1.91-.621-3.541-1.837-4.841zm-2.541 7.386c-.514.664-1.243.996-2.108.996-.838 0-1.54-.332-2.081-.996s-.812-1.522-.812-2.6c0-1.052.27-1.882.812-2.545.54-.664 1.243-.996 2.08-.996.812 0 1.514.332 2.055 1.023.567.664.838 1.522.838 2.545 0 1.051-.27 1.909-.784 2.573z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#01a64f" r="16"/><path d="M20.663 7.992c1.216 1.3 1.837 2.932 1.837 4.84 0 1.937-.621 3.57-1.838 4.87-.973 1.023-2.135 1.631-3.486 1.853v1.134h2.756v1.245h-2.784v.664h2.784v1.161h-2.756V26h-2.352v-2.24h-2.73v-1.162h2.757v-.664h-2.756v-1.245h2.73v-1.162c-1.325-.221-2.487-.83-3.46-1.853-1.243-1.3-1.865-2.933-1.865-4.869 0-1.964.595-3.596 1.838-4.869C12.58 6.636 14.122 6 16.014 6c1.865 0 3.405.636 4.649 1.992zm-2.541 7.386c.513-.664.784-1.522.784-2.573 0-1.023-.27-1.88-.838-2.545-.54-.691-1.243-1.023-2.054-1.023-.838 0-1.54.332-2.081.996-.542.664-.812 1.493-.812 2.545 0 1.078.271 1.936.812 2.6s1.243.996 2.08.996c.866 0 1.595-.332 2.109-.996z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mda);


/***/ }),

/***/ "PeKf":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/spnk.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Spnk = {
  symbol: 'spnk',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-7.541-9.859l.785 2.53 1.412-.425-.044-.143 1.499 2.189 1.224-.814-.104-.15L15.328 27l.93-1.13-.161-.128 2.54.96.529-1.358-.135-.05 2.654.182.103-1.45-.205-.015 2.652-.603-.333-1.417-.24.055 2.398-1.365-.738-1.26-.23.132L27 17.537l-1.08-.992-.18.19 1.23-2.482-1.328-.638-.107.218.436-2.712-1.459-.228-.03.19-.43-2.672-1.458.228.01.065L21.46 6.39l-1.327.638.038.076-1.786-1.886-1.08.992.09.094L15.101 5l-.738 1.26.165.094-2.629-.598-.332 1.417.249.056-2.752.19.102 1.45.308-.02-2.629.994.53 1.358.28-.107-2.2 1.756.929 1.13.145-.116L5 16.098l1.224.813.098-.144-.797 2.57 1.411.426.046-.148v2.667H8.46zm0-1.728v-2.43h-.97l.723-2.331-.933-.282 1.385-2.023-.811-.539 1.922-1.533-.616-.75 2.289-.865-.36-.923 2.432-.167-.07-.969 2.37.539.217-.928 2.105 1.197.476-.812 1.663 1.757.69-.633 1.074 2.17.846-.406.386 2.4.939-.147-.386 2.401.982.154-1.083 2.186.898.432-1.683 1.778.73.67-2.13 1.212.494.844-2.387.543.219.935-2.436-.168-.066.94-2.276-.861-.338.867-1.888-1.507-.609.74-1.362-1.99-.798.53-.716-2.309zm7.25-2.725a.93.93 0 0 1-.389.793c-.26.186-.62.279-1.082.279-1.243 0-1.865-.522-1.865-1.565h-1.95c0 .61.156 1.147.467 1.61.315.463.77.83 1.366 1.098a4.838 4.838 0 0 0 1.982.396c1.045 0 1.876-.232 2.494-.695.617-.468.926-1.11.926-1.929 0-.735-.252-1.35-.758-1.844-.505-.493-1.31-.907-2.416-1.24-.6-.182-1.055-.377-1.366-.584-.307-.208-.46-.466-.46-.773 0-.329.132-.593.395-.792.263-.204.633-.305 1.108-.305.492 0 .874.12 1.146.363.272.238.408.574.408 1.007h1.943a2.7 2.7 0 0 0-.44-1.52 2.826 2.826 0 0 0-1.224-1.032c-.527-.247-1.127-.37-1.801-.37-.67 0-1.274.112-1.814.337-.535.225-.947.54-1.237.942a2.284 2.284 0 0 0-.427 1.364c0 .982.535 1.764 1.606 2.344.393.212.926.428 1.6.649.674.216 1.14.424 1.399.623.26.195.389.476.389.844zm5.93-5.798l-2.249-.32-1.167 7.064 1.543.108zm-1.634 7.566l-2.068-.5-.471 2.322 2.052.599z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ff3b81" r="16"/><path d="M8.459 22.141v.141H6.982v-2.667l-.046.148-1.411-.426.797-2.57-.098.144L5 16.098l1.53-2.234-.146.116-.93-1.13 2.201-1.756-.28.107-.53-1.358 2.629-.994-.308.02-.102-1.45 2.752-.19-.249-.056.332-1.417 2.63.598-.166-.094L15.1 5l2.293 1.304-.09-.094 1.08-.992 1.786 1.886-.038-.076 1.327-.638 1.146 2.314-.01-.065 1.457-.228.43 2.673.03-.19 1.459.227-.436 2.712.107-.218 1.327.638-1.228 2.481.18-.19 1.079.993-1.909 2.016.231-.131.738 1.26-2.399 1.364.241-.055.333 1.417-2.652.603.205.014-.103 1.451-2.654-.183.135.051-.53 1.358-2.54-.96.161.128-.929 1.13-2.097-1.673.104.151-1.224.814-1.5-2.19.045.144-1.412.426zm0-1.728l.922-.278.716 2.31.798-.53 1.362 1.99.609-.74 1.888 1.506.338-.867 2.276.86.066-.939 2.436.168-.22-.935 2.388-.543-.495-.844 2.131-1.212-.73-.67 1.683-1.778-.898-.432 1.083-2.186-.982-.154.386-2.4-.94.146-.385-2.4-.846.406-1.075-2.17-.69.633-1.662-1.757-.476.812-2.105-1.197-.218.928-2.368-.539.069.969-2.431.167.359.923-2.29.866.617.749-1.922 1.533.811.539L7.28 15.37l.933.282-.723 2.331h.97zm7.25-2.725c0-.368-.13-.649-.389-.844-.26-.199-.725-.407-1.399-.623-.674-.22-1.207-.437-1.6-.65-1.07-.58-1.606-1.36-1.606-2.343 0-.511.142-.966.427-1.364.29-.403.702-.717 1.237-.942.54-.225 1.145-.337 1.814-.337.674 0 1.274.123 1.8.37.527.242.935.586 1.225 1.032a2.7 2.7 0 0 1 .44 1.52h-1.943c0-.433-.136-.769-.408-1.007-.272-.242-.654-.363-1.146-.363-.475 0-.845.101-1.108.305a.945.945 0 0 0-.395.792c0 .307.153.565.46.773.31.207.766.402 1.366.584 1.106.333 1.911.747 2.416 1.24.506.494.758 1.109.758 1.844 0 .819-.309 1.461-.926 1.929-.618.463-1.449.695-2.494.695a4.838 4.838 0 0 1-1.982-.396c-.595-.269-1.051-.635-1.366-1.098-.311-.463-.467-1-.467-1.61h1.95c0 1.043.622 1.565 1.865 1.565.462 0 .823-.093 1.082-.28a.928.928 0 0 0 .389-.792zm5.93-5.798l-1.873 6.852-1.543-.108 1.167-7.064zm-1.634 7.566l-.487 2.421-2.052-.599.471-2.322z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Spnk);


/***/ }),

/***/ "Pu1o":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/payx.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Payx = {
  symbol: 'payx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.313-21.938h.032c2.875.063 5.75-.062 8.625.063.718 0 1.562.344 1.718 1.094.25 1.75-1.218 3.344-2.812 3.75-1.75.281-3.5.187-5.219.187a923.905 923.905 0 0 1-1.25 3.063c2.094 0 4.188.093 6.25-.219a8.712 8.712 0 0 0 6.344-5.688c.5-1.312.719-2.968-.281-4.124C24.25 7.125 22.75 7.125 21.5 7.03L12.937 7l-1.25 3.063zM8 10.906v.031l-1.375 3.438h10.188l1.343-3.469H8zm1.625 4.25h.031L6 24.531h3.469l3.687-9.375H9.625z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#630"/><g fill="#FFF"><path d="M11.688 10.063L12.938 7l8.562.031c1.25.094 2.75.094 3.594 1.157 1 1.156.781 2.812.281 4.124A8.712 8.712 0 0 1 19.031 18c-2.062.313-4.156.219-6.25.219.417-1.017.834-2.038 1.25-3.063 1.719 0 3.469.094 5.219-.187 1.594-.406 3.063-2 2.813-3.75-.157-.75-1-1.094-1.72-1.094-2.874-.125-5.75 0-8.624-.063h-.031z"/><path d="M8 10.906h10.156l-1.343 3.469H6.624L8 10.937v-.03zm1.625 4.25h3.531L9.47 24.531H6l3.656-9.375h-.031z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Payx);


/***/ }),

/***/ "Q1K/":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/atm.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Atm = {
  symbol: 'atm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M20.167 18.702a4.369 4.369 0 0 0 1.586-5.783L18.53 6.857a4.369 4.369 0 0 0-5.909-1.806l-.124.066a4.369 4.369 0 0 0-1.806 5.908l.956 1.798c.072-.044.145-.086.22-.126l.124-.066a4.369 4.369 0 0 1 5.909 1.806zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.167-13.298a4.438 4.438 0 0 1-.22.126l-.124.065a4.369 4.369 0 0 1-5.909-1.806l-2.267-4.264a4.369 4.369 0 0 0-1.586 5.782l3.222 6.06a4.369 4.369 0 0 0 5.908 1.806l.124-.066a4.369 4.369 0 0 0 1.807-5.908z" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#346fce" r="16"/><path d="M20.16 18.706l.956 1.797a4.369 4.369 0 0 1-1.806 5.908l-.124.066a4.369 4.369 0 0 1-5.909-1.806l-3.223-6.062a4.369 4.369 0 0 1 1.592-5.787l-.956-1.797a4.369 4.369 0 0 1 1.807-5.908l.124-.066a4.369 4.369 0 0 1 5.908 1.806l3.223 6.062a4.369 4.369 0 0 1-1.591 5.787zm0 0l-2.267-4.265a4.369 4.369 0 0 0-5.908-1.806l-.124.065c-.073.04-.145.08-.215.122l2.268 4.265a4.369 4.369 0 0 0 5.908 1.806l.124-.065c.073-.04.145-.08.215-.122z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Atm);


/***/ }),

/***/ "QJnu":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/amp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Amp = {
  symbol: 'amp',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8.303 11.957c-.927 0-1.51.446-1.746 1.337-.036.273-.023.55.041.832.064.282.173.537.327.764.155.227.355.405.6.532.246.127.542.182.887.164a3.57 3.57 0 0 1 2.51 1.118 3.42 3.42 0 0 1 1.037 2.51c0 .51.177.942.532 1.297.355.354.787.532 1.296.532.49 0 .914-.178 1.268-.532.355-.355.532-.787.532-1.296a1.75 1.75 0 0 0-.504-1.242 1.71 1.71 0 0 0-1.214-.56c-.964.019-1.837-.318-2.62-1.009-.709-.69-1.082-1.555-1.118-2.592-.036-1 .318-1.873 1.064-2.62.746-.745 1.637-1.1 2.674-1.063a1.71 1.71 0 0 0 1.214-.56 1.78 1.78 0 0 0 .504-1.268c0-.491-.177-.914-.532-1.269a1.732 1.732 0 0 0-1.268-.532c-.51 0-.941.177-1.296.532a1.732 1.732 0 0 0-.532 1.269c0 .964-.346 1.819-1.037 2.565-.71.709-1.546 1.073-2.51 1.091h-.109zm.025 5.457c-.51 0-.941.178-1.296.532a1.732 1.732 0 0 0-.532 1.269c0 .528.186.969.56 1.323a1.79 1.79 0 0 0 1.35.505 3.57 3.57 0 0 1 2.51 1.119c.69.691 1.036 1.537 1.036 2.537 0 .491.173.914.519 1.269.345.355.764.532 1.255.532h.054c.491 0 .914-.177 1.269-.532.355-.355.532-.778.532-1.269 0-1 .345-1.846 1.037-2.537.672-.71 1.518-1.083 2.537-1.119h.082c.909 0 1.49-.455 1.746-1.364.127-.546.018-1.064-.328-1.555-.345-.51-.846-.746-1.5-.71-.982-.018-1.828-.382-2.537-1.091-.671-.724-1.017-1.551-1.036-2.48l.001-.085c0-.983.346-1.82 1.037-2.51a3.57 3.57 0 0 1 2.51-1.12c1.037-.017 1.919.337 2.646 1.065.746.764 1.11 1.646 1.092 2.646.018.492.204.905.559 1.242a1.78 1.78 0 0 0 1.268.505c.492 0 .914-.178 1.27-.532.354-.355.531-.787.531-1.296 0-.51-.19-.942-.573-1.296-.382-.355-.818-.523-1.31-.505-.981-.018-1.827-.382-2.537-1.091-.69-.746-1.036-1.601-1.036-2.565v-.218c0-.019-.01-.037-.028-.055v-.082c0-.018-.009-.036-.027-.054V7.81l-.027-.028v-.054l-.014-.014c-.009-.009-.013-.022-.013-.04v-.028c-.019 0-.028-.018-.028-.055l-.027-.027-.014-.014c-.009-.009-.013-.022-.013-.04v-.028c-.018 0-.028-.009-.028-.027l-.013-.014c-.01-.009-.014-.022-.014-.04h-.027v-.028l-.027-.027V7.29l-.028-.027-.027-.027-.014-.014c-.009-.009-.013-.023-.013-.04l-.027-.028c-.019 0-.028-.01-.028-.027l-.013-.014c-.01-.01-.014-.023-.014-.041h-.027v-.027c-.019 0-.028-.01-.028-.027l-.027-.028c-.018 0-.036-.009-.054-.027l-.028-.027h-.027v-.028c-.018 0-.027-.009-.027-.027-.037 0-.055-.01-.055-.027h-.027v-.028l-.028-.027c-.036 0-.054-.009-.054-.027h-.027l-.028-.027c-.018 0-.031-.005-.04-.014a4.615 4.615 0 0 0-.014-.014l-.027-.027h-.028v-.027h-.054l-.028-.028c-.018 0-.036-.009-.054-.027h-.055l-.027-.027h-.055l-.027-.027h-.054c-.019 0-.032-.005-.041-.014l-.014-.014h-.054c-.019 0-.032-.004-.041-.013l-.014-.014h-.573c0 .018-.009.027-.027.027h-.082l-.027.028h-.082l-.027.027h-.055l-.027.027h-.055v.027h-.054l-.028.028h-.027v.027h-.055l-.027.027h-.027c0 .019-.01.028-.027.028-.019 0-.028.009-.028.027h-.027l-.027.027-.028.027c-.018 0-.027.01-.027.028h-.054v.027l-.028.027c-.018 0-.027.01-.027.028h-.055l-.027.027c0 .018-.009.027-.027.027v.028h-.027v.027l-.028.027c-.018 0-.027.01-.027.027l-.027.028-.028.027a1.666 1.666 0 0 0-.409 1.091c.018 1.019-.345 1.901-1.091 2.647-.7.699-1.518 1.054-2.457 1.066a2.055 2.055 0 0 0-.143 0l-.046-.002c-.04.003-.08.007-.12.013a1.746 1.746 0 0 0-1.07.52 1.732 1.732 0 0 0-.532 1.268c0 .491.169.914.505 1.269a1.71 1.71 0 0 0 1.302.559h.024c.954.008 1.79.354 2.507 1.037a3.458 3.458 0 0 1 1.119 2.538c.018 1.018-.337 1.891-1.064 2.619-.71.727-1.555 1.091-2.537 1.091h-.082c-1 0-1.856-.364-2.565-1.091-.71-.746-1.055-1.619-1.036-2.62a1.757 1.757 0 0 0-.56-1.227 1.723 1.723 0 0 0-1.241-.519z" fill-rule="evenodd" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2DAEE4"/><path fill="#FFF" d="M8.303 11.957h.11c.963-.018 1.8-.382 2.51-1.091.69-.746 1.036-1.601 1.036-2.565 0-.491.177-.914.532-1.269a1.764 1.764 0 0 1 1.296-.532c.49 0 .914.177 1.268.532.355.355.532.778.532 1.269 0 .49-.168.914-.504 1.269a1.71 1.71 0 0 1-1.214.559c-1.037-.037-1.928.318-2.674 1.064s-1.1 1.619-1.064 2.62c.036 1.036.41 1.9 1.119 2.591.782.691 1.655 1.028 2.619 1.01a1.71 1.71 0 0 1 1.214.56c.336.354.504.768.504 1.24 0 .51-.177.942-.532 1.297a1.732 1.732 0 0 1-1.268.532c-.51 0-.941-.178-1.296-.532a1.764 1.764 0 0 1-.532-1.296 3.42 3.42 0 0 0-1.037-2.51 3.57 3.57 0 0 0-2.51-1.12c-.345.019-.64-.036-.886-.163a1.61 1.61 0 0 1-.6-.532 2.21 2.21 0 0 1-.328-.764 2.344 2.344 0 0 1-.04-.832c.236-.891.818-1.337 1.745-1.337zm.025 5.457c.473 0 .887.173 1.241.519.355.345.541.755.56 1.228-.019 1 .327 1.873 1.036 2.619.71.727 1.564 1.091 2.565 1.091h.082c.982 0 1.827-.364 2.537-1.091.727-.728 1.082-1.6 1.064-2.62a3.458 3.458 0 0 0-1.119-2.537c-.718-.683-1.553-1.029-2.507-1.037h-.112a1.71 1.71 0 0 1-1.214-.559 1.78 1.78 0 0 1-.505-1.269c0-.49.178-.914.532-1.269.301-.3.658-.474 1.07-.52l.12-.012.046.001a2.139 2.139 0 0 1 .143.001c.94-.012 1.758-.367 2.457-1.066.746-.746 1.11-1.628 1.091-2.647 0-.4.137-.764.41-1.091l.027-.027.027-.028c0-.018.01-.027.027-.027l.028-.027v-.027h.027V6.99c.018 0 .027-.009.027-.027l.027-.027h.055c0-.019.01-.028.027-.028l.028-.027v-.027h.054c0-.019.01-.028.027-.028l.028-.027.027-.027h.027c0-.018.01-.027.028-.027.018 0 .027-.01.027-.028h.027l.027-.027h.055v-.027h.027l.028-.028h.054V6.61h.055l.027-.027h.055l.027-.027h.082l.027-.028h.082c.018 0 .027-.009.027-.027h.573l.014.014c.009.009.022.013.04.013h.055l.014.014c.009.009.022.014.04.014h.055l.027.027h.055l.027.027h.055c.018.018.036.027.054.027l.028.028h.054v.027h.028l.027.027.013.014c.01.01.023.014.041.014l.028.027h.027c0 .018.018.027.054.027l.028.027v.028h.027c0 .018.018.027.055.027 0 .018.009.027.027.027v.028h.027l.028.027c.018.018.036.027.054.027l.027.028c0 .018.01.027.028.027v.027h.027c0 .018.005.032.014.04l.013.015c0 .018.01.027.028.027l.027.027c0 .018.004.032.013.041l.014.014.027.027.028.027v.055l.027.027V7.4h.027c0 .019.005.032.014.041l.013.014c0 .018.01.027.028.027v.028c0 .018.004.031.013.04l.014.014.027.027c0 .037.01.055.028.055v.027c0 .019.004.032.013.041l.014.014v.054l.027.028v.082c.018.018.027.036.027.054v.082c.019.018.028.036.028.055V8.3c0 .964.345 1.819 1.036 2.565.71.709 1.556 1.073 2.538 1.091.49-.018.927.15 1.31.505.381.354.572.786.572 1.296 0 .509-.177.94-.532 1.296a1.732 1.732 0 0 1-1.269.532 1.78 1.78 0 0 1-1.268-.505 1.739 1.739 0 0 1-.56-1.242c.019-1-.345-1.882-1.09-2.646-.728-.728-1.61-1.082-2.647-1.064a3.57 3.57 0 0 0-2.51 1.119 3.419 3.419 0 0 0-1.037 2.51l-.001.084c.02.93.365 1.757 1.036 2.48.709.71 1.555 1.074 2.537 1.092.654-.036 1.155.2 1.5.71.346.49.455 1.01.328 1.555-.255.91-.837 1.364-1.746 1.364h-.082c-1.019.036-1.865.41-2.537 1.119-.692.691-1.037 1.537-1.037 2.537 0 .491-.177.914-.532 1.269a1.732 1.732 0 0 1-1.269.532h-.054c-.491 0-.91-.177-1.255-.532a1.755 1.755 0 0 1-.519-1.269c0-1-.345-1.846-1.036-2.537a3.57 3.57 0 0 0-2.51-1.119 1.793 1.793 0 0 1-1.35-.505 1.752 1.752 0 0 1-.56-1.323c0-.491.177-.914.532-1.269a1.764 1.764 0 0 1 1.296-.532z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Amp);


/***/ }),

/***/ "QXVz":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/slr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Slr = {
  symbol: 'slr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.079-10l-1.513 1.576C11.456 24.909 13.2 26 14.831 26c3.99 0 5.935-2.652 5.935-5.635 0-2.838-1.456-4.415-4.318-5.677-2.334-1.032-3.363-1.92-3.363-3.728 0-1.319.88-2.896 3.188-2.896 1.532 0 2.195.865 2.747 1.209l1.397-1.455C19.835 7.091 18.08 6 16.348 6c-3.288 0-5.472 2.236-5.472 5.247 0 2.724 1.707 4.359 4.468 5.477 2.284 1.004 3.188 2.036 3.188 3.842 0 1.95-1.305 3.298-3.54 3.298-1.506 0-2.954-1.5-3.07-1.864zm1.862-10.303s5.819-.849 5.703 4.121c0 0 .698.243 1.396 1.576 0 0 1.63-8.606-7.215-7.151 0 0-.233.727.116 1.454zm3.957 7.879s-6.399 1.333-6.21-4.433c0 0-.663-.331-1.197-1.744.002 0-2.718 9.207 7.353 7.909 0 0 .405-.883.054-1.732z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FDA616"/><path fill="#FFF" fill-rule="nonzero" d="M11.921 22c.117.364 1.565 1.864 3.072 1.864 2.234 0 3.539-1.348 3.539-3.298 0-1.806-.904-2.838-3.188-3.842-2.761-1.118-4.468-2.753-4.468-5.477C10.876 8.237 13.06 6 16.348 6c1.732 0 3.487 1.09 4.069 1.818L19.02 9.273c-.552-.344-1.215-1.209-2.747-1.209-2.309 0-3.188 1.577-3.188 2.896 0 1.807 1.03 2.696 3.363 3.728 2.862 1.262 4.318 2.839 4.318 5.677 0 2.983-1.944 5.635-5.935 5.635-1.632 0-3.375-1.09-4.423-2.424L11.921 22zm1.862-10.303c-.349-.727-.116-1.454-.116-1.454 8.844-1.455 7.215 7.15 7.215 7.15-.698-1.332-1.396-1.575-1.396-1.575.116-4.97-5.703-4.121-5.703-4.121zm3.957 7.879c.35.849-.054 1.732-.054 1.732-10.07 1.298-7.35-7.91-7.353-7.91.534 1.414 1.198 1.745 1.198 1.745-.19 5.766 6.209 4.433 6.209 4.433z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Slr);


/***/ }),

/***/ "QZeu":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/emc2.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Emc2 = {
  symbol: 'emc2',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 22.998h13.095l1.893-3.839H7.894L6 23zm2.51-5.09h13.096l1.888-3.828H10.4l-1.888 3.828zm2.507-5.08H24.11L26 9H12.905l-1.888 3.829z"/><path fill-opacity=".4" d="M7.894 19.16h8.781l-1.894 3.838H6l1.894-3.839zm.617-1.252L10.4 14.08h8.78l-1.888 3.828H8.51zm2.506-5.08L12.905 9h8.781l-1.889 3.829h-8.78z"/><path fill-opacity=".4" d="M7.894 19.161h4.397L10.398 23H6l1.894-3.839zm2.505-5.08h4.398L12.91 17.91h-4.4l1.89-3.83zm2.506-5.08h4.398l-1.889 3.83h-4.397L12.905 9z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#0CF"/><g fill="#FFF"><path fill-opacity=".4" d="M7.894 19.161h4.397L10.398 23H6l1.894-3.839zm2.505-5.08h4.398L12.91 17.91h-4.4l1.89-3.83zm2.506-5.08h4.398l-1.889 3.83h-4.397L12.905 9z"/><path fill-opacity=".6" d="M12.277 19.16h4.398l-1.894 3.838h-4.398l1.894-3.839zm2.506-5.08h4.397l-1.888 3.828h-4.398l1.889-3.828zM17.288 9h4.398l-1.889 3.829H15.4L17.288 9z"/><path d="M16.59 19.16h4.398l-1.893 3.838h-4.398l1.894-3.839zm2.506-5.08h4.398l-1.888 3.828h-4.398l1.888-3.828zM21.602 9H26l-1.889 3.829h-4.397L21.602 9z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Emc2);


/***/ }),

/***/ "QarG":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zest.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zest = {
  symbol: 'zest',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.266-23.363a1.819 1.819 0 0 0-1.266.16c-.847.385-1.738.665-2.653.835a9.17 9.17 0 0 0-1.193.37 6.679 6.679 0 0 1-1.014.463c-.872.123-2.482-.947-2.33.71 0 .304.312.465.217.853-.094.389-.511.73-.71 1.033a9.294 9.294 0 0 0-.948 2.188 7.579 7.579 0 0 0 .294 5.277c.35.82.817 1.586 1.383 2.274.277.323.52.672.73 1.042.16.438.36.86.597 1.26a1.78 1.78 0 0 0 1.752.635 4.86 4.86 0 0 0 .948-.445 6.461 6.461 0 0 1 1.591-.408 8.526 8.526 0 0 0 5.125-2.842 8.195 8.195 0 0 0 1.431-2.539 8.482 8.482 0 0 0 .407-1.591c.048-.341-.056-1.204.19-1.43.16-.153.54-.19.654-.333a2.96 2.96 0 0 0 .198-.587c.18-.559-.871-1.004-1.278-1.194-.531-.322-.72-1.27-1.052-1.79-.455-.73-1.118-1.326-1.516-2.084-.398-.758-.445-1.336-1.127-1.696a1.82 1.82 0 0 0-.266-.114c-.17-.407.578-.568.806-.54.407.12.78.334 1.09.625.596.446 1.77 1.763 2.633 1.45.862-.313-.161-1.838-.635-2.236a3.42 3.42 0 0 0-2.937-.88c-.478.143-.87.49-1.07.946-.045.167-.187.471-.05.588zm5.63-1.942c-.568-.142-1.894-.123-2.301.436.407.227.691.577 1.108.587.417.01.9-.389 1.43-.161-.227 0-1.25.19-1.316.502.143.235.315.451.511.644.266.218.294.294.692.076a2.53 2.53 0 0 0 1.042-1.317c0-.284.085-.095-.123-.331a2.302 2.302 0 0 0-1.042-.436zm-5.342.502a3.534 3.534 0 0 1 2.51-.313 3.6 3.6 0 0 0-1.193-2.368c.82.51 1.397 1.33 1.6 2.273.465-.075.948-.255 1.393-.322a3.846 3.846 0 0 0-1.127-2.396C21.424 3.777 20.543 3 20.04 3s-1.156 1.137-1.345 1.601a4.15 4.15 0 0 0-.142 2.596zm4.557 8.526c-.143.322-.702.512-.948.853a5.76 5.76 0 0 1-1.392 1.667 2.757 2.757 0 0 1-3.44-.739 2.937 2.937 0 0 1-.644-1.847c0-.521.569-1.829 0-2.113-.568-.284-.833.635-1.051.948a3.354 3.354 0 0 1-1.649 1.392 3.117 3.117 0 0 1-3.135-.682 3.174 3.174 0 0 1-.446-2.728 6.082 6.082 0 0 0-.123-1.393c0-.682.597-.436 1.08-.341a8.47 8.47 0 0 1 3.335 1.374 7.03 7.03 0 0 0 3.268 1.515c.805.076 1.603.212 2.388.408.388.114.748.303 1.127.436.4.13.788.297 1.156.502.256.113.625.34.483.71l-.01.038z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#07BC9C" fill-rule="nonzero"/><g fill="#FFF"><path d="M23.897 6.695c-.569-.142-1.895-.123-2.302.436.407.227.691.577 1.108.587.417.01.9-.389 1.43-.161-.227 0-1.25.19-1.316.502.143.235.315.451.511.644.266.218.294.294.692.076a2.53 2.53 0 0 0 1.042-1.317c0-.284.085-.095-.123-.331a2.302 2.302 0 0 0-1.042-.436zm-5.343.502a3.534 3.534 0 0 1 2.51-.313 3.6 3.6 0 0 0-1.193-2.368c.82.51 1.397 1.33 1.6 2.273.465-.075.948-.255 1.393-.322a3.846 3.846 0 0 0-1.127-2.396C21.424 3.777 20.543 3 20.04 3s-1.156 1.137-1.345 1.601a4.15 4.15 0 0 0-.142 2.596z"/><path d="M18.43 8.684c-.17-.407.578-.568.806-.54.407.12.78.334 1.09.625.596.446 1.77 1.763 2.633 1.45.862-.313-.161-1.838-.635-2.236a3.42 3.42 0 0 0-2.937-.88c-.478.143-.87.49-1.07.946-.057.209-.265.635.114.635z"/><path d="M22.39 14.368c-.53-.322-.72-1.27-1.051-1.79-.455-.73-1.118-1.326-1.516-2.084-.398-.758-.445-1.336-1.127-1.696a1.819 1.819 0 0 0-1.696 0c-.847.384-1.738.664-2.653.834a9.17 9.17 0 0 0-1.193.37 6.679 6.679 0 0 1-1.014.463c-.872.123-2.482-.947-2.33.71 0 .304.312.465.217.853-.094.389-.511.73-.71 1.033a9.294 9.294 0 0 0-.948 2.188 7.579 7.579 0 0 0 .294 5.277c.35.82.817 1.586 1.383 2.274.277.323.52.672.73 1.042.16.438.36.86.597 1.26a1.78 1.78 0 0 0 1.752.635 4.86 4.86 0 0 0 .948-.445 6.461 6.461 0 0 1 1.591-.408 8.526 8.526 0 0 0 5.125-2.842 8.195 8.195 0 0 0 1.431-2.539 8.482 8.482 0 0 0 .407-1.591c.048-.341-.056-1.204.19-1.43.16-.153.54-.19.654-.333a2.96 2.96 0 0 0 .198-.587c.18-.559-.871-1.004-1.278-1.194zm.72 1.355c-.142.322-.7.512-.947.853a5.76 5.76 0 0 1-1.392 1.667 2.757 2.757 0 0 1-3.44-.739 2.937 2.937 0 0 1-.644-1.847c0-.521.569-1.829 0-2.113-.568-.284-.833.635-1.051.948a3.354 3.354 0 0 1-1.649 1.392 3.117 3.117 0 0 1-3.135-.682 3.174 3.174 0 0 1-.446-2.728 6.082 6.082 0 0 0-.123-1.393c0-.682.597-.436 1.08-.341a8.47 8.47 0 0 1 3.335 1.374 7.03 7.03 0 0 0 3.268 1.515c.805.076 1.603.212 2.388.408.388.114.748.303 1.127.436.4.13.788.297 1.156.502.256.113.625.34.483.71l-.01.038z" fill-rule="nonzero"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zest);


/***/ }),

/***/ "QzEK":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ella.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ella = {
  symbol: 'ella',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.073-18.788l2.207-2.207L16 5l-4.25 6.062 2.163 2.164L16 11.14zm-4.883.738l-2.2-2.2L5 16l6.056 4.229 2.156-2.156L11.14 16zm5.584 4.137l2.182 2.182L27 16l-5.978-4.29-2.226 2.226L20.86 16zm-4.838.71l-2.14 2.139L16 27l4.232-6.007-2.182-2.183L16 20.86zM16 12.527L12.528 16 16 19.472 19.472 16z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#396a28" r="16"/><path d="M18.073 13.212L16 11.14l-2.087 2.086-2.164-2.164L16 5l4.28 6.005zm-4.883.738L11.14 16l2.072 2.073-2.156 2.156L5 16l5.99-4.25zm5.584 4.137L20.86 16l-2.064-2.064 2.226-2.226L27 16l-6.044 4.269zm-4.838.71L16 20.86l2.05-2.05 2.182 2.183L16 27l-4.204-6.064zM16 12.527L19.472 16 16 19.472 12.528 16z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ella);


/***/ }),

/***/ "R0Gr":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/etp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Etp = {
  symbol: 'etp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.08-19.426l.006.007c-.604-.348-1.21-.69-1.808-1.047-.176-.106-.311-.125-.497-.009-.516.322-1.052.613-1.57.93-.142.087-.241.078-.377-.003a84.036 84.036 0 0 0-1.697-.976c-.075-.042-.2-.086-.26-.053-.653.361-1.299.737-1.97 1.124.606.355 1.179.701 1.764 1.027.199.11.28.23.279.47-.012 2.067-.007 4.135-.007 6.202v.32c.116-.06.193-.097.266-.14.519-.3 1.032-.61 1.556-.901.175-.097.242-.205.24-.412-.009-2.058-.005-4.117-.005-6.176v-.315c.089.044.15.071.209.104.528.302 1.051.614 1.586.904.172.093.223.2.222.392-.007 2.297-.004 4.595-.004 6.892v.325c.645-.403 1.244-.786 1.854-1.153.158-.095.207-.203.207-.382a779.998 779.998 0 0 1-.004-4.453c.001-.892.007-1.784.01-2.677zm.006.007l-.006-.007c.601.35 1.199.708 1.807 1.046.166.091.208.198.208.375-.006 2.083-.004 4.167-.004 6.251v.329c.695-.402 1.35-.777 1.998-1.163.047-.028.065-.137.065-.208.004-2.163.005-4.327-.004-6.49 0-.087-.078-.21-.156-.255a46.874 46.874 0 0 0-1.723-.98.43.43 0 0 0-.351-.002c-.573.31-1.136.64-1.699.968-.053.03-.09.09-.135.136zM6.939 18.788a1.416 1.416 0 0 0 1.419-1.432 1.417 1.417 0 0 0-1.438-1.414 1.419 1.419 0 0 0-1.42 1.433c.006.79.644 1.417 1.44 1.413zm1.915 4.287a1.347 1.347 0 0 0 1.332-1.357c-.008-.736-.635-1.353-1.36-1.337a1.361 1.361 0 0 0-1.332 1.364c.01.742.616 1.334 1.36 1.33zM7.767 11.399a1.275 1.275 0 0 0-1.297 1.287 1.284 1.284 0 0 0 1.275 1.312 1.303 1.303 0 0 0 1.32-1.304c0-.715-.579-1.293-1.298-1.295zm17.522 4.906a1.215 1.215 0 0 0 0-2.43 1.215 1.215 0 0 0 0 2.43zM9.542 8.617a1.092 1.092 0 0 0 1.097 1.115 1.102 1.102 0 0 0 1.11-1.106 1.101 1.101 0 0 0-1.102-1.115 1.09 1.09 0 0 0-1.105 1.106zM24.636 20.91a1.088 1.088 0 0 0 1.096-1.115 1.108 1.108 0 0 0-1.111-1.107 1.107 1.107 0 0 0-1.095 1.123 1.087 1.087 0 0 0 1.11 1.099zm-8.65-14.055A.826.826 0 0 0 15.168 6a.834.834 0 0 0-.841.807.823.823 0 0 0 .807.862.818.818 0 0 0 .852-.815zm5.771 17.502c.481.004.848-.351.85-.822a.82.82 0 0 0-.82-.83.823.823 0 0 0-.848.826.814.814 0 0 0 .818.826zM17.477 26a.779.779 0 0 0 .803-.777.8.8 0 0 0-.791-.796.782.782 0 0 0-.795.785.767.767 0 0 0 .783.788zm2.628-17.723a.725.725 0 0 0 .717-.706.725.725 0 0 0-.709-.714.71.71 0 0 0-.008 1.42zm-6.538 16.282a.621.621 0 0 0-.606-.635.62.62 0 0 0-.63.612.606.606 0 0 0 .606.632.612.612 0 0 0 .63-.609zM24.23 10.58a.527.527 0 0 0-.546-.521.529.529 0 0 0-.52.55.539.539 0 0 0 .548.525c.3-.01.524-.25.518-.553z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00A5FF"/><path fill="#FFF" d="M18.08 12.574c-.003.893-.009 1.785-.01 2.677-.001 1.484-.003 2.969.004 4.453 0 .18-.05.287-.207.382-.61.367-1.21.75-1.854 1.153v-.325c0-2.297-.003-4.595.004-6.892.001-.191-.05-.299-.222-.392-.535-.29-1.058-.602-1.586-.904-.058-.033-.12-.06-.209-.104v.315c0 2.059-.004 4.118.006 6.176 0 .207-.066.315-.24.412-.525.29-1.038.6-1.557.902-.073.042-.15.079-.266.14v-.32c0-2.068-.005-4.136.007-6.203.001-.24-.08-.36-.28-.47-.584-.326-1.157-.672-1.764-1.027.672-.387 1.318-.763 1.971-1.124.06-.033.185.01.26.053.569.32 1.136.643 1.697.976.136.08.235.09.377.003.518-.317 1.054-.608 1.57-.93.186-.116.32-.097.497.009.597.357 1.204.7 1.808 1.047l-.006-.007zm.006.007c.044-.046.082-.105.135-.136.563-.328 1.126-.658 1.699-.968a.43.43 0 0 1 .351.003c.582.313 1.156.641 1.723.979.078.046.156.168.156.255.009 2.163.008 4.327.004 6.49 0 .07-.018.18-.065.208-.648.386-1.303.761-1.998 1.163v-.329c0-2.084-.002-4.168.004-6.251 0-.177-.042-.284-.208-.375-.608-.338-1.206-.696-1.807-1.046l.006.007zM6.939 18.788A1.422 1.422 0 0 1 5.5 17.375a1.419 1.419 0 0 1 1.42-1.433 1.417 1.417 0 0 1 1.438 1.414 1.416 1.416 0 0 1-1.419 1.432zm1.915 4.287a1.349 1.349 0 0 1-1.36-1.33 1.361 1.361 0 0 1 1.332-1.364c.725-.016 1.352.6 1.36 1.337a1.347 1.347 0 0 1-1.332 1.357zM7.767 11.399c.72.002 1.298.58 1.298 1.295 0 .727-.592 1.312-1.32 1.304a1.284 1.284 0 0 1-1.275-1.312 1.275 1.275 0 0 1 1.297-1.287zm17.522 4.906a1.215 1.215 0 1 1 0-2.43 1.215 1.215 0 0 1 0 2.43zM9.542 8.617a1.09 1.09 0 0 1 1.105-1.106 1.101 1.101 0 0 1 1.102 1.115 1.102 1.102 0 0 1-1.11 1.106 1.092 1.092 0 0 1-1.097-1.115zM24.636 20.91a1.087 1.087 0 0 1-1.11-1.099 1.107 1.107 0 0 1 1.095-1.123 1.108 1.108 0 0 1 1.111 1.107 1.088 1.088 0 0 1-1.096 1.115zm-8.65-14.055a.818.818 0 0 1-.852.815.823.823 0 0 1-.807-.862.834.834 0 0 1 .841-.807.826.826 0 0 1 .818.854zm5.771 17.502a.814.814 0 0 1-.818-.826.823.823 0 0 1 .849-.827c.46.006.82.37.818.83 0 .472-.368.827-.849.823zM17.477 26a.767.767 0 0 1-.783-.788.782.782 0 0 1 .795-.785.8.8 0 0 1 .791.796.779.779 0 0 1-.803.777zm2.628-17.723a.71.71 0 0 1 .008-1.42c.384.002.71.331.709.714a.725.725 0 0 1-.717.706zm-6.538 16.282a.612.612 0 0 1-.63.61.606.606 0 0 1-.605-.633.62.62 0 0 1 .629-.612.62.62 0 0 1 .606.635zM24.23 10.58a.532.532 0 0 1-.518.554.539.539 0 0 1-.548-.525.529.529 0 0 1 .52-.55c.299-.01.54.221.546.522z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Etp);


/***/ }),

/***/ "RFdi":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/smart.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Smart = {
  symbol: 'smart',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.667-21.853l-3.438-1.979c-.118-.07-.227-.131-.344-.198-.114-.065-.225-.135-.341-.202-.689-.394-1.38-.776-2.061-1.184l-3.266-1.886c-.19-.115-1.172-.692-1.214-.692-.017 0-.141.08-.168.097l-4.462 2.57c-.065.037-.11.066-.176.102a4.38 4.38 0 0 0-.168.098l-.342.2a7.4 7.4 0 0 1-.176.103l-.336.194c-.118.07-.229.13-.345.197l-.691.395c-.06.031-.11.064-.168.097l-.864.5c-.12.07-.231.128-.348.195l-.683.403c-.343.196-.687.405-1.035.594-.153.082-.956.572-1.035.593v12.714c.064.006.942.529 1.033.583l1.376.796c.115.07.23.133.344.199l.68.392c.058.03.11.064.17.097.066.036.109.067.176.1.175.09.343.197.51.298l.866.499c.06.033.108.062.167.097.338.204.689.387 1.026.59l1.207.7c.797.471 1.61.91 2.403 1.386l.943.546c.15.101.205-.013.441-.142l2.066-1.192c.114-.066.225-.13.345-.197l.337-.193c.057-.031.11-.064.167-.099l1.895-1.097c.566-.339 1.15-.646 1.716-.986l3.773-2.186c.055-.033.11-.066.168-.098.06-.032.117-.077.185-.092V10.344c-.107-.072-.218-.127-.333-.197zm-6.79 12.444h-3.215v.842c0 .01-.004.013-.014.013h-1.55v-.855h-2.969v-2.38c0-.025.03-.046.045-.06l.301-.325a.283.283 0 0 0 .025-.026.224.224 0 0 1 .023-.027l.175-.186.002-.003.052-.053.023-.028.056-.059.006-.007.187-.202c.04-.041.08-.08.118-.125l.002-.002.006-.008.126-.134c.018-.02.032-.031.049-.053l.152-.162.025-.025a.284.284 0 0 0 .023-.028l.255-.272.002-.002.006-.007.039-.04c.05-.064.14-.144.193-.208l.006-.008c.017-.02.036-.034.052-.053l.099-.107c.07-.07.13-.146.2-.216l.225-.242.025-.025.098-.108c.019-.019.037-.033.052-.053.015-.02.034-.034.051-.054l.099-.107c.01-.01.018-.017.027-.028l.075-.081c.015-.02.034-.034.051-.054.044-.049.17-.178.197-.214.016-.02.035-.032.049-.052a1.58 1.58 0 0 0-.127-.138l-.098-.108-.026-.025c-.01-.012-.013-.018-.025-.03-.077-.078-.148-.161-.226-.24l-.125-.135a.224.224 0 0 0-.024-.027l-1.15-1.234a.306.306 0 0 0-.025-.03l-.17-.183-.002-.002-.377-.406c-.008-.01-.016-.016-.025-.025l-.1-.11c-.068-.07-.133-.146-.202-.215l-.022-.024-.002-.002-.074-.081c-.034-.037-.07-.071-.103-.108-.011-.012-.013-.018-.025-.03-.068-.069-.13-.144-.2-.212-.008-.01-.016-.016-.024-.025-.009-.01-.045-.045-.045-.056v-2.389h2.968V9.94c.522 0 1.038.01 1.56.01v.95c0 .011.003.015.014.015h3.206v2.411h-4.423c.026.04.066.073.097.109l.246.27c.015.02.031.034.048.054.042.05.089.093.13.143l.358.393c.07.068.13.145.197.215l.913 1.003.006.008.327.36.025.024c.044.044.08.094.124.138l.588.643c.024.026.05.05.07.08-.009.014-.016.018-.027.03a.287.287 0 0 1-.023.027l-.123.133a.277.277 0 0 1-.023.027l-.295.323c-.02.019-.03.035-.05.054-.04.04-.1.115-.147.16l-.206.229c-.041.049-.151.158-.184.2l-.293.32c-.063.077-.134.143-.198.219l-.12.13c-.06.061-.112.126-.17.188-.01.01-.018.017-.027.028-.068.077-.142.15-.209.23l-.01.012-.257.279-.006.007-.009.01-.002.003-.118.13a.222.222 0 0 0-.023.026.27.27 0 0 1-.025.026c-.051.05-.095.11-.146.16a.277.277 0 0 0-.023.027l-.098.108c-.008.01-.016.016-.025.025l-.292.322h4.3c.041 0 .123-.01.123.013v2.38z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FEC60D"/><path d="M26.667 10.147l-3.438-1.979c-.118-.07-.227-.131-.344-.198-.114-.065-.225-.135-.341-.202-.689-.394-1.38-.776-2.061-1.184l-3.266-1.886c-.19-.115-1.172-.692-1.214-.692-.017 0-.141.08-.168.097l-4.462 2.57c-.065.037-.11.066-.176.102a4.38 4.38 0 0 0-.168.098l-.342.2a7.4 7.4 0 0 1-.176.103l-.336.194c-.118.07-.229.13-.345.197l-.691.395c-.06.031-.11.064-.168.097l-.864.5c-.12.07-.231.128-.348.195l-.683.403c-.343.196-.687.405-1.035.594-.153.082-.956.572-1.035.593v12.714c.064.006.942.529 1.033.583l1.376.796c.115.07.23.133.344.199l.68.392c.058.03.11.064.17.097.066.036.109.067.176.1.175.09.343.197.51.298l.866.499c.06.033.108.062.167.097.338.204.689.387 1.026.59l1.207.7c.797.471 1.61.91 2.403 1.386l.943.546c.15.101.205-.013.441-.142l2.066-1.192c.114-.066.225-.13.345-.197l.337-.193c.057-.031.11-.064.167-.099l1.895-1.097c.566-.339 1.15-.646 1.716-.986l3.773-2.186c.055-.033.11-.066.168-.098.06-.032.117-.077.185-.092V10.344c-.107-.072-.218-.127-.333-.197zm-6.79 12.444h-3.215v.842c0 .01-.004.013-.014.013h-1.55v-.855h-2.969v-2.38c0-.025.03-.046.045-.06l.301-.325a.283.283 0 0 0 .025-.026.224.224 0 0 1 .023-.027l.175-.186.002-.003.052-.053.023-.028.056-.059.006-.007.187-.202c.04-.041.08-.08.118-.125l.002-.002.006-.008.126-.134c.018-.02.032-.031.049-.053l.152-.162.025-.025a.284.284 0 0 0 .023-.028l.255-.272.002-.002.006-.007.039-.04c.05-.064.14-.144.193-.208l.006-.008c.017-.02.036-.034.052-.053l.099-.107c.07-.07.13-.146.2-.216l.225-.242.025-.025.098-.108c.019-.019.037-.033.052-.053.015-.02.034-.034.051-.054l.099-.107c.01-.01.018-.017.027-.028l.075-.081c.015-.02.034-.034.051-.054.044-.049.17-.178.197-.214.016-.02.035-.032.049-.052a1.58 1.58 0 0 0-.127-.138l-.098-.108-.026-.025c-.01-.012-.013-.018-.025-.03-.077-.078-.148-.161-.226-.24l-.125-.135a.224.224 0 0 0-.024-.027l-1.15-1.234a.306.306 0 0 0-.025-.03l-.17-.183-.002-.002-.377-.406c-.008-.01-.016-.016-.025-.025l-.1-.11c-.068-.07-.133-.146-.202-.215l-.022-.024-.002-.002-.074-.081c-.034-.037-.07-.071-.103-.108-.011-.012-.013-.018-.025-.03-.068-.069-.13-.144-.2-.212-.008-.01-.016-.016-.024-.025-.009-.01-.045-.045-.045-.056v-2.389h2.968V9.94c.522 0 1.038.01 1.56.01v.95c0 .011.003.015.014.015h3.206v2.411h-4.423c.026.04.066.073.097.109l.246.27c.015.02.031.034.048.054.042.05.089.093.13.143l.358.393c.07.068.13.145.197.215l.913 1.003.006.008.327.36.025.024c.044.044.08.094.124.138l.588.643c.024.026.05.05.07.08-.009.014-.016.018-.027.03a.287.287 0 0 1-.023.027l-.123.133a.277.277 0 0 1-.023.027l-.295.323c-.02.019-.03.035-.05.054-.04.04-.1.115-.147.16l-.206.229c-.041.049-.151.158-.184.2l-.293.32c-.063.077-.134.143-.198.219l-.12.13c-.06.061-.112.126-.17.188-.01.01-.018.017-.027.028-.068.077-.142.15-.209.23l-.01.012-.257.279-.006.007-.009.01-.002.003-.118.13a.222.222 0 0 0-.023.026.27.27 0 0 1-.025.026c-.051.05-.095.11-.146.16a.277.277 0 0 0-.023.027l-.098.108c-.008.01-.016.016-.025.025l-.292.322h4.3c.041 0 .123-.01.123.013v2.38z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Smart);


/***/ }),

/***/ "RHqp":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/san.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const San = {
  symbol: 'san',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-15.961C27.045 9.996 22.13 5.041 16.05 5 10.013 4.96 5.05 9.85 5 15.886 4.951 21.98 9.838 26.953 15.923 27c6.08.045 11.03-4.853 11.077-10.961zm-21.204-.035c-.01-5.514 4.542-10.106 9.944-10.198 5.587-.096 10.44 4.325 10.462 10.184.02 5.626-4.58 10.195-10.217 10.183-5.631-.012-10.178-4.55-10.189-10.17zm12.885-4.776c-1.213-.642-2.43-.777-3.685-.48a2.077 2.077 0 0 0-1.47 1.233 3.137 3.137 0 0 0 .955 3.779c.29.226.623.396.921.612.447.325.926.622 1.308 1.012.495.506.595 1.17.28 1.8-.315.624-.956.718-1.568.621-.642-.102-1.266-.318-1.949-.498l-.469 1.364c1.07.72 2.978.944 4.098.49.732-.297 1.303-.784 1.544-1.556.405-1.302.23-2.51-.757-3.506-.364-.367-.823-.64-1.24-.955-.453-.342-.94-.647-1.354-1.032-.403-.376-.383-.895-.215-1.382.164-.475.601-.585 1.023-.544.71.07 1.413.22 2.17.344.107-.34.253-.804.408-1.302zm-8.08 4.59a1.26 1.26 0 0 0-1.245-1.278 1.295 1.295 0 0 0-1.294 1.244c-.016.697.583 1.307 1.282 1.304a1.27 1.27 0 0 0 1.258-1.27zm12.093-1.243c-.77 0-1.3.503-1.3 1.235 0 .7.556 1.268 1.251 1.278.71.01 1.285-.575 1.276-1.297-.01-.702-.529-1.217-1.227-1.216z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2B77B3"/><path fill="#FFF" d="M27 16.039c-.047 6.108-4.997 11.006-11.077 10.96C9.838 26.954 4.951 21.982 5 15.887 5.05 9.85 10.014 4.96 16.05 5c6.08.041 10.994 4.996 10.95 11.04zm-21.204-.035c.011 5.62 4.558 10.157 10.189 10.17 5.637.01 10.236-4.558 10.217-10.184-.021-5.86-4.875-10.28-10.462-10.184-5.402.092-9.955 4.684-9.944 10.198zm12.885-4.776l-.407 1.302c-.758-.125-1.46-.274-2.171-.344-.422-.041-.86.069-1.023.544-.168.487-.188 1.006.215 1.382.414.385.9.69 1.354 1.032.417.314.876.588 1.24.955.987.996 1.162 2.204.757 3.506-.24.772-.812 1.26-1.544 1.556-1.12.454-3.027.23-4.098-.49l.47-1.364c.682.18 1.306.396 1.948.498.612.097 1.253.003 1.567-.622.316-.63.216-1.293-.279-1.799-.382-.39-.861-.687-1.308-1.012-.298-.216-.631-.386-.921-.612a3.137 3.137 0 0 1-.955-3.78 2.077 2.077 0 0 1 1.47-1.231c1.255-.298 2.472-.163 3.685.48zm-8.08 4.59a1.27 1.27 0 0 1-1.257 1.27c-.7.003-1.298-.607-1.282-1.304a1.295 1.295 0 0 1 1.294-1.244c.7.01 1.25.575 1.246 1.278zm12.093-1.243c.698-.001 1.218.514 1.227 1.216a1.268 1.268 0 0 1-1.276 1.297 1.273 1.273 0 0 1-1.252-1.278c0-.732.53-1.235 1.301-1.235z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (San);


/***/ }),

/***/ "RcnO":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bcpt.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bcpt = {
  symbol: 'bcpt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-5c6.075 0 11-4.925 11-11S22.075 5 16 5 5 9.925 5 16s4.925 11 11 11zm0-1.102c-5.466 0-9.898-4.432-9.898-9.898S10.534 6.102 16 6.102s9.898 4.432 9.898 9.898-4.432 9.898-9.898 9.898zm6.043-13.778s0-3.326-5.1-3.548h-6.098V23.43h6.763s4.822-.169 4.822-4.491c0 0 .166-2.66-2.938-3.104 0 0 2.716-.776 2.55-3.714zm-7.706-.887h2.605c1.663.11 1.663 1.274 1.663 1.274v.887c-.11 1.386-1.829 1.441-1.829 1.441h-2.439zm4.6 8.15c-.11 1.386-1.828 1.44-1.828 1.44h-2.773V17.22h2.939c1.663.111 1.663 1.276 1.663 1.276z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#404040" r="16"/><path d="M16 27C9.925 27 5 22.075 5 16S9.925 5 16 5s11 4.925 11 11-4.925 11-11 11zm0-1.102c5.466 0 9.898-4.432 9.898-9.898S21.466 6.102 16 6.102 6.102 10.534 6.102 16s4.432 9.898 9.898 9.898zm6.043-13.778c.165 2.938-2.55 3.714-2.55 3.714 3.103.443 2.937 3.104 2.937 3.104 0 4.322-4.822 4.491-4.822 4.491h-6.763V8.572h6.098c5.1.222 5.1 3.548 5.1 3.548zm-7.706-.887v3.602h2.44s1.718-.055 1.828-1.441v-.887s0-1.163-1.663-1.274zm4.6 8.15v-.888s0-1.165-1.662-1.276h-2.939v3.605h2.773s1.718-.055 1.829-1.442z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bcpt);


/***/ }),

/***/ "RlCf":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zil.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zil = {
  symbol: 'zil',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.89 6L9 7.284v2.897l7.693 3.737L9 17.728v2.856l11.114 5.351 2.845-1.281v-8.951l-2.845 1.295v6.085l-7.548-3.67 7.548-3.897 2.845-1.281-.013-2.86z"/><path d="M9 7.281l11.114 5.383 2.845-1.282L11.891 6z" fill-opacity=".65"/><path d="M20.114 12.651l2.845-1.281v2.865l-2.845 1.281zm0 13.284v-8.937l2.845-1.295v8.951z" fill-opacity=".3"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#49c1bf" r="16"/><g fill="#fff"><path d="M9 7.281l11.114 5.383 2.845-1.282L11.891 6z" fill-opacity=".304"/><path d="M20.114 12.651l2.845-1.281v2.865l-2.845 1.281zm0 13.284v-8.937l2.845-1.295v8.951z" fill-opacity=".646"/><path d="M9 7.284v2.897l7.693 3.737L9 17.728v2.856l11.114 5.373v-2.874l-7.548-3.671 7.548-3.881v-2.865z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zil);


/***/ }),

/***/ "RnzS":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/part.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Part = {
  symbol: 'part',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.576-25.827c-.61.235-.712 1.118-.214 1.525.802.707 1.541 1.484 2.314 2.224.294.292.763.45 1.147.24.5-.223.648-.956.28-1.356a25.784 25.784 0 0 0-2.025-1.921c-.398-.398-.858-.992-1.502-.712zm7.034 2.051c-.959.81-1.733 1.809-2.61 2.701-.39.393-.25 1.17.267 1.384.358.165.805.083 1.058-.223.695-.725 1.39-1.45 2.105-2.156.326-.308.623-.766.438-1.23-.121-.52-.82-.71-1.258-.476zM8.49 8.37c-.406.285-.512.959-.156 1.326.63.645 1.266 1.285 1.96 1.86.396.32.71.906 1.302.815.707-.003 1.06-.996.554-1.464-.766-.753-1.547-1.492-2.305-2.257-.337-.373-.9-.555-1.355-.28zm.588 4.52c-1.065.722-1.802 1.846-2.73 2.735-.515.477-.16 1.46.547 1.487.604.073.942-.5 1.305-.874.614-.693 1.347-1.284 1.91-2.018.476-.663-.269-1.625-1.032-1.33zm15.476 2.127c-.672.583-1.226 1.3-1.882 1.909-.396.428-1.024.843-.913 1.512.085.648.97.962 1.443.515a23.054 23.054 0 0 0 1.848-1.948c.325-.4.915-.714.838-1.308-.017-.633-.81-1.023-1.334-.68zM11.069 19.72c-.755.659-1.392 1.443-2.125 2.129-.378.367-.874.838-.672 1.423.118.605 1.008.808 1.425.386.642-.625 1.277-1.258 1.848-1.948.323-.399.914-.716.82-1.314-.013-.619-.786-.981-1.296-.676zm9.062-.023c-.586.22-.701 1.101-.211 1.482.81.757 1.584 1.556 2.39 2.316.399.397 1.22.383 1.46-.178.17-.312.148-.748-.108-1.007-.83-.896-1.77-1.675-2.653-2.514-.238-.204-.596-.196-.878-.1zm-6.8 2.145c-.504.22-.656.962-.282 1.36a23.19 23.19 0 0 0 1.95 1.85c.397.322.705.91 1.297.84.733-.008 1.085-1.01.565-1.505a82.32 82.32 0 0 1-2.314-2.237c-.302-.32-.796-.535-1.216-.308zm-1.35-14.907a.867.867 0 1 0-1.736 0 .867.867 0 0 0 1.735 0zm2.528 2.308a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm-6.774 2.12a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm13.772-4.497a.867.867 0 1 0-1.733 0 .867.867 0 0 0 1.733 0zM26 11.146a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm-2.371 2.492a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm2.367 7.006a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zM19.23 22.76a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm2.496 2.372a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm-9.5 0a.867.867 0 1 0-1.736 0 .867.867 0 0 0 1.735 0zm-2.117-6.794a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0zm-2.374 2.521a.867.867 0 1 0-1.735 0 .867.867 0 0 0 1.735 0z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#03E8B0"/><path fill="#FFF" fill-rule="nonzero" d="M15.424 6.173c.644-.28 1.104.314 1.502.712.71.603 1.386 1.244 2.026 1.92.367.401.218 1.134-.281 1.357-.384.21-.853.052-1.147-.24-.773-.74-1.512-1.517-2.314-2.224-.498-.407-.396-1.29.214-1.525m7.034 2.051c.437-.235 1.137-.044 1.258.477.185.463-.112.92-.438 1.229-.715.705-1.41 1.43-2.105 2.156-.253.306-.7.388-1.058.223-.517-.214-.657-.99-.267-1.384.877-.892 1.651-1.892 2.61-2.7M8.49 8.368c.455-.275 1.018-.093 1.355.28.758.765 1.54 1.504 2.305 2.257.507.468.153 1.46-.554 1.464-.592.09-.906-.495-1.302-.815-.694-.575-1.33-1.215-1.96-1.86-.356-.367-.25-1.041.157-1.326m.587 4.52c.763-.295 1.508.667 1.032 1.33-.563.734-1.296 1.325-1.91 2.018-.363.373-.7.947-1.305.874-.707-.027-1.062-1.01-.548-1.487.929-.889 1.666-2.013 2.732-2.736m15.475 2.128c.525-.343 1.317.047 1.334.68.077.594-.513.908-.838 1.308-.572.688-1.2 1.33-1.848 1.948-.474.447-1.358.133-1.443-.515-.111-.669.517-1.084.913-1.512.656-.609 1.21-1.326 1.882-1.909M11.069 19.72c.51-.305 1.283.057 1.295.676.095.598-.496.915-.819 1.314-.57.69-1.206 1.323-1.848 1.948-.417.422-1.307.219-1.425-.386-.202-.585.294-1.056.672-1.423.733-.686 1.37-1.47 2.125-2.129m9.062-.023c.282-.097.64-.105.878.099.883.839 1.823 1.618 2.653 2.514.256.26.279.695.109 1.007-.24.561-1.062.575-1.461.178-.806-.76-1.58-1.559-2.39-2.316-.49-.38-.375-1.262.21-1.482m-6.799 2.145c.42-.227.914-.012 1.216.308a82.32 82.32 0 0 0 2.314 2.237c.52.494.168 1.497-.565 1.505-.592.07-.9-.518-1.297-.84a23.19 23.19 0 0 1-1.95-1.85c-.374-.398-.222-1.14.282-1.36m-1.35-14.907a.868.868 0 1 1-1.736 0 .868.868 0 0 1 1.735 0m2.529 2.308a.867.867 0 1 1-1.735 0 .867.867 0 0 1 1.735 0m-6.774 2.12a.868.868 0 1 1-1.735 0 .868.868 0 0 1 1.735 0m13.772-4.497a.867.867 0 1 1-1.736 0 .867.867 0 0 1 1.737 0M26 11.146a.867.867 0 1 1-1.735 0 .867.867 0 0 1 1.735 0m-2.371 2.492a.867.867 0 1 1-1.735 0 .867.867 0 0 1 1.735 0m2.367 7.006a.867.867 0 1 1-1.735 0 .867.867 0 0 1 1.735 0M19.23 22.76a.868.868 0 1 1-1.735 0 .868.868 0 0 1 1.735 0m2.496 2.372a.868.868 0 1 1-1.735 0 .868.868 0 0 1 1.735 0m-9.5 0a.868.868 0 1 1-1.736 0 .868.868 0 0 1 1.735 0m-2.116-6.794a.868.868 0 1 1-1.735 0 .868.868 0 0 1 1.735 0m-2.374 2.521a.868.868 0 1 1-1.735 0 .868.868 0 0 1 1.735 0"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Part);


/***/ }),

/***/ "RzcW":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xzc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xzc = {
  symbol: 'xzc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.725-12.852h3.39v2.964H11.93L24.573 9.46a1.468 1.468 0 0 0 .32-1.574A1.454 1.454 0 0 0 23.55 7H8.45A1.44 1.44 0 0 0 7 8.452v10.696l6.275-6.28h-3.39v-2.98h10.168L7.427 22.54a1.468 1.468 0 0 0-.32 1.574c.229.535.748.886 1.343.886h15.1A1.45 1.45 0 0 0 25 23.548v-10.68l-6.275 6.28z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#23B852"/><path fill="#FFF" fill-rule="nonzero" d="M18.725 19.148h3.39v2.964H11.93L24.573 9.46a1.468 1.468 0 0 0 .32-1.574A1.454 1.454 0 0 0 23.55 7H8.45A1.44 1.44 0 0 0 7 8.452v10.696l6.275-6.28h-3.39v-2.98h10.168L7.427 22.54a1.468 1.468 0 0 0-.32 1.574c.229.535.748.886 1.343.886h15.1A1.45 1.45 0 0 0 25 23.548v-10.68l-6.275 6.28z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xzc);


/***/ }),

/***/ "S1nb":
/*!****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/x.js ***!
  \****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const X = {
  symbol: 'x',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM14.116 6.01v3.919l1.88 1.963V6.009h-1.88zM6.01 7.992l7.638 7.723c-.121.129-.245.256-.37.381l-7.268 7.35h3.67c.155-.003.312.01.467-.01.272-.003.543.005.814-.003.314-.32.622-.646.934-.97l2.677-2.795c.473-.5.955-.993 1.425-1.493.22.218.432.448.648.672.973 1.014 1.942 2.032 2.915 3.044.495.513.984 1.03 1.48 1.542.272.01.546-.002.82.006.096.013.195.007.294.007h3.83l-.69-.696-6.772-6.846c-.052-.066-.114-.127-.172-.189.237-.246.48-.491.723-.734 2.304-2.328 4.605-4.66 6.91-6.99h-4.938c-.713.744-1.425 1.489-2.14 2.23-.967 1.012-1.935 2.028-2.906 3.037-1.677-1.76-3.361-3.511-5.038-5.266H6.01zM16 19.53h.002c-.004 1.967-.004 3.933-.004 5.9h1.89c0-1.308.004-2.613 0-3.92-.627-.661-1.262-1.317-1.888-1.98z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3B5998" fill-rule="nonzero"/><g fill="#FFF"><path d="M14.116 6.01h1.88v5.882l-1.88-1.963z"/><path d="M6.011 7.993h4.949c1.677 1.755 3.361 3.507 5.038 5.266.971-1.009 1.939-2.025 2.906-3.037.715-.741 1.427-1.486 2.14-2.23h4.937c-2.304 2.33-4.605 4.662-6.91 6.99-.242.243-.485.488-.722.734.058.062.12.123.172.189l6.771 6.846.691.696h-3.83c-.099 0-.198.006-.295-.007-.273-.008-.547.004-.82-.006-.495-.511-.984-1.029-1.479-1.542-.973-1.012-1.942-2.03-2.915-3.044-.216-.224-.427-.454-.648-.672-.47.5-.952.993-1.425 1.493l-2.677 2.794c-.312.325-.62.652-.934.971-.27.008-.542 0-.814.004-.155.019-.312.006-.467.01H6.01l7.268-7.35c.125-.126.249-.253.37-.382L6.01 7.993z"/><path d="M16 19.531c.626.663 1.26 1.319 1.888 1.98.004 1.307 0 2.612 0 3.92h-1.89c0-1.967 0-3.933.004-5.9H16z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (X);


/***/ }),

/***/ "S9P+":
/*!************************************!*\
  !*** ./src/js/component-wallet.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");




__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].component('wallet', {
    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_js__["a" /* default */]],
    data: function data() {
        return {
            myHoldingsTotalInUSD: 0,
            myHoldingsTotalInBTC: 0,
            thisWallet: null
        };
    },
    props: ['holding', 'title'],
    template: '<div class="walletBox ma1 tc">\n                <slot></slot>\n            </div>',

    created: function created() {
        __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$on('on-data-has-loaded', this.buildWallet);

        // USING THE SPREAD OPERATOR (...) DOES NOT TOTAL VALUES OF REPEATED KEYS.
        // this.$root.totalHoldings = {...this.$root.totalHoldings, ...this.holding};
        // SO THIS CUSTOM mergeHoldings() FUNCTION DOES THIS.
        this.$root.totalHoldings = this.mergeHoldings(this.$root.totalHoldings, this.holding);
    },

    methods: {
        buildWallet: function buildWallet() {
            var thisWalletHolding = this.holding;
            this.thisWallet = this.mixinBuildWalletV2(thisWalletHolding, this.$store.getters.allCoins);
            this.totalUSD(this.thisWallet);
            this.totalBTC(this.thisWallet);
            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$emit('wallet-built-' + this._uid, this.thisWallet);
        },


        /* USES _LODASH.JS TO MERGE OBJECTS AND COMBINE VALUES FOR ANY DUPLICATE KEY:VALUE PAIRS.  */
        mergeHoldings: function mergeHoldings(o1, o2) {
            var a = Object.keys(o1);
            var b = Object.keys(o2);
            var c = a.concat(b);
            // THIS _LODASH METHOD IS WHERE THE MAGIC HAPPENS:
            // https://lodash.com/docs/4.17.10#uniq
            var uniques = _.uniq(c);

            return uniques.reduce(function (h, k) {
                // equals this or 0 (instead of null or undefined)
                var a = o1[k] || 0;
                var b = o2[k] || 0;
                h[k] = a + b;
                return h;
            }, {});
        }
    }
});

/* unused harmony default export */ var _unused_webpack_default_export = ('');

/***/ }),

/***/ "SAcJ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pivx.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pivx = {
  symbol: 'pivx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.153-20.259H10v2.255h7.153v-2.255zM23 12.831l-.02-.5c-.225-2.92-2.433-4.831-5.52-4.831h-6.41v2.432l4.543-.014h1.688c1.92 0 3.07 1.076 3.07 2.913 0 1.873-1.161 2.976-3.096 2.976h-5.924V24.5h2.599v-6.274h3.542c3.238 0 5.528-2.187 5.528-5.395z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#5E4778" fill-rule="nonzero"/><path fill="#FFF" stroke="#FFF" d="M10.5 12.241h6.153v1.255H10.5v-1.255zm12 .59c0 2.974-2.11 4.895-5.028 4.895H13.43V24h-1.6v-7.693h5.425c2.175 0 3.595-1.292 3.595-3.476 0-2.158-1.42-3.413-3.57-3.413h-1.688l-4.043.013V8h5.91c2.93 0 5.04 1.857 5.04 4.831h.001z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pivx);


/***/ }),

/***/ "SCA0":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nav.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nav = {
  symbol: 'nav',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16.524 22h4.797L27 10h-4.797l-3.443 7.276L14.815 10h-4.797L5 22h4.797l2.929-7.005L16.524 22zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#7D59B5"/><path fill="#FFF" d="M21.32 22h-4.796l-3.798-7.005L9.797 22H5l5.018-12h4.797l3.945 7.276L22.203 10H27l-5.68 12z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nav);


/***/ }),

/***/ "SZfA":
/*!*****************************************!*\
  !*** /node_modules/qs/lib/stringify.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Utils = __webpack_require__(/*! ./utils */ "HHEV");

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
        return prefix + '[]';
    },
    indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) {
        return prefix;
    }
};

var defaults = {
    delimiter: '&',
    strictNullHandling: false,
    skipNulls: false,
    encode: true,
    encoder: Utils.encode
};

var stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots) {
    var obj = object;
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = obj.toISOString();
    } else if (obj === null) {
        if (strictNullHandling) {
            return encoder ? encoder(prefix) : prefix;
        }

        obj = '';
    }

    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || Utils.isBuffer(obj)) {
        if (encoder) {
            return [encoder(prefix) + '=' + encoder(obj)];
        }
        return [prefix + '=' + String(obj)];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (Array.isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        if (Array.isArray(obj)) {
            values = values.concat(stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));
        } else {
            values = values.concat(stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));
        }
    }

    return values;
};

module.exports = function (object, opts) {
    var obj = object;
    var options = opts || {};
    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;
    var sort = typeof options.sort === 'function' ? options.sort : null;
    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
    var objKeys;
    var filter;

    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (Array.isArray(options.filter)) {
        objKeys = filter = options.filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (options.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = options.arrayFormat;
    } else if ('indices' in options) {
        arrayFormat = options.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (sort) {
        objKeys.sort(sort);
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        keys = keys.concat(stringify(obj[key], key, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));
    }

    return keys.join(delimiter);
};


/***/ }),

/***/ "Svvh":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xmcc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xmcc = {
  symbol: 'xmcc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.682-25h-5.16l-1.534 2.652L14.459 7H9.297L4 16.175l5.129 8.88 3.477-6.019L16 24.896l3.384-5.86 3.485 6.06L28 16.216 22.682 7zM9.122 21.544L6.02 16.178l2.467-4.272 3.1 5.37-2.466 4.273v-.005zm.384-11.402l.818-1.421h3.091l1.555 2.693-2.364 4.099-3.1-5.371zm6.48 11.232l-2.362-4.102 2.364-4.097L17.044 15l1.31 2.273-2.366 4.097-.002.005zm1.017-9.96l1.558-2.693h3.091l.828 1.42-3.12 5.372-2.357-4.1zm7.968 6.537l-2.093 3.631-2.488-4.32 3.1-5.359.836 1.44 1.653 2.863-1.008 1.745z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#DD0632"/><path d="M22.682 7h-5.16l-1.534 2.652L14.459 7H9.297L4 16.175l5.129 8.88 3.477-6.019L16 24.896l3.384-5.86 3.485 6.06L28 16.216 22.682 7zM9.122 21.544L6.02 16.178l2.467-4.272 3.1 5.37-2.466 4.273v-.005zm.384-11.402l.818-1.421h3.091l1.555 2.693-2.364 4.099-3.1-5.371zm6.48 11.232l-2.362-4.102 2.364-4.097L17.044 15l1.31 2.273-2.366 4.097-.002.005zm1.017-9.96l1.558-2.693h3.091l.828 1.42-3.12 5.372-2.357-4.1zm7.968 6.537l-2.093 3.631-2.488-4.32 3.1-5.359.836 1.44 1.653 2.863-1.008 1.745z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xmcc);


/***/ }),

/***/ "Sx6G":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gto.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gto = {
  symbol: 'gto',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M15.547 10.221c-.785-1.35-1.503-2.268-2.177-2.764-.832-.613-1.685-.618-2.353.038-.635.623-.694 1.41-.207 2.154.127.193.29.384.488.572h-2.94c-.79 0-1.358.667-1.358 1.333 0 .776.68 1.334 1.358 1.334h7.018V11.11h1.132v1.778h7.134c.79 0 1.358-.667 1.358-1.334 0-.775-.68-1.333-1.358-1.333h-2.908c.192-.198.347-.4.462-.606.412-.74.295-1.508-.329-2.12-.668-.656-1.52-.65-2.352-.038-.675.496-1.393 1.415-2.177 2.764zm-1.316 0h-1.02c-.716-.406-1.213-.813-1.45-1.174-.206-.316-.19-.524.056-.767.241-.236.465-.235.873.066.443.325.962.952 1.541 1.875zm3.422 0c.58-.923 1.098-1.55 1.54-1.875.409-.3.633-.302.874-.066.27.266.306.497.136.801-.196.352-.647.748-1.33 1.14zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.624-18H8.02v7.222c-.008.739.288 1.45.82 1.972s1.257.813 2.01.806h4.527zm1.132 0v10h4.528a2.83 2.83 0 0 0 2.009-.806 2.725 2.725 0 0 0 .82-1.972v-7.223z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#7f27ff" r="16"/><path d="M15.376 14H8.02v7.222c-.008.739.288 1.45.82 1.972s1.257.813 2.01.806h4.527zm.17-3.779h.792c.784-1.35 1.502-2.268 2.177-2.764.832-.613 1.684-.618 2.352.038.624.612.741 1.38.33 2.12-.116.206-.27.408-.463.606h2.908c.679 0 1.358.558 1.358 1.333 0 .667-.569 1.334-1.358 1.334h-7.134V11.11h-1.132v1.778H8.358C7.68 12.888 7 12.33 7 11.554c0-.666.569-1.333 1.358-1.333h2.94a3.294 3.294 0 0 1-.488-.572c-.487-.744-.428-1.53.207-2.154.668-.656 1.52-.65 2.353-.038.674.496 1.392 1.415 2.177 2.764zm-1.315 0c-.58-.923-1.098-1.55-1.54-1.875-.409-.3-.633-.302-.874-.066-.247.243-.262.451-.055.767.236.361.733.768 1.449 1.174zm3.422 0h1.22c.683-.392 1.134-.788 1.33-1.14.17-.304.134-.535-.136-.8-.241-.237-.465-.236-.873.065-.443.325-.962.952-1.54 1.875zm-1.145 3.778h7.357v7.223a2.725 2.725 0 0 1-.82 1.972 2.83 2.83 0 0 1-2.01.806h-4.527z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gto);


/***/ }),

/***/ "T2pP":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mnz.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mnz = {
  symbol: 'mnz',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.569-10.684c-.132-.788-.394-1.577-.59-2.3l-.59-2.365-1.574-5.914c-.132-.46-.197-.92-.328-1.38-.066-.197-.131-.46-.328-.591-.197-.066-.394-.066-.59-.066h-2.427c-.393 0-.72 0-1.114.066-.328.065-.656.263-.787.591a.316.316 0 0 0 .13.394c.066.066.198 0 .263-.065.066 0 .263-.197.328-.197l3.082 11.367v.066c.066.263.197.525.393.591.132.066.263.132.46.132h3.278c.197.065.46-.066.394-.329zm-7.607 0c-.131-.788-.393-1.577-.59-2.3l-.59-2.365-1.574-5.914c-.131-.46-.197-.92-.328-1.38-.065-.197-.131-.46-.328-.591-.196-.066-.393-.066-.59-.066h-2.427c-.393 0-.72 0-1.114.066-.328.065-.656.263-.787.591a.316.316 0 0 0 .131.394c.066.066.197 0 .263-.065.065 0 .262-.197.328-.197l3.081 11.367v.066c.066.263.197.525.394.591.131.066.262.132.459.132h3.279c.196.065.459-.066.393-.329zm-6.033-2.497l-2.098-8.213c0-.132-.131-.263-.328-.263-.131 0-.262.131-.328.263L6.421 20.987v.132c0 .328.262.657.656.657h3.475a.63.63 0 0 0 .59-.46l.787-2.497zm7.738-.197l-2.295-8.28c0-.13-.131-.196-.262-.196-.132 0-.263.065-.263.197l-.459 1.642 2.295 8.017c.066.131.132.197.263.197.13 0 .196-.066.262-.197l.459-1.38z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#7F368A"/><path fill="#FFF" d="M25.569 21.316c.065.263-.197.394-.394.329h-3.278c-.197 0-.328-.066-.46-.132-.196-.066-.327-.328-.393-.591v-.066L17.962 9.49c-.065 0-.262.197-.328.197-.065.065-.197.131-.262.065-.131-.065-.197-.262-.131-.394.13-.328.459-.526.787-.591.393-.066.721-.066 1.114-.066h2.427c.196 0 .393 0 .59.066.197.131.262.394.328.591.13.46.196.92.328 1.38l1.573 5.914.59 2.365c.197.723.46 1.512.59 2.3zm-7.607 0c.066.263-.197.394-.393.329H14.29c-.197 0-.328-.066-.46-.132-.196-.066-.327-.328-.393-.591v-.066L10.356 9.49c-.066 0-.263.197-.328.197-.066.065-.197.131-.263.065-.13-.065-.196-.262-.13-.394.13-.328.458-.526.786-.591.394-.066.721-.066 1.115-.066h2.426c.197 0 .394 0 .59.066.197.131.263.394.328.591.131.46.197.92.328 1.38l1.574 5.914.59 2.365c.197.723.459 1.512.59 2.3zm-6.033-2.497l-.787 2.497a.63.63 0 0 1-.59.46H7.077a.658.658 0 0 1-.656-.657v-.132l2.754-10.381c.066-.132.197-.263.328-.263.197 0 .328.131.328.263l2.098 8.213zm7.738-.197l-.459 1.38c-.066.131-.131.197-.262.197s-.197-.066-.263-.197l-2.295-8.017.46-1.642c0-.132.13-.197.262-.197.13 0 .262.065.262.197l2.295 8.279z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mnz);


/***/ }),

/***/ "T5/H":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/crpt.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Crpt = {
  symbol: 'crpt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm5.833-22.256l.576-.588c-1.604-1.343-3.577-2.099-5.634-2.099-4.647 0-8.472 3.653-8.76 8.397h.822c.288-4.24 3.743-7.557 7.938-7.557 1.85 0 3.62.63 5.058 1.847zm-.288 2.771l.577-.587a6.655 6.655 0 0 0-5.347-2.73c-3.702 0-6.704 3.066-6.704 6.802 0 3.778 3.002 6.843 6.704 6.843 2.098 0 4.071-1.008 5.347-2.729l-.577-.588a5.865 5.865 0 0 1-4.77 2.478c-3.249 0-5.881-2.688-5.881-6.004 0-3.275 2.632-5.962 5.88-5.962a5.863 5.863 0 0 1 4.771 2.477zm.946-2.141c.206.21.37.42.535.63l.576-.588c-.165-.21-.33-.42-.534-.63zm-5.757 14.61a8.688 8.688 0 0 0 5.634-2.099l-.576-.587a7.767 7.767 0 0 1-5.058 1.847c-4.195 0-7.65-3.317-7.938-7.557h-.822c.288 4.744 4.113 8.396 8.76 8.396zm5.757-3.316l.577.588c.205-.21.37-.42.534-.63l-.576-.588c-.164.21-.329.42-.535.63zM6.823 16c0-5.584 4.482-10.16 9.952-10.16 2.961 0 5.757 1.344 7.65 3.695L25 8.947C22.944 6.427 19.941 5 16.775 5 10.853 5 6 9.912 6 16c0 6.045 4.812 11 10.775 11 3.208 0 6.17-1.428 8.225-3.947l-.576-.587c-1.892 2.393-4.688 3.694-7.65 3.694-5.469 0-9.951-4.576-9.951-10.16z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#00bdcd" r="16"/><path d="M21.833 9.744a7.764 7.764 0 0 0-5.058-1.847c-4.195 0-7.65 3.317-7.938 7.557h-.822c.288-4.744 4.113-8.397 8.76-8.397 2.057 0 4.03.756 5.634 2.1zm-.288 2.771a5.863 5.863 0 0 0-4.77-2.477c-3.249 0-5.881 2.687-5.881 5.962 0 3.316 2.632 6.004 5.88 6.004 1.886 0 3.659-.92 4.771-2.478l.577.588c-1.276 1.721-3.25 2.73-5.347 2.73-3.702 0-6.704-3.066-6.704-6.844 0-3.736 3.002-6.802 6.704-6.802a6.655 6.655 0 0 1 5.347 2.73zm.946-2.141l.577-.588c.205.21.37.42.534.63l-.576.587a7.357 7.357 0 0 0-.535-.63zm-5.757 14.61c-4.647 0-8.472-3.652-8.76-8.396h.822c.288 4.24 3.743 7.557 7.938 7.557 1.85 0 3.62-.63 5.058-1.847l.576.587a8.688 8.688 0 0 1-5.634 2.1zm5.757-3.316c.206-.21.37-.42.535-.63l.576.587c-.165.21-.329.42-.534.63zM6.823 16c0 5.584 4.482 10.16 9.952 10.16 2.961 0 5.757-1.301 7.65-3.694l.575.587C22.944 25.573 19.983 27 16.775 27 10.812 27 6 22.045 6 16 6 9.912 10.853 5 16.775 5 19.94 5 22.945 6.427 25 8.947l-.576.588c-1.892-2.351-4.688-3.695-7.65-3.695-5.47 0-9.951 4.576-9.951 10.16z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Crpt);


/***/ }),

/***/ "TAkA":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bnb.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bnb = {
  symbol: 'bnb',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.884-17.596L16 10.52l3.886 3.886 2.26-2.26L16 6l-6.144 6.144 2.26 2.26zM6 16l2.26 2.26L10.52 16l-2.26-2.26L6 16zm6.116 1.596l-2.263 2.257.003.003L16 26l6.146-6.146v-.001l-2.26-2.26L16 21.48l-3.884-3.884zM21.48 16l2.26 2.26L26 16l-2.26-2.26L21.48 16zm-3.188-.002h.001L16 13.706 14.305 15.4l-.195.195-.401.402-.004.003.004.003 2.29 2.291 2.294-2.293.001-.001-.002-.001z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F3BA2F"/><path fill="#FFF" d="M12.116 14.404L16 10.52l3.886 3.886 2.26-2.26L16 6l-6.144 6.144 2.26 2.26zM6 16l2.26-2.26L10.52 16l-2.26 2.26L6 16zm6.116 1.596L16 21.48l3.886-3.886 2.26 2.259L16 26l-6.144-6.144-.003-.003 2.263-2.257zM21.48 16l2.26-2.26L26 16l-2.26 2.26L21.48 16zm-3.188-.002h.002V16L16 18.294l-2.291-2.29-.004-.004.004-.003.401-.402.195-.195L16 13.706l2.293 2.293z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bnb);


/***/ }),

/***/ "TD4r":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/appc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Appc = {
  symbol: 'appc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.772-10.117l-1.973-5.309h1.178a.849.849 0 0 0 .85-.836c0-.21-.086-.413-.237-.561s-.358-.233-.573-.233h-1.84l-.295-.826h2.095a.839.839 0 0 0 .846-.807c.001-.222-.088-.434-.248-.59s-.376-.244-.602-.243h-2.72L18.78 8.51a3.576 3.576 0 0 0-1.057-1.461 2.499 2.499 0 0 0-1.663-.548 2.57 2.57 0 0 0-1.671.548 3.609 3.609 0 0 0-1.06 1.46l-1.543 4.004H9.082a.81.81 0 0 0-.817.797c0 .458.379.829.847.829h2.053l-.316.804h-1.84a.809.809 0 0 0-.818.8c0 .454.374.821.836.823h1.181l-2.006 5.316c-.123.3-.191.618-.202.941.02.453.222.88.56 1.19a2.04 2.04 0 0 0 1.34.483 1.8 1.8 0 0 0 1.84-1.305l.776-2.269h7.144l.777 2.323a1.813 1.813 0 0 0 1.84 1.24c.31.007.615-.07.884-.22.233-.17.44-.37.614-.598a1.6 1.6 0 0 0 .225-.844 5.446 5.446 0 0 0-.228-.927zM13.66 17.386l2.385-7.112 2.43 7.112z"  />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#fd875e" r="16"/><path d="M13.66 17.386l2.386-7.112 2.43 7.112zm10.112 4.497l-1.973-5.309h1.178a.849.849 0 0 0 .85-.836c0-.21-.086-.413-.237-.561s-.358-.233-.573-.233h-1.84l-.295-.826h2.095a.839.839 0 0 0 .846-.807c.001-.222-.088-.434-.248-.59s-.376-.244-.602-.243h-2.72L18.78 8.51a3.576 3.576 0 0 0-1.057-1.461 2.499 2.499 0 0 0-1.663-.548 2.57 2.57 0 0 0-1.671.548 3.609 3.609 0 0 0-1.06 1.46l-1.543 4.004H9.082a.81.81 0 0 0-.817.797c0 .458.379.829.847.829h2.053l-.316.804h-1.84a.809.809 0 0 0-.818.8c0 .454.374.821.836.823h1.181l-2.006 5.316c-.123.3-.191.618-.202.941.02.453.222.88.56 1.19a2.04 2.04 0 0 0 1.34.483 1.8 1.8 0 0 0 1.84-1.305l.776-2.269h7.144l.777 2.323a1.813 1.813 0 0 0 1.84 1.24c.31.007.615-.07.884-.22.233-.17.44-.37.614-.598a1.6 1.6 0 0 0 .225-.844 5.446 5.446 0 0 0-.228-.927z" fill="#fefefe"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Appc);


/***/ }),

/***/ "TFsn":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rhoc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rhoc = {
  symbol: 'rhoc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.816 9.24c-.7-.93-1.782-1.6-2.963-1.648-1.232-.072-2.446.513-3.251 1.429-.61.703-.901 1.635-.912 2.557a1036.45 1036.45 0 0 0-.002 5.29c-.02.234.19.398.411.373 4.992.014 9.986-.016 14.978.016a37.333 37.333 0 0 0 .077 3.27c-1.424 1.036-3.092 1.767-4.836 2.039-.227.051-.61-.01-.66.302-.021.585-.002 1.173-.009 1.759-.033.206.128.417.343.414a11.207 11.207 0 0 0 5.844-2.215c.624.81 1.515 1.45 2.544 1.604 1.455.259 2.984-.443 3.854-1.612.55-.744.745-1.686.741-2.596-.005-1.675.015-3.35-.01-5.023.019-.266-.231-.401-.468-.38-4.976-.01-9.952.005-14.926-.009-.03-.985.043-1.974-.064-2.956-.011-.136-.043-.323.1-.404 1.525-1.042 3.28-1.796 5.125-2 .2-.005.292-.23.278-.404 0-.56.014-1.122-.006-1.681.007-.234-.223-.368-.435-.326-2.076.17-4.088.953-5.753 2.201zM6.7 11.882c.024-.942.886-1.77 1.833-1.732.97-.018 1.843.835 1.862 1.801.02 1.008.008 2.015.006 3.023-1.233.027-2.465.009-3.699.01a417.805 417.805 0 0 1-.002-3.102zm15.709 5.29c1.232-.003 2.464-.007 3.696.002.01.985.004 1.97.004 2.955.008.75-.463 1.497-1.175 1.761-.773.299-1.717.003-2.19-.674a1.843 1.843 0 0 1-.34-1.097c.003-.982-.004-1.965.005-2.948z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#CC1E46"/><path fill="#FFF" d="M11.816 9.24a11.174 11.174 0 0 1 5.753-2.2c.212-.043.442.091.435.325.02.56.006 1.12.006 1.68.014.174-.078.4-.278.405-1.846.204-3.6.958-5.124 2-.144.081-.112.268-.1.404.106.982.034 1.971.063 2.956 4.974.014 9.95-.002 14.926.008.237-.02.487.115.468.38.025 1.675.005 3.35.01 5.024.004.91-.19 1.852-.741 2.596-.87 1.169-2.4 1.87-3.854 1.612-1.03-.154-1.92-.793-2.544-1.604a11.207 11.207 0 0 1-5.844 2.215c-.215.003-.376-.208-.343-.414.007-.586-.012-1.174.01-1.76.05-.31.432-.25.659-.301 1.744-.272 3.412-1.003 4.836-2.04a37.333 37.333 0 0 1-.077-3.269c-4.992-.032-9.986-.002-14.978-.016-.22.025-.432-.14-.411-.373-.004-1.763-.003-3.527.002-5.29.01-.922.301-1.854.912-2.557.805-.916 2.019-1.501 3.251-1.429 1.18.047 2.263.718 2.963 1.648zM6.7 11.882c-.002 1.033-.003 2.067.002 3.102 1.234-.001 2.466.017 3.699-.01.002-1.008.015-2.015-.006-3.023-.019-.966-.892-1.82-1.862-1.8-.947-.039-1.81.79-1.833 1.73zm15.709 5.29c-.01.982-.002 1.965-.006 2.947-.006.393.113.777.34 1.097.474.677 1.418.973 2.19.674.713-.264 1.184-1.01 1.176-1.76 0-.986.005-1.97-.004-2.956-1.232-.01-2.464-.005-3.696-.003z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rhoc);


/***/ }),

/***/ "TNsB":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ark.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ark = {
  symbol: 'ark',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.053-18.653L27 25 15.996 7 5 24.891l10.947-11.544zm1.588 4.585v.017l-1.662-1.953-1.76 1.936h3.422zm-6.6 3.177h9.859l-1.998-2.045-5.92.025v.009l-1.94 1.987v.024z"  />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F70000"/><path fill="#FFF" d="M15.947 13.347L5 24.89 15.996 7 27 25 15.947 13.347zm1.588 4.585h-3.422l1.76-1.936 1.662 1.953v-.017zm-6.6 3.177v-.024l1.941-1.987v-.009l5.92-.025 1.998 2.045h-9.858z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ark);


/***/ }),

/***/ "TPij":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/qtum.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Qtum = {
  symbol: 'qtum',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  fill-rule="evenodd" d="M25.313 23.636a1.2 1.2 0 0 0-.15.582c0 .656.524 1.188 1.169 1.188s1.168-.532 1.168-1.188c0-.656-.523-1.188-1.168-1.188a1.15 1.15 0 0 0-.774.298l-1.917-1.707 1.497-4.83a.786.786 0 0 0 .805-.792.786.786 0 0 0-.831-.79l-1.276-4.188a.795.795 0 0 0 .354-.665.786.786 0 0 0-.778-.792.77.77 0 0 0-.536.218l-3.55-2.61a.8.8 0 0 0 .094-.38.786.786 0 0 0-.778-.792.783.783 0 0 0-.766.644h-4.31A.783.783 0 0 0 12.801 6a.786.786 0 0 0-.779.792.8.8 0 0 0 .106.398L8.555 9.77a.769.769 0 0 0-.524-.206.786.786 0 0 0-.779.792c0 .302.166.564.41.698l-1.282 4.16A.786.786 0 0 0 5.5 16a.786.786 0 0 0 .855.79l1.303 4.16a.794.794 0 0 0-.406.695c0 .437.349.792.779.792a.768.768 0 0 0 .516-.2l3.546 2.641a.8.8 0 0 0-.07.33c0 .438.348.793.778.793.38 0 .697-.277.765-.644h4.31a.783.783 0 0 0 .766.644c.43 0 .778-.355.778-.792a.8.8 0 0 0-.072-.333l3.992-2.995 1.973 1.756zm-6.605.783a.776.776 0 0 0-.36.055l-2.047-2.895a.795.795 0 0 0 .188-.395l3.45-.502a.794.794 0 0 0 .256.388l-1.487 3.349zm.393.15a.78.78 0 0 0-.025-.018l1.473-3.316a.77.77 0 0 0 .753-.295l1.668.726-3.87 2.902zm-1.065.141a.795.795 0 0 0-.134.25H13.54a.795.795 0 0 0-.134-.25l2.06-2.912a.766.766 0 0 0 .509 0l2.06 2.912zm6.728-8.03l-1.226 3.956-.266-3.886a.791.791 0 0 0 .529-.75.791.791 0 0 0-.535-.752l.27-3.875 1.206 3.961a.795.795 0 0 0-.357.666c0 .289.152.542.38.68zm-2.254-1.277a.796.796 0 0 0-.267.597c0 .227.095.432.246.577l-1.62 3.109a.768.768 0 0 0-.31-.012l-1.434-3.053A.796.796 0 0 0 19.42 16a.796.796 0 0 0-.286-.613l1.392-3.067a.77.77 0 0 0 .4-.022l1.584 3.105zm.374 1.377l.311 4.554-1.74-.758a.796.796 0 0 0-.243-.703l1.618-3.105a.763.763 0 0 0 .054.012zm-.006-1.558a.763.763 0 0 0-.02.003l-1.603-3.14a.797.797 0 0 0 .195-.695l1.338-.559a.781.781 0 0 0 .376.277l-.286 4.114zm-4.108 1.56l1.433 3.052a.794.794 0 0 0-.278.45l-3.468.504a.795.795 0 0 0-.145-.254l2.123-3.77a.767.767 0 0 0 .335.017zm.01-1.561a.77.77 0 0 0-.365.021l-2.139-3.835a.794.794 0 0 0 .164-.251l3.475.505a.795.795 0 0 0 .262.483l-1.396 3.077zm-.682 1.346l-2.106 3.74a.766.766 0 0 0-.47-.023l-2.17-3.725A.796.796 0 0 0 13.58 16c0-.21-.08-.401-.212-.543l2.207-3.827a.77.77 0 0 0 .367-.019l2.14 3.838a.797.797 0 0 0-.22.551c0 .222.09.423.236.567zm-11.377.085A.795.795 0 0 0 7.058 16a.795.795 0 0 0-.315-.636l1.223-3.975.303 3.834a.789.789 0 0 0-.627.777c0 .38.263.698.614.774l-.293 3.844-1.242-3.966zm3.888 3.026l-1.65-3.106a.796.796 0 0 0 .24-.572.796.796 0 0 0-.253-.584l1.679-3.09a.771.771 0 0 0 .292-.006l1.392 3.066a.796.796 0 0 0-.287.614c0 .256.12.484.305.629l-1.37 3.06a.768.768 0 0 0-.348-.011zm.324 1.55l1.439 3.319a.78.78 0 0 0-.032.023l-3.575-2.662a.803.803 0 0 0 .039-.365l1.349-.588a.772.772 0 0 0 .78.272zm-.943-.633l-1.33.58a.784.784 0 0 0-.33-.263l.314-4.1 1.613 3.036a.796.796 0 0 0-.267.747zm1.53-.299a.795.795 0 0 0-.223-.411l1.39-3.101a.772.772 0 0 0 .33-.023l2.165 3.717a.794.794 0 0 0-.197.312l-3.465-.494zm-.02.397l3.454.493c.025.15.092.285.188.393l-2.048 2.895a.765.765 0 0 0-.353-.056l-1.463-3.374a.794.794 0 0 0 .222-.35zm-1.503-9.322a.808.808 0 0 0 .272.791l-1.616 2.976-.32-4.051a.784.784 0 0 0 .333-.272l1.33.556zm.95-.595a.768.768 0 0 0-.772.242l-1.37-.573a.814.814 0 0 0-.036-.343l3.553-2.566-1.375 3.24zm.582.873L15 11.154c.049.12.125.224.221.306l-2.182 3.786a.766.766 0 0 0-.378-.025l-1.396-3.077a.795.795 0 0 0 .263-.495zm-.24-.682l1.438-3.386a.775.775 0 0 0 .39-.065l1.99 2.848a.796.796 0 0 0-.16.398l-3.465.494a.794.794 0 0 0-.192-.289zm9.323-.211l-1.471-3.232 3.528 2.594a.804.804 0 0 0-.029.347l-1.36.568a.772.772 0 0 0-.668-.277zm-.656.51l-3.46-.502a.796.796 0 0 0-.16-.4l1.99-2.848a.765.765 0 0 0 .41.062l1.51 3.313a.793.793 0 0 0-.29.376zM18.02 7.27l-1.994 2.853a.765.765 0 0 0-.61 0L13.422 7.27a.795.795 0 0 0 .119-.23h4.36a.795.795 0 0 0 .12.23zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2E9AD0"/><path fill="#FFF" fill-rule="nonzero" d="M25.313 23.636L23.34 21.88l-3.992 2.995a.8.8 0 0 1 .072.333.786.786 0 0 1-.778.792.783.783 0 0 1-.766-.644h-4.31a.783.783 0 0 1-.765.644.786.786 0 0 1-.779-.792.8.8 0 0 1 .071-.331l-3.546-2.64a.768.768 0 0 1-.516.199.786.786 0 0 1-.779-.792c0-.3.164-.561.406-.696l-1.303-4.16A.786.786 0 0 1 5.5 16a.786.786 0 0 1 .88-.785l1.281-4.161a.794.794 0 0 1-.409-.698c0-.437.349-.792.779-.792.202 0 .386.078.524.206l3.573-2.58a.799.799 0 0 1-.106-.398c0-.437.349-.792.779-.792.38 0 .697.277.765.644h4.31A.783.783 0 0 1 18.642 6c.43 0 .778.355.778.792a.8.8 0 0 1-.095.38l3.55 2.61a.77.77 0 0 1 .537-.218c.43 0 .778.355.778.792a.795.795 0 0 1-.354.665l1.276 4.189a.777.777 0 0 1 .83.79.786.786 0 0 1-.804.792l-1.497 4.83 1.917 1.706a1.15 1.15 0 0 1 .774-.298c.645 0 1.168.532 1.168 1.188 0 .656-.523 1.188-1.168 1.188a1.178 1.178 0 0 1-1.168-1.188c0-.212.054-.41.15-.582zm-6.605.783l1.487-3.349a.794.794 0 0 1-.256-.388l-3.45.502a.795.795 0 0 1-.188.395l2.047 2.895a.765.765 0 0 1 .36-.055zm.393.15l3.869-2.903-1.668-.726a.773.773 0 0 1-.753.295l-1.473 3.316a.78.78 0 0 1 .025.017zm-1.065.141l-2.06-2.912a.766.766 0 0 1-.51 0l-2.06 2.912a.795.795 0 0 1 .135.25h4.36a.795.795 0 0 1 .135-.25zm6.728-8.03a.794.794 0 0 1-.379-.68c0-.28.142-.525.357-.666l-1.206-3.96-.27 3.874c.31.104.535.401.535.752a.791.791 0 0 1-.529.75l.266 3.886 1.226-3.956zm-2.254-1.277l-1.584-3.105a.766.766 0 0 1-.4.022l-1.392 3.067a.796.796 0 0 1 .286.613.796.796 0 0 1-.295.62l1.435 3.054a.771.771 0 0 1 .31.012l1.619-3.11a.796.796 0 0 1-.246-.576c0-.238.104-.452.267-.597zm.374 1.377a.763.763 0 0 1-.054-.012l-1.617 3.104a.796.796 0 0 1 .243.704l1.74.758-.312-4.554zm-.006-1.558l.286-4.114a.781.781 0 0 1-.376-.277l-1.338.559a.81.81 0 0 1-.195.695l1.604 3.14a.763.763 0 0 1 .019-.003zm-4.108 1.56a.771.771 0 0 1-.335-.018l-2.123 3.77a.8.8 0 0 1 .145.254l3.468-.504c.04-.181.14-.34.278-.45L18.77 16.78zm.01-1.561l1.397-3.077a.795.795 0 0 1-.262-.483l-3.475-.505a.794.794 0 0 1-.164.251l2.139 3.835a.767.767 0 0 1 .366-.021zm-.682 1.346a.796.796 0 0 1-.235-.567c0-.214.084-.409.22-.551l-2.14-3.838a.767.767 0 0 1-.368.019l-2.207 3.827a.797.797 0 0 1 .212.543.796.796 0 0 1-.227.559l2.168 3.725a.768.768 0 0 1 .47.023l2.107-3.74zm-11.377.085l1.242 3.966.293-3.844A.79.79 0 0 1 7.642 16a.79.79 0 0 1 .627-.777l-.303-3.834-1.223 3.975a.795.795 0 0 1 .315.636c0 .27-.134.51-.337.652zm3.888 3.026a.77.77 0 0 1 .348.012l1.37-3.061a.796.796 0 0 1-.305-.629c0-.248.112-.469.287-.614l-1.392-3.066a.77.77 0 0 1-.292.005l-1.679 3.091A.796.796 0 0 1 9.2 16a.796.796 0 0 1-.24.572l1.65 3.106zm.324 1.55a.769.769 0 0 1-.78-.273l-1.35.588a.813.813 0 0 1-.038.365l3.575 2.662a.78.78 0 0 1 .032-.023l-1.44-3.32zm-.943-.633a.796.796 0 0 1 .267-.748l-1.613-3.035-.313 4.1a.784.784 0 0 1 .328.263l1.331-.58zm1.53-.299l3.465.494a.794.794 0 0 1 .197-.312l-2.164-3.717a.767.767 0 0 1-.332.023l-1.39 3.101a.79.79 0 0 1 .224.411zm-.02.397a.794.794 0 0 1-.222.35l1.463 3.375a.776.776 0 0 1 .353.056l2.048-2.895a.795.795 0 0 1-.188-.393l-3.454-.493zm-1.503-9.322l-1.331-.556a.784.784 0 0 1-.333.272l.32 4.051 1.616-2.976a.796.796 0 0 1-.272-.79zm.95-.595l1.375-3.24-3.553 2.566a.803.803 0 0 1 .036.343l1.37.573a.771.771 0 0 1 .772-.242zm.582.873a.795.795 0 0 1-.263.495l1.396 3.077a.77.77 0 0 1 .378.025l2.182-3.786a.794.794 0 0 1-.22-.306l-3.473.495zm-.24-.682c.084.08.15.179.193.289l3.465-.494a.796.796 0 0 1 .16-.398l-1.99-2.848a.765.765 0 0 1-.39.065l-1.437 3.386zm9.323-.211a.775.775 0 0 1 .668.277l1.36-.568a.813.813 0 0 1 .029-.347L19.14 7.524l1.471 3.232zm-.656.51a.793.793 0 0 1 .29-.375l-1.51-3.313a.774.774 0 0 1-.41-.062l-1.99 2.848a.81.81 0 0 1 .16.4l3.46.503zM18.02 7.27a.795.795 0 0 1-.118-.23H13.54a.795.795 0 0 1-.119.23l1.994 2.853a.765.765 0 0 1 .61 0L18.02 7.27z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Qtum);


/***/ }),

/***/ "TWwh":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tel.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tel = {
  symbol: 'tel',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.08-20.522L19.026 6.56c-.633-.512-1.78-.71-2.553-.438l-7.42 2.606c-.772.27-1.522 1.134-1.664 1.918l-1.36 7.524c-.143.784.257 1.84.89 2.353l6.058 4.917c.632.513 1.78.71 2.552.438l7.419-2.605c.772-.27 1.522-1.134 1.664-1.918l1.36-7.524c.14-.779-.26-1.84-.892-2.353zm-6.311 3.378l-2.83-.004-.526 2.662c-.165.825-.21 1.29.64 1.29h1.914l-.4 1.69h-2.288c-1.353 0-2.233-1.263-1.881-3.042.14-.699.56-2.593.56-2.593h-1.239l.257-1.319a5.759 5.759 0 0 0 2.748-2.225h.915l-.4 2.016 2.832-.004z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#14c8ff" r="16"/><path d="M25.08 11.478c.633.513 1.032 1.574.892 2.353l-1.36 7.524c-.142.784-.892 1.647-1.664 1.918l-7.419 2.605c-.772.271-1.92.075-2.552-.438l-6.058-4.917c-.633-.513-1.033-1.569-.89-2.353l1.36-7.524C7.53 9.862 8.28 9 9.053 8.728l7.42-2.606c.773-.272 1.92-.074 2.553.438zm-6.311 3.378l.302-1.53-2.832.005.4-2.016h-.915a5.759 5.759 0 0 1-2.748 2.225l-.257 1.319h1.238s-.419 1.894-.56 2.593c-.35 1.78.53 3.042 1.882 3.042h2.288l.4-1.69h-1.914c-.85 0-.805-.465-.64-1.29l.527-2.662z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tel);


/***/ }),

/***/ "TYvN":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lsk.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lsk = {
  symbol: 'lsk',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.751-7.042l2.467-2.786c.042-.042.014-.111-.055-.111h-2.717a.105.105 0 0 1-.056-.028l-2.301-2.59c-.014-.029-.028-.057-.014-.084l3.854-6.645c.014-.028.014-.056 0-.07l-1.594-2.758c-.028-.041-.097-.041-.125 0L8.01 19.721a.09.09 0 0 0 0 .083l4.575 5.168c.014.014.028.028.056.028h1.552c.014-.014.042-.028.056-.042zm1.69-18.916L14.333 8.8c-.014.028-.014.056 0 .07l1.663 2.869 4.409 7.606c.014.027.014.055-.014.083l-2.329 2.619-2.481 2.814c-.042.041-.014.111.055.111h3.715a.105.105 0 0 0 .056-.028l4.574-5.168c.014-.027.028-.055.014-.083L16.051 6.042c-.014-.056-.083-.056-.111 0z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#0d4ea0" r="16"/><path d="M14.249 24.958c-.014.014-.042.028-.056.042h-1.552c-.028 0-.042-.014-.056-.028L8.01 19.804a.09.09 0 0 1 0-.083l5.698-9.835c.028-.041.097-.041.125 0l1.594 2.758c.014.014.014.042 0 .07l-3.854 6.645c-.014.027 0 .055.014.083l2.301 2.591a.105.105 0 0 0 .056.028h2.717c.07 0 .097.07.055.111zm1.69-18.916c.029-.056.098-.056.112 0l7.943 13.65c.014.029 0 .057-.014.084l-4.574 5.168a.105.105 0 0 1-.056.028h-3.715c-.07 0-.097-.07-.055-.111l2.481-2.814 2.329-2.619c.028-.028.028-.056.014-.083l-4.409-7.606-1.663-2.87c-.014-.013-.014-.041 0-.07z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lsk);


/***/ }),

/***/ "TroT":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/utk.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Utk = {
  symbol: 'utk',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.647-9.702h3.294V9.028H21.5V6h-11v3.028h3.853zM13.466 26h5.104c1.988 0 2.93-.956 2.93-2.978V9.896h-2.893v12.992c0 .32-.105.426-.419.426h-4.34c-.313 0-.418-.107-.418-.426V9.896h-2.893v13.126c0 2.022.94 2.978 2.93 2.978z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#30367a" r="16"/><path d="M14.353 22.298V9.028H10.5V6h11v3.028h-3.853v13.27zM13.466 26c-1.989 0-2.93-.956-2.93-2.978V9.896h2.894v12.992c0 .32.105.426.419.426h4.339c.314 0 .42-.107.42-.426V9.896H21.5v13.126c0 2.022-.942 2.978-2.93 2.978z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Utk);


/***/ }),

/***/ "Tz5f":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/hpb.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Hpb = {
  symbol: 'hpb',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.572-16.728c-.153.75.613.55.613.55 3.06-.7 3.877-3.65 3.877-3.65.824-2.653-.433-4.33-1.058-4.964a1.95 1.95 0 0 0-.851-.507c-1.135-.323-2.632-.03-2.632-.03l-4.234.65-.602.079a1.338 1.338 0 0 0-.317.082l-.612.24c3.061-.15 4.54 1.75 4.54 1.75 2.603 2.85 1.276 5.8 1.276 5.8zm-.189 1.644c-.58-.511-.795.234-.794.236-.946 2.937 1.227 5.13 1.227 5.13 1.91 2.046 4.023 1.841 4.898 1.637.328-.075.63-.233.876-.458.863-.792 1.368-2.203 1.368-2.203l1.588-3.9.238-.547c.043-.1.073-.203.09-.31l.102-.638c-1.429 2.658-3.851 2.937-3.851 2.937-3.83.738-5.742-1.884-5.742-1.884zm-1.385-.947c.74-.243.182-.794.18-.794-2.145-2.252-5.162-1.476-5.162-1.476-2.757.623-3.614 2.526-3.863 3.373a1.867 1.867 0 0 0-.022.978c.277 1.123 1.284 2.25 1.284 2.25l2.686 3.273.369.472a1.3 1.3 0 0 0 .23.229l.517.4c-1.658-2.527-.714-4.73-.714-4.73 1.225-3.632 4.495-3.975 4.495-3.975zm2.108.19c-.733.262-.16.798-.163.798 2.202 2.196 5.198 1.346 5.198 1.346 2.74-.69 3.548-2.615 3.775-3.468.087-.32.087-.656 0-.976-.308-1.118-1.342-2.218-1.342-2.218l-2.77-3.206-.381-.462a1.336 1.336 0 0 0-.236-.223l-.528-.387c1.724 2.484.838 4.711.838 4.711-1.13 3.66-4.39 4.085-4.39 4.085zm-1.638.603c.175-.746-.598-.562-.598-.565-3.078.624-3.97 3.554-3.97 3.554-.89 2.631.323 4.337.933 4.987.228.244.516.426.837.527 1.127.351 2.63.095 2.63.095l4.25-.546.603-.064a1.35 1.35 0 0 0 .32-.073l.617-.225c-3.066.075-4.495-1.86-4.495-1.86-2.528-2.913-1.127-5.83-1.127-5.83zm.109-1.536c.587.503.79-.247.79-.245.904-2.95-1.3-5.112-1.3-5.112-1.939-2.019-4.049-1.786-4.921-1.569a1.95 1.95 0 0 0-.872.47c-.85.803-1.335 2.221-1.335 2.221l-1.532 3.924-.23.55c-.04.1-.07.204-.085.31l-.092.64c1.39-2.677 3.808-2.989 3.808-2.989 3.817-.796 5.769 1.8 5.769 1.8z"/><path d="M17.106 16.159s3.26-.424 4.39-4.085c0 0 .887-2.227-.837-4.711l.528.387c.087.065.167.14.236.223l.381.462 2.77 3.206s1.034 1.1 1.342 2.218c.087.32.087.656 0 .976-.227.853-1.034 2.778-3.775 3.468 0 0-2.996.85-5.198-1.346.002 0-.57-.536.163-.798zm-1.638.604s-1.401 2.916 1.127 5.829c0 0 1.429 1.935 4.495 1.86l-.618.225a1.35 1.35 0 0 1-.319.073l-.603.064-4.25.546s-1.503.257-2.63-.095a1.952 1.952 0 0 1-.837-.527c-.61-.65-1.823-2.356-.932-4.987 0 0 .89-2.93 3.969-3.554 0 .003.773-.18.598.566zm.109-1.537s-1.952-2.596-5.769-1.8c0 0-2.418.312-3.808 2.99l.092-.641a1.3 1.3 0 0 1 .086-.31l.23-.55 1.53-3.924s.485-1.418 1.336-2.222a1.95 1.95 0 0 1 .872-.469c.872-.217 2.982-.45 4.92 1.569 0 0 2.205 2.161 1.302 5.112 0-.002-.204.748-.791.245z" fill-rule="nonzero" opacity=".5"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1591ca" r="16"/><g fill="#fff" fill-rule="nonzero"><path d="M16.572 15.272s1.327-2.95-1.275-5.8c0 0-1.48-1.9-4.54-1.75l.611-.24c.102-.04.209-.068.317-.082l.602-.078 4.234-.65s1.497-.294 2.632.03c.323.093.617.268.85.506.626.634 1.883 2.311 1.06 4.964 0 0-.817 2.95-3.878 3.65 0 0-.766.2-.613-.55zm-.189 1.644s1.913 2.623 5.742 1.884c0 0 2.422-.279 3.851-2.937l-.102.639c-.017.106-.047.21-.09.309l-.238.547-1.588 3.9s-.505 1.411-1.368 2.203a1.952 1.952 0 0 1-.876.459c-.875.203-2.988.408-4.898-1.638 0 0-2.173-2.192-1.227-5.13 0-.002.214-.747.794-.236zm-1.385-.947s-3.27.344-4.495 3.975c0 0-.944 2.204.714 4.73l-.517-.4a1.3 1.3 0 0 1-.23-.229l-.37-.472L7.416 20.3s-1.007-1.127-1.284-2.25c-.08-.322-.072-.66.022-.978.249-.847 1.106-2.75 3.863-3.372 0 0 3.017-.777 5.162 1.476.002 0 .56.55-.18.793z"/><path d="M17.106 16.159s3.26-.424 4.39-4.085c0 0 .887-2.227-.837-4.711l.528.387c.087.065.167.14.236.223l.381.462 2.77 3.206s1.034 1.1 1.342 2.218c.087.32.087.656 0 .976-.227.853-1.034 2.778-3.775 3.468 0 0-2.996.85-5.198-1.346.002 0-.57-.536.163-.798zm-1.638.604s-1.401 2.916 1.127 5.829c0 0 1.429 1.935 4.495 1.86l-.618.225a1.35 1.35 0 0 1-.319.073l-.603.064-4.25.546s-1.503.257-2.63-.095a1.952 1.952 0 0 1-.837-.527c-.61-.65-1.823-2.356-.932-4.987 0 0 .89-2.93 3.969-3.554 0 .003.773-.18.598.566zm.109-1.537s-1.952-2.596-5.769-1.8c0 0-2.418.312-3.808 2.99l.092-.641a1.3 1.3 0 0 1 .086-.31l.23-.55 1.53-3.924s.485-1.418 1.336-2.222a1.95 1.95 0 0 1 .872-.469c.872-.217 2.982-.45 4.92 1.569 0 0 2.205 2.161 1.302 5.112 0-.002-.204.748-.791.245z" opacity=".5"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Hpb);


/***/ }),

/***/ "U1LX":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sub.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sub = {
  symbol: 'sub',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM12.117 5.314L8.1 8.328a.248.248 0 0 0 0 .4l15.801 11.853-.894.67a.25.25 0 1 0 .3.402l1.162-.87a.252.252 0 0 0 0-.404L8.67 8.526l3.598-2.697 1.106.827a.25.25 0 1 0 .3-.4l-1.255-.942a.25.25 0 0 0-.15-.05.24.24 0 0 0-.151.05zm4.017 0l-5.19 3.892a.25.25 0 0 0 .3.402l5.04-3.78 7.28 5.46h-3.178l-5.207-3.904a.25.25 0 1 0-.3.402l5.271 3.953c.044.033.096.05.15.051h4.018a.25.25 0 0 0 .237-.172.246.246 0 0 0-.086-.279l-8.035-6.027a.247.247 0 0 0-.3.002zM9.21 10.509l-1.11.83a.253.253 0 0 0 0 .402l15.802 11.853-3.6 2.699-1.01-.757a.251.251 0 1 0-.302.402l1.162.872a.253.253 0 0 0 .3 0l4.018-3.013a.25.25 0 0 0 0-.402L8.67 11.541l.841-.63a.249.249 0 0 0 .05-.351.252.252 0 0 0-.35-.051zm-.959 9.819a.251.251 0 0 0-.152.453l8.037 6.025a.25.25 0 0 0 .3 0l5.182-3.884a.251.251 0 0 0-.303-.402l-5.029 3.773-7.281-5.461h3.18l5.146 3.86a.25.25 0 1 0 .301-.4l-5.216-3.911a.235.235 0 0 0-.15-.051H8.25v-.002z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#E53431"/><path fill="#FFF" d="M12.117 5.314a.24.24 0 0 1 .15-.05.25.25 0 0 1 .15.05l1.257.942a.25.25 0 1 1-.301.4l-1.106-.827L8.67 8.526l15.8 11.854a.252.252 0 0 1 0 .403l-1.161.87a.25.25 0 0 1-.3-.402l.893-.67L8.101 8.729a.248.248 0 0 1 0-.4l4.016-3.014zm4.017 0a.247.247 0 0 1 .3-.002l8.035 6.027a.246.246 0 0 1 .086.279.249.249 0 0 1-.237.172h-4.017a.255.255 0 0 1-.15-.05l-5.273-3.954a.25.25 0 1 1 .301-.402l5.207 3.904h3.179l-7.28-5.46-5.04 3.78a.25.25 0 1 1-.301-.402l5.19-3.892zM9.21 10.509a.252.252 0 0 1 .3.402l-.841.63L24.47 23.395a.25.25 0 0 1 0 .402l-4.017 3.013a.253.253 0 0 1-.3 0l-1.163-.872a.251.251 0 0 1 .303-.402l1.01.757 3.6-2.7L8.098 11.742a.253.253 0 0 1 0-.402l1.11-.83zm-.959 9.819v.002h4.015a.24.24 0 0 1 .15.05l5.216 3.911a.25.25 0 1 1-.3.402l-5.146-3.861H9.005l7.281 5.46 5.03-3.772a.251.251 0 0 1 .302.402l-5.181 3.884a.25.25 0 0 1-.15.05.246.246 0 0 1-.151-.05l-8.037-6.025a.251.251 0 1 1 .152-.453z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sub);


/***/ }),

/***/ "UDjD":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ten.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ten = {
  symbol: 'ten',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M26.998 16.205L27 16c0-3.04-1.075-5.635-3.225-7.785C21.632 6.072 19.04 5 16 5s-5.635 1.072-7.785 3.215C6.072 10.365 5 12.96 5 16a12.7 12.7 0 0 0 .03-.848.787.787 0 0 1 .121.015l4.691-8.136a.719.719 0 0 1-.082-.116c.473-.333.965-.622 1.476-.868.027.045.05.092.068.142h9.392a.849.849 0 0 1 .068-.142 10.48 10.48 0 0 1 1.477.872.817.817 0 0 1-.078.108l4.686 8.14a.798.798 0 0 1 .122-.015 12.155 12.155 0 0 1 .027 1.053zm-.028.662a.816.816 0 0 1-.121-.014l-4.691 8.125c.028.033.054.067.078.102a11.81 11.81 0 0 0 1.54-1.305c1.942-1.937 3.007-4.24 3.194-6.908zm-4.751 8.225zm-.106.074c-.436.299-.887.561-1.354.787a.812.812 0 0 1-.063-.132h-9.392a.796.796 0 0 1-.064.132 10.163 10.163 0 0 1-.751-.4C12.126 26.516 13.963 27 16 27c2.293 0 4.33-.611 6.113-1.834zm-12.348-.081a.776.776 0 0 1 .077-.107l-4.691-8.125a.8.8 0 0 1-.121.014c.187 2.669 1.248 4.971 3.185 6.908.493.493 1.01.93 1.55 1.31zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.347-16.54l-4.55-7.888v7.629c.114.043.218.11.312.205a.868.868 0 0 1 .205.311h3.877a.836.836 0 0 1 .156-.258zm-.156.842h-3.877a.87.87 0 0 1-.205.312.867.867 0 0 1-.312.205v7.619l4.55-7.878a.839.839 0 0 1-.156-.258zM5.81 15.717h3.877a.869.869 0 0 1 .205-.311.868.868 0 0 1 .312-.205V7.572l-4.55 7.887c.07.08.121.166.156.258zm5.485-8.924l6.114 5.295a.824.824 0 0 1 .575-.097l2.87-4.96a.86.86 0 0 1-.157-.258h-9.392a.109.109 0 0 1-.01.02zm.01 8.924h3.887a.85.85 0 0 1 .151-.268l-4.555-7.877v7.629c.114.043.218.11.312.205a.868.868 0 0 1 .205.311zm7.332-2.577l2.45 2.12a.822.822 0 0 1 .127-.059V7.572l-2.724 4.711a.83.83 0 0 1 .2.55.88.88 0 0 1-.053.307zm-1.603-.613L11.616 7.84l4.233 7.317a.776.776 0 0 1 .302 0l1.028-1.773a.813.813 0 0 1-.205-.55c0-.11.02-.213.059-.307zm-.22 3.19h3.883a.135.135 0 0 0 .01-.019l-2.45-2.12a.824.824 0 0 1-.575.098l-1.023 1.774a.859.859 0 0 1 .155.267zm4.088.897a.87.87 0 0 1-.205-.312h-3.892a.829.829 0 0 1-.146.244l4.555 7.891V16.82a.869.869 0 0 1-.312-.205zm-5.042.234l-1.033 1.788c.133.158.2.341.2.55 0 .11-.018.211-.054.307l5.412 4.681-4.233-7.331a.976.976 0 0 1-.292.005zm4.847 8.369l-6.114-5.286a.823.823 0 0 1-.575.098l-2.864 4.95a.828.828 0 0 1 .15.257h9.393a.144.144 0 0 0 .01-.019zm-6.387-6.874l1.028-1.788a.832.832 0 0 1-.15-.253h-3.893a.122.122 0 0 1-.01.02l2.45 2.119a.822.822 0 0 1 .575-.098zm-.95.536l-2.455-2.119a.81.81 0 0 1-.127.058v7.624l2.729-4.706a.813.813 0 0 1-.205-.55c0-.11.02-.212.058-.307zm-3.478-2.265a.87.87 0 0 1-.205-.312H5.81a.839.839 0 0 1-.156.258l4.55 7.877V16.82a.87.87 0 0 1-.312-.205z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#0899CD"/><path fill="#FFF" d="M26.97 16.867c-.187 2.669-1.252 4.971-3.195 6.908-.49.491-1.003.926-1.54 1.305a1.014 1.014 0 0 0-.077-.102l4.69-8.125c.04.007.08.012.122.014zm-4.857 8.298zm-.38.25C20.043 26.472 18.131 27 16 27c-2.037 0-3.874-.483-5.511-1.448.246.145.496.278.751.4a.796.796 0 0 0 .064-.13h9.392a.78.78 0 0 0 .063.13c.333-.16.657-.34.974-.537zm-11.968-.33a11.79 11.79 0 0 1-1.55-1.31c-1.937-1.937-2.998-4.24-3.185-6.908a.8.8 0 0 0 .121-.014l4.691 8.125a.776.776 0 0 0-.077.107zM5 15.83c.04-2.967 1.11-5.506 3.214-7.616C10.365 6.072 12.96 5 16 5s5.632 1.072 7.775 3.215c2.14 2.14 3.215 4.722 3.225 7.744a11.32 11.32 0 0 0-.03-.807.798.798 0 0 0-.121.015l-4.686-8.14a.817.817 0 0 0 .078-.108 10.36 10.36 0 0 0-1.477-.872.849.849 0 0 0-.068.142h-9.392a.839.839 0 0 0-.068-.142c-.511.246-1.003.535-1.476.868.023.04.05.08.082.116l-4.691 8.136a.787.787 0 0 0-.122-.015c-.015.224-.025.45-.028.679zm21.346-.372a.836.836 0 0 0-.156.258h-3.877a.868.868 0 0 0-.205-.311.868.868 0 0 0-.312-.205V7.572l4.55 7.887zm-.156.843a.839.839 0 0 0 .156.258l-4.55 7.878v-7.62a.867.867 0 0 0 .312-.204.87.87 0 0 0 .205-.312h3.877zm-20.38-.584a.838.838 0 0 0-.156-.258l4.55-7.887v7.629a.868.868 0 0 0-.312.205.869.869 0 0 0-.205.311H5.81zm5.485-8.924a.109.109 0 0 0 .01-.02h9.392a.86.86 0 0 0 .156.258l-2.87 4.96a.824.824 0 0 0-.575.097l-6.113-5.295zm.01 8.924a.868.868 0 0 0-.205-.311.869.869 0 0 0-.312-.205V7.572l4.555 7.877a.85.85 0 0 0-.15.268h-3.888zm7.332-2.577a.872.872 0 0 0 .053-.307.83.83 0 0 0-.2-.55l2.724-4.71V15.2a.822.822 0 0 0-.127.059l-2.45-2.12zm-1.603-.613a.796.796 0 0 0-.059.306c0 .21.068.394.205.551l-1.028 1.773a.773.773 0 0 0-.302 0L11.616 7.84l5.417 4.687zm-.22 3.19a.872.872 0 0 0-.155-.267l1.023-1.774a.824.824 0 0 0 .575-.097l2.45 2.119a.135.135 0 0 1-.01.02h-3.883zm4.088.897a.869.869 0 0 0 .312.205v7.618l-4.555-7.891a.829.829 0 0 0 .146-.244h3.892a.87.87 0 0 0 .205.312zm-5.042.234a.976.976 0 0 0 .292-.005l4.233 7.331-5.412-4.681a.868.868 0 0 0 .054-.307.829.829 0 0 0-.2-.55l1.033-1.788zm4.847 8.369a.144.144 0 0 1-.01.02h-9.392a.845.845 0 0 0-.151-.259l2.864-4.95a.823.823 0 0 0 .575-.097l6.114 5.286zm-6.387-6.874a.822.822 0 0 0-.575.097l-2.45-2.118a.122.122 0 0 0 .01-.02h3.892c.034.09.084.175.151.253l-1.028 1.788zm-.95.536a.795.795 0 0 0-.058.307c0 .21.068.393.205.55l-2.729 4.706v-7.624a.81.81 0 0 0 .127-.058l2.455 2.12zm-3.478-2.265a.87.87 0 0 0 .312.205v7.618l-4.55-7.877a.839.839 0 0 0 .156-.258h3.877a.87.87 0 0 0 .205.312z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ten);


/***/ }),

/***/ "ULZB":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bnt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bnt = {
  symbol: 'bnt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.08-26.12l-4.518 2.647 4.518 2.648 4.603-2.648L15.92 5.88zm.743 14.134v5.295l6.137-3.501v-5.296l-6.137 3.502zm4.603-9.822l-4.604 2.648v5.296l4.604-2.648v-5.296zm-11.082 5.296l4.604 2.648V12.84l-4.604-2.648v5.296zm0 7.174l4.604 2.647v-5.295l-4.604-2.647v5.294z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000D2B"/><path fill="#FFF" d="M15.92 5.88l-4.518 2.647 4.518 2.648 4.603-2.648L15.92 5.88zm.743 14.134v5.295l6.137-3.501v-5.296l-6.137 3.502zm4.603-9.822v5.296l-4.604 2.648V12.84l4.604-2.648zm-11.082 5.296l4.604 2.648V12.84l-4.604-2.648v5.296zm0 7.174l4.604 2.647v-5.295l-4.604-2.647v5.294z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bnt);


/***/ }),

/***/ "ULv5":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dtr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dtr = {
  symbol: 'dtr',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd"><path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.032-9.13V9.08c0-1.146-.92-2.075-2.056-2.075s-2.055.929-2.055 2.075v13.79c0 1.145.92 2.074 2.055 2.074s2.056-.929 2.056-2.075zm-6.92.005v-3.1a2.072 2.072 0 0 0-1.015-1.82 2.032 2.032 0 0 0-2.068 0 2.072 2.072 0 0 0-1.014 1.82v3.1a2.072 2.072 0 0 0 1.014 1.82c.639.376 1.43.376 2.068 0a2.072 2.072 0 0 0 1.014-1.82zM24.955 17.4v-5.233c0-1.146-.92-2.075-2.056-2.075s-2.056.929-2.056 2.075V17.4c0 1.146.92 2.075 2.056 2.075s2.056-.93 2.056-2.075z"/><path d="M24.956 17.4c0 1.145-.92 2.074-2.056 2.074s-2.056-.93-2.056-2.075v-5.233c0-1.146.92-2.075 2.056-2.075s2.056.929 2.056 2.075z" fill-rule="nonzero" opacity=".5"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#121747" r="16"/><g fill="#fff" fill-rule="nonzero"><path d="M18.032 22.87c0 1.145-.92 2.074-2.056 2.074s-2.055-.929-2.055-2.075V9.08c0-1.145.92-2.074 2.055-2.074s2.056.929 2.056 2.075zm-6.92.005a2.072 2.072 0 0 1-1.015 1.82 2.032 2.032 0 0 1-2.068 0 2.072 2.072 0 0 1-1.014-1.82v-3.1a2.072 2.072 0 0 1 1.014-1.82 2.032 2.032 0 0 1 2.068 0 2.072 2.072 0 0 1 1.014 1.82z"/><path d="M24.956 17.4c0 1.145-.92 2.074-2.056 2.074s-2.056-.93-2.056-2.075v-5.233c0-1.146.92-2.075 2.056-2.075s2.056.929 2.056 2.075z" opacity=".5"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dtr);


/***/ }),

/***/ "UOwz":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ae.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ae = {
  symbol: 'ae',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.752 11c-2.473.174-4.591 2.228-4.752 4.621v.785c.17 2.398 2.317 4.428 4.787 4.594h.803c1.96-.172 3.608-1.415 4.796-2.862-.29-.425-.583-.849-.884-1.266-.764 1.128-1.76 2.192-3.102 2.66-1.208.438-2.61.157-3.615-.596-1.342-.95-1.83-2.793-1.23-4.279.682-1.804 2.97-2.866 4.843-2.187 1.515.551 2.45 1.915 3.366 3.128 1.064 1.372 1.944 2.913 3.315 4.036.944.802 2.156 1.266 3.403 1.366h.746c2.026-.18 3.879-1.534 4.515-3.417a60.387 60.387 0 0 0-1.389.006c-.908 1.854-3.493 2.751-5.341 1.654-2.557-1.517-3.661-4.394-5.67-6.432-.968-.99-2.274-1.677-3.687-1.811h-.904zm11.68 0c-1.974.183-3.61 1.453-4.783 2.921.275.407.559.809.845 1.207.743-1.075 1.707-2.081 2.987-2.54 1.606-.61 3.615-.035 4.565 1.37.39.538.54 1.189.654 1.825-1.624.01-3.247 0-4.873.004.002.36.002.717 0 1.077 2.057-.002 4.116.01 6.173-.009v-1.23c-.205-2.397-2.325-4.468-4.818-4.625h-.75z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#DE3F6B"/><path fill="#FFF" fill-rule="nonzero" d="M9.752 11h.904c1.413.134 2.72.821 3.687 1.81 2.009 2.039 3.113 4.916 5.67 6.433 1.848 1.097 4.433.2 5.341-1.654.462-.008.927-.008 1.389-.006-.636 1.883-2.489 3.236-4.515 3.417h-.746c-1.247-.1-2.46-.564-3.403-1.366-1.37-1.123-2.25-2.664-3.315-4.036-.916-1.213-1.85-2.577-3.366-3.128-1.873-.679-4.16.383-4.843 2.187-.6 1.486-.112 3.328 1.23 4.28 1.006.752 2.407 1.033 3.615.595 1.342-.468 2.338-1.532 3.102-2.66.301.417.594.84.884 1.266-1.188 1.447-2.836 2.69-4.796 2.862h-.803C7.317 20.834 5.17 18.804 5 16.406v-.785c.16-2.393 2.28-4.447 4.752-4.621zm11.68 0h.75c2.493.157 4.613 2.228 4.818 4.626v1.23c-2.057.018-4.116.006-6.173.008.002-.36.002-.717 0-1.077 1.626-.004 3.25.007 4.873-.004-.115-.636-.264-1.287-.654-1.826-.95-1.404-2.959-1.978-4.565-1.37-1.28.46-2.244 1.466-2.987 2.54-.286-.397-.57-.8-.845-1.206 1.173-1.468 2.81-2.738 4.783-2.921z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ae);


/***/ }),

/***/ "UaGn":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pre.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pre = {
  symbol: 'pre',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.53-13.955h1.678a3.23 3.23 0 0 0 1.387-.308c.41-.203.776-.484 1.077-.828.299-.356.53-.763.684-1.201a3.92 3.92 0 0 0 .248-1.388 3.393 3.393 0 0 0-.27-1.346 4.143 4.143 0 0 0-.724-1.18 3.636 3.636 0 0 0-1.098-.848 2.974 2.974 0 0 0-1.384-.332h-4.41v10.703h2.816l-.004-3.272zm0-4.846h1.427a.77.77 0 0 1 .518.249c.166.165.27.456.27.911s-.103.725-.25.872c-.123.145-.289.248-.475.248h-1.49V13.2zM7.023 8.031v15.887c0 .57.461 1.03 1.03 1.03h15.888c.569 0 1.03-.46 1.03-1.03V8.03a1.03 1.03 0 0 0-1.03-1.031H8.053a1.03 1.03 0 0 0-1.03 1.03zm14.803 14.803h-11.68a1.03 1.03 0 0 1-1.031-1.03v-11.68a1.03 1.03 0 0 1 1.031-1.031h11.68c.57 0 1.03.461 1.03 1.03v11.68c0 .57-.46 1.031-1.03 1.031zm-7.093-3.525v2.03h6.607v-2.03h-6.607z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#3A8CBD"/><g fill="#FFF"><path d="M13.47 18.045h1.678a3.23 3.23 0 0 0 1.387-.308c.41-.203.776-.484 1.077-.828.299-.356.53-.763.684-1.201a3.92 3.92 0 0 0 .248-1.388 3.393 3.393 0 0 0-.27-1.346 4.143 4.143 0 0 0-.724-1.18 3.636 3.636 0 0 0-1.098-.848 2.974 2.974 0 0 0-1.384-.332h-4.41v10.703h2.816l-.004-3.272zm0-4.846h1.427a.77.77 0 0 1 .518.249c.166.165.27.456.27.911s-.103.725-.25.872c-.123.145-.289.248-.475.248h-1.49V13.2z"/><path d="M7.023 8.03v15.888c0 .57.461 1.03 1.03 1.03h15.888c.569 0 1.03-.46 1.03-1.03V8.03a1.03 1.03 0 0 0-1.03-1.031H8.053a1.03 1.03 0 0 0-1.03 1.03zm14.803 14.804h-11.68a1.03 1.03 0 0 1-1.031-1.03v-11.68a1.03 1.03 0 0 1 1.031-1.031h11.68c.57 0 1.03.461 1.03 1.03v11.68c0 .57-.46 1.031-1.03 1.031z"/><path d="M14.733 19.309h6.607v2.03h-6.607z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pre);


/***/ }),

/***/ "UeXW":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bsd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bsd = {
  symbol: 'bsd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm12-16.873L19.927 4l-1.963 6.436L4 15.127h24zM4.11 16.655l7.854 11.236 1.963-6.655 13.964-4.581H4.109z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><path d="M28 15.127H4l13.964-4.69L19.927 4 28 15.127zM4.11 16.655h23.78l-13.963 4.581-1.963 6.655-7.855-11.236z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bsd);


/***/ }),

/***/ "Ujd3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dgd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dgd = {
  symbol: 'dgd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5.5 11v10h10V11h-10zm7 3v-3h1v4h-8v-1h7zm-5 3h6v2h-6v-2zm19-4v-2h-10v10h10v-6h-6v2h4v2h-6v-6h8z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#F4D029"/><path fill="#FFF" d="M12.5 11v3h-7v-3h7zm1 0h2v10h-10v-6h8v-4zm-6 6v2h6v-2h-6zm19-4h-8v6h6v-2h-4v-2h6v6h-10V11h10v2z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dgd);


/***/ }),

/***/ "Ulzv":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/flo.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Flo = {
  symbol: 'flo',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.893-14.87c1.798-4.113.802-7.74-1.914-11.13-2.736 3.417-3.722 7.07-1.868 11.197-2.24-2.351-5.002-2.903-8.111-2.399.53 2.022 3.25 4.839 4.862 5.034-1.533-.967-2.774-2.114-3.134-3.964.196-.04.335-.074.475-.095 1.183-.177 2.26.155 3.287.685 1.256.647 2.325 1.539 3.331 2.508.138.133.27.272.448.452-2.418.09-4.21 1.038-5.265 3.187 1.27.42 3.22.134 3.896-.562-.941.35-1.855.566-2.792.092.404-1.08 3.014-2.481 4.225-2.286-.547.985-.866 2.015-.726 3.15.139 1.13.647 2.086 1.373 3.001 1.56-1.966 1.881-3.997.604-6.234.946.194 1.801.39 2.567.809.494.27.942.632 1.38.99.16.13.23.364.348.565-.969.46-1.853.26-2.74-.011 1.177.756 2.445.82 3.831.513-1.067-2.181-2.868-3.126-5.233-3.215.037-.069.047-.101.068-.123 1.207-1.205 2.493-2.313 4.074-3.034.94-.428 1.922-.648 2.969-.48.286.046.396.134.31.445-.268.985-.807 1.805-1.566 2.482-.455.406-.958.76-1.51 1.193 2.5-.96 3.915-2.798 4.918-5.098-3.112-.498-5.858.027-8.107 2.328zm-1.913 3.167c-1.145 1.307-1.173 3.1.013 4.294 1.121-1.08 1.122-3.093-.013-4.294zm.001-12.192c-2.705 3.128-2.603 6.826-.002 9.899 2.648-3.136 2.655-6.816.002-9.9z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2080a2" r="16"/><path d="M15.98 20.297c-1.145 1.307-1.173 3.1.013 4.294 1.121-1.08 1.122-3.093-.013-4.294m.001-12.192c-2.705 3.128-2.603 6.826-.002 9.899 2.648-3.136 2.655-6.816.002-9.9m1.912 9.026c2.25-2.3 4.995-2.826 8.107-2.328-1.003 2.3-2.418 4.137-4.918 5.098.552-.433 1.055-.787 1.51-1.193.76-.677 1.298-1.497 1.567-2.482.085-.311-.025-.399-.311-.445-1.047-.168-2.03.052-2.969.48-1.58.72-2.867 1.829-4.074 3.034-.021.022-.03.054-.068.123 2.365.09 4.166 1.034 5.233 3.215-1.386.308-2.654.243-3.83-.513.886.272 1.77.47 2.74.01-.12-.2-.19-.434-.35-.565-.437-.357-.885-.718-1.38-.99-.765-.418-1.62-.614-2.566-.808 1.277 2.237.957 4.268-.604 6.234-.726-.915-1.234-1.872-1.373-3.002-.14-1.134.179-2.164.726-3.15-1.21-.194-3.821 1.207-4.225 2.287.937.474 1.851.258 2.792-.092-.676.696-2.625.981-3.896.562 1.055-2.15 2.847-3.097 5.265-3.187-.178-.18-.31-.319-.448-.452-1.006-.97-2.075-1.86-3.331-2.508-1.027-.53-2.104-.862-3.287-.685-.14.021-.279.055-.475.095.36 1.85 1.6 2.997 3.134 3.964C9.25 19.637 6.53 16.82 6 14.798c3.11-.504 5.87.048 8.11 2.399-1.853-4.127-.867-7.78 1.87-11.197 2.715 3.39 3.711 7.017 1.913 11.13" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Flo);


/***/ }),

/***/ "UnsY":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lpt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lpt = {
  symbol: 'lpt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.775-8.517v3.509h3.508v-3.509h-3.508zm0-15.483v3.508h3.508V8h-3.508zm8.267 0v3.508H26V8h-3.508zM6 8v3.508h3.508V8H6zm12.358 7.742v3.508h3.509v-3.508h-3.509zm-8.275 0v3.508h3.509v-3.508h-3.509z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#000" fill-rule="nonzero"/><path d="M14.225 23.483h3.508v3.508h-3.508zm0-15.483h3.508v3.508h-3.508zm8.267 0H26v3.508h-3.508zM6 8h3.508v3.508H6zm12.358 7.742h3.508v3.508h-3.508zm-8.275 0h3.508v3.508h-3.508z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lpt);


/***/ }),

/***/ "UoR/":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dcn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dcn = {
  symbol: 'dcn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M4.774 27.4A15.951 15.951 0 0 1 0 16C0 7.163 7.163 0 16 0s16 7.163 16 16c0 4.61-1.95 8.763-5.068 11.683a311.58 311.58 0 0 1-1.72-2.762c-2.888-4.724-5.068-9.764-6.617-15.077-.85-2.917-1.644-5.85-2.464-8.776a1.076 1.076 0 0 0-.23-.455c-.128.404-.267.804-.383 1.21-1.307 4.561-2.678 9.103-4.391 13.528-1.584 4.092-4.008 8.328-6.353 12.05zM21.147 32h-7.63l-3.146-.812a21751.8 21751.8 0 0 1 5.37-15.123l.154.003A4716.12 4716.12 0 0 1 21.147 32z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#136485"/><path fill="#FFF" d="M10.436 31.006a16.008 16.008 0 0 1-5.604-3.548l.147-.257c2.388-3.773 4.533-7.678 6.148-11.85 1.713-4.425 3.084-8.967 4.39-13.527.117-.407.256-.807.384-1.21.138.158.188.305.23.454.82 2.926 1.613 5.86 2.464 8.776 1.55 5.313 3.73 10.353 6.617 15.077.337.55.91 1.472 1.72 2.762a15.988 15.988 0 0 1-6.035 3.554 4320.193 4320.193 0 0 0-5.002-15.17l-.154-.002c-1.166 3.277-2.934 8.257-5.305 14.941zM16.075.049h-.124L16 0l.075.049z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dcn);


/***/ }),

/***/ "Uoe2":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bix.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bix = {
  symbol: 'bix',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.941-7.423l6.238-3.543c.191.209.468.34.776.34.577 0 1.045-.46 1.045-1.028 0-.487-.344-.895-.805-1.001l.018-7.021c.452-.113.787-.517.787-.997 0-.568-.468-1.028-1.045-1.028a1.05 1.05 0 0 0-.854.435l-6.108-3.469A1.037 1.037 0 0 0 15.976 6a1.037 1.037 0 0 0-1.015 1.272L8.889 10.72a1.049 1.049 0 0 0-.844-.422A1.04 1.04 0 0 0 7 11.327c0 .48.333.882.784.996v7.027a1.032 1.032 0 0 0-.784.996c0 .568.468 1.028 1.045 1.028.295 0 .561-.12.751-.314l6.211 3.527a1.01 1.01 0 0 0-.076.385c0 .568.468 1.028 1.045 1.028s1.045-.46 1.045-1.028c0-.14-.028-.273-.08-.395zm-.279-.38a1.05 1.05 0 0 0-.686-.253c-.266 0-.51.098-.694.26L9.04 20.659a1.012 1.012 0 0 0 .004-.616l5.977-4.027a1.246 1.246 0 0 0 1.883.088l6.066 3.9a1.012 1.012 0 0 0-.02.621zm.119-16.513l6.141 3.488a1.033 1.033 0 0 0 .816 1.16l-.018 7.012c-.19.043-.36.137-.494.266l-6.071-3.903c.052-.134.08-.28.08-.431a1.22 1.22 0 0 0-1.017-1.196l.016-6.055c.217-.055.408-.176.547-.34zm-1.605.005c.147.172.35.297.583.345l-.016 6.053a1.22 1.22 0 0 0-.935 1.507l-6.005 4.044a1.048 1.048 0 0 0-.544-.299v-7.005a1.033 1.033 0 0 0 .816-1.18z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#000" r="16"/><path d="M16.941 24.577c.052.122.08.255.08.395 0 .568-.468 1.028-1.045 1.028s-1.045-.46-1.045-1.028c0-.136.027-.266.076-.385l-6.21-3.527a1.05 1.05 0 0 1-.752.314c-.577 0-1.045-.46-1.045-1.028 0-.48.333-.882.784-.996v-7.027A1.032 1.032 0 0 1 7 11.327c0-.568.468-1.028 1.045-1.028.346 0 .653.166.844.422l6.072-3.45a.975.975 0 0 1-.03-.243C14.931 6.46 15.4 6 15.976 6a1.037 1.037 0 0 1 1.017 1.265l6.108 3.47c.19-.264.501-.436.854-.436.577 0 1.045.46 1.045 1.028 0 .48-.335.884-.787.997l-.018 7.02c.461.107.805.515.805 1.002 0 .568-.468 1.028-1.045 1.028a1.05 1.05 0 0 1-.776-.34zm-.279-.38l6.287-3.572a1.013 1.013 0 0 1 .02-.622l-6.065-3.9a1.24 1.24 0 0 1-.904.388 1.24 1.24 0 0 1-.979-.475l-5.977 4.027a1.013 1.013 0 0 1-.004.616l6.242 3.545a1.05 1.05 0 0 1 .694-.26c.263 0 .503.095.686.252zm.119-16.513a1.05 1.05 0 0 1-.547.34l-.016 6.056a1.221 1.221 0 0 1 1.017 1.196c0 .151-.028.297-.08.43l6.07 3.904c.135-.13.305-.223.495-.266l.018-7.011a1.033 1.033 0 0 1-.816-1.16zm-1.605.005l-6.101 3.465a1.033 1.033 0 0 1-.816 1.18v7.005c.212.044.4.15.544.3l6.005-4.045a1.22 1.22 0 0 1 .935-1.506l.016-6.054a1.047 1.047 0 0 1-.583-.345z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bix);


/***/ }),

/***/ "UubL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bsv.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bsv = {
  symbol: 'bsv',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.15-17.43a.09.09 0 0 0-.08.05v-.44l-.11.06c-.07.07-.07.08-.07.19v.82a.7.7 0 0 0 0 .24.72.72 0 0 1-.09.4l-.18.12h-.09a.18.18 0 0 1 0-.09v-.33h-.07a.49.49 0 0 0-.09.14 1.1 1.1 0 0 0-.14.54c-.024.15-.024.3 0 .45a.61.61 0 0 1-.12.57.2.2 0 0 1-.12.07.21.21 0 0 0-.19.12l-.06.13a1.53 1.53 0 0 1-.09-.31v-.38a1 1 0 0 0-.17.14 3 3 0 0 0-.45 1.47c-.02.12-.02.26-.21.24-.19-.02-.28.15-.33.24-.05.09-.1.09-.17 0a.54.54 0 0 1 0-.57l.07-.14a.39.39 0 0 0-.33.07 2.3 2.3 0 0 0-.71.64l-.43.69a3 3 0 0 1-.52.71 1.37 1.37 0 0 1-1.23.33 2.25 2.25 0 0 1-.95-.54 4.69 4.69 0 0 1-.76-1 3.34 3.34 0 0 1-.33-1c-.02-.07-.05 0-.14 0-.25.15-.542.21-.83.17a1 1 0 0 1-.8-.69.24.24 0 0 0-.09-.12c-.07-.07-.17-.12-.24-.19a.83.83 0 0 1-.17-.54.34.34 0 0 1-.43-.24.84.84 0 0 1 0-.85.14.14 0 0 0 0-.09c-.17-.19-.5-.52-.5-.52v-.09c.15-.26.342-.494.57-.69a.15.15 0 0 0 0-.17.43.43 0 0 1 0-.39 1.44 1.44 0 0 1 .24-.33l-.35-.09-1-.21a.32.32 0 0 0-.21 0 3.72 3.72 0 0 0-.78.71 3.46 3.46 0 0 0-.21.31v.07l.12-.07.17-.18a3.61 3.61 0 0 0-.26.38c-.19.37-.4.75-.57 1.13a1.23 1.23 0 0 0-.17.64v.12l.09-.09a.71.71 0 0 0 .09-.16 4.41 4.41 0 0 0-.17.52 4.63 4.63 0 0 0-.21 1.49c.017.215.081.424.19.61.02.09.14.14.14.09v-.55c.075.193.138.39.19.59.043.17.073.345.09.52.07.35.12.71.21 1.06.064.147.152.282.26.4h.19v-.17l-.07-.14a.52.52 0 0 1 0-.38l.64.71a.09.09 0 0 1 0 .07c.024.33.113.653.26.95a.8.8 0 0 0 .76.5h.12c-.09-.05-.04-.04-.09-.12-.05-.08-.12-.09-.17-.17-.05-.08.05-.17.12-.17a.85.85 0 0 1 .26.09 7.8 7.8 0 0 0 1.49.85l.69.28.24.09c-.16.45-.33.88-.47 1.28-.1-.21-.19-.45-.31-.66l-.14-.28a.43.43 0 0 0-.31-.24 1 1 0 0 1-.57-.14c-.19-.02-.47.05-.54.24a.6.6 0 0 1 .59.12c-.12.26-.05.43.19.5a.38.38 0 0 1 .28.35c.06.173.083.357.07.54a.54.54 0 0 1-.35-.28 1.51 1.51 0 0 0-.66-.61c-.19-.1-.4-.14-.54.07h-.09a1.34 1.34 0 0 0-.31 0c-.23.04-.33.26-.4.47a.85.85 0 0 1 .47-.14c.05 0 .09.04.09.09a.23.23 0 0 0 .26.19l.54.21a.8.8 0 0 1 .47.45h-.14a4.55 4.55 0 0 0-.57 0 1.49 1.49 0 0 0-.71.24.83.83 0 0 0-.43.43.33.33 0 0 0 0 .21v.14a.79.79 0 0 0 0 .24.75.75 0 0 0 .21.38 1 1 0 0 1 .12-.64c.28.14.38.12.59-.12l.14-.18a.67.67 0 0 1 .52-.07l.71.09a.12.12 0 0 1 0 .07 2.07 2.07 0 0 1-.5.52.62.62 0 0 0-.21.8.4.4 0 0 1 0 .17.42.42 0 0 0 .3.52v-.38a.45.45 0 0 0 .57-.26 2 2 0 0 0 .17-.5c.085-.306.3-.559.59-.69a.87.87 0 0 0 .52-.35l.07.09a.74.74 0 0 0 .69.4c.05 0 .09.04.09.09l.07.48c.05-.07.17-.14.17-.21a.93.93 0 0 0 .09-.71.11.11 0 0 1 0-.12.32.32 0 0 0 0-.38 1 1 0 0 0-.47-.47l-.38-.17.14-.07.43-.21c.05 0 .09-.07.14 0 .05.07.12.14.12.21a1.45 1.45 0 0 1-.07.26h.12a.77.77 0 0 0 .45-.59c.02-.14.1-.26.19-.26s.19-.07.26 0a.27.27 0 0 1 .07.26l-.07.21c.14-.09.28-.17.4-.26.273-.178.46-.46.52-.78a.43.43 0 0 1 .28-.28 5.94 5.94 0 0 0 .64-.09 9.81 9.81 0 0 0 1.13-.26 6.21 6.21 0 0 0 1.56-.71c.36-.22.69-.43 1-.69a5.9 5.9 0 0 0 .78-.76 6.8 6.8 0 0 0 .64-.8c.226-.34.43-.694.61-1.06a6 6 0 0 0 .5-1.28 7.7 7.7 0 0 0 .28-1.77 10.28 10.28 0 0 0 0-1.21 1.6 1.6 0 0 0 0-.33l.71.19a.85.85 0 0 1-.17.24.39.39 0 0 0-.14.45c.075.172.176.33.3.47a.49.49 0 0 0 .4.17c-.05-.08.02 0-.12-.17-.14-.17-.14-.19 0-.31a.63.63 0 0 0 .12-.14.85.85 0 0 0 .09-.26l.21.09a1.1 1.1 0 0 1 .55.52.26.26 0 0 0 .33.17c.12-.02.19 0 .19.12v.05h.05a.25.25 0 0 0 .12-.33c-.07-.15-.17-.29-.24-.43a.85.85 0 0 0-.63-.43 3.22 3.22 0 0 0 .33-.19.44.44 0 0 1 .45 0 .18.18 0 0 0 .25 0 .13.13 0 0 1 .18 0l.19.14a.18.18 0 0 0 0-.09.5.5 0 0 0-.17-.33.35.35 0 0 1-.12-.14.37.37 0 0 0-.43-.21 3.42 3.42 0 0 1-.38.09 1.53 1.53 0 0 1 .19-.21c.14-.09.21-.14.14-.28l.33-.16a.35.35 0 0 0-.35-.21.9.9 0 0 1-.35 0 .18.18 0 0 0-.12 0c-.12.05-.14.21-.19.31a.86.86 0 0 0-.12.31c-.09-.19-.17-.21 0-.4.17-.19.14-.28 0-.45a.4.4 0 0 0 0-.4.39.39 0 0 0-.3.36h-.09c-.19-.03-.28.16-.28.35.012.22.012.44 0 .66h-.07a.49.49 0 0 0-.09-.14 9.38 9.38 0 0 0-.69-.69 1.75 1.75 0 0 0-.76-.45c-.07 0-.07-.09-.07-.09a2.26 2.26 0 0 0-.45-.8 1.08 1.08 0 0 1-.31-.69c0-.07-.09-.12-.09-.19a1.67 1.67 0 0 0-.07 1.14c.06.173.083.357.07.54a1 1 0 0 0-.2.12c-.05.05-.17.19-.17.12v-.07a.3.3 0 0 0 0-.14.33.33 0 0 0-.07-.09l-.07.07a.3.3 0 0 1 0 .14 1.71 1.71 0 0 0 .07 1.09.4.4 0 0 1 0 .28.56.56 0 0 1 0 .19c-.14-.05-.14.02-.14.09l-.07.14zM9.86 10.01a.36.36 0 0 1 .12.17c.326.208.684.36 1.06.45.42.13.92.2 1.42.3.247.015.491.055.73.12.507.134.991.34 1.44.61a.15.15 0 0 0 .14 0c.21-.07.4-.17.61-.24a3.72 3.72 0 0 1 1.16-.19h.61c.282.045.56.115.83.21.47.173.897.446 1.25.8v-.35c0-.31.185-.59.47-.71a.58.58 0 0 1 .64.13.93.93 0 0 1 .24.64 6.65 6.65 0 0 1 0 1 1 1 0 0 1-.28.59v.17c.181.434.27.9.26 1.37a4.15 4.15 0 0 1-.07.95v.19c.05-.05.06 0 .14-.14.08-.14.1-.31.17-.45a.82.82 0 0 1 .62-.56v-.52a1 1 0 0 1 .45-.83v-.07a2.86 2.86 0 0 1 0-.9.86.86 0 0 1 .31-.59.14.14 0 0 0 0-.09 6 6 0 0 1 0-.66 2.81 2.81 0 0 0 .14-1 1.29 1.29 0 0 0-.14-.43 3.08 3.08 0 0 1-.24-.35 3.68 3.68 0 0 0-.38-.47.54.54 0 0 0-.4-.19c.07.19.28.33.19.59a1.53 1.53 0 0 0-.21-.19.24.24 0 0 1-.14-.17 1.32 1.32 0 0 0-.4-.59.64.64 0 0 0-.61-.19l.09.07a.47.47 0 0 1 .26.33v.21h-.14c-.12-.07-.23-.17-.4-.26a1.22 1.22 0 0 0-.72-.82 1.26 1.26 0 0 0-.43-.12c-.09-.07-.17 0-.26 0h.07a.38.38 0 0 1 .26.35.52.52 0 0 1-.12.04h-.07a.49.49 0 0 0-.45-.19 1.83 1.83 0 0 0-.17-.38 1.1 1.1 0 0 0-.78-.47.86.86 0 0 0-.33 0v.15h.2a.27.27 0 0 1 .13.36c-.02-.09.03-.02-.09-.09a1 1 0 0 0-.4-.07.57.57 0 0 1-.17-.07 1.24 1.24 0 0 0-.52-.4.86.86 0 0 0-.85.12h.07a.28.28 0 0 1 .28.21v.09h-.07a.37.37 0 0 0-.38 0 .28.28 0 0 1-.28-.09h-.07a1 1 0 0 0-.54-.21.83.83 0 0 0-.61.16.11.11 0 0 0 0 .15c.09 0 0 .07.09 0s.12.02.21.07.09.12 0 .12l-.35.12c-.17.09-.38 0-.45 0h-.04a1.41 1.41 0 0 0-.83 0c-.16.07-.33.21-.33.38a.18.18 0 0 0 .09 0c.09-.12.19-.05.26 0s.09.14 0 .14l-.57.31a.16.16 0 0 1-.14 0 1.18 1.18 0 0 0-.8 0 .59.59 0 0 0-.33.37v.12h.09c.08 0 .17-.07.17 0s.07.14 0 .21a.41.41 0 0 0-.12.09l-.59.59zm9.45 4.7l-.22.01a.55.55 0 0 1-.5-.45.23.23 0 0 0-.21-.21c-.21.02-.26-.1-.33-.24a.3.3 0 0 1 0-.14.48.48 0 0 1 .5-.38h.85a.55.55 0 0 0 .61-.47 2.34 2.34 0 0 0 0-1c0-.08.03-.17-.09-.17s-.12.07-.12.14v.64a.51.51 0 0 1-.44.41 1 1 0 0 1-.52 0 2.93 2.93 0 0 0-.64-.07.73.73 0 0 0-.76.4c-.05.09.05.14-.14.26a5.33 5.33 0 0 1-.57.31.21.21 0 0 1-.26 0 .85.85 0 0 0-.85-.12h-.12a.3.3 0 0 1-.14-.31 1.44 1.44 0 0 0 0-1 .4.4 0 0 0-.43-.21c-.16.07-.3.14-.47 0a3 3 0 0 0-1.44-.69c-.45-.1-.92-.17-1.37-.24-.28-.05-.57-.1-.85-.17a3.63 3.63 0 0 1-1.34-.66 9.56 9.56 0 0 1-.45-.43l-.26-.28a.22.22 0 0 0-.17 0v.21c.1.301.289.566.54.76a3.42 3.42 0 0 0 1 .57c.35.107.708.19 1.07.25l.66.07a5 5 0 0 1 1.42.33c.242.105.48.221.71.35v.11a2.32 2.32 0 0 1-.38.12.11.11 0 0 1-.12 0c-.31-.12-.62-.26-.95-.38a2.77 2.77 0 0 0-.64-.12l-.57-.07c-.26-.07-.47-.02-.78-.07-.31-.05-.61-.12-.92-.19a3.15 3.15 0 0 1-1.06-.5c-.26-.19-.5-.45-.76-.66l-.16-.09h-.12v.12a1.4 1.4 0 0 0 .14.33c.26.4.6.74 1 1 .387.244.808.43 1.25.55a5.6 5.6 0 0 0 1.13.28c.276.034.546.108.8.22.28.09.57.23.85.35a2 2 0 0 1 .31.21 1.2 1.2 0 0 1-.52.26l-.54.1a.33.33 0 0 0-.26.24c.325.012.645.077.95.19.346.12.616.393.73.74l-.07-.07a1.72 1.72 0 0 0-.66-.4 1.24 1.24 0 0 0-.83 0c-.14.1-.31.26-.4.33-.09.07-.07.12 0 .19.214.22.473.39.76.5h-.12a.56.56 0 0 0-.4.45 1 1 0 0 1 0 .12h.12c.07 0 .15-.07.24 0a.82.82 0 0 1 .31.26.15.15 0 0 1 0 .14 2.32 2.32 0 0 0-.12.38c-.07.02-.05.14 0 .14a.5.5 0 0 0 .12-.09l.07.14a.93.93 0 0 0 .19.33.79.79 0 0 0 .92.14 4 4 0 0 0 .52-.35.29.29 0 0 1 .19-.09 1.14 1.14 0 0 1 .28 0 .11.11 0 0 1 .09.07.35.35 0 0 1-.09.33 2.5 2.5 0 0 0-.28.24.65.65 0 0 0 .47 0 1.14 1.14 0 0 0 .47-.35.38.38 0 0 0 .09-.28 5.08 5.08 0 0 1-.19-.71c-.02-.19-.09-.31-.28-.31a.34.34 0 0 1 0 .14c-.07.09-.05.09-.19 0l-.4-.28a.57.57 0 0 1-.26-.52.19.19 0 0 1 .19-.19.5.5 0 0 1 .26.45.35.35 0 0 1 0 .14l.21-.14.45.12c.15.012.3.012.45 0a1.54 1.54 0 0 0 0 .33c.078.449.23.881.45 1.28.19.37.4.75.57 1.13a.94.94 0 0 1 .07.76v.07a.58.58 0 0 1-.76.31 1.51 1.51 0 0 1-.5-.57c-.14-.19-.35-.51-.4-.59a.26.26 0 0 0-.26-.17v.14c.046.147.103.291.17.43.12.19.26.38.4.57.161.215.361.398.59.54a.9.9 0 0 0 1.44-.8 2.37 2.37 0 0 0-.17-1c-.14-.31-.31-.65-.45-1a2.89 2.89 0 0 1-.33-1.24.85.85 0 0 1 .26-.57c0 .07.07-.05 0 .07a.7.7 0 0 0-.07.38c.35-.07.49-.33.61-.64a.72.72 0 0 0 0 .21.5.5 0 0 0 .09.12.2.2 0 0 0 .14-.07 2.51 2.51 0 0 0 .21-.26c.061.04.118.088.17.14.14.21.24.19.31 0a.42.42 0 0 1 .24-.28c.087.093.18.18.28.26h.14a.48.48 0 0 0 0-.12v-.35c.33.09.64.05.64-.12zm-5.57-.69l.11-.12a1 1 0 0 0 .52 0l.17-.07a.51.51 0 0 1 .26 0 .32.32 0 0 1 .17.21v.07a3.61 3.61 0 0 1-.38.26.39.39 0 0 1-.47 0 4.87 4.87 0 0 1-.38-.35zm3.26.33a1.39 1.39 0 0 1 .94.05c.07.057.133.12.19.19-.07.02-.12.09-.19.09a1.82 1.82 0 0 1-.35 0 .79.79 0 0 0-.45-.26.35.35 0 0 1-.14-.07zM4.54 17.43a.37.37 0 0 1 .02.21.76.76 0 0 0 .67.54c.19.024.38.024.57 0a1.54 1.54 0 0 0 .55-.15 1.48 1.48 0 0 0 .66-.71c.09-.21.19-.4.26-.61l.28-.8c.12-.35.26-.75.4-1.06.14-.31.3-.59.47-.9a5.32 5.32 0 0 1 .8-1.11l.14-.12-.33-.14-.52-.28c-.05 0-.14-.07-.14 0a8.79 8.79 0 0 0-.45.8c-.21.45-.35.92-.54 1.37a1.5 1.5 0 0 1-.33.52 1.18 1.18 0 0 1-1 .31 1.6 1.6 0 0 1-.47-.17.56.56 0 0 1-.28-.4.89.89 0 0 0 .05 1.45c.437.3 1.013.3 1.45 0a3.54 3.54 0 0 1 .3-.26 1.37 1.37 0 0 1-1.51.74h-.14a1.31 1.31 0 0 1-.86-1.64 1.3 1.3 0 0 0-.54 1.44c.08.367.313.684.64.87a1.62 1.62 0 0 0 1.11.14.4.4 0 0 1-.26.24 1 1 0 0 1-1-.28zm14.07-.8c.07 0 .07 0 .32.08H19v-.09a.47.47 0 0 0-.17-.38 3 3 0 0 1-.5-.45.24.24 0 0 0-.12-.09l-.17-.07v.21c0 .05.09.19 0 .19l-.26.14c-.36-.43-.36-.31-.5-.31.02.07.09.12.09.19a.39.39 0 0 1 0 .33.47.47 0 0 1-.57 0l-.1-.12c.046.37.157.73.33 1.06h.14a.87.87 0 0 1 .26-.12.23.23 0 0 1 .3.12l.07.21h.11a.24.24 0 0 0 .09-.12.58.58 0 0 0 0-.52h.12l.28.14c.12.07.21.07.21-.07a1.54 1.54 0 0 0 0-.33zM6.8 15.04a.78.78 0 0 0-.2-.77.45.45 0 0 0-.45-.09.29.29 0 0 0-.17.28c0 .07-.03.12-.12.07-.09-.05-.17-.17-.26-.17a.38.38 0 0 0 .28.54c.093.012.187.012.28 0a1.05 1.05 0 0 1 .64.14z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#EAB304"/><path d="M22.15 14.57l.07-.14c0-.07 0-.14.14-.09a.56.56 0 0 0 0-.19.4.4 0 0 0 0-.28 1.71 1.71 0 0 1-.07-1.09.3.3 0 0 0 0-.14l.07-.07a.33.33 0 0 1 .07.09.3.3 0 0 1 0 .14v.07c0 .07.12-.07.17-.12a1 1 0 0 1 .2-.12 1.36 1.36 0 0 0-.07-.54 1.67 1.67 0 0 1 .07-1.14c0 .07.09.12.09.19.017.26.127.505.31.69.203.233.356.505.45.8 0 0 0 .09.07.09.288.083.55.237.76.45.242.218.472.448.69.69a.49.49 0 0 1 .09.14h.07a6.23 6.23 0 0 0 0-.66c0-.19.09-.38.28-.35h.09a.39.39 0 0 1 .3-.36.4.4 0 0 1 0 .4c.14.17.17.26 0 .45s-.09.21 0 .4a.86.86 0 0 1 .12-.31c.05-.1.07-.26.19-.31a.18.18 0 0 1 .12 0 .9.9 0 0 0 .35 0 .35.35 0 0 1 .35.21l-.33.16c.07.14 0 .19-.14.28a1.53 1.53 0 0 0-.19.21 3.42 3.42 0 0 0 .38-.09.37.37 0 0 1 .43.21.35.35 0 0 0 .12.14.5.5 0 0 1 .17.33.18.18 0 0 1 0 .09l-.19-.14a.13.13 0 0 0-.18 0 .18.18 0 0 1-.25 0 .44.44 0 0 0-.45 0 3.22 3.22 0 0 1-.33.19.85.85 0 0 1 .63.43c.07.14.17.28.24.43a.25.25 0 0 1-.12.33h-.05v-.05c0-.12-.07-.14-.19-.12a.26.26 0 0 1-.33-.17 1.1 1.1 0 0 0-.55-.52l-.21-.09a.85.85 0 0 1-.09.26.63.63 0 0 1-.12.14c-.14.12-.14.14 0 .31.14.17.07.09.12.17a.49.49 0 0 1-.4-.17 1.77 1.77 0 0 1-.3-.47.39.39 0 0 1 .14-.45.85.85 0 0 0 .17-.24l-.71-.19a1.6 1.6 0 0 1 0 .33c.024.403.024.807 0 1.21a7.7 7.7 0 0 1-.28 1.77 6 6 0 0 1-.5 1.28 9.54 9.54 0 0 1-.61 1.06 6.8 6.8 0 0 1-.64.8 5.9 5.9 0 0 1-.78.76c-.31.26-.64.47-1 .69a6.21 6.21 0 0 1-1.56.71 9.81 9.81 0 0 1-1.13.26 5.94 5.94 0 0 1-.64.09.43.43 0 0 0-.28.28 1.19 1.19 0 0 1-.52.78c-.12.09-.26.17-.4.26l.07-.21a.27.27 0 0 0-.07-.26c-.07-.07-.17 0-.26 0s-.17.12-.19.26a.77.77 0 0 1-.45.59h-.12a1.45 1.45 0 0 0 .07-.26c0-.07-.07-.14-.12-.21-.05-.07-.09 0-.14 0l-.43.21-.14.07.38.17a1 1 0 0 1 .47.47.32.32 0 0 1 0 .38.11.11 0 0 0 0 .12.93.93 0 0 1-.09.71c0 .07-.12.14-.17.21l-.07-.48a.09.09 0 0 0-.09-.09.74.74 0 0 1-.69-.4l-.07-.09a.87.87 0 0 1-.52.35 1.07 1.07 0 0 0-.59.69 2 2 0 0 1-.17.5.45.45 0 0 1-.57.26v.38a.42.42 0 0 1-.3-.52.4.4 0 0 0 0-.17.62.62 0 0 1 .21-.8 2.07 2.07 0 0 0 .5-.52.12.12 0 0 0 0-.07l-.71-.09a.67.67 0 0 0-.52.07l-.14.18c-.21.24-.31.26-.59.12a1 1 0 0 0-.12.64.75.75 0 0 1-.21-.38.79.79 0 0 1 0-.24v-.14a.33.33 0 0 1 0-.21.83.83 0 0 1 .43-.43 1.49 1.49 0 0 1 .71-.24c.19-.012.38-.012.57 0h.14a.8.8 0 0 0-.47-.45l-.54-.21a.23.23 0 0 1-.26-.19.09.09 0 0 0-.09-.09.85.85 0 0 0-.47.14c.07-.21.17-.43.4-.47a1.34 1.34 0 0 1 .31 0h.09c.14-.21.35-.17.54-.07.277.132.507.344.66.61a.54.54 0 0 0 .35.28 1.36 1.36 0 0 0-.07-.54.38.38 0 0 0-.28-.35c-.24-.07-.31-.24-.19-.5a.6.6 0 0 0-.59-.12c.07-.19.35-.26.54-.24a1 1 0 0 0 .57.14.43.43 0 0 1 .31.24l.14.28c.12.21.21.45.31.66.14-.4.31-.83.47-1.28l-.24-.09-.69-.28a7.8 7.8 0 0 1-1.49-.85.85.85 0 0 0-.26-.09c-.07 0-.17.09-.12.17.05.08.12.09.17.17.05.08 0 .07.09.12h-.12a.8.8 0 0 1-.76-.5 2.56 2.56 0 0 1-.26-.95.09.09 0 0 0 0-.07l-.64-.71a.52.52 0 0 0 0 .38l.07.14v.17h-.19a1.46 1.46 0 0 1-.26-.4c-.09-.35-.14-.71-.21-1.06a3.59 3.59 0 0 0-.09-.52 5.32 5.32 0 0 0-.19-.59v.55c0 .05-.12 0-.14-.09a1.43 1.43 0 0 1-.19-.61 4.63 4.63 0 0 1 .21-1.49 4.41 4.41 0 0 1 .17-.52.71.71 0 0 1-.09.16l-.09.09v-.12a1.23 1.23 0 0 1 .17-.64c.17-.38.38-.76.57-1.13a3.61 3.61 0 0 1 .26-.38l-.17.18-.12.07v-.07a3.46 3.46 0 0 1 .21-.31 3.72 3.72 0 0 1 .78-.71.32.32 0 0 1 .21 0l1 .21.35.09a1.44 1.44 0 0 0-.24.33.43.43 0 0 0 0 .39.15.15 0 0 1 0 .17 2.66 2.66 0 0 0-.57.69v.09s.33.33.5.52c.01.03.01.06 0 .09a.84.84 0 0 0 0 .85.34.34 0 0 0 .43.24.83.83 0 0 0 .17.54c.07.07.17.12.24.19a.24.24 0 0 1 .09.12 1 1 0 0 0 .8.69c.288.04.58-.02.83-.17.09 0 .12-.07.14 0 .056.349.168.686.33 1 .207.366.463.702.76 1 .267.255.594.44.95.54.44.099.9-.025 1.23-.33a3 3 0 0 0 .52-.71l.43-.69a2.3 2.3 0 0 1 .71-.64.39.39 0 0 1 .33-.07l-.07.14a.54.54 0 0 0 0 .57c.07.09.12.09.17 0 .05-.09.14-.26.33-.24.19.02.19-.12.21-.24a3 3 0 0 1 .45-1.47 1 1 0 0 1 .17-.14v.38c.019.106.05.21.09.31l.06-.13a.21.21 0 0 1 .19-.12.2.2 0 0 0 .12-.07.61.61 0 0 0 .12-.57 1.43 1.43 0 0 1 0-.45 1.1 1.1 0 0 1 .14-.54.49.49 0 0 1 .09-.14h.07v.33a.18.18 0 0 0 0 .09h.09l.18-.12a.72.72 0 0 0 .09-.4.7.7 0 0 1 0-.24v-.82c0-.11 0-.12.07-.19l.11-.06v.44a.09.09 0 0 1 .08-.05zM9.86 10.01l.59-.59a.41.41 0 0 1 .12-.09c.07-.07 0-.14 0-.21 0-.07-.09 0-.17 0h-.09V9a.59.59 0 0 1 .33-.37 1.18 1.18 0 0 1 .8 0 .16.16 0 0 0 .14 0l.57-.31c.09 0 .07-.09 0-.14-.07-.05-.17-.12-.26 0a.18.18 0 0 1-.09 0c0-.17.17-.31.33-.38.27-.083.56-.083.83 0H13c.07 0 .28.09.45 0l.35-.12c.09 0 .09-.07 0-.12-.09-.05-.12-.14-.21-.07s0 0-.09 0a.11.11 0 0 1 0-.15.83.83 0 0 1 .61-.16 1 1 0 0 1 .54.21h.07a.28.28 0 0 0 .28.09.37.37 0 0 1 .38 0h.07v-.09a.28.28 0 0 0-.28-.21h-.07a.86.86 0 0 1 .85-.12c.206.084.386.222.52.4a.57.57 0 0 0 .17.07 1 1 0 0 1 .4.07c.12.07.07 0 .09.09a.27.27 0 0 0-.13-.36h-.2v-.15a.86.86 0 0 1 .33 0c.316.037.6.208.78.47.07.12.128.247.17.38a.49.49 0 0 1 .45.19h.07a.52.52 0 0 0 .12-.04.38.38 0 0 0-.26-.35h-.07c.09 0 .17-.07.26 0 .15.014.295.055.43.12.356.145.622.449.72.82.17.09.28.19.4.26h.14v-.21a.47.47 0 0 0-.26-.33l-.09-.07a.64.64 0 0 1 .61.19c.185.156.323.36.4.59a.24.24 0 0 0 .14.17c.076.057.146.12.21.19.09-.26-.12-.4-.19-.59a.54.54 0 0 1 .4.19c.14.146.266.303.38.47.072.122.152.239.24.35.072.134.119.28.14.43a2.81 2.81 0 0 1-.14 1 6 6 0 0 0 0 .66c.01.03.01.06 0 .09a.86.86 0 0 0-.31.59 2.86 2.86 0 0 0 0 .9v.07a1 1 0 0 0-.45.83v.52a.82.82 0 0 0-.62.56c-.07.14-.09.31-.17.45-.08.14-.09.09-.14.14v-.19a4.15 4.15 0 0 0 .07-.95 3.37 3.37 0 0 0-.26-1.37v-.17a1 1 0 0 0 .28-.59 6.65 6.65 0 0 0 0-1 .93.93 0 0 0-.24-.64.58.58 0 0 0-.64-.13.77.77 0 0 0-.47.71v.35a3.44 3.44 0 0 0-1.25-.8 4.72 4.72 0 0 0-.83-.21h-.61a3.72 3.72 0 0 0-1.16.19c-.21.07-.4.17-.61.24a.15.15 0 0 1-.14 0 5.52 5.52 0 0 0-1.44-.61 3.65 3.65 0 0 0-.73-.12c-.5-.1-1-.17-1.42-.3a3.46 3.46 0 0 1-1.06-.45.36.36 0 0 0-.12-.17zm9.45 4.7c0 .17-.31.21-.64.12v.35a.48.48 0 0 1 0 .12h-.14a2.83 2.83 0 0 1-.28-.26.42.42 0 0 0-.24.28c-.07.19-.17.21-.31 0a1.06 1.06 0 0 0-.17-.14 2.51 2.51 0 0 1-.21.26.2.2 0 0 1-.14.07.5.5 0 0 1-.09-.12.72.72 0 0 1 0-.21c-.12.31-.26.57-.61.64a.7.7 0 0 1 .07-.38c.07-.12 0 0 0-.07a.85.85 0 0 0-.26.57c.016.433.128.857.33 1.24.14.35.31.69.45 1 .128.317.186.658.17 1a.9.9 0 0 1-1.44.8 2.16 2.16 0 0 1-.59-.54c-.14-.19-.28-.38-.4-.57a3.16 3.16 0 0 1-.17-.43v-.14a.26.26 0 0 1 .26.17c.05.08.26.4.4.59.115.23.288.426.5.57a.58.58 0 0 0 .76-.31v-.07a.94.94 0 0 0-.07-.76c-.17-.38-.38-.76-.57-1.13a4.11 4.11 0 0 1-.45-1.28 1.54 1.54 0 0 1 0-.33c-.15.012-.3.012-.45 0l-.45-.12-.21.14a.35.35 0 0 0 0-.14.5.5 0 0 0-.26-.45.19.19 0 0 0-.19.19.57.57 0 0 0 .26.52l.4.28c.14.09.12.09.19 0a.34.34 0 0 0 0-.14c.19 0 .26.12.28.31.046.24.11.478.19.71a.38.38 0 0 1-.09.28 1.14 1.14 0 0 1-.47.35.65.65 0 0 1-.47 0 2.5 2.5 0 0 1 .28-.24.35.35 0 0 0 .09-.33.11.11 0 0 0-.09-.07 1.14 1.14 0 0 0-.28 0 .29.29 0 0 0-.19.09 4 4 0 0 1-.52.35.79.79 0 0 1-.92-.14.93.93 0 0 1-.19-.33l-.07-.14a.5.5 0 0 1-.12.09c-.05 0-.07-.12 0-.14.029-.13.07-.257.12-.38a.15.15 0 0 0 0-.14.82.82 0 0 0-.31-.26c-.09-.07-.17 0-.24 0h-.12a1 1 0 0 0 0-.12.56.56 0 0 1 .4-.45h.12a2.11 2.11 0 0 1-.76-.5c-.07-.07-.09-.12 0-.19s.26-.23.4-.33a1.24 1.24 0 0 1 .83 0c.247.082.473.218.66.4l.07.07a1.17 1.17 0 0 0-.73-.74 3.06 3.06 0 0 0-.95-.19.33.33 0 0 1 .26-.24l.54-.1a1.2 1.2 0 0 0 .52-.26 2 2 0 0 0-.31-.21c-.28-.12-.57-.26-.85-.35a2.83 2.83 0 0 0-.8-.22 5.6 5.6 0 0 1-1.13-.28 4.63 4.63 0 0 1-1.25-.55c-.4-.26-.74-.6-1-1a1.4 1.4 0 0 1-.14-.33v-.12h.12l.16.09c.26.21.5.47.76.66a3.15 3.15 0 0 0 1.06.5c.31.07.61.14.92.19.31.05.52 0 .78.07l.57.07c.217.015.432.055.64.12.33.12.64.26.95.38a.11.11 0 0 0 .12 0c.13-.029.257-.07.38-.12v-.11a7.77 7.77 0 0 0-.71-.35 5 5 0 0 0-1.42-.33l-.66-.07a8.39 8.39 0 0 1-1.07-.25 3.42 3.42 0 0 1-1-.57 1.6 1.6 0 0 1-.54-.76v-.21a.22.22 0 0 1 .17 0l.26.28c.14.14.28.28.45.43.396.31.852.535 1.34.66.28.07.57.12.85.17.45.07.92.14 1.37.24a3 3 0 0 1 1.44.69c.17.14.31.07.47 0a.4.4 0 0 1 .43.21c.12.323.12.677 0 1a.3.3 0 0 0 .14.31h.12a.85.85 0 0 1 .85.12.21.21 0 0 0 .26 0 5.33 5.33 0 0 0 .57-.31c.19-.12.09-.17.14-.26a.73.73 0 0 1 .76-.4c.215 0 .43.023.64.07a1 1 0 0 0 .52 0 .51.51 0 0 0 .44-.41v-.64c0-.07 0-.14.12-.14s.09.09.09.17c.072.33.072.67 0 1a.55.55 0 0 1-.61.47h-.85a.48.48 0 0 0-.5.38.3.3 0 0 0 0 .14c.07.14.12.26.33.24.112.01.2.098.21.21a.55.55 0 0 0 .5.45l.22-.01zm-5.57-.69c.12.123.247.24.38.35a.39.39 0 0 0 .47 0 3.61 3.61 0 0 0 .38-.26v-.07a.32.32 0 0 0-.17-.21.51.51 0 0 0-.26 0l-.17.07a1 1 0 0 1-.52 0l-.11.12zm3.26.33a.35.35 0 0 0 .14.07.79.79 0 0 1 .45.26c.116.011.234.011.35 0 .07 0 .12-.07.19-.09a1.43 1.43 0 0 0-.19-.19 1.39 1.39 0 0 0-.94-.05zM4.54 17.43a1 1 0 0 0 1 .28.4.4 0 0 0 .26-.24 1.62 1.62 0 0 1-1.11-.14 1.33 1.33 0 0 1-.64-.87 1.3 1.3 0 0 1 .54-1.44 1.31 1.31 0 0 0 .86 1.64h.14a1.37 1.37 0 0 0 1.51-.74 3.54 3.54 0 0 0-.3.26c-.437.3-1.013.3-1.45 0a.89.89 0 0 1-.05-1.45.56.56 0 0 0 .28.4 1.6 1.6 0 0 0 .47.17 1.18 1.18 0 0 0 1-.31 1.5 1.5 0 0 0 .33-.52c.19-.45.33-.92.54-1.37a8.79 8.79 0 0 1 .45-.8c0-.07.09 0 .14 0l.52.28.33.14-.14.12a5.32 5.32 0 0 0-.8 1.11c-.17.31-.33.59-.47.9-.14.31-.28.71-.4 1.06l-.28.8c-.07.21-.17.4-.26.61a1.48 1.48 0 0 1-.66.71 1.54 1.54 0 0 1-.55.15 2.28 2.28 0 0 1-.57 0 .76.76 0 0 1-.67-.54.37.37 0 0 0-.02-.21zm14.07-.8c.012.11.012.22 0 .33 0 .14-.09.14-.21.07l-.28-.14H18a.58.58 0 0 1 0 .52.24.24 0 0 1-.09.12h-.11l-.07-.21a.23.23 0 0 0-.3-.12.87.87 0 0 0-.26.12h-.14a3.11 3.11 0 0 1-.33-1.06l.1.12a.47.47 0 0 0 .57 0 .39.39 0 0 0 0-.33c0-.07-.07-.12-.09-.19.14 0 .14-.12.5.31l.26-.14c.09 0 0-.14 0-.19v-.21l.17.07a.24.24 0 0 1 .12.09 3 3 0 0 0 .5.45.47.47 0 0 1 .17.38v.09h-.07c-.25-.08-.25-.08-.32-.08zM6.8 15.04a1.05 1.05 0 0 0-.64-.14 1.14 1.14 0 0 1-.28 0 .38.38 0 0 1-.28-.54c.09 0 .17.12.26.17.09.05.12 0 .12-.07a.29.29 0 0 1 .17-.28.45.45 0 0 1 .45.09c.202.2.28.496.2.77z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bsv);


/***/ }),

/***/ "VANy":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gnt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gnt = {
  symbol: 'gnt',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.499-26.712l-2.272 2.334a4.212 4.212 0 0 0-2.395-.749 4.262 4.262 0 0 0-3.07 1.303A4.474 4.474 0 0 0 11.5 11.31c0 1.18.448 2.298 1.262 3.135a4.274 4.274 0 0 0 2.213 1.22v2.04a4.189 4.189 0 0 0-2.217 1.225 4.471 4.471 0 0 0-1.258 3.132c0 1.18.448 2.298 1.262 3.135a4.24 4.24 0 0 0 3.07 1.302 4.262 4.262 0 0 0 3.07-1.302 4.451 4.451 0 0 0 1.261-3.135 4.451 4.451 0 0 0-1.262-3.135 4.274 4.274 0 0 0-2.213-1.221v-2.04a4.183 4.183 0 0 0 2.217-1.225 4.448 4.448 0 0 0 1.258-3.131c0-.888-.259-1.748-.738-2.478l2.277-2.34L20.5 5.287zm-4.667 14.057c.711 0 1.367.277 1.853.787.503.529.778 1.206.778 1.93 0 .73-.277 1.417-.775 1.928a2.53 2.53 0 0 1-1.856.79c-.7 0-1.362-.282-1.857-.79a2.771 2.771 0 0 1-.775-1.927c0-.73.278-1.417.775-1.927a2.53 2.53 0 0 1 1.857-.791zm1.853-6.09a2.527 2.527 0 0 1-1.853.787c-.7 0-1.362-.283-1.857-.791a2.771 2.771 0 0 1-.775-1.927c0-.73.278-1.417.775-1.928a2.53 2.53 0 0 1 1.857-.79c.7 0 1.362.282 1.856.79a2.7 2.7 0 0 1 .775 1.928c0 .73-.277 1.416-.778 1.93z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#001D57"/><path fill="#FFF" fill-rule="nonzero" d="M20.499 5.288l1.203 1.204-2.277 2.34c.48.73.738 1.591.738 2.479a4.448 4.448 0 0 1-1.258 3.131 4.183 4.183 0 0 1-2.217 1.226v2.039a4.273 4.273 0 0 1 2.213 1.22 4.451 4.451 0 0 1 1.262 3.136 4.451 4.451 0 0 1-1.262 3.135 4.262 4.262 0 0 1-3.07 1.302 4.24 4.24 0 0 1-3.07-1.302 4.474 4.474 0 0 1-1.261-3.135c0-1.18.448-2.299 1.258-3.132a4.183 4.183 0 0 1 2.217-1.225v-2.04a4.274 4.274 0 0 1-2.213-1.22A4.474 4.474 0 0 1 11.5 11.31c0-1.18.448-2.299 1.262-3.135a4.262 4.262 0 0 1 3.07-1.303c.86 0 1.687.262 2.395.749L20.5 5.288zm-4.667 14.057a2.53 2.53 0 0 0-1.857.79 2.751 2.751 0 0 0-.775 1.928c0 .725.275 1.402.775 1.927a2.58 2.58 0 0 0 1.857.79 2.53 2.53 0 0 0 1.856-.79 2.751 2.751 0 0 0 .775-1.927c0-.725-.275-1.402-.778-1.931a2.527 2.527 0 0 0-1.853-.787zm1.853-6.09a2.754 2.754 0 0 0 .778-1.931 2.7 2.7 0 0 0-.775-1.928 2.578 2.578 0 0 0-1.856-.79 2.53 2.53 0 0 0-1.857.79 2.751 2.751 0 0 0-.775 1.928c0 .725.275 1.402.775 1.927a2.58 2.58 0 0 0 1.857.79c.711 0 1.367-.276 1.853-.786z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gnt);


/***/ }),

/***/ "VBH2":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/strat.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Strat = {
  symbol: 'strat',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6.047 15.454l-.008-1.737 9.642 5.659c.228.134.51.135.74.001l10.211-5.944a.744.744 0 0 0 .005-1.28l-10.212-6.05a.732.732 0 0 0-.749.001L5.256 12.34a.529.529 0 0 0-.249.542.644.644 0 0 0-.007.098v2.474c0 .647.343 1.245.899 1.569l9.783 5.7c.23.133.513.132.742-.003l9.473-5.604v1.901l-9.847 5.878-10.263-6.033a.521.521 0 0 0-.716.19.53.53 0 0 0 .189.721l10.42 6.126c.23.136.516.135.746-.003l10.157-6.063a.743.743 0 0 0 .36-.637v-2.627a.739.739 0 0 0-1.108-.64l-9.785 5.79-9.627-5.61a.759.759 0 0 1-.376-.655zm10.006 2.92l-9.498-5.585 9.498-5.684 9.594 5.684-9.594 5.584z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1387C9"/><path fill="#FFF" fill-rule="nonzero" d="M16.053 18.373l9.594-5.584-9.594-5.684-9.498 5.684 9.498 5.584zm-10.006-2.92a.76.76 0 0 0 .376.657l9.627 5.608 9.785-5.788a.739.739 0 0 1 1.109.64v2.626a.743.743 0 0 1-.361.637l-10.157 6.063a.732.732 0 0 1-.746.003L5.26 19.773a.53.53 0 0 1-.189-.721.521.521 0 0 1 .716-.19l10.263 6.033 9.847-5.878v-1.9l-9.473 5.603a.732.732 0 0 1-.742.003l-9.783-5.7A1.815 1.815 0 0 1 5 15.453V12.98a.631.631 0 0 1 .947-.548l.608.357-.764.457a.521.521 0 0 1-.784-.364.529.529 0 0 1 .25-.542l10.419-6.236a.732.732 0 0 1 .75-.002l10.211 6.05a.744.744 0 0 1-.005 1.281L16.42 19.377a.732.732 0 0 1-.74-.001L5.42 13.343a.415.415 0 0 0 .608-.239.423.423 0 0 0 .02-.124v2.474z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Strat);


/***/ }),

/***/ "VEDR":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rise.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rise = {
  symbol: 'rise',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM12.605 9.155c.858 0 1.553-.706 1.553-1.577S13.463 6 12.605 6c-.857 0-1.552.706-1.552 1.578s.695 1.577 1.552 1.577zM19.447 26c.858 0 1.553-.706 1.553-1.578 0-.87-.695-1.577-1.553-1.577-.857 0-1.552.706-1.552 1.577 0 .872.695 1.578 1.552 1.578zm-6.205-11.79L20.4 8.65a1.432 1.432 0 0 0 .26-1.987 1.38 1.38 0 0 0-1.955-.265l-7.157 5.562a1.432 1.432 0 0 0-.261 1.986 1.38 1.38 0 0 0 1.955.265zm.053 5.669l7.157-5.562a1.432 1.432 0 0 0 .261-1.986 1.38 1.38 0 0 0-1.955-.265L11.6 17.628a1.432 1.432 0 0 0-.26 1.987 1.38 1.38 0 0 0 1.955.265zm0 5.829l7.157-5.562a1.432 1.432 0 0 0 .261-1.986 1.38 1.38 0 0 0-1.955-.265L11.6 23.457a1.432 1.432 0 0 0-.26 1.987 1.38 1.38 0 0 0 1.955.265z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f49352" r="16"/><path d="M12.605 9.155c-.857 0-1.552-.706-1.552-1.577S11.748 6 12.605 6c.858 0 1.553.706 1.553 1.578s-.695 1.577-1.553 1.577zM19.447 26a1.565 1.565 0 0 1-1.552-1.578c0-.87.695-1.577 1.552-1.577.858 0 1.553.706 1.553 1.577 0 .872-.695 1.578-1.553 1.578zm-6.205-11.79a1.38 1.38 0 0 1-1.955-.265 1.432 1.432 0 0 1 .26-1.986l7.158-5.562a1.38 1.38 0 0 1 1.955.265 1.432 1.432 0 0 1-.26 1.987zm.053 5.669a1.38 1.38 0 0 1-1.955-.265 1.432 1.432 0 0 1 .26-1.987l7.158-5.561a1.38 1.38 0 0 1 1.955.265 1.432 1.432 0 0 1-.26 1.986zm0 5.829a1.38 1.38 0 0 1-1.955-.265 1.432 1.432 0 0 1 .26-1.987l7.158-5.561a1.38 1.38 0 0 1 1.955.265 1.432 1.432 0 0 1-.26 1.986z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rise);


/***/ }),

/***/ "VkGn":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/plr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Plr = {
  symbol: 'plr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM8.41 20.902c.496.507 1.246.738 2.257.735 2.16 0 3.954-1.866 3.954-4.997v-.39c0-3.01-1.55-5.262-3.914-5.262-.564 0-1.57.021-2.358.777H8.26v-.64H6V25h2.312v-4.098zm4.064-4.076c0 2.019-.865 2.933-2.038 2.936-1.49 0-2.249-1.274-2.249-2.939v-.68c0-1.747.771-3.271 2.209-3.271 1.331 0 2.078 1.31 2.078 3.271zM15.74 7v14.576h2.315V7zm8.929 6.409h.29l-.013-2.333c-.1 0-.015-.003-.119-.003-1.042-.015-2.31.241-2.827.787h-.088v-.637h-2.133v10.362h2.303v-5.844c0-1.302 1.289-2.332 2.587-2.332zm-.972 5.686v2.481H26v-2.481z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#00bfff" r="16"/><path d="M8.41 20.902h-.098V25H6V11.125h2.26v.64h.089c.789-.756 1.794-.777 2.358-.777 2.364 0 3.914 2.253 3.914 5.262v.39c0 3.131-1.794 4.997-3.954 4.997-1.011.003-1.76-.228-2.257-.735zm4.064-4.076v-.683c0-1.96-.747-3.271-2.078-3.271-1.438 0-2.209 1.524-2.209 3.271v.68c0 1.665.759 2.94 2.249 2.94 1.173-.004 2.038-.918 2.038-2.937zM15.74 7h2.315v14.576H15.74zm8.929 6.409c-1.298 0-2.587 1.03-2.587 2.332v5.844H19.78V11.223h2.133v.637H22c.518-.546 1.785-.802 2.827-.787.104 0 .018.003.119.003l.012 2.333zm-.972 5.686H26v2.481h-2.303z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Plr);


/***/ }),

/***/ "VmEW":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zla.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zla = {
  symbol: 'zla',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.495-25.726c-.092.39-.368 1.62-.494 2.444-.05.338-.26.789.326 1.032-.134.026-.175.043-.217.034-.418-.052-.845-.112-1.263-.164-.092-.009-.209-.026-.293.017-.56.295-.81.997-.527 1.595.16.338.21.65.143 1.006a.499.499 0 0 0 .05.268c.326.798.385 1.595.125 2.427-.042.13-.016.287-.008.425.017.269.033.538.058.806-.41-.329-.86-.624-1.204-1.023a1.993 1.993 0 0 1-.468-1.464c.008-.104-.075-.226-.142-.321-.193-.286-.418-.546-.577-.85-.226-.433-.502-.615-.954-.476-.225.069-.435.216-.627.364-.167.12-.31.277-.46.416-.017-.018-.042-.035-.058-.052.025-.061.033-.13.067-.191.234-.433.225-.425-.1-.789-.628-.702-1.172-1.456-1.406-2.41-.117-.476-.26-.945-.384-1.413-.628.78-.711 3.59-.092 4.699-.193-.98-.385-1.907-.168-2.861.042.217.067.425.076.642.033.771.217 1.5.543 2.184.067.147.26.234.402.338.05.035.117.052.175.078-.008.035-.008.07-.017.095-.309-.017-.61-.052-.92-.06-.2-.009-.434-.061-.593.026-.21.112-.377.33-.494.546-.033.06.134.303.26.399.334.251.56.528.51.996-.009.113.117.313.226.356.3.113.384.338.434.624.034.182.059.416.176.52.376.347.493.763.502 1.266.008.32.175.65.134.962-.034.269.016.468.125.624h-.008l.025.026c.067.104.159.19.267.269l.218.208s.376.407.384.806c.009.399-.025.45.092.806.118.347.276.624.327.919.05.295-.059.381.117.572.175.19.368.32.568.538.193.225.469.303.653.494.184.19.476.546.702.771.117.122.276.217.393.286.034.035.05.052.042.07-.159.346.167.338.293.45.217.191.527.312.685.546.285.425.653.642 1.113.772.042.009.092.017.108.043.059.07.1.156.151.234-.017.026-.042.052-.059.078.46.165.92.338 1.38.494.092.035.21.035.293.01.385-.13.77-.27 1.154-.408.075-.026.192-.104.184-.139-.058-.277.167-.234.293-.303.3-.165.652-.286.878-.52.276-.295.527-.599.895-.798.15-.087.451-.121.3-.45-.008-.018.076-.087.118-.13.058-.053.125-.096.209-.165.058-.026.125-.07.234-.148a7.87 7.87 0 0 0 .945-.919c.2-.251.527-.563.527-.563s-.21-.494-.075-.928l.71-.528c.151-.321.193-.443.36-.772.159-.33.2-.962.427-1.214.2-.216.443-.39.434-.528a.995.995 0 0 0 .05-.46c-.024-.225.05-.46.076-.685.017-.19 0-.381.05-.563.084-.295.142-.641.326-.85.2-.225.335-.424.36-.728.025-.26.125-.468.385-.59.125-.06.25-.268.25-.407-.008-.39.117-.667.435-.875.092-.06.16-.165.251-.234.15-.113.126-.243.042-.39-.217-.39-.544-.529-.978-.45-.327.06-.82.094-.996.094-.175 0-.05-.13-.05-.13.619-.017.694-.528.836-.944.118-.347.184-.711.243-1.075.059-.347.059-.512.125-1.05.067-.537.226 1.041-.025 2.333.502-.763.343-3.529-.217-4.343-.017.017-.034.026-.034.043-.025.104-.041.208-.066.312-.243 1.326-.745 2.514-1.673 3.485-.343.355-.326.364-.092.823.025.044.025.104.033.165-.2-.095-.35-.234-.501-.364a1.36 1.36 0 0 0-.996-.381c-.4 0-.51.294-.627.58-.217.52-.727.841-.744 1.535-.025 1.014-.928 1.525-1.514 2.201-.008.01-.033-.008-.067-.008-.008-.035-.033-.078-.025-.113 0-.624.168-1.257-.108-1.855-.017-.035-.009-.087 0-.121.108-.876.209-1.743.326-2.61.016-.112.075-.216.125-.32.293-.624.075-1.335-.518-1.647a.432.432 0 0 0-.234-.035c-.327.043-.644.104-.962.147-.16.026-.326.026-.485.035-.009-.026-.017-.052-.025-.07.267-.086.401-.25.343-.545l-.603-3c-.016-.078-.033-.468.059-.268.092.208.385 1.1.552 1.664.159.546.284 1.11.426 1.664-.234-1.551-.593-3.06-1.48-4.438a3.67 3.67 0 0 0-.56.98 43.68 43.68 0 0 0-.602 1.907c-.142.494-.51 1.465-.351 1.49.158.027.936-2.886.986-3.094.05-.208.143-.2.05.19z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00004D"/><path fill="#FFF" d="M15.505 6.274c-.092.39-.368 1.62-.494 2.444-.05.338-.26.789.326 1.032-.134.026-.175.043-.217.034-.418-.052-.845-.112-1.263-.164-.092-.009-.209-.026-.293.017-.56.295-.81.997-.527 1.595.16.338.21.65.143 1.006a.499.499 0 0 0 .05.268c.326.798.385 1.595.125 2.427-.042.13-.016.287-.008.425.017.269.033.538.058.806-.41-.329-.86-.624-1.204-1.023a1.993 1.993 0 0 1-.468-1.464c.008-.104-.075-.226-.142-.321-.193-.286-.418-.546-.577-.85-.226-.433-.502-.615-.954-.476-.225.069-.435.216-.627.364-.167.12-.31.277-.46.416-.017-.018-.042-.035-.058-.052.025-.061.033-.13.067-.191.234-.433.225-.425-.1-.789-.628-.702-1.172-1.456-1.406-2.41-.117-.476-.26-.945-.384-1.413-.628.78-.711 3.59-.092 4.699-.193-.98-.385-1.907-.168-2.861.042.217.067.425.076.642.033.771.217 1.5.543 2.184.067.147.26.234.402.338.05.035.117.052.175.078-.008.035-.008.07-.017.095-.309-.017-.61-.052-.92-.06-.2-.009-.434-.061-.593.026-.21.112-.377.33-.494.546-.033.06.134.303.26.399.334.251.56.528.51.996-.009.113.117.313.226.356.3.113.384.338.434.624.034.182.059.416.176.52.376.347.493.763.502 1.266.008.32.175.65.134.962-.034.269.016.468.125.624h-.008l.025.026c.067.104.159.19.267.269l.218.208s.376.407.384.806c.009.399-.025.45.092.806.118.347.276.624.327.919.05.295-.059.381.117.572.175.19.368.32.568.538.193.225.469.303.653.494.184.19.476.546.702.771.117.122.276.217.393.286.034.035.05.052.042.07-.159.346.167.338.293.45.217.191.527.312.685.546.285.425.653.642 1.113.772.042.009.092.017.108.043.059.07.1.156.151.234-.017.026-.042.052-.059.078.46.165.92.338 1.38.494.092.035.21.035.293.01.385-.13.77-.27 1.154-.408.075-.026.192-.104.184-.139-.058-.277.167-.234.293-.303.3-.165.652-.286.878-.52.276-.295.527-.599.895-.798.15-.087.451-.121.3-.45-.008-.018.076-.087.118-.13.058-.053.125-.096.209-.165.058-.026.125-.07.234-.148a7.87 7.87 0 0 0 .945-.919c.2-.251.527-.563.527-.563s-.21-.494-.075-.928l.71-.528c.151-.321.193-.443.36-.772.159-.33.2-.962.427-1.214.2-.216.443-.39.434-.528a.995.995 0 0 0 .05-.46c-.024-.225.05-.46.076-.685.017-.19 0-.381.05-.563.084-.295.142-.641.326-.85.2-.225.335-.424.36-.728.025-.26.125-.468.385-.59.125-.06.25-.268.25-.407-.008-.39.117-.667.435-.875.092-.06.16-.165.251-.234.15-.113.126-.243.042-.39-.217-.39-.544-.529-.978-.45-.327.06-.82.094-.996.094-.175 0-.05-.13-.05-.13.619-.017.694-.528.836-.944.118-.347.184-.711.243-1.075.059-.347.059-.512.125-1.05.067-.537.226 1.041-.025 2.333.502-.763.343-3.529-.217-4.343-.017.017-.034.026-.034.043-.025.104-.041.208-.066.312-.243 1.326-.745 2.514-1.673 3.485-.343.355-.326.364-.092.823.025.044.025.104.033.165-.2-.095-.35-.234-.501-.364a1.36 1.36 0 0 0-.996-.381c-.4 0-.51.294-.627.58-.217.52-.727.841-.744 1.535-.025 1.014-.928 1.525-1.514 2.201-.008.01-.033-.008-.067-.008-.008-.035-.033-.078-.025-.113 0-.624.168-1.257-.108-1.855-.017-.035-.009-.087 0-.121.108-.876.209-1.743.326-2.61.016-.112.075-.216.125-.32.293-.624.075-1.335-.518-1.647a.432.432 0 0 0-.234-.035c-.327.043-.644.104-.962.147-.16.026-.326.026-.485.035-.009-.026-.017-.052-.025-.07.267-.086.401-.25.343-.545l-.603-3c-.016-.078-.033-.468.059-.268.092.208.385 1.1.552 1.664.159.546.284 1.11.426 1.664-.234-1.551-.593-3.06-1.48-4.438a3.67 3.67 0 0 0-.56.98 43.68 43.68 0 0 0-.602 1.907c-.142.494-.51 1.465-.351 1.49.158.027.936-2.886.986-3.094.05-.208.143-.2.05.19z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zla);


/***/ }),

/***/ "Vq6y":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vrsc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vrsc = {
  symbol: 'vrsc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11.898-17.473a12.003 12.003 0 0 0-2.78-6.312 11.86 11.86 0 0 0-3.864-2.99 11.964 11.964 0 0 0-6.41-1.157 11.984 11.984 0 0 0-9.624 6.688 12.013 12.013 0 0 0-1.064 7.103 11.956 11.956 0 0 0 2.97 6.2c2.245 2.502 5.591 3.965 8.952 3.926a11.987 11.987 0 0 0 11.82-13.458zm-3.654-2.59a1.513 1.513 0 0 0-.142.243l-5.278 11.118c-.253.531-.507 1.068-.795 1.58-1.307-.01-2.614-.005-3.922-.005-2.083-4.288-4.156-8.58-6.244-12.863-.043-.083-.087-.171-.131-.254.034-.024.112-.068.146-.088.815-1.014 1.64-2.024 2.459-3.039.102-.131.22-.258.336-.375.054.087.107.175.151.273a438.4 438.4 0 0 0 1.38 3.136c.47 0 .937.01 1.41-.02.171.162.264.377.332.596.088-.224.122-.463.132-.707.151-1.4.176-2.815.327-4.215.024-.302.478-.302.517-.01.146 1.327.18 2.669.288 4 .02.4.034.8.122 1.19.2-.263.136-.726.502-.834.303-.102.644.069.932-.112.395-.239.541-.707.79-1.073.142-.239.468-.41.732-.273.263.102.375.385.512.61.156.258.298.546.551.717.225.097.478.112.722.107.493-1.112 1-2.22 1.503-3.327.878 1.103 1.707 2.24 2.585 3.342.132.058.156.156.083.283zm-6.17-1.396c-.396.43-.537 1.122-1.128 1.342-.302.146-.668.024-.97.137-.264.517-.23 1.126-.43 1.663-.136.254-.546.127-.546-.151-.17-1.459-.185-2.932-.341-4.39-.166 1.312-.21 2.638-.415 3.94 0 .338-.532.391-.58.055-.103-.38-.127-.78-.318-1.137a33.505 33.505 0 0 0-.99 0c1.244 2.82 2.478 5.639 3.722 8.459 1.259-2.82 2.561-5.62 3.81-8.444l.005-.01c-.327-.04-.683-.073-.956-.278-.38-.317-.527-.825-.864-1.186z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FFB500"/><g fill="#FFF"><path d="M27.898 14.527a12.003 12.003 0 0 0-2.78-6.312 11.86 11.86 0 0 0-3.864-2.99 11.964 11.964 0 0 0-6.41-1.157 11.984 11.984 0 0 0-9.624 6.688 12.013 12.013 0 0 0-1.064 7.103 11.956 11.956 0 0 0 2.97 6.2c2.245 2.502 5.591 3.965 8.952 3.926a11.987 11.987 0 0 0 11.82-13.458zm-3.654-2.59a1.513 1.513 0 0 0-.142.243l-5.278 11.118c-.253.531-.507 1.068-.795 1.58-1.307-.01-2.614-.005-3.922-.005-2.083-4.288-4.156-8.58-6.244-12.863-.043-.083-.087-.171-.131-.254.034-.024.112-.068.146-.088.815-1.014 1.64-2.024 2.459-3.039.102-.131.22-.258.336-.375.054.087.107.175.151.273.454 1.044.917 2.093 1.38 3.136.47 0 .937.01 1.41-.02.171.162.264.377.332.596.088-.224.122-.463.132-.707.151-1.4.176-2.815.327-4.215.024-.302.478-.302.517-.01.146 1.327.18 2.669.288 4 .02.4.034.8.122 1.19.2-.263.136-.726.502-.834.303-.102.644.069.932-.112.395-.239.541-.707.79-1.073.142-.239.468-.41.732-.273.263.102.375.385.512.61.156.258.298.546.551.717.225.097.478.112.722.107.493-1.112 1-2.22 1.503-3.327.878 1.103 1.707 2.24 2.585 3.342.132.058.156.156.083.283z"/><path d="M18.073 10.541c-.395.43-.536 1.122-1.127 1.342-.302.146-.668.024-.97.137-.264.517-.23 1.126-.43 1.663-.136.254-.546.127-.546-.151-.17-1.459-.185-2.932-.341-4.39-.166 1.312-.21 2.638-.415 3.94 0 .338-.532.391-.58.055-.103-.38-.127-.78-.318-1.137a33.505 33.505 0 0 0-.99 0c1.244 2.82 2.478 5.639 3.722 8.459 1.259-2.82 2.561-5.62 3.81-8.444l.005-.01c-.327-.04-.683-.073-.956-.278-.38-.317-.527-.825-.864-1.186z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vrsc);


/***/ }),

/***/ "Vrmp":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dat.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dat = {
  symbol: 'dat',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.054-26.394c-.376 0-.691.12-.947.359-.24.239-.359.554-.359.947v6.912a6.306 6.306 0 0 0-4.94-2.33c-1.23 0-2.347.308-3.354.922-.99.614-1.775 1.468-2.355 2.56-.564 1.075-.845 2.278-.845 3.61s.307 2.543.921 3.635a6.882 6.882 0 0 0 2.535 2.56c1.092.614 2.295.921 3.61.921 1.314 0 2.5-.307 3.558-.921a6.882 6.882 0 0 0 2.534-2.56c.632-1.092.947-2.304.947-3.635V6.912c0-.393-.119-.708-.358-.947-.239-.24-.555-.359-.947-.359zm-5.735 17.792c-.853 0-1.63-.204-2.33-.614a4.73 4.73 0 0 1-1.638-1.74c-.392-.735-.588-1.554-.588-2.458s.196-1.716.588-2.432a4.528 4.528 0 0 1 1.639-1.716c.7-.426 1.476-.64 2.33-.64.853 0 1.62.214 2.303.64.7.41 1.246.982 1.639 1.716.392.716.589 1.527.589 2.432s-.197 1.723-.59 2.457a4.468 4.468 0 0 1-1.638 1.741c-.682.41-1.45.614-2.304.614z" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2d9cdb" r="16"/><path d="M20.054 5.606c.392 0 .708.12.947.359s.358.554.358.947v11.674c0 1.33-.315 2.543-.947 3.635a6.882 6.882 0 0 1-2.534 2.56c-1.058.614-2.244.921-3.559.921-1.314 0-2.517-.307-3.61-.921a6.882 6.882 0 0 1-2.534-2.56c-.614-1.092-.921-2.304-.921-3.635s.281-2.535.845-3.61c.58-1.092 1.365-1.946 2.355-2.56 1.007-.614 2.125-.922 3.353-.922a6.306 6.306 0 0 1 4.941 2.33V6.912c0-.393.12-.708.359-.947a1.33 1.33 0 0 1 .947-.359zm-5.735 17.792c.854 0 1.622-.204 2.304-.614a4.468 4.468 0 0 0 1.639-1.74c.392-.735.589-1.554.589-2.458s-.197-1.716-.59-2.432a4.287 4.287 0 0 0-1.638-1.716c-.682-.426-1.45-.64-2.304-.64-.853 0-1.63.214-2.33.64a4.528 4.528 0 0 0-1.638 1.716c-.392.716-.588 1.527-.588 2.432s.196 1.723.588 2.457a4.73 4.73 0 0 0 1.639 1.741c.7.41 1.476.614 2.33.614z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dat);


/***/ }),

/***/ "VtW8":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/powr.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Powr = {
  symbol: 'powr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11.995-16.046a.205.205 0 0 0-.17-.158l-2.258-2.263.894-3.344a.206.206 0 0 0-.145-.252l-3.356-.902-.84-3.143a.203.203 0 0 0-.01-.04l-.024-.087a.205.205 0 0 0-.251-.146l-3.282.882-2.437-2.443a.21.21 0 0 0-.29 0l-2.408 2.414-3.174-.853a.205.205 0 0 0-.252.146l-.874 3.27-3.355.902a.205.205 0 0 0-.146.252l.865 3.236-2.422 2.428a.206.206 0 0 0 0 .291l2.49 2.497-.864 3.237a.206.206 0 0 0 .145.252l3.208.861.885 3.31a.205.205 0 0 0 .251.146l3.282-.882 2.369 2.375a.204.204 0 0 0 .29 0l2.397-2.404 3.39.911a.204.204 0 0 0 .251-.145l.885-3.31 3.209-.862a.206.206 0 0 0 .145-.252l-.894-3.345 2.306-2.312.076-.036a.206.206 0 0 0 .114-.23zm-2.619 2.12l-.171-.641 1.517-.707zm.491 3.427l-2.1-1.23v-.001l1.397-1.401zm-2.21-.82l2.01 1.179-2.505.673zm-1.798 5.136l-1.25-2.173 1.973-.53zm-2.504-1.125l1.482 1.043-1.989-.534zm-3.179 2.606v-2.39l1.88.505zm-.41-2.353v2.353l-1.851-1.856zm-5.189.968l1.182-2.05 1.364 1.367zm-1.08-2.799l.735.198-.17 1.916zm-3.09-1.255l2.01-1.193.5 1.867zm1.807-1.55l-2.002 1.188.674-2.52zm-3.48-4.07h2.459l-.52 1.944zm2.08-1.575l-1.843.858 1.634-1.638zm-.672-4.102l2.025 1.174-1.35 1.353zm2.338.86l-.013.013-2.12-1.23 2.649-.711zm1.772-5.04l1.171 2.034-1.847.496zm2.342.916l-1.427-1.005 1.916.515zM15.766 4.7v2.403l-1.89-.508zm.41 2.44V4.7l1.92 1.924zm5.396-1.024l-1.246 2.163-1.438-1.442zm.303 2.628l.145-1.639.483 1.807zm3.85 1.46l-2.131 1.202-.511-1.912zM23.8 11.761l2.139-1.208-.707 2.643zm3.442 4.031h-2.279l.482-1.801zm-2.366.411h1.991l-1.77.825zm-.31 1.072l.086-.32.067.25zm-.138.518l.399-.186.214.802-1.062 1.065zm-1.241 3.057l-.483 1.805-1.8.483zm-2.867 2.293l-1.56-2.709 5.183-2.415-.544 2.037zm-.088.67l.962 1.67-1.544-1.087zm-1.091.225l.391-.106-.223.224zm-.517.138l.39.275-.623.626-1.56-.42zm-3.377.482l-1.667.448-1.22-1.224zM10.69 22.79l.297.298-.316-.085zm-.379-.38l-.042.485-.895-.24-.432-1.617zM8.15 19.663l-1.142-1.145.418-1.563zm-1.025-3.835H5.288l1.633-.761zm.464-1.073l-.163.612-.127-.476zm.139-.517l-.537.25-.251-.94 1.328-1.332zM9.06 10.84l.393-1.469 1.466-.394zm2.684-2.69l-.92-1.596L12.3 7.593zm1.16-.132l-.613.165.35-.35zm.517-.139l-.486-.342.606-.606 1.706.458zm3.41-.49l1.6-.43 1.17 1.174zm4.577 1.974l-.435-.436.463.124zm.378.38l.052-.584.787.212.443 1.657zm2.074 2.66l1.25 1.253-.458 1.71zm-5.774 6.861l1.587-2.828.998 1.689a.205.205 0 0 0 .38-.087l.163-1.834h3.215l-.347 1.298-5.528 2.575zm-.784 1.397l.55-.98.329.57zm-3.486-.37l.52-.903 3.23-.036-.933 1.663a.206.206 0 0 0 .265.288l1.489-.694 1.599 2.777-1.283.344zm-.206.357l4.576 3.221-2.147.577-3.998-1.074zm.249-1.255l-.38.66-.917-.645zm-2.59-3.154h1.015l1.62 2.742-1.983.023a.205.205 0 0 0-.116.374l1.468 1.032-1.602 2.782-.934-.935zm-.41 0l-.5 5.638-1.63-1.633-1.07-4.005zm1.182-.411h-.735l.096-1.082zm1.45-3.822l.51.885-1.568 2.793-1.002-1.697a.205.205 0 0 0-.381.087l-.155 1.754H7.728l.347-1.298zm-.206-.357l-5.072 2.363.635-2.377 2.808-2.815zm5.007.162l-.483.838-3.222.036.936-1.668a.206.206 0 0 0-.265-.288l-1.6.746-1.612-2.8 1.296-.349zm.206-.358l-4.64-3.265 2.181-.586 4.05 1.088zm-.212 1.19l.343-.595.827.583zm2.516 3.561l-.103 1.162-.686-1.162zm-6.568-3.73l-.37-.642.99-.46zm3.563 6.467c-.007-.001-.013-.003-.02-.003l-3.398.038-1.704-2.883 1.68-2.994 3.326-.037.005.011 1.745 2.954zm3.942-8.664l1.541 1.545 1.062 3.971H21.25zm-.9 5.516h-1.07l-1.616-2.737 1.945-.021a.205.205 0 0 0 .115-.374l-1.378-.97 1.579-2.743.947.95zm.633-7.157l-.76-.205.92-1.598zM10.634 23.42l.784.21-.949 1.648z" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#05BCA9" fill-rule="nonzero"/><path fill="#FFF" d="M27.995 15.954a.206.206 0 0 1-.114.231l-.076.036-2.306 2.312.894 3.345a.206.206 0 0 1-.145.252l-3.209.861-.885 3.31a.205.205 0 0 1-.25.146l-3.39-.91-2.398 2.403a.204.204 0 0 1-.29 0l-2.369-2.375-3.282.882a.204.204 0 0 1-.25-.145l-.886-3.31-3.208-.862a.205.205 0 0 1-.145-.252l.865-3.237-2.49-2.497a.206.206 0 0 1 0-.29l2.421-2.429-.865-3.236a.206.206 0 0 1 .146-.252l3.355-.902.874-3.27a.206.206 0 0 1 .252-.146l3.174.853 2.408-2.414a.21.21 0 0 1 .29 0L18.553 6.5l3.282-.882a.205.205 0 0 1 .251.146l.023.086a.203.203 0 0 1 .011.04l.84 3.144 3.356.902c.11.03.174.142.145.252l-.894 3.344 2.257 2.263a.205.205 0 0 1 .171.158zm-2.619 2.12l1.346-1.348-1.517.707.171.642zm.491 3.427l-.703-2.632-1.397 1.4v.001l2.1 1.231zm-2.21-.82l-.495 1.852 2.505-.673-2.01-1.178zm-1.798 5.136l.723-2.703-1.974.53 1.251 2.173zm-2.504-1.125l-.507.509 1.989.534-1.482-1.043zm-3.179 2.606l1.88-1.885-1.88-.505v2.39zm-.41-2.353l-1.851.497 1.85 1.856v-2.353zm-5.189.968l2.546-.683-1.364-1.368-1.182 2.051zm-1.08-2.799l.565 2.114.17-1.916-.735-.198zm-3.09-1.255l2.51.674-.5-1.867-2.01 1.193zm1.807-1.55l-1.328-1.332-.674 2.52 2.002-1.188zm-3.48-4.07l1.94 1.944.519-1.944H4.734zm2.08-1.575l-.209-.78-1.634 1.638 1.843-.858zm-.672-4.102l.675 2.527 1.35-1.353-2.025-1.174zm2.338.86l.516-1.928-2.65.712 2.121 1.229.013-.013zm1.772-5.04l-.676 2.53 1.847-.496-1.171-2.033zm2.342.916l.489-.49-1.916-.515 1.427 1.005zM15.766 4.7l-1.89 1.895 1.89.508V4.7zm.41 2.44l1.92-.516-1.92-1.924v2.44zm5.396-1.024l-2.684.72 1.438 1.443 1.246-2.163zm.303 2.628l.628.168-.483-1.807-.145 1.639zm3.85 1.46l-2.642-.71.51 1.912 2.131-1.203zM23.8 11.761l1.432 1.435.707-2.643-2.139 1.208zm3.442 4.031l-1.797-1.801-.482 1.801h2.279zm-2.366.411l.22.825 1.771-.825h-1.99zm-.31 1.072l.153-.07-.067-.25-.085.32zm-.138.518l-.45 1.681 1.063-1.065-.214-.802-.399.186zm-1.241 3.057l-2.283 2.288 1.8-.483.483-1.805zm-2.867 2.293l3.079-3.087.544-2.037-5.183 2.415 1.56 2.709zm-.088.67l-.582.583 1.544 1.087-.962-1.67zm-1.091.225l.168.118.223-.224-.391.106zm-.517.138l-1.792.482 1.559.419.624-.626-.39-.275zm-3.377.482l-2.887-.776 1.22 1.224 1.667-.448zM10.69 22.79l-.02.213.317.085-.297-.298zm-.379-.38l-1.369-1.37.432 1.617.895.24.042-.485zM8.15 19.663l-.724-2.708-.418 1.563 1.142 1.145zm-1.025-3.835l-.204-.761-1.633.76h1.837zm.464-1.073l-.29.136.127.476.163-.612zm.139-.517l.54-2.022-1.328 1.332.251.94.537-.25zM9.06 10.84l1.859-1.863-1.466.394-.393 1.47zm2.684-2.69l.556-.557-1.476-1.039.92 1.596zm1.16-.132l-.263-.185-.35.35.613-.165zm.517-.139l1.826-.49-1.706-.458-.606.606.486.342zm3.41-.49l2.77.744-1.17-1.173-1.6.429zm4.577 1.974l.028-.312-.463-.124.435.436zm.378.38l1.282 1.285-.443-1.657-.787-.212-.052.584zm2.074 2.66l.792 2.964.458-1.711-1.25-1.252zm-5.774 6.861l.468.813 5.528-2.575.347-1.298h-3.215l-.163 1.834a.205.205 0 0 1-.38.087l-.998-1.69-1.587 2.829zm-.784 1.397l.879-.41-.329-.57-.55.98zm-3.486-.37l4.887 3.44 1.283-.345-1.6-2.777-1.488.694a.205.205 0 0 1-.265-.288l.933-1.663-3.23.036-.52.902zm-.206.357l-1.57 2.724 4 1.074 2.146-.577-4.576-3.221zm.249-1.255l-1.297.015.917.645.38-.66zm-2.59-3.154l-.532 6.018.934.935 1.602-2.782-1.468-1.032a.206.206 0 0 1 .116-.374l1.984-.023-1.62-2.742H11.27zm-.41 0h-3.2l1.07 4.005 1.63 1.633.5-5.638zm1.182-.411l-.639-1.082-.096 1.082h.735zm1.45-3.822L8.075 14.53l-.347 1.298h3.167l.155-1.754a.206.206 0 0 1 .38-.087l1.003 1.697L14 12.891l-.51-.885zm-.206-.357l-1.63-2.829-2.807 2.815-.635 2.377 5.072-2.363zm5.007.162l-4.95-3.485-1.296.349 1.612 2.8 1.6-.746a.205.205 0 0 1 .265.288l-.936 1.668 3.222-.036.483-.838zm.206-.358l1.591-2.763-4.05-1.088-2.18.586 4.639 3.265zm-.212 1.19l1.17-.012-.827-.583-.343.596zm2.516 3.561h-.79l.687 1.162.103-1.162zm-6.568-3.73l.62-1.103-.99.461.37.643zm3.563 6.467l1.634-2.914-1.745-2.954-.005-.011-3.327.037-1.68 2.994 1.705 2.883 3.398-.038c.007 0 .013.002.02.003zm3.942-8.664l-.489 5.516h3.092l-1.062-3.97-1.541-1.546zm-.9 5.516l.522-5.896-.947-.949-1.58 2.742 1.38.97a.206.206 0 0 1-.116.375l-1.945.021 1.617 2.737h1.068zm.633-7.157l.16-1.803-.92 1.598.76.205zM10.634 23.42l-.165 1.858.95-1.648-.785-.21z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Powr);


/***/ }),

/***/ "VumV":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/audr.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Audr = {
  symbol: 'audr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.146-18.736l3.61 1.92 1.92-.96-4.589-2.486V7.36l8.823 4.58 1.92-.96-11.3-5.924A.845.845 0 0 0 10 5.805v6.067c.003.587.332 1.124.854 1.392zm13.757-1.018a.845.845 0 0 0-.96-.153l-12.797 6.643c-.525.27-.855.811-.854 1.402v6.057a.845.845 0 0 0 1.238.749l12.768-6.624c.533-.276.864-.83.855-1.43v-6.048a.835.835 0 0 0-.25-.596zm-1.536 6.538l-11.28 5.856v-4.378l11.28-5.856v4.378z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#34318A"/><path d="M10.854 13.264l3.61 1.92 1.92-.96-4.589-2.486V7.36l8.823 4.58 1.92-.96-11.3-5.924A.845.845 0 0 0 10 5.805v6.067c.003.587.332 1.124.854 1.392zm13.757-1.018a.845.845 0 0 0-.96-.153l-12.797 6.643c-.525.27-.855.811-.854 1.402v6.057a.845.845 0 0 0 1.238.749l12.768-6.624c.533-.276.864-.83.855-1.43v-6.048a.835.835 0 0 0-.25-.596zm-1.536 6.538l-11.28 5.856v-4.378l11.28-5.856v4.378z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Audr);


/***/ }),

/***/ "Vyct":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/grs.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Grs = {
  symbol: 'grs',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M10.664 28.193c-.61.64-1.215 1.287-1.84 1.914-.069.069-.291.073-.38.014-.919-.6-1.879-1.154-2.722-1.85-2.303-1.898-3.928-4.29-4.888-7.123-.723-2.132-.964-4.322-.77-6.564.27-3.096 1.345-5.886 3.252-8.33C5.978 2.842 9.464.784 13.756.168c3.086-.443 6.066-.01 8.911 1.287.077.035.153.073.227.113.016.008.024.03.044.057-.402 0-.802-.045-1.188.01-1.183.165-1.888.909-2.269 1.999-.075.217-.12.448-.153.676-.013.083.043.177.067.266.102-.05.242-.073.297-.153.148-.217.237-.475.39-.687.772-1.081 2.288-1.209 3.169-.26.6.646.68 1.424.492 2.252-.24 1.062-.823 1.942-1.511 2.752-.553.653-1.153 1.266-1.744 1.885-.064.067-.24.113-.31.074-1.25-.713-2.59-1.03-4.025-1.063-1.939-.044-3.706.403-5.206 1.676-1.54 1.307-2.409 2.962-2.385 5.005.027 2.388 1.068 4.217 3.155 5.42l.19.111c.008.005.011.018.036.062-.074.068-.158.14-.237.216-.65.635-1.33 1.241-1.938 1.914-.513.57-.862 1.249-.912 2.046-.033.519.125.972.503 1.314.405.366.85.689 1.305 1.053zm14.696.78c-.33-1.213-1.086-2.043-2.152-2.606-.828-.439-1.735-.6-2.654-.656-1.517-.09-3.037-.124-4.555-.207-1.073-.06-2.144-.161-3.216-.244a.209.209 0 0 1-.031-.004c-1.093-.23-1.425-.892-.852-1.844.278-.462.686-.851 1.072-1.237.085-.085.331-.053.49-.015 1.795.429 3.59.451 5.337-.166 2.141-.757 3.613-2.21 4.15-4.46.364-1.526.172-3.02-.547-4.43l-.15-.301h1.328c.37 0 .74.009 1.11-.007.097-.004.252-.06.278-.13.306-.83.591-1.667.882-2.503l-.07-.097c-.124.052-.298.07-.362.162-.337.483-.822.664-1.368.674-1.046.022-2.093.007-3.14.006-.016 0-.032-.02-.06-.038.685-.735 1.369-1.466 2.049-2.2.743-.802 1.431-1.644 1.903-2.64.555-1.175.669-2.33-.214-3.42-.01-.012-.005-.038-.015-.141 4.254 2.889 6.789 6.785 7.332 11.864a15.803 15.803 0 0 1-6.545 14.64zm-5.794-12.317c-.118.758-.172 1.532-.369 2.268-.343 1.29-1.186 2.156-2.525 2.378-1.411.236-2.546-.286-3.36-1.48-.633-.932-.947-1.979-1.08-3.079-.139-1.156-.16-2.317.112-3.463.286-1.211.92-2.161 2.118-2.623 1.459-.564 2.979.004 3.888 1.411.615.951.932 2.005 1.05 3.121.052.482.071.968.105 1.452l.061.015zm4.143 13.352c-2.936 2.2-10.477 2.7-13.523.883.137-.275.246-.575.422-.83.36-.52.747-1.023 1.147-1.514.076-.094.267-.144.4-.135 1.526.1 3.05.229 4.577.322 1.37.083 2.743.106 4.112.204.616.044 1.23.177 1.834.321.423.1.8.324 1.031.749z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#377E96"/><path fill="#FFF" d="M23.625 30.07l.084-.062c-.232-.425-.608-.648-1.031-.749-.604-.144-1.218-.277-1.834-.32-1.369-.099-2.742-.122-4.112-.205-1.526-.093-3.05-.222-4.577-.322-.133-.01-.324.04-.4.135-.4.49-.787.994-1.147 1.514-.176.255-.285.555-.422.83l.105.06a15.916 15.916 0 0 1-1.759-.797c.104.02.24.004.291-.047.626-.627 1.232-1.274 1.841-1.914-.455-.364-.9-.687-1.305-1.053-.378-.342-.536-.795-.503-1.314.05-.797.399-1.476.912-2.046.607-.673 1.288-1.28 1.938-1.914.08-.077.163-.148.237-.216-.025-.044-.028-.057-.035-.062l-.19-.11c-2.088-1.204-3.129-3.033-3.156-5.42-.024-2.044.846-3.699 2.385-5.006 1.5-1.273 3.267-1.72 5.206-1.676 1.435.033 2.776.35 4.025 1.063.07.04.246-.007.31-.074.591-.619 1.19-1.232 1.744-1.885.688-.81 1.27-1.69 1.511-2.752.188-.828.108-1.606-.492-2.252-.881-.949-2.397-.821-3.17.26-.152.212-.24.47-.389.687-.055.08-.195.103-.297.153-.024-.09-.08-.183-.067-.266.034-.228.078-.46.153-.676.38-1.09 1.086-1.834 2.27-2 .385-.054.785-.009 1.187-.009-.02-.027-.028-.05-.044-.057a3.943 3.943 0 0 0-.227-.113 16.533 16.533 0 0 0-2.332-.86 15.918 15.918 0 0 1 4.24 1.894c.008.087.003.11.013.122.883 1.089.77 2.244.214 3.42-.472.995-1.16 1.837-1.903 2.639-.68.734-1.364 1.465-2.049 2.2.028.018.044.038.06.038 1.047.001 2.094.016 3.14-.006.546-.01 1.031-.191 1.368-.674.064-.093.238-.11.362-.162l.07.097c-.29.836-.576 1.673-.882 2.502-.026.07-.18.127-.278.131-.37.016-.74.007-1.11.007h-1.33l.151.3c.72 1.41.911 2.905.547 4.43-.537 2.25-2.009 3.704-4.15 4.46-1.748.618-3.542.596-5.337.167-.159-.038-.405-.07-.49.015-.386.386-.794.775-1.072 1.237-.573.952-.24 1.614.852 1.844l.031.004c1.072.083 2.143.185 3.216.244 1.518.083 3.038.116 4.555.207.919.055 1.826.217 2.654.656 1.066.563 1.821 1.393 2.152 2.606.078-.055.156-.11.234-.167-.623.467-1.28.89-1.97 1.264zm-4.85 1.69a16.1 16.1 0 0 1-2.94.24 20.61 20.61 0 0 0 2.94-.24zM32 16.05V16c0-1.38-.175-2.719-.503-3.996A17.292 17.292 0 0 1 32 16.051zM28.28 5.745a16.09 16.09 0 0 0-3.189-2.912c1.217.88 2.283 1.85 3.19 2.912zM8.306 30.03a16.026 16.026 0 0 1-2.246-1.493c.713.541 1.491 1.005 2.246 1.493zM0 16.031a17.058 17.058 0 0 1 .197-2.546A16.119 16.119 0 0 0 0 16.03zm2.916-9.243a17.604 17.604 0 0 1 2.11-2.431 16.087 16.087 0 0 0-2.11 2.43zM11.133.754A16.994 16.994 0 0 1 16 0a15.99 15.99 0 0 0-4.867.754zm8.433 15.902l-.06-.015c-.035-.484-.054-.97-.106-1.452-.118-1.116-.435-2.17-1.05-3.12-.91-1.408-2.43-1.976-3.888-1.412-1.197.462-1.832 1.412-2.118 2.623-.272 1.146-.25 2.307-.112 3.463.133 1.1.447 2.147 1.08 3.078.814 1.195 1.949 1.717 3.36 1.481 1.34-.222 2.182-1.089 2.525-2.378.197-.736.251-1.51.37-2.268z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Grs);


/***/ }),

/***/ "WALw":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eca.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eca = {
  symbol: 'eca',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.001-6.388a.44.44 0 0 0-.436.444.44.44 0 0 0 .436.444.44.44 0 0 0 .436-.444.442.442 0 0 0-.436-.444zm-8.78-14.254c.153.09.345.077.486-.032a.45.45 0 0 0 .157-.47.436.436 0 1 0-.803-.108.45.45 0 0 0 .16.61zm0 9.294a.448.448 0 0 0-.16.606c.12.212.387.285.596.163a.448.448 0 0 0 .16-.606.434.434 0 0 0-.596-.163zm17.56-9.294a.448.448 0 0 0-.104-.818.434.434 0 0 0-.461.16.452.452 0 0 0-.031.495.434.434 0 0 0 .596.163zM16 6.388a.436.436 0 0 0 .409-.269.45.45 0 0 0-.09-.486.431.431 0 0 0-.477-.1.444.444 0 0 0-.27.41c0 .243.19.44.428.445zm7.8 14.194a.873.873 0 0 1 1.093-.387V11.8a.871.871 0 0 1-1.09-.383.904.904 0 0 1 .22-1.15l-7.152-4.2a.883.883 0 0 1-.87.77.883.883 0 0 1-.87-.77l-7.15 4.201a.904.904 0 0 1 .216 1.15.871.871 0 0 1-1.088.382v8.4a.871.871 0 0 1 1.09.383.904.904 0 0 1-.22 1.15l7.152 4.201a.883.883 0 0 1 .87-.769c.438 0 .809.328.87.769l7.151-4.2a.904.904 0 0 1-.221-1.152zm-6.112-1.287a3.706 3.706 0 0 0 1.639-2.022c.425-1.265 2.336-.56 1.621 1.084 0 .016-.013.031-.019.045l2.352 1.38a.43.43 0 0 1 .148.58.415.415 0 0 1-.567.158l-2.337-1.368a5.54 5.54 0 0 1-1.865 1.822 5.365 5.365 0 0 1-2.2.73v2.6c0 .243-.194.44-.433.44a.436.436 0 0 1-.433-.44v-2.578a5.656 5.656 0 0 1-4.325-2.45L9.14 20.522a.416.416 0 0 1-.573-.155.43.43 0 0 1 .152-.583l2.12-1.245a5.957 5.957 0 0 1-.342-.903l-.202-1.144a5.763 5.763 0 0 1 .59-3.002L8.72 12.216a.43.43 0 0 1-.153-.58.414.414 0 0 1 .57-.156l2.184 1.281a5.665 5.665 0 0 1 1.753-1.607 5.493 5.493 0 0 1 2.521-.754V7.696c0-.243.194-.44.433-.44s.432.197.432.44v2.73a5.622 5.622 0 0 1 4.028 2.459l2.382-1.405a.407.407 0 0 1 .572.155.432.432 0 0 1-.157.581l-3.239 1.906-.044.021-.762.45-1.608.944-4.718 2.764a3.628 3.628 0 0 0 4.773.994zm7.092 1.357a.432.432 0 0 0-.595.163.448.448 0 0 0 .16.606.43.43 0 0 0 .595-.162.45.45 0 0 0-.16-.607zm-12.496-4.065l5.86-3.442a3.62 3.62 0 0 0-4.126-.316c-1.58.928-1.777 2.091-1.734 3.758z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#AA15DD"/><path fill="#FFF" d="M15.999 25.612c.24.001.435.2.436.444A.44.44 0 0 1 16 26.5a.44.44 0 0 1-.436-.444.44.44 0 0 1 .436-.444zm-8.78-14.254a.45.45 0 0 1-.16-.609.436.436 0 0 1 .803.108.45.45 0 0 1-.157.469.432.432 0 0 1-.486.032zm0 9.294a.434.434 0 0 1 .596.163.448.448 0 0 1-.16.606.432.432 0 0 1-.596-.163.448.448 0 0 1 .16-.606zm17.56-9.294a.434.434 0 0 1-.596-.163.452.452 0 0 1 .03-.495.434.434 0 0 1 .462-.16.448.448 0 0 1 .104.818zM16 6.388a.44.44 0 0 1-.429-.444c0-.18.108-.343.271-.411a.431.431 0 0 1 .477.1.45.45 0 0 1 .09.486.436.436 0 0 1-.409.269zm7.8 14.194a.904.904 0 0 0 .222 1.152l-7.151 4.2a.883.883 0 0 0-.87-.769.883.883 0 0 0-.87.769l-7.153-4.2a.904.904 0 0 0 .22-1.151.871.871 0 0 0-1.089-.383v-8.4a.871.871 0 0 0 1.088-.382.904.904 0 0 0-.217-1.15l7.151-4.2a.883.883 0 0 0 .87.769.883.883 0 0 0 .87-.77l7.153 4.2a.904.904 0 0 0-.22 1.15.871.871 0 0 0 1.089.383v8.395a.873.873 0 0 0-1.092.387zm-6.112-1.287a3.628 3.628 0 0 1-4.773-.994l4.718-2.764 1.608-.944.762-.45.044-.021 3.24-1.906c.2-.117.27-.377.156-.581a.407.407 0 0 0-.572-.155l-2.382 1.405a5.622 5.622 0 0 0-4.028-2.46V7.696a.436.436 0 0 0-.432-.44.436.436 0 0 0-.433.44V10.4a5.493 5.493 0 0 0-2.52.754 5.665 5.665 0 0 0-1.754 1.607L9.138 11.48a.414.414 0 0 0-.571.156.43.43 0 0 0 .153.58l2.167 1.274a5.763 5.763 0 0 0-.59 3.002l.201 1.144c.09.31.203.612.341.903L8.72 19.784a.43.43 0 0 0-.152.583.416.416 0 0 0 .573.155l2.127-1.246a5.656 5.656 0 0 0 4.325 2.45v2.578c0 .243.194.44.433.44a.436.436 0 0 0 .432-.44v-2.6a5.365 5.365 0 0 0 2.201-.73 5.54 5.54 0 0 0 1.865-1.822l2.337 1.368c.2.114.452.043.567-.159a.43.43 0 0 0-.148-.58l-2.352-1.38c.006-.013.02-.028.02-.044.714-1.644-1.197-2.35-1.622-1.084a3.706 3.706 0 0 1-1.639 2.022zm7.092 1.357a.45.45 0 0 1 .16.607.432.432 0 0 1-.596.162.448.448 0 0 1-.16-.606.432.432 0 0 1 .596-.163zm-12.496-4.065c-.043-1.667.155-2.83 1.734-3.758a3.62 3.62 0 0 1 4.126.316l-5.86 3.442z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eca);


/***/ }),

/***/ "WJzF":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/etn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Etn = {
  symbol: 'etn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.879-18.531l1.826 1.382 1.154.872-1.288.658-2.59 1.322.888.614 1.243.859-1.342.692-8.238 4.246A9.232 9.232 0 0 0 16 25.261c5.12 0 9.27-4.149 9.27-9.266a9.225 9.225 0 0 0-2.152-5.938l-3.24 3.412zm-7.758 5.534l-1.826-1.381-1.154-.873 1.288-.657 2.59-1.323-.888-.614-1.243-.858 1.342-.693 8.676-4.472A9.23 9.23 0 0 0 16 6.728c-5.12 0-9.27 4.149-9.27 9.267a9.23 9.23 0 0 0 2.371 6.189l3.02-3.18zM8.536 22.78a10.044 10.044 0 0 1-2.63-6.784c0-5.563 4.529-10.089 10.094-10.089a10.04 10.04 0 0 1 5.74 1.796l.903-.465A10.947 10.947 0 0 0 16 5C9.935 5 5 9.932 5 15.995a10.95 10.95 0 0 0 2.911 7.442l.625-.658zM23.684 9.46a10.04 10.04 0 0 1 2.41 6.534c0 5.562-4.529 10.088-10.094 10.088a10.036 10.036 0 0 1-5.329-1.525l-.924.477A10.941 10.941 0 0 0 16 26.989c6.065 0 11-4.932 11-10.994a10.94 10.94 0 0 0-2.688-7.194l-.628.66zM10.842 16.9l2.635 1.993-5.952 6.268 11.829-6.098-2.137-1.476 3.941-2.013-2.635-1.993 5.952-6.268-11.829 6.098 2.137 1.476-3.941 2.013z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#23BEE2"/><path fill="#FFF" d="M19.879 13.469l3.239-3.412a9.225 9.225 0 0 1 2.153 5.938c0 5.117-4.15 9.266-9.271 9.266a9.232 9.232 0 0 1-4.468-1.147l8.238-4.246 1.342-.692-1.243-.859-.888-.614 2.59-1.322 1.288-.658-1.154-.872-1.826-1.382zm-7.758 5.534l-3.02 3.18a9.228 9.228 0 0 1-2.372-6.188c0-5.118 4.15-9.267 9.271-9.267a9.23 9.23 0 0 1 4.906 1.404l-8.676 4.472-1.342.693 1.243.858.888.614-2.59 1.323-1.288.657 1.154.873 1.826 1.381zM8.536 22.78l-.625.658A10.95 10.95 0 0 1 5 15.995C5 9.932 9.935 5 16 5c2.493 0 4.796.834 6.643 2.237l-.902.465A10.04 10.04 0 0 0 16 5.906c-5.565 0-10.093 4.526-10.093 10.089 0 2.61.996 4.991 2.63 6.784zM23.684 9.46l.628-.66A10.944 10.944 0 0 1 27 15.995c0 6.062-4.935 10.994-11 10.994a10.941 10.941 0 0 1-6.253-1.954l.924-.477A10.036 10.036 0 0 0 16 26.083c5.565 0 10.093-4.526 10.093-10.088 0-2.49-.907-4.772-2.409-6.534zM10.842 16.9l3.941-2.013-2.137-1.476 11.83-6.098-5.953 6.268 2.635 1.993-3.941 2.013 2.137 1.476-11.83 6.098 5.953-6.268-2.635-1.993z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Etn);


/***/ }),

/***/ "WPWG":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fldc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fldc = {
  symbol: 'fldc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.2-24.86c-.01.101-.015.185-.026.267-.051.369-.12.733-.264 1.078-.155.374-.371.7-.662.972a3.03 3.03 0 0 1-1.177.672c-.48.152-.976.22-1.473.277-.61.069-1.221.131-1.83.205-.542.066-1.079.166-1.61.3-.658.165-1.298.385-1.898.72-.595.33-1.114.757-1.516 1.33-.304.433-.501.916-.647 1.43a4.713 4.713 0 0 0 .025 2.718 6.4 6.4 0 0 0 .768 1.606c.3.465.642.895 1.012 1.302.612.672 1.282 1.275 1.975 1.852.415.345.83.691 1.205 1.086.27.284.513.59.694.946.266.524.366 1.08.303 1.672a4.23 4.23 0 0 1-.226.958c-.05.144-.11.285-.165.428-.005.012-.003.026-.004.04.012 0 .025.002.037 0 .063-.004.126-.007.188-.015.178-.02.356-.037.533-.065.242-.038.483-.084.724-.129.171-.031.173-.034.216-.207a4.04 4.04 0 0 0 .114-1.292 4.332 4.332 0 0 0-.15-.857 5.598 5.598 0 0 0-.644-1.438 8.04 8.04 0 0 0-.542-.747c-.362-.455-.786-.844-1.21-1.233-.33-.304-.669-.598-1.001-.9-.48-.437-.936-.899-1.336-1.419-.654-.85-1.033-1.808-1.042-2.915-.005-.578.109-1.123.39-1.623.422-.75 1.043-1.256 1.79-1.603.677-.315 1.393-.481 2.122-.587.495-.072.992-.127 1.488-.195.377-.052.756-.103 1.13-.172.551-.102 1.091-.246 1.598-.503.159-.08.318-.16.473-.25.356-.205.681-.456.971-.755a3.911 3.911 0 0 0 .966-1.717c.004-.016-.006-.044-.018-.056-.147-.153-.292-.31-.446-.455-.192-.181-.39-.356-.589-.53-.075-.067-.156-.125-.245-.196zm-7.06 12.826c.014.016.02.025.028.031.425.382.85.765 1.277 1.145.016.015.05.021.07.015.266-.074.532-.146.795-.23a6.87 6.87 0 0 0 1.735-.824c.461-.309.87-.68 1.202-1.139.535-.738.806-1.583.902-2.496a3.837 3.837 0 0 0-.037-.975 4.785 4.785 0 0 0-.408-1.317c-.22-.47-.49-.906-.81-1.304-.246-.307-.508-.599-.764-.897-.014-.015-.038-.034-.055-.032-.144.019-.288.043-.432.065l-.822.125-.38.058c.014.02.022.03.032.04l.215.21c.397.396.767.817 1.08 1.289.413.622.672 1.308.733 2.066a3.11 3.11 0 0 1-.1 1.082c-.153.556-.447 1.025-.808 1.45a4.1 4.1 0 0 1-1.27 1.001c-.492.252-1.017.394-1.55.512-.206.045-.414.082-.632.125zm2.116-9.698c-.023-.023-.035-.036-.05-.048a15.428 15.428 0 0 1-1.128-1.008 4.566 4.566 0 0 1-.865-1.17 2.868 2.868 0 0 1-.271-1.72c.062-.437.206-.846.391-1.24L15.37 5l-.18.018c-.223.026-.446.044-.667.08-.267.043-.532.103-.8.15-.047.007-.059.028-.07.068a3.968 3.968 0 0 0-.098 1.86c.129.725.433 1.37.824 1.974.115.176.246.342.377.507.238.3.502.576.781.835.021.02.06.03.088.028.087-.009.173-.025.259-.039l.73-.114.643-.099zm-3.174 11.288c-.025-.026-.04-.04-.055-.054a895.37 895.37 0 0 0-.641-.59 94.97 94.97 0 0 1-.578-.528c-.031-.03-.06-.041-.104-.03-.07.02-.144.028-.216.043-.62.134-1.225.313-1.791.622a5.145 5.145 0 0 0-1.11.784 3.884 3.884 0 0 0-1.079 1.791c-.017.063-.008.109.04.154.139.134.272.275.413.407.195.182.395.358.594.536.048.042.1.078.158.122.008-.032.014-.05.017-.068.075-.4.193-.785.348-1.159.425-1.023 1.206-1.555 2.209-1.777.274-.061.552-.103.83-.146.179-.028.36-.043.54-.062.136-.015.273-.03.425-.045zm4.327-4.378c.176-.006.31-.151.338-.373a.343.343 0 0 0-.247-.371c-.35-.11-.702-.218-1.053-.327l-2.64-.824c-.374-.116-.747-.236-1.121-.35a.346.346 0 0 0-.162-.015c-.197.039-.267.186-.285.395-.013.142.074.281.244.334.442.139.884.276 1.327.414l3.451 1.08c.049.014.099.025.148.037zm-7.29 6.496c-.03.005-.056.006-.08.013-.176.045-.25.196-.265.395-.011.15.091.28.245.329l.827.257c1.324.414 2.648.828 3.973 1.24a.4.4 0 0 0 .156.022c.171-.015.285-.16.304-.378.015-.162-.083-.3-.248-.352l-4.805-1.5c-.037-.011-.075-.018-.106-.026zM21.249 7.91c0-.203-.09-.321-.25-.37-1.605-.502-3.21-1.004-4.816-1.504a.332.332 0 0 0-.132-.018c-.236.027-.319.268-.3.448.015.16.12.243.261.287.83.257 1.659.516 2.488.775l2.317.724c.141.044.285-.003.354-.129.043-.077.063-.169.078-.213zm-6.915 6.463c0 .16.086.28.243.329l.718.224 2.382.744c.094.03.187.067.282.078.186.021.323-.119.36-.35a.34.34 0 0 0-.244-.384l-1.832-.571c-.485-.152-.97-.305-1.456-.453a.406.406 0 0 0-.191-.012c-.162.032-.251.188-.262.395zm-.332 1.89c-.05.023-.117.037-.166.076-.13.103-.171.252-.146.413.022.145.122.224.254.265.712.22 1.424.443 2.136.665.384.12.767.24 1.151.358.05.015.106.022.156.013.16-.027.234-.146.271-.301.048-.196-.042-.369-.226-.428l-.252-.077c-1.006-.315-2.013-.63-3.02-.943-.046-.015-.094-.024-.158-.04zm-2.783 9.187a.33.33 0 0 0 .225.318c.092.03.184.057.275.086l3.107.97a.18.18 0 0 0 .09-.002c.158-.036.239-.148.277-.307.045-.19-.042-.365-.22-.421a1759.84 1759.84 0 0 0-3.324-1.037.32.32 0 0 0-.127-.013c-.195.021-.289.19-.303.406zm.997-2.72c-.033.005-.056.005-.078.01-.172.046-.252.18-.268.386-.013.158.08.285.234.335.21.068.422.132.633.198.885.276 1.77.554 2.654.829a.416.416 0 0 0 .168.02c.168-.02.278-.167.295-.381a.336.336 0 0 0-.248-.346 6633.9 6633.9 0 0 0-3.281-1.024c-.04-.012-.08-.02-.11-.027zm7.622-13.562c.053-.018.105-.028.151-.052.127-.066.164-.193.181-.325a.33.33 0 0 0-.226-.36c-.195-.06-.39-.123-.584-.183-.91-.284-1.821-.569-2.733-.85a.36.36 0 0 0-.18-.006c-.134.031-.206.131-.241.27-.056.219.027.383.232.448l3.082.964c.105.033.21.062.318.094zm.983-2.7c0-.18-.09-.301-.245-.35l-1.425-.444c-.621-.194-1.242-.39-1.864-.581a.382.382 0 0 0-.186-.012c-.141.03-.21.14-.245.281-.053.207.03.375.225.436l.923.29 2.365.739a.322.322 0 0 0 .245-.007c.152-.074.188-.219.207-.352z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#c40e09" r="16"/><path d="M22.2 7.14c.09.07.171.13.246.195.198.175.397.35.59.531.153.146.298.302.445.455.012.012.022.04.018.056-.09.348-.226.676-.408.982-.16.268-.344.514-.558.735-.29.3-.615.55-.971.755-.155.09-.314.17-.473.25-.507.257-1.047.401-1.597.503-.375.07-.754.12-1.131.172-.496.068-.993.123-1.488.195-.73.106-1.445.272-2.123.587-.746.347-1.367.854-1.789 1.603-.281.5-.395 1.045-.39 1.623.009 1.107.388 2.064 1.042 2.915.4.52.856.982 1.336 1.418.332.303.671.597 1.002.9.423.39.847.779 1.21 1.234.19.24.378.486.541.747.278.446.499.925.644 1.438.08.28.128.565.15.857a4.04 4.04 0 0 1-.114 1.292c-.043.173-.045.176-.216.207-.241.045-.482.091-.724.13-.177.027-.355.044-.533.064-.062.008-.125.011-.188.016l-.037-.001c.001-.014 0-.028.004-.04.054-.143.114-.284.165-.428a4.23 4.23 0 0 0 .226-.958 2.932 2.932 0 0 0-.303-1.672 4.005 4.005 0 0 0-.694-.946c-.376-.395-.79-.741-1.205-1.086-.693-.577-1.363-1.18-1.975-1.852a10.08 10.08 0 0 1-1.012-1.302 6.405 6.405 0 0 1-.768-1.606 4.713 4.713 0 0 1-.025-2.718c.146-.514.343-.997.647-1.43.402-.573.921-1 1.516-1.33.6-.335 1.24-.555 1.899-.72.53-.134 1.067-.234 1.608-.3.61-.074 1.22-.136 1.83-.205.498-.056.993-.125 1.474-.277a3.03 3.03 0 0 0 1.177-.672c.291-.272.507-.598.662-.972.143-.345.213-.709.264-1.078.011-.082.017-.166.027-.267zm-7.06 12.826c.219-.043.427-.08.634-.125.532-.118 1.057-.26 1.55-.512a4.1 4.1 0 0 0 1.269-1c.36-.426.655-.895.809-1.451a3.11 3.11 0 0 0 .1-1.082 4.316 4.316 0 0 0-.734-2.066 8.374 8.374 0 0 0-1.08-1.288c-.07-.071-.144-.14-.215-.21-.01-.01-.018-.022-.033-.04l.38-.059.823-.125c.144-.022.288-.046.432-.065.017-.002.041.017.055.032.256.298.518.59.764.897.32.398.59.834.81 1.304.195.419.338.855.408 1.317.049.323.07.649.037.975-.096.913-.367 1.758-.902 2.496-.332.459-.741.83-1.202 1.14a6.87 6.87 0 0 1-1.735.823c-.263.084-.529.156-.794.23a.087.087 0 0 1-.071-.015c-.427-.38-.852-.763-1.277-1.145-.008-.006-.014-.015-.027-.03zm2.116-9.698l-.644.1-.73.113c-.085.014-.171.03-.258.039a.124.124 0 0 1-.088-.028 7.558 7.558 0 0 1-.781-.835c-.13-.165-.262-.33-.377-.507-.39-.604-.695-1.249-.824-1.974a3.968 3.968 0 0 1 .098-1.86c.011-.04.023-.06.07-.069.268-.046.533-.106.8-.15.22-.035.444-.053.666-.079L15.37 5c-.016.036-.025.06-.036.081a4.384 4.384 0 0 0-.391 1.24 2.868 2.868 0 0 0 .271 1.722c.221.445.523.822.865 1.17.356.36.742.684 1.129 1.007.014.012.026.025.049.048zm-3.174 11.288l-.426.045c-.18.02-.36.034-.54.062-.277.043-.555.085-.829.146-1.003.222-1.784.754-2.21 1.777a5.76 5.76 0 0 0-.347 1.159c-.003.018-.009.036-.017.068-.057-.044-.11-.08-.158-.122-.2-.178-.399-.354-.594-.536-.141-.132-.274-.273-.414-.407-.047-.045-.056-.09-.039-.154a3.884 3.884 0 0 1 1.079-1.79 5.145 5.145 0 0 1 1.11-.785c.566-.31 1.171-.488 1.791-.622.072-.015.146-.023.216-.042.044-.012.073 0 .104.029l.578.529.641.589a.85.85 0 0 1 .055.054zm4.327-4.378c-.05-.012-.1-.023-.148-.038l-3.451-1.079c-.443-.138-.885-.275-1.327-.414-.17-.053-.257-.192-.244-.334.018-.21.088-.356.285-.395a.346.346 0 0 1 .162.014c.374.115.747.235 1.12.351l2.641.824 1.053.327a.34.34 0 0 1 .247.37c-.029.223-.162.368-.338.374zm-7.29 6.496c.032.008.07.015.107.026l4.805 1.5c.165.052.263.19.248.352-.019.218-.133.363-.304.378a.419.419 0 0 1-.156-.022c-1.325-.412-2.649-.826-3.973-1.24-.276-.086-.552-.17-.827-.257-.154-.049-.256-.18-.245-.33.016-.198.089-.349.266-.394.023-.007.048-.008.08-.013zM21.249 7.91c-.015.044-.035.136-.078.213-.07.126-.213.173-.354.129L18.5 7.528c-.829-.259-1.658-.518-2.488-.775-.141-.044-.246-.127-.262-.287-.018-.18.065-.421.301-.448a.332.332 0 0 1 .132.018l4.816 1.503c.16.05.25.168.25.371zm-6.915 6.463c.01-.207.1-.363.262-.395a.406.406 0 0 1 .191.012c.486.148.97.301 1.456.453l1.832.57a.34.34 0 0 1 .244.386c-.037.23-.174.37-.36.35-.095-.012-.188-.05-.282-.079l-2.382-.744-.718-.224a.326.326 0 0 1-.243-.329zm-.332 1.89c.064.017.112.026.159.04l3.02.944c.083.026.167.05.25.077.185.06.275.232.227.428-.037.155-.111.274-.271.301a.349.349 0 0 1-.156-.013c-.384-.117-.767-.238-1.15-.358-.713-.222-1.425-.445-2.137-.665-.132-.041-.232-.12-.254-.265-.025-.161.017-.31.146-.413.05-.039.116-.053.166-.075zm-2.783 9.187c.014-.216.108-.385.303-.406a.32.32 0 0 1 .127.013c1.108.345 2.216.69 3.324 1.037.178.056.265.232.22.42-.038.16-.12.272-.277.308a.18.18 0 0 1-.09.002l-3.107-.97c-.091-.029-.183-.056-.275-.086a.329.329 0 0 1-.225-.318zm.997-2.72c.03.008.07.015.109.027l3.281 1.024c.16.05.26.19.248.346-.017.214-.127.361-.295.382a.416.416 0 0 1-.168-.021c-.885-.275-1.77-.553-2.654-.83-.211-.065-.423-.13-.633-.197-.154-.05-.247-.177-.234-.335.016-.206.096-.34.268-.385.022-.006.045-.006.078-.01zm7.622-13.562c-.108-.032-.213-.061-.318-.094-1.027-.32-2.054-.643-3.082-.964-.205-.065-.288-.23-.232-.448.035-.139.107-.239.242-.27a.36.36 0 0 1 .18.006c.91.281 1.821.566 2.732.85.195.06.389.122.584.183a.33.33 0 0 1 .226.36c-.017.132-.054.26-.18.325-.047.024-.1.034-.152.052zm.983-2.7c-.019.133-.055.278-.207.352a.322.322 0 0 1-.245.007l-2.365-.74-.923-.29c-.194-.06-.278-.228-.225-.435.036-.141.104-.25.245-.28a.382.382 0 0 1 .186.01c.622.192 1.243.388 1.864.582l1.425.444c.155.049.246.17.245.35z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fldc);


/***/ }),

/***/ "WZle":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ht.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ht = {
  symbol: 'ht',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.347-21.467c0-3.52-1.707-6.506-2.987-7.466 0 0-.107-.107-.107.106-.106 6.72-3.52 8.534-5.333 11.094-4.373 5.653-.32 11.946 3.84 13.12 2.347.64-.533-1.174-.853-4.907-.534-4.693 5.44-8.107 5.44-11.947zm2.24 2.347c-.214.853-1.067 2.667-2.24 4.373-3.947 5.654-1.707 8.427-.427 9.92.747.854 0 0 1.813-.853.107-.107 3.627-1.92 3.947-6.08.427-4.053-2.133-6.613-3.093-7.36z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2A3069"/><g fill="#FFF"><path d="M18.347 10.533c0-3.52-1.707-6.506-2.987-7.466 0 0-.107-.107-.107.106-.106 6.72-3.52 8.534-5.333 11.094-4.373 5.653-.32 11.946 3.84 13.12 2.347.64-.533-1.174-.853-4.907-.534-4.693 5.44-8.107 5.44-11.947"/><path d="M20.587 12.88c-.214.853-1.067 2.667-2.24 4.373-3.947 5.654-1.707 8.427-.427 9.92.747.854 0 0 1.813-.853.107-.107 3.627-1.92 3.947-6.08.427-4.053-2.133-6.613-3.093-7.36"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ht);


/***/ }),

/***/ "We87":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rdn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rdn = {
  symbol: 'rdn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10 6.006c.083.046.173.078.258.118 1.55.682 3.04 1.526 4.361 2.595 1.214.98 2.282 2.162 3.047 3.531.715 1.278 1.169 2.72 1.212 4.192a5 5 0 0 1-.022.624h4.134c.062-1.56-.167-3.13-.649-4.614a15.153 15.153 0 0 0-1.972-3.945 14.88 14.88 0 0 0-2.046-2.391c-.064-.05-.114-.14-.212-.11H10zm3.002 7.327L13 26c1.72-1.103 3.435-2.215 5.156-3.317-.33-.607-.667-1.211-1-1.817a4715.11 4715.11 0 0 0-4.155-7.533z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2A2A2A"/><path fill="#FFF" d="M10 6.006h8.111c.098-.03.148.06.212.11a14.88 14.88 0 0 1 2.046 2.39 15.153 15.153 0 0 1 1.972 3.946c.482 1.484.71 3.054.65 4.614h-4.135a5 5 0 0 0 .022-.624c-.043-1.471-.497-2.914-1.212-4.192-.765-1.369-1.833-2.55-3.047-3.531-1.322-1.069-2.81-1.913-4.36-2.595-.086-.04-.176-.072-.259-.118zm3.002 7.327a4715.11 4715.11 0 0 1 4.155 7.533c.333.606.67 1.21 1 1.817C16.436 23.785 14.72 24.897 13 26V13.333z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rdn);


/***/ }),

/***/ "Whqh":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/agrs.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Agrs = {
  symbol: 'agrs',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.755-14.666C22.001 13.815 23.75 8 23.75 8l-3.745.849-1.371 4.85c-.129-3.636-2.622-4.967-2.622-4.967-1.997-.973-3.777-.545-5.06.124-1.588.826-2.743 2.266-3.296 3.924-.786 2.359-.69 5.006-.586 6.204.042.562.166 1.115.37 1.643 1.378 3.573 5.195 3.37 5.195 3.37 3.497-.124 5.622-4.242 5.622-4.242l1.002 3.028c.898 1.519 2.887.95 3.296.865.072-.016.136-.024.209-.04L25 23.267v-.973c-4.868.132-5.245-4.959-5.245-4.959zm-4.739 3.659a2.369 2.369 0 0 1-1.098.638c-.907.226-1.604-.155-2.085-.622a3.937 3.937 0 0 1-1.059-1.978c-.882-4.99.337-7.177 1.147-8.182a2.258 2.258 0 0 1 1.868-.864c3.144.164 3.85 6.742 3.85 6.742-.89 2.335-2.037 3.69-2.623 4.266z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f49e00" r="16"/><path d="M19.755 17.334C22.001 13.815 23.75 8 23.75 8l-3.745.849-1.371 4.85c-.129-3.636-2.622-4.967-2.622-4.967-1.997-.973-3.777-.545-5.06.124-1.588.826-2.743 2.266-3.296 3.924-.786 2.359-.69 5.006-.586 6.204.042.562.166 1.115.37 1.643 1.378 3.573 5.195 3.37 5.195 3.37 3.497-.124 5.622-4.242 5.622-4.242l1.002 3.028c.898 1.519 2.887.95 3.296.865.072-.016.136-.024.209-.04L25 23.267v-.973c-4.868.132-5.245-4.959-5.245-4.959m-4.739 3.659a2.369 2.369 0 0 1-1.098.638c-.907.226-1.604-.155-2.085-.622a3.937 3.937 0 0 1-1.059-1.978c-.882-4.99.337-7.177 1.147-8.182a2.258 2.258 0 0 1 1.868-.864c3.144.164 3.85 6.742 3.85 6.742-.89 2.335-2.037 3.69-2.623 4.266" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Agrs);


/***/ }),

/***/ "WyoM":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/stq.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Stq = {
  symbol: 'stq',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM5.155 9.036c-.06.63-.06 1.274.06 1.904.618.024 1.25.024 1.88.024.179.334.37.655.524 1.012.75 1.584 1.512 3.155 2.298 4.726.452.905.821 1.893 1.512 2.667.214.286.595.321.952.321h6.667c.56 0 1.166-.023 1.607-.392.535-.465.774-1.131 1.13-1.727.953-1.666 1.882-3.345 2.858-5 .202-.357.357-.821.143-1.214-.179-.357-.62-.369-.976-.393-4.81 0-9.643.024-14.453 0-.369-.619-.476-1.369-.952-1.904-1.072-.096-2.179-.024-3.25-.024zm7.512 11.94c-.584.131-1.06.643-1.131 1.238-.107.715-.107 1.548.404 2.12.477.476 1.215.523 1.858.476.56-.048 1.154-.31 1.392-.858.25-.607.25-1.285.108-1.916-.131-.548-.608-.965-1.155-1.084-.488-.095-1-.095-1.476.024zm5.952 0c-.583.131-1.036.62-1.155 1.203a2.817 2.817 0 0 0 .215 1.869c.297.535.916.75 1.488.773.583.012 1.226-.047 1.666-.464.477-.5.548-1.25.477-1.905-.048-.56-.334-1.154-.881-1.38-.572-.215-1.215-.227-1.81-.096z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2DC4E7"/><path d="M5.155 9.036c1.071 0 2.178-.072 3.25.024.476.535.583 1.285.952 1.904 4.81.024 9.643 0 14.453 0 .357.024.797.036.976.393.214.393.06.857-.143 1.214-.976 1.655-1.905 3.334-2.857 5-.357.596-.596 1.262-1.131 1.727-.44.369-1.048.392-1.607.392H12.38c-.357 0-.738-.035-.952-.321-.69-.774-1.06-1.762-1.512-2.667a246.634 246.634 0 0 1-2.298-4.726c-.155-.357-.345-.678-.524-1.012-.63 0-1.262 0-1.88-.024-.12-.63-.12-1.273-.06-1.904zm7.512 11.94a3.428 3.428 0 0 1 1.476-.024c.547.12 1.024.536 1.155 1.084.142.63.142 1.31-.108 1.916-.238.548-.833.81-1.392.858-.643.047-1.381 0-1.858-.477-.511-.571-.511-1.404-.404-2.119.071-.595.547-1.107 1.13-1.238zm5.952 0c.595-.13 1.238-.119 1.81.095.547.227.833.822.88 1.381.072.655 0 1.405-.476 1.905-.44.417-1.083.476-1.666.464-.572-.023-1.19-.238-1.488-.773a2.817 2.817 0 0 1-.215-1.87c.12-.583.572-1.07 1.155-1.202z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Stq);


/***/ }),

/***/ "XPRJ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/crw.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Crw = {
  symbol: 'crw',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.833-16.654c-.064.121-.091.18-.125.236-.394.647-.792 1.291-1.183 1.94-.73 1.212-1.458 2.426-2.185 3.64-.082.136-.17.207-.333.122-1.146-.588-2.391-.772-3.64-.912a13.208 13.208 0 0 0-4.002.163c-.473.091-.475.08-.266.527.19.41.261.444.662.375 2.558-.44 5.036-.219 7.402.943.358.175.435.15.642-.197l5.029-8.453c.048-.08.09-.165.166-.308-.111.044-.153.056-.19.075-1.15.57-2.32 1.076-3.588 1.288-.897.15-1.79.2-2.667-.134-.894-.34-1.57-.98-2.203-1.682l-.439-.482-.325.527c-.127.206-.087.386.08.544.344.328.678.67 1.038.978.891.762 1.9 1.235 3.077 1.28.88.033 1.73-.142 2.576-.363.135-.036.273-.062.474-.107zm-17.654.121l.045-.056c.39.078.781.16 1.173.233.857.159 1.715.2 2.57-.005 1.087-.26 2.013-.833 2.84-1.591.923-.848 1.622-1.882 2.316-2.926.311-.468.398-.87.03-1.321-.068-.083-.121-.177-.204-.301-.072.128-.113.2-.153.274-.63 1.132-1.323 2.218-2.178 3.186-.534.603-1.127 1.132-1.847 1.491-1.157.577-2.356.542-3.57.24-.946-.234-1.84-.618-2.722-1.031-.145-.068-.293-.13-.44-.194L5 13.52c.045.086.085.176.134.26.347.585.696 1.169 1.044 1.754 1.288 2.166 2.575 4.333 3.866 6.498.365.61.29.54.888.265.277-.127.278-.135.117-.4-1.12-1.861-2.243-3.721-3.364-5.581-.17-.282-.338-.565-.506-.848z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#0F1529"/><path fill="#FFF" d="M24.833 15.346c-.201.045-.339.071-.474.107-.845.221-1.696.396-2.576.363-1.176-.045-2.186-.518-3.077-1.28-.36-.309-.694-.65-1.038-.978-.167-.158-.207-.338-.08-.544l.325-.527.439.482c.633.702 1.31 1.341 2.203 1.682.877.334 1.77.285 2.667.134 1.268-.212 2.439-.719 3.587-1.288.038-.019.08-.031.191-.075-.076.143-.118.228-.166.308-1.676 2.818-3.352 5.636-5.03 8.453-.206.346-.283.372-.641.197-2.366-1.162-4.844-1.383-7.402-.943-.4.069-.471.035-.662-.375-.209-.448-.207-.436.266-.527a13.208 13.208 0 0 1 4.002-.163c1.249.14 2.494.324 3.64.912.164.085.251.014.333-.122.727-1.214 1.454-2.428 2.185-3.64.391-.649.79-1.293 1.183-1.94.034-.056.061-.115.125-.236zm-17.654.121c.168.283.336.566.506.848l3.364 5.58c.16.266.16.274-.117.401-.597.275-.523.346-.888-.265-1.29-2.165-2.578-4.332-3.866-6.498l-1.044-1.755c-.05-.083-.09-.173-.134-.26l.039-.052c.147.065.295.126.44.194.883.413 1.776.797 2.722 1.031 1.214.302 2.413.337 3.57-.24.72-.359 1.313-.888 1.847-1.491.855-.968 1.549-2.054 2.178-3.186l.153-.274c.083.124.136.218.203.3.369.452.282.854-.029 1.322-.694 1.044-1.393 2.078-2.317 2.926-.826.758-1.752 1.33-2.84 1.591-.854.205-1.712.164-2.569.005-.392-.073-.782-.155-1.173-.233l-.045.056z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Crw);


/***/ }),

/***/ "XRFR":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gsc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gsc = {
  symbol: 'gsc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.07-19.953h-9.148a3.876 3.876 0 1 0 3.628 5.224h-3.628a1.022 1.022 0 0 1-1.023-1.023v-.124a1.022 1.022 0 0 1 1.023-1.023h6.047c.044.282.065.567.062.852a6.109 6.109 0 1 1-6.109-6.139l.187-.031c.039.018.08.028.124.031h5.426c2.961 0 4.17-1.581 4.17-3.814h-9.907C10.45 6 6.01 10.433 6 15.907c-.008 5.474 4.418 9.92 9.892 9.938 5.474.017 9.927-4.402 9.953-9.876v-3.132a.775.775 0 0 0-.775-.79z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#FF0060"/><path d="M25.07 12.047h-9.148a3.876 3.876 0 1 0 3.628 5.224h-3.628a1.022 1.022 0 0 1-1.023-1.023v-.124a1.022 1.022 0 0 1 1.023-1.023h6.047c.044.282.065.567.062.852a6.109 6.109 0 1 1-6.109-6.139l.187-.031c.039.018.08.028.124.031h5.426c2.961 0 4.17-1.581 4.17-3.814h-9.907C10.45 6 6.01 10.433 6 15.907c-.008 5.474 4.418 9.92 9.892 9.938 5.474.017 9.927-4.402 9.953-9.876v-3.132a.775.775 0 0 0-.775-.79z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gsc);


/***/ }),

/***/ "Xrcg":
/*!************************************!*\
  !*** ./src/js/component-totals.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");




// import store from "./store.js";


__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].component("totals", {
  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_js__["a" /* default */]],
  props: ["holding", "allCoins"],
  data: function data() {
    return {
      thisWallet: null,
      myHoldingsTotalInUSD: 0,
      myHoldingsTotalInBTC: 0
    };
  },

  template: '<div class="totals tc ">\n\t\t\t\t<div class="">{{ myHoldingsTotalInBTC }} BTC</div>            \n\t\t\t\t<div class="">${{ myHoldingsTotalInUSD | formatUSD }}</div>\n\t\t\t</div>',

  mounted: function mounted() {
    this.setupEvents();
    // this.totalBTC(this.thisWallet);
  },

  methods: {
    setupEvents: function setupEvents() {
      var _this = this;

      //   console.log("totals - methods - setupEvents");
      __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$on('wallet-built-' + this.$parent._uid, function (w) {
        // console.log("totals - methods - setupEvents ---- wallet-built !!!");
        _this.buildTotals(w);
      });
    },

    buildTotals: function buildTotals(_thisW_) {
      //   console.log("totals buildTotals(); ", _thisW_);
      //   console.log("this", this);
      //   this.thisWallet = this.mixinBuildWallet( this.holding, this.allCoins );
      this.totalUSD(_thisW_);
      this.totalBTC(_thisW_);
      // 	 this.thisWallet = w;
      //   this.myHoldingsTotalInUSD = this.totalUSD(this.thisWallet);
      //   this.myHoldingsTotalInBTC = 2;
    }
  }
});

/* unused harmony default export */ var _unused_webpack_default_export = ('');

/***/ }),

/***/ "Xxc6":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xvc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xvc = {
  symbol: 'xvc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.882-21.257V24h4.74L26 8h-4.286l-7.916 10.717V8H9.664L8 10.743z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#b50126" r="16"/><path d="M10.118 10.743H8L9.664 8h4.134v10.717L21.714 8H26L14.857 24h-4.739z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xvc);


/***/ }),

/***/ "YOYW":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pura.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pura = {
  symbol: 'pura',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.192 8c.245 1.016.744 2.109 1.854 2.42 2.444.51 5.071-.33 7.45.593 2.33.973 2.246 4.832-.066 5.776-1.576.64-3.32.387-4.98.43-1.1.04-2.382-.202-3.287.576-.773.586-.92 1.595-.883 2.496.058 3.26.216 4.709.216 4.709s1.715-.644 2.089-1.183c.93-1.128.557-2.68.63-4.015 2.708-.115 5.658.442 8.124-.969 2.674-1.49 3.264-5.162 2.077-7.773-.949-2.05-3.312-2.933-5.46-3.06h-7.764zM7 12.43v.62c.363 1.124 1.29 2.144 2.546 2.217 2.045.09 4.094.014 6.138.025-.154-1.364-1.121-2.698-2.594-2.81-2.026-.123-4.06-.015-6.09-.051z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#333"/><path fill="#FFF" fill-rule="nonzero" d="M11.192 8h7.764c2.148.127 4.511 1.01 5.46 3.06 1.187 2.611.597 6.283-2.077 7.773-2.466 1.41-5.416.854-8.124.97-.073 1.334.3 2.886-.63 4.014-.374.54-2.089 1.183-2.089 1.183s-.158-1.449-.216-4.71c-.037-.9.11-1.91.883-2.495.905-.778 2.188-.535 3.287-.575 1.66-.044 3.404.21 4.98-.43 2.312-.945 2.396-4.804.066-5.777-2.379-.922-5.006-.083-7.45-.593-1.11-.311-1.609-1.404-1.854-2.42zM7 12.43c2.03.037 4.064-.071 6.09.051 1.473.113 2.44 1.447 2.594 2.811-2.044-.01-4.093.065-6.138-.025C8.29 15.194 7.363 14.174 7 13.049v-.618z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pura);


/***/ }),

/***/ "Ygn9":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sls.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sls = {
  symbol: 'sls',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7.894 18.31v2.907-2.908H7v4.44h.894v-1.532c.253.413.556.769.914 1.054.595.473 1.318.729 2.16.729 1.217 0 2.194-.504 2.863-1.368.544-.703.846-1.613.846-2.41 0-1.045-.417-1.86-1.204-2.509-.576-.475-1.187-.784-2.42-1.295l-.203-.084c-1.117-.463-1.622-.711-2.071-1.066-.544-.43-.81-.92-.81-1.58 0-.886.307-1.607.847-2.11a2.75 2.75 0 0 1 1.873-.719c1.046 0 1.786.446 2.278 1.263.417.692.63 1.627.63 2.55h.894v-3.616h1.1v12.747h2.645v-1.558c.249.4.545.747.895 1.026.595.473 1.318.729 2.16.729 1.217 0 2.194-.504 2.863-1.368.544-.703.846-1.613.846-2.41 0-1.045-.417-1.86-1.204-2.509-.576-.475-1.187-.784-2.42-1.295a682.17 682.17 0 0 0-.203-.084c-1.117-.463-1.622-.711-2.071-1.066-.544-.43-.81-.92-.81-1.58 0-.886.307-1.607.847-2.11a2.75 2.75 0 0 1 1.873-.719c1.046 0 1.786.446 2.278 1.263.417.692.63 1.627.63 2.55h.894v-4.42h-.895v1.216C23.27 9.533 22.292 9 21.012 9c-.93 0-1.83.34-2.495.96-.718.668-1.12 1.613-1.12 2.728 0 .93.395 1.658 1.137 2.244.537.424 1.09.696 2.285 1.191l.203.084c1.15.477 1.707.758 2.191 1.158.595.491.893 1.071.893 1.858 0 .614-.242 1.345-.67 1.896-.505.652-1.22 1.022-2.144 1.022-1.181 0-1.996-.65-2.529-1.784A5.974 5.974 0 0 1 18.326 19a5.685 5.685 0 0 1-.076-.48 4.2 4.2 0 0 1-.014-.21h-.894v3.634h-.858V9.197h-2.888v1.27C12.946 9.533 11.97 9 10.69 9c-.93 0-1.83.34-2.495.96-.718.668-1.12 1.613-1.12 2.728 0 .93.395 1.658 1.137 2.244.537.424 1.09.696 2.285 1.191l.203.084c1.15.477 1.707.758 2.191 1.158.595.491.893 1.071.893 1.858 0 .614-.242 1.345-.67 1.896-.505.652-1.22 1.022-2.144 1.022-1.181 0-1.996-.648-2.532-1.785-.2-.424-.346-.89-.443-1.359a6.195 6.195 0 0 1-.08-.483c-.013-.1-.02-.185-.02-.205z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#8e9495" r="16"/><path d="M7.623 20.711a6.907 6.907 0 0 1-.506-1.547A5.396 5.396 0 0 1 7 18.31h.894a6.195 6.195 0 0 0 .1.688c.097.469.243.935.443 1.36.536 1.136 1.35 1.784 2.532 1.784.924 0 1.64-.37 2.144-1.022.428-.551.67-1.282.67-1.896 0-.787-.298-1.367-.893-1.858-.484-.4-1.041-.68-2.191-1.158l-.203-.084c-1.196-.495-1.748-.767-2.285-1.191-.742-.586-1.136-1.313-1.136-2.244 0-1.115.401-2.06 1.119-2.728A3.663 3.663 0 0 1 10.689 9c1.28 0 2.257.533 2.907 1.467v-1.27h2.888v12.747h.858v-3.577a.898.898 0 0 1 0-.088l.894.03v.045a5.685 5.685 0 0 0 .09.646c.093.465.237.932.437 1.357.533 1.135 1.348 1.784 2.529 1.784.924 0 1.64-.37 2.144-1.022.428-.551.67-1.282.67-1.896 0-.787-.298-1.367-.893-1.858-.484-.4-1.041-.68-2.191-1.158l-.203-.084c-1.196-.495-1.748-.767-2.285-1.191-.742-.586-1.136-1.313-1.136-2.244 0-1.115.401-2.06 1.119-2.728A3.663 3.663 0 0 1 21.012 9c1.28 0 2.257.533 2.907 1.467V9.251h.895v4.422h-.895c0-.924-.212-1.86-.629-2.551-.492-.817-1.232-1.263-2.278-1.263a2.75 2.75 0 0 0-1.873.718c-.54.504-.847 1.225-.847 2.111 0 .66.266 1.15.81 1.58.45.355.954.603 2.071 1.066l.203.084c1.233.511 1.844.82 2.42 1.295.787.65 1.204 1.464 1.204 2.51 0 .796-.302 1.706-.846 2.41-.669.863-1.646 1.367-2.862 1.367-.843 0-1.566-.256-2.16-.73a3.967 3.967 0 0 1-.896-1.025v1.558H15.59V10.056h-1.1v3.617h-.894c0-.924-.212-1.86-.629-2.551-.492-.817-1.232-1.263-2.278-1.263a2.75 2.75 0 0 0-1.873.718c-.54.504-.847 1.225-.847 2.111 0 .66.266 1.15.81 1.58.45.355.954.603 2.071 1.066l.203.084c1.233.511 1.844.82 2.42 1.295.787.65 1.204 1.464 1.204 2.51 0 .796-.302 1.706-.846 2.41-.669.863-1.646 1.367-2.862 1.367-.843 0-1.566-.256-2.16-.73a3.994 3.994 0 0 1-.915-1.053v1.532H7v-4.44h.894v2.908a5.306 5.306 0 0 1-.271-.506z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sls);


/***/ }),

/***/ "YoTa":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gmr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gmr = {
  symbol: 'gmr',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.95-18.56a.359.359 0 0 0-.215-.154 38.333 38.333 0 0 0-1.04-.24l.094-.464.06-.292.028-.148.027-.16a1.34 1.34 0 0 0-.077-.704 1.485 1.485 0 0 0-1.133-.922 12.127 12.127 0 0 0-.344-1.492l-.017-.06-2.486-3.02-.093-.027c-.101-.027-2.341-.689-5.39-.69l.034-.602a1.236 1.236 0 0 0-.4-2.41 1.236 1.236 0 0 0-.4 2.409l.035.605c-3.062.003-5.314.661-5.41.693l-.093.028-2.486 3.019-.016.06c-.146.49-.261.987-.344 1.49h-.008l-.176.044a1.447 1.447 0 0 0-1.012 1.579l.027.159.028.148.06.292.094.466c-.345.076-.69.154-1.034.238a.357.357 0 0 0-.215.154.341.341 0 0 0 .374.506c.336-.082.672-.16 1.009-.233l.025.128a10.4 10.4 0 0 0 .506 7.55C8.47 24.608 11.94 28.078 16 28.078c4.059 0 7.53-3.47 9.042-6.693a10.405 10.405 0 0 0 .495-7.552l.024-.118c.338.074.676.152 1.013.234a.341.341 0 0 0 .374-.506l.002-.003zM15.112 3.298a.982.982 0 0 1 .968-.979c.54 0 .54 1.952 0 1.958a.982.982 0 0 1-.968-.979zm.648 1.21c.079.015.158.023.238.023h.038l.076 2.102a.339.339 0 0 1-.032.444.341.341 0 0 1-.242.1c-.506 0-.913-.154-.913-.34 0-.172.342-.315.79-.339l.123-.003h.034l-.112-1.987zM8.156 9.345l.291-.104.495-.165.65-.192c.236-.072.5-.138.775-.21l.874-.197c.303-.06.616-.127.94-.182.325-.055.65-.099.98-.154.33-.055.66-.082.984-.12.325-.04.644-.056.957-.083.165-.015.334-.022.495-.028h.017l.385 3.427.39-3.456h.418c.248 0 .479-.011.682 0l.528.022.462.016-.456-.044-.528-.05c-.204-.021-.43-.027-.682-.043a12.232 12.232 0 0 0-.809-.033H16c-.284 0-.59-.017-.902-.006-.311.011-.638.006-.968.028l-1.001.066c-.336.027-.671.055-1.001.099-.33.044-.655.093-.963.132-.297.037-.59.094-.866.143l-.492-.039.979-1.336 4.889-1.066.03.53c-.66.052-1.155.271-1.155.534 0 .3.65.544 1.452.544.802 0 1.452-.243 1.452-.544 0-.263-.495-.482-1.155-.534l.03-.528 4.868 1.063.98 1.336-1.362.11-.025-.003.015.004h-.02l2.607 1.292s1.124 3.61-.425 6.678a6.92 6.92 0 0 1-.615.99s-2.406 1.111-6.105 1.307L16 17.532a2.2 2.2 0 0 0 .885-.154l.77-.253c1.564-.482 3.13-.957 4.697-1.425l.154-.043.05-.143.05-.143.038-.138.071-.27c.126-.53.216-1.068.27-1.611l.044-.55.01-.275v-.28l.006-.287-.027-.286-.044-.285a2.53 2.53 0 0 0-.072-.275l-.044-.144-.05-.17-.035-.005-.014-.044-.05-.171-.197-.027a51.61 51.61 0 0 0-4.89-.336l-.17-.006-.072.143-.896 1.757-.484.008-.53.01-.96-1.72-.05-.093-.1.005c-.813.046-1.625.112-2.436.199a37.84 37.84 0 0 0-2.414.335h.016-.01l-.034.11a1.367 1.367 0 0 0-.024.086c.016-.065.035-.129.055-.196a2.416 2.416 0 0 1-.11.258c-.018.07-.038.14-.051.21l-.01.027-.06.27-.044.269-.028.275a6.118 6.118 0 0 0-.01.55l.021.55c.037.55.11 1.098.22 1.639l.06.27.078.274.022.067.077.027 3.113 1.023c.916.298 1.831.605 2.744.919.078.016.157.027.237.032l.055.006h.016l.028.005.115.006h.017l-.254 1.035a20.88 20.88 0 0 1-2.72-.098c-2.222-.298-3.684-.83-4.064-.981a11.786 11.786 0 0 1-.808-8.143zm11.8 1.53l-2.941 5.545-.197.37-.143.049a1.767 1.767 0 0 1-.533.105 1.908 1.908 0 0 1-.825-.1l-.1-.038.126-.235 3.08-5.8.139-.263c.5.023 1.012.061 1.534.105l-.14.262zm.904.09l.144-.272.423.039.402.044.05.005h.032l-.148.28-2.44 4.598-.2.377-1.144.363.197-.373 2.684-5.061zm-14.35 1.27l-.016-.148-.011-.143a.984.984 0 0 1 .719-1.014 12.129 12.129 0 0 0 .42 4.873l-.045-.014a1.155 1.155 0 0 1-.704-.704 1.862 1.862 0 0 1-.082-.424l-.248-2.126-.033-.3zm2.754 11.453l-.015-.012.007.01a.366.366 0 0 1-.15-.082 12.468 12.468 0 0 1-1.562-2.489 9.755 9.755 0 0 1-.76-5.911l.004.01a1.254 1.254 0 0 0 .85.644c.213.702.489 1.383.825 2.035l.05.088.093.044c.352.144.711.27 1.076.379h.008l-.025.008a3.25 3.25 0 0 0-.24.091 4.841 4.841 0 0 0-.195.087l-.424.203-.137.066-.017.138a7.425 7.425 0 0 0 .306 3.108c.155.499.373.976.649 1.42l.005.01.017.044c.024.111-.191.156-.365.11zm3.78 2.212a6.01 6.01 0 0 1-2.079-1.291 4.95 4.95 0 0 1-.863-1.129 5.709 5.709 0 0 1-.528-1.32 7.205 7.205 0 0 1-.215-1.408 6.105 6.105 0 0 1 .039-1.25l.258-.103c.265-.087.533-.164.803-.23l.413-.083c.357-.06.716-.103 1.078-.127h.043l.016.002a7.518 7.518 0 0 0-.46 2.63c0 1.79.59 3.313 1.527 4.328l-.032-.019zm4.3-1.143a2.714 2.714 0 0 1-1.358.352 2.72 2.72 0 0 1-1.408-.385 3.37 3.37 0 0 1-.512-.727 2.536 2.536 0 0 0 3.782.067 3.282 3.282 0 0 1-.504.694v-.001zm-1.358-.418a1.96 1.96 0 0 1-1.969-1.952v-.007a1.96 1.96 0 1 1 1.97 1.958v.001zM18.474 22a2.523 2.523 0 0 0-4.988.084 6.816 6.816 0 0 1-.055-.683 2.729 2.729 0 0 1 2.557-1.733h.01a2.729 2.729 0 0 1 2.527 1.683 6.924 6.924 0 0 1-.051.65zm.432 3.931h.01l-.02.007c.95-1.016 1.55-2.549 1.55-4.353a7.477 7.477 0 0 0-.461-2.63h.014c1.415.204 2.152.93 2.152.93s.15 4.146-3.243 6.046h-.002zm6.463-8.94v.214c0 .049-.004.097-.005.145a6.913 6.913 0 0 1-.018.328c0 .034-.006.069-.009.103-.006.071-.012.142-.02.213 0 .016-.003.032-.005.048a9.836 9.836 0 0 1-.025.206v.01l-.028.198v.007a9.731 9.731 0 0 1-.958 2.96l-.034.066c-.035.067-.07.135-.107.202a12.313 12.313 0 0 1-1.27 1.915.343.343 0 0 1-.144.082l.006-.011-.014.013c-.174.05-.395.007-.37-.11l.016-.044.01-.01c.273-.446.49-.922.645-1.42a7.535 7.535 0 0 0 .302-3.102l-.016-.137-.138-.066c-.143-.072-.28-.143-.423-.204l-.435-.176-.039-.014.01-.003c.363-.107.72-.235 1.069-.381l.093-.044.05-.088c.335-.652.61-1.332.822-2.032.375-.077.695-.317.873-.655.105.562.16 1.133.165 1.705a1.343 1.343 0 0 0-.003.082zM9.646 11.135l.231-.28h.077-.115c-.116.17-.258.333-.385.5.073-.074.13-.143.192-.22zM16.95 6.21c.484.127.803.358.803.627 0 .27-.324.5-.803.627.66-.06 1.155-.319 1.155-.627s-.495-.569-1.155-.627zm-1.59 2.472a.254.254 0 0 0 .254-.25.253.253 0 0 0-.075-.18.244.244 0 0 0-.18-.07.248.248 0 0 0-.245.25c0 .138.11.25.246.25zm-6.645.842a.252.252 0 0 0-.176.43c.047.047.11.072.176.07a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07zm.693 8.073a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07.252.252 0 0 0-.25.25c.005.14.115.25.25.25zm6.072.957a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07.255.255 0 0 0-.25.255.263.263 0 0 0 .25.245zm1.365-9.867a.254.254 0 0 0 .254-.25.253.253 0 0 0-.075-.18.244.244 0 0 0-.18-.07.248.248 0 0 0-.245.25c0 .139.11.25.246.25zm-.122 9.373a.254.254 0 0 0-.25.25c.01.137.117.245.25.25a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07zm-6.777 1.683a.232.232 0 0 0-.218.116.263.263 0 0 0-.006.258c.044.08.126.129.214.125h.01a.25.25 0 0 0 .245-.25.25.25 0 0 0-.066-.172.242.242 0 0 0-.18-.077zm1.509-.45a.248.248 0 0 0-.246.249c0 .138.11.25.246.25a.254.254 0 0 0 .254-.25.253.253 0 0 0-.075-.18.244.244 0 0 0-.18-.07zm9.295 0a.25.25 0 1 0 .02.499.25.25 0 0 0-.02-.5z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#372D2C" fill-rule="nonzero"/><path d="M22.885 23.604a12.23 12.23 0 0 0 1.27-1.915 12.82 12.82 0 0 1-1.289 1.932.228.228 0 0 0 .019-.017zm-15.868-3.91a9.732 9.732 0 0 1-.228-4.48l-.005-.01a9.755 9.755 0 0 0 .761 5.911c.421.89.945 1.726 1.562 2.492a.241.241 0 0 0 .028.024 12.5 12.5 0 0 1-1.584-2.516 10.01 10.01 0 0 1-.534-1.421zm17.963 0a9.731 9.731 0 0 0-.002 0h.002zM9.43 18.53l.136-.067.12-.058a15.16 15.16 0 0 0-.256.125z"/><path d="M9.965 18.487l.101-.075h-.034l-.466.43a1.43 1.43 0 0 1 .4-.355z" fill="#000" fill-rule="nonzero"/><path d="M26.95 13.44a.359.359 0 0 0-.215-.154 38.333 38.333 0 0 0-1.04-.24l.094-.464.06-.292.028-.148.027-.16a1.34 1.34 0 0 0-.077-.704 1.485 1.485 0 0 0-1.133-.922 12.127 12.127 0 0 0-.344-1.492l-.017-.06-2.486-3.02-.093-.027c-.101-.027-2.341-.689-5.39-.69l.034-.602a1.236 1.236 0 0 0-.4-2.41 1.236 1.236 0 0 0-.4 2.409l.035.605c-3.062.003-5.314.661-5.41.693l-.093.027-2.486 3.02-.016.06c-.146.49-.261.987-.344 1.49h-.008l-.176.044a1.447 1.447 0 0 0-1.012 1.579l.027.159.028.148.06.292.094.466c-.345.076-.69.154-1.034.238a.357.357 0 0 0-.215.154.341.341 0 0 0 .374.506c.336-.082.672-.16 1.009-.233l.025.128a10.4 10.4 0 0 0 .506 7.55C8.47 24.608 11.94 28.078 16 28.078c4.059 0 7.53-3.47 9.042-6.693a10.405 10.405 0 0 0 .495-7.552l.024-.118c.338.074.676.152 1.013.234a.341.341 0 0 0 .374-.506l.002-.003zM15.112 3.298a.982.982 0 0 1 .968-.979c.54 0 .54 1.953 0 1.958a.982.982 0 0 1-.968-.979zm.648 1.21c.079.015.158.023.238.023h.038l.076 2.102a.339.339 0 0 1-.032.444.341.341 0 0 1-.242.1c-.506 0-.913-.154-.913-.34 0-.172.342-.315.79-.339l.123-.003h.034l-.112-1.987zM8.156 9.345l.291-.104.495-.165.65-.192c.236-.072.5-.138.775-.21l.874-.197c.303-.06.616-.127.94-.182.325-.055.65-.099.98-.154.33-.055.66-.082.984-.12.325-.04.644-.056.957-.083.165-.015.334-.022.495-.028h.017l.385 3.427.39-3.456h.418c.248 0 .479-.011.682 0l.528.022.462.016-.456-.044-.528-.05c-.204-.021-.43-.027-.682-.043a12.232 12.232 0 0 0-.809-.033H16c-.284 0-.59-.017-.902-.006-.311.011-.638.006-.968.028l-1.001.066c-.336.027-.671.055-1.001.099-.33.044-.655.093-.963.132-.297.037-.59.094-.866.143l-.492-.039.979-1.336 4.889-1.066.03.53c-.66.052-1.155.271-1.155.534 0 .3.65.544 1.452.544.802 0 1.452-.243 1.452-.544 0-.263-.495-.482-1.155-.534l.03-.528 4.868 1.063.98 1.336-1.362.11-.025-.003.015.004h-.02l2.607 1.292s1.124 3.61-.425 6.678a6.92 6.92 0 0 1-.615.99s-2.406 1.111-6.105 1.307L16 17.532a2.2 2.2 0 0 0 .885-.154l.77-.253c1.564-.482 3.13-.957 4.697-1.424l.154-.044.05-.143.05-.143.038-.138.071-.27c.126-.53.216-1.068.27-1.611l.044-.55.01-.275v-.28l.006-.286-.027-.286-.044-.286a2.53 2.53 0 0 0-.072-.275l-.044-.143-.05-.171-.035-.005-.014-.044-.05-.171-.197-.027a51.61 51.61 0 0 0-4.89-.336l-.17-.005-.072.143-.896 1.756-.484.008-.53.01-.96-1.72-.05-.093-.1.006c-.813.045-1.625.111-2.436.198a37.84 37.84 0 0 0-2.414.335h.016-.01l-.034.11a1.367 1.367 0 0 0-.024.086c.016-.065.035-.129.055-.196a2.416 2.416 0 0 1-.11.259c-.018.07-.038.139-.051.209l-.01.027-.06.27-.044.269-.028.275c-.01.182-.016.369-.01.55l.021.55c.037.55.11 1.098.22 1.639l.06.27.078.275.022.066.077.027 3.113 1.023c.916.298 1.831.605 2.744.919.078.016.157.027.237.033l.055.005h.016l.028.006.115.005h.017l-.254 1.035a20.88 20.88 0 0 1-2.72-.098c-2.222-.298-3.684-.83-4.064-.981a11.786 11.786 0 0 1-.808-8.143zm11.8 1.53l-2.941 5.545-.197.37-.143.049a1.767 1.767 0 0 1-.533.104 1.908 1.908 0 0 1-.825-.099l-.1-.038.126-.235 3.08-5.8.139-.263c.5.022 1.012.061 1.534.105l-.14.262zm.904.09l.144-.272.423.039.402.044.05.005h.032l-.148.28-2.44 4.598-.2.377-1.144.363.197-.373 2.684-5.061zm-14.35 1.27l-.016-.148-.011-.143a.984.984 0 0 1 .719-1.014 12.129 12.129 0 0 0 .42 4.873l-.045-.014a1.155 1.155 0 0 1-.704-.704 1.862 1.862 0 0 1-.082-.424l-.248-2.126-.033-.3zm2.754 11.453l-.015-.012.007.01a.366.366 0 0 1-.15-.082 12.468 12.468 0 0 1-1.562-2.489 9.755 9.755 0 0 1-.76-5.911l.004.01a1.254 1.254 0 0 0 .85.644c.213.702.489 1.383.825 2.035l.05.088.093.044c.352.144.711.27 1.076.379h.009l-.026.008a3.25 3.25 0 0 0-.239.091 4.841 4.841 0 0 0-.196.087l-.424.203-.137.066-.017.138a7.425 7.425 0 0 0 .306 3.108c.155.499.373.976.649 1.42l.005.01.017.044c.024.111-.19.156-.365.11zm3.78 2.212a6.01 6.01 0 0 1-2.079-1.291 4.95 4.95 0 0 1-.863-1.129 5.709 5.709 0 0 1-.528-1.32 7.205 7.205 0 0 1-.215-1.408 6.105 6.105 0 0 1 .039-1.25l.258-.103c.265-.087.533-.164.803-.23l.413-.083c.357-.06.716-.103 1.078-.127h.043l.016.002a7.518 7.518 0 0 0-.46 2.63c0 1.79.59 3.313 1.527 4.328l-.032-.019zm4.3-1.143a2.714 2.714 0 0 1-1.358.352 2.72 2.72 0 0 1-1.408-.385 3.37 3.37 0 0 1-.512-.727 2.536 2.536 0 0 0 3.782.067 3.282 3.282 0 0 1-.504.694v-.001zm-1.358-.418a1.96 1.96 0 0 1-1.969-1.952v-.007a1.96 1.96 0 1 1 1.97 1.958v.001zM18.474 22a2.523 2.523 0 0 0-4.988.084 6.816 6.816 0 0 1-.055-.683 2.729 2.729 0 0 1 2.557-1.733h.01a2.729 2.729 0 0 1 2.527 1.683 6.924 6.924 0 0 1-.051.65zm.432 3.931h.01l-.02.007c.95-1.016 1.55-2.549 1.55-4.353a7.477 7.477 0 0 0-.461-2.63h.014c1.415.204 2.152.93 2.152.93s.15 4.146-3.243 6.046h-.002zm6.463-8.94v.214c0 .049-.004.097-.005.145a6.913 6.913 0 0 1-.018.328c0 .034-.006.069-.009.103-.006.071-.012.143-.02.213 0 .016-.003.032-.005.048a9.836 9.836 0 0 1-.025.206v.01l-.028.198v.007a9.731 9.731 0 0 1-.958 2.96l-.034.066c-.035.067-.07.135-.107.202a12.313 12.313 0 0 1-1.27 1.915.343.343 0 0 1-.144.082l.006-.01-.015.012c-.173.05-.394.007-.37-.11l.017-.044.01-.01c.273-.446.49-.922.645-1.42a7.535 7.535 0 0 0 .302-3.102l-.016-.137-.138-.066c-.143-.072-.28-.143-.423-.204l-.435-.176-.039-.014.01-.003c.363-.107.72-.235 1.069-.381l.093-.044.05-.088c.335-.652.61-1.332.822-2.032.375-.077.695-.317.873-.655.105.562.16 1.133.165 1.705a1.343 1.343 0 0 0-.003.082z" fill="#FFF" fill-rule="nonzero"/><path d="M9.646 11.135l.231-.28h.077-.115c-.116.17-.258.333-.385.5.073-.074.13-.143.192-.22z" fill="#000" fill-rule="nonzero"/><path d="M16.95 6.21c.484.127.803.358.803.627 0 .27-.324.5-.803.627.66-.06 1.155-.319 1.155-.627s-.495-.569-1.155-.627zm-1.591 2.472a.254.254 0 0 0 .254-.25.253.253 0 0 0-.075-.18.244.244 0 0 0-.18-.07.248.248 0 0 0-.245.25c0 .138.11.25.246.25zm-6.645.842a.252.252 0 0 0-.176.43c.047.047.11.072.176.07a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07zm.693 8.073a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07.252.252 0 0 0-.25.25c.005.14.115.25.25.25zm6.072.957a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07.255.255 0 0 0-.25.255.263.263 0 0 0 .25.245zm1.365-9.867a.254.254 0 0 0 .254-.25.253.253 0 0 0-.075-.18.244.244 0 0 0-.18-.07.248.248 0 0 0-.245.25c0 .139.11.25.246.25zm-.122 9.373a.254.254 0 0 0-.25.25c.01.137.117.245.25.25a.252.252 0 0 0 .176-.43.237.237 0 0 0-.176-.07zm-6.777 1.683a.232.232 0 0 0-.218.116.263.263 0 0 0-.006.258c.044.08.126.129.214.125h.01a.25.25 0 0 0 .245-.25.25.25 0 0 0-.066-.172.242.242 0 0 0-.18-.077zm1.509-.451a.248.248 0 0 0-.246.25c0 .138.11.25.246.25a.254.254 0 0 0 .254-.25.253.253 0 0 0-.075-.18.244.244 0 0 0-.18-.07zm9.296 0a.25.25 0 1 0 .019.5.25.25 0 0 0-.02-.5z" fill="#FFF" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gmr);


/***/ }),

/***/ "Z59u":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/abt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Abt = {
  symbol: 'abt',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6.5 10.487v11.026L16 27l9.5-5.487V10.487L16 5l-9.5 5.487zm.912 9.97v-8.913l5.743 3.323-1.933 3.385-3.81 2.205zm.457.791l3.664-2.12 4.038 2.313v4.256l-7.702-4.449zm16.719-9.673v8.85l-3.76-2.175-1.932-3.382 5.692-3.293zm-.43-.808l-5.715 3.307-1.96-3.431V6.334l7.675 4.433zm-6.047 4.555l1.153 2.023L16.939 16l1.172-.678zm-.453-.794l-1.175.68v-2.74l1.175 2.06zm-4.864 2.815l1.151-2.02 1.17.677-2.32 1.343zm-.346 1.256l3.123-1.807v3.595L12.448 18.6zm-4.58-7.847l7.703-4.449v4.334l-1.962 3.436-5.74-3.321zm16.29 10.481l-7.675 4.433V21.47l4.04-2.34 3.635 2.103zm-4.548-2.632l-3.127 1.813v-3.622l3.127 1.81zm-5.212-4.071l1.173-2.057v2.735l-1.173-.678z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3EFFFF"/><path fill="#FFF" fill-rule="nonzero" d="M6.5 10.487L16 5l9.5 5.487v11.026L16 27l-9.5-5.487V10.487zm.912 9.97l3.81-2.205 1.933-3.385-5.743-3.323v8.913zm.457.791l7.702 4.449V21.44l-4.038-2.313-3.664 2.12zm16.719-9.673l-5.692 3.293 1.932 3.382 3.76 2.176v-8.851zm-.43-.808l-7.675-4.433v4.309l1.96 3.431 5.715-3.307zm-6.047 4.555L16.939 16l2.325 1.345-1.153-2.023zm-.453-.794l-1.175-2.06v2.74l1.175-.68zm-4.864 2.815L15.114 16l-1.169-.676-1.15 2.019zm-.346 1.256l3.123 1.788v-3.595l-3.123 1.807zm-4.58-7.847l5.74 3.32 1.963-3.435V6.303l-7.703 4.449zm16.29 10.481l-3.636-2.104-4.039 2.341v4.196l7.675-4.433zm-4.548-2.632l-3.127-1.809v3.622L19.61 18.6zm-5.212-4.071l1.173.678v-2.735l-1.173 2.057z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Abt);


/***/ }),

/***/ "ZOMx":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vib.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vib = {
  symbol: 'vib',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7 7l10.2 18H22V7h-3.6v12.775L11.2 7z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#ff1f43" r="16"/><path d="M7 7h4.2l7.2 12.775V7H22v18h-4.8z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vib);


/***/ }),

/***/ "ZsPm":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mith.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mith = {
  symbol: 'mith',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.007-11.002h10.37c.234 0 .457-.04.576-.261.122-.226.045-.452-.085-.657-.108-.17-.22-.337-.33-.505-.888-1.367-1.835-2.699-2.653-4.108-1.353-2.332-2.625-4.714-3.927-7.076-.13-.236-.296-.403-.572-.39-.262.012-.397.201-.499.423l-2.594 5.65c-.128.278-.19.286-.363.042-.841-1.194-1.684-2.386-2.521-3.582-.144-.206-.337-.336-.563-.252-.164.06-.32.213-.422.364-1.04 1.544-2.067 3.098-3.103 4.646-.322.48-.617.99-.998 1.418-1.002 1.122-2.043 2.208-3.07 3.306-.18.191-.308.393-.198.666.116.287.358.318.626.318 3.442-.003 6.884-.002 10.326-.002zm2.163-1.111c-.162.126-2.61.125-2.805-.018.268-.297.532-.593.802-.884.022-.023.088-.027.121-.011.622.29 1.242.583 1.862.876.005.003.007.013.02.037zm-5.674-7.163c-.056.552-.1 1.055-.164 1.555a.397.397 0 0 1-.16.25 57 57 0 0 1-1.445.897c-.057.035-.136.032-.204.046.016-.067.014-.146.05-.2a372.27 372.27 0 0 1 1.707-2.564c.034-.05.102-.077.154-.114l.062.13zm11.997 7.25c-.275 0-.55-.004-.826.002-.152.003-.204-.064-.193-.213.06-.782.115-1.564.176-2.346.005-.053.048-.103.073-.153.048.03.112.05.14.093.527.8 1.05 1.602 1.575 2.404.1.154.04.213-.12.213h-.825zm-17.734-.06c.212-.232.375-.414.542-.593.478-.511.958-1.02 1.434-1.534.123-.132.195-.141.273.046.267.641.543 1.279.822 1.914.073.167.029.229-.144.228-.892-.001-1.785 0-2.678-.002-.061 0-.123-.028-.25-.059zm13.195-4.613c.139.013.218.01.293.028.836.207 1.671.417 2.506.626.313.079.455.248.436.578-.046.774-.106 1.548-.16 2.322-.011.17-.016.342-.035.511-.008.062-.05.12-.076.18-.05-.038-.116-.066-.15-.115-.503-.722-1.001-1.447-1.5-2.172l-1.208-1.754c-.029-.042-.048-.091-.106-.204zm-.212-5.135c.047.065.1.125.139.194.867 1.569 1.732 3.138 2.595 4.708.037.068.042.155.061.233-.079 0-.162.017-.237-.001-.866-.213-1.73-.434-2.596-.644-.143-.035-.184-.106-.18-.244.04-1.257.074-2.514.112-3.771.005-.155.02-.309.03-.462l.076-.013zm-3.885 7.707c-.093-.084-.151-.128-.2-.181-.892-1-1.781-2.004-2.676-3.001a.46.46 0 0 1-.127-.396c.076-.678.135-1.358.205-2.038.01-.085.045-.168.068-.252l.094-.056c.025.058.04.122.076.172a969.77 969.77 0 0 0 2.375 3.31c.193.268.283.559.268.892-.02.419-.02.838-.033 1.257-.003.08-.026.16-.05.293zm.577-.209c.02-.806-.042-1.605.346-2.38.734-1.462 1.403-2.96 2.103-4.44.031-.065.108-.108.163-.161.02.068.06.137.058.205-.028 1.235-.06 2.47-.095 3.705a.367.367 0 0 1-.078.205 619.97 619.97 0 0 1-2.273 2.776c-.044.053-.109.087-.164.13l-.06-.04zm-3.503 2.31c-.49 0-.979.003-1.468-.003-.068 0-.135-.043-.202-.067.026-.061.04-.13.078-.182.764-1.039 1.534-2.073 2.295-3.114.12-.164.197-.164.33-.014a154.73 154.73 0 0 0 1.68 1.85c.105.115.133.195.008.325-.334.352-.648.724-.983 1.075a.46.46 0 0 1-.294.125c-.481.013-.963.006-1.444.006zm.498-3.965l-1.25 1.676-1.48 1.984c-.188.25-.234.245-.356-.035-.32-.745-.638-1.491-.963-2.234-.065-.15-.08-.284.038-.406.128-.13.247-.28.398-.376.834-.529 1.679-1.04 2.515-1.567.14-.088.22-.074.324.053.247.304.508.596.774.905zm5.795-.788c.365.528.677.977.987 1.427a1096.57 1096.57 0 0 1 2.1 3.052c.043.063.054.148.08.223-.072.017-.142.049-.214.05-.756.003-1.513.005-2.27-.002a.954.954 0 0 1-.373-.084c-.918-.418-1.832-.845-2.75-1.265-.146-.067-.213-.129-.083-.286.798-.962 1.59-1.928 2.383-2.894.044-.052.075-.116.14-.22z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00316D"/><path fill="#FFF" fill-rule="nonzero" d="M18.156 19.887c-.013-.024-.015-.034-.02-.037-.62-.293-1.24-.587-1.862-.876-.033-.016-.1-.012-.121.011-.27.29-.534.587-.802.884.194.143 2.643.144 2.805.018m-5.674-7.163l-.062-.13c-.052.037-.12.064-.154.114a372.27 372.27 0 0 0-1.708 2.564c-.035.054-.033.133-.05.2.07-.014.148-.011.205-.046a57 57 0 0 0 1.444-.898.397.397 0 0 0 .161-.249c.064-.5.108-1.003.164-1.555m11.997 7.25h.826c.159 0 .22-.06.119-.213-.525-.802-1.048-1.605-1.575-2.404-.028-.044-.092-.063-.14-.093-.025.05-.068.1-.073.153-.061.782-.116 1.564-.176 2.346-.011.149.041.216.193.213.275-.006.55-.002.826-.002m-17.734-.06c.126.03.188.058.249.059.893.002 1.786 0 2.678.002.173 0 .217-.061.144-.228a107.99 107.99 0 0 1-.822-1.914c-.078-.187-.15-.178-.273-.046-.476.514-.956 1.023-1.434 1.534-.167.18-.33.36-.542.593m13.195-4.613c.058.113.077.162.106.204l1.208 1.754c.499.725.997 1.45 1.5 2.172.034.05.1.077.15.114.026-.06.068-.117.076-.179.02-.17.024-.34.035-.51.054-.775.114-1.549.16-2.323.02-.33-.123-.5-.436-.578-.835-.209-1.67-.419-2.506-.626-.075-.018-.154-.015-.293-.028m-.212-5.135l-.076.013c-.01.153-.025.307-.03.462l-.111 3.771c-.005.138.036.21.179.244.866.21 1.73.431 2.596.644.075.018.158.001.237 0-.02-.077-.024-.164-.061-.232-.863-1.57-1.728-3.14-2.595-4.708-.038-.069-.092-.13-.139-.194m-3.885 7.707c.024-.133.047-.213.05-.293.013-.419.014-.838.033-1.257a1.363 1.363 0 0 0-.268-.891 969.77 969.77 0 0 1-2.375-3.31c-.036-.05-.051-.115-.076-.173l-.094.056c-.023.084-.059.167-.068.252-.07.68-.13 1.36-.205 2.038a.46.46 0 0 0 .127.396c.895.997 1.784 2 2.677 3 .048.054.106.098.199.182m.577-.209l.06.04c.055-.043.12-.077.164-.13a619.97 619.97 0 0 0 2.273-2.776.367.367 0 0 0 .078-.205c.036-1.235.067-2.47.095-3.705.002-.068-.037-.137-.058-.205-.055.053-.132.096-.163.16-.7 1.482-1.369 2.979-2.103 4.442-.388.774-.326 1.573-.346 2.38m-3.503 2.31c.481 0 .963.007 1.444-.006a.46.46 0 0 0 .294-.125c.335-.351.649-.723.983-1.075.125-.13.097-.21-.009-.326a153.072 153.072 0 0 1-1.678-1.85c-.134-.15-.211-.149-.331.015-.761 1.041-1.53 2.075-2.295 3.114-.038.052-.052.121-.078.182.067.024.134.067.202.067.49.006.978.004 1.468.004m.498-3.966c-.266-.309-.527-.6-.774-.905-.104-.127-.184-.14-.324-.053-.836.526-1.681 1.038-2.515 1.567-.151.096-.27.245-.398.376-.119.122-.103.256-.038.406.325.743.642 1.489.963 2.234.122.28.168.285.355.035.495-.66.988-1.323 1.481-1.984l1.25-1.676m5.795-.788c-.065.105-.096.169-.14.221-.792.966-1.585 1.932-2.383 2.894-.13.157-.063.219.084.286.917.42 1.83.847 2.749 1.265a.954.954 0 0 0 .374.084c.756.007 1.513.005 2.27.001.07 0 .141-.032.212-.05-.025-.074-.036-.159-.08-.222a915.472 915.472 0 0 0-2.099-3.052c-.31-.45-.622-.9-.987-1.427m-3.217 5.777c-3.442 0-6.884-.001-10.326.002-.268 0-.51-.03-.626-.318-.11-.273.018-.475.197-.666 1.028-1.098 2.07-2.184 3.07-3.306.382-.428.677-.937 1-1.418 1.035-1.548 2.062-3.102 3.102-4.646.102-.151.258-.304.422-.364.226-.084.419.046.563.252.837 1.196 1.68 2.388 2.521 3.582.173.244.235.236.363-.042l2.594-5.65c.102-.222.237-.411.5-.423.275-.013.442.154.571.39 1.302 2.362 2.574 4.744 3.927 7.076.818 1.41 1.765 2.741 2.654 4.108.11.168.221.335.329.505.13.205.207.43.085.657-.12.22-.342.262-.575.262-3.457-.002-6.914-.001-10.371-.001"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mith);


/***/ }),

/***/ "a1+k":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bay.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bay = {
  symbol: 'bay',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.784-16.026c.058-.065.123-.13.188-.196.21-.226.44-.467.657-.7a4.875 4.875 0 0 0 1.357-3.369c0-.087.014-.445.014-.496C24.899 8.341 22.481 6 19.623 6h-9v3.631H7V26h12.767C22.604 26 25 23.477 25 20.488c.007-2.137-1.314-3.646-2.216-4.514zm-3.017 8.196H8.804V11.447h1.82v10.915h8.92c.736 0 1.393-.445 1.674-1.13a1.832 1.832 0 0 0-.39-1.991l-3.182-3.223 3.233-3.274c.52-.525.671-1.305.39-1.99a1.808 1.808 0 0 0-1.675-1.13h-7.16V7.816h7.196c1.906 0 3.508 1.553 3.573 3.441 0 .08-.015.394-.015.401v.036a3.054 3.054 0 0 1-.858 2.122c-.224.234-.455.481-.664.7-.354.372-.657.693-.802.839l-.65.641.643.65c.087.087.195.189.325.313.75.7 2.014 1.866 2.014 3.514.007 1.969-1.595 3.697-3.429 3.697zm-7.34-12.716l7.167.007-4.503 4.565 4.453 4.52h-7.117z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#6356ab" r="16"/><path d="M22.784 15.974c.058-.065.123-.13.188-.196.21-.226.44-.467.657-.7a4.875 4.875 0 0 0 1.357-3.369c0-.087.014-.445.014-.496C24.899 8.341 22.481 6 19.623 6h-9v3.631H7V26h12.767C22.604 26 25 23.477 25 20.488c.007-2.137-1.314-3.646-2.216-4.514zm-10.357-4.52l7.167.007-4.503 4.565 4.453 4.52h-7.117zm7.34 12.716H8.804V11.447h1.82v10.915h8.92c.736 0 1.393-.445 1.674-1.13a1.832 1.832 0 0 0-.39-1.991l-3.182-3.223 3.233-3.274c.52-.525.671-1.305.39-1.99a1.808 1.808 0 0 0-1.675-1.13h-7.16V7.816h7.196c1.906 0 3.508 1.553 3.573 3.441 0 .08-.015.394-.015.401v.036a3.054 3.054 0 0 1-.858 2.122c-.224.234-.455.481-.664.7-.354.372-.657.693-.802.839l-.65.641.643.65c.087.087.195.189.325.313.75.7 2.014 1.866 2.014 3.514.007 1.969-1.595 3.697-3.429 3.697z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bay);


/***/ }),

/***/ "a4aG":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/miota.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Miota = {
  symbol: 'miota',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.257-25.23c0-.702-.57-1.27-1.274-1.27-.704 0-1.274.568-1.274 1.27 0 .701.57 1.27 1.274 1.27.704 0 1.274-.569 1.274-1.27zm-.918 4.424c.596 0 1.079-.482 1.079-1.076 0-.594-.483-1.075-1.08-1.075a1.077 1.077 0 1 0 .001 2.151zm-.335 2.653a.91.91 0 0 0 .912-.91.91.91 0 0 0-.912-.909.91.91 0 0 0-.912.91.91.91 0 0 0 .912.909zm-.054 1.372a.779.779 0 0 0-1.56 0 .779.779 0 0 0 1.56 0zm-1.234 1.724a.668.668 0 1 0-1.337.002.668.668 0 0 0 1.337-.002zm-1.35 1.223a.574.574 0 1 0-1.147.002.574.574 0 0 0 1.147-.002zm6.874-7.409a1.083 1.083 0 0 0-2.11-.491 1.084 1.084 0 0 0 2.11.491zm-.518 2.803a.916.916 0 1 0-1.786-.417.917.917 0 1 0 1.786.417zm-.964 2.237a.776.776 0 0 0-1.51-.353.775.775 0 1 0 1.51.353zM22.516 17.5a.66.66 0 0 0-.495-.793.661.661 0 1 0 .495.793zm-1.357 1.189a.569.569 0 1 0-1.108-.26.569.569 0 1 0 1.108.26zm-1.355.751a.488.488 0 1 0-.95-.22.488.488 0 0 0 .95.22zm7.104-4.856a.918.918 0 0 0-.429-1.229.923.923 0 0 0-1.231.427.917.917 0 0 0 .428 1.229.923.923 0 0 0 1.232-.427zm-.961 2.215a.78.78 0 0 0-.365-1.045.788.788 0 0 0-1.048.364.785.785 0 0 0 1.413.681zm-1.208 1.68a.678.678 0 0 0-1.22-.589.674.674 0 0 0 .314.903.68.68 0 0 0 .906-.313zm-1.346 1.188a.587.587 0 0 0-.273-.784.587.587 0 1 0-.512 1.057.59.59 0 0 0 .785-.273zm-1.355.732a.504.504 0 0 0-.905-.437.503.503 0 0 0 .905.437zm-1.273.369a.425.425 0 0 0-.198-.568.425.425 0 1 0-.372.766.428.428 0 0 0 .57-.198zm1.036 4.856c.61.35 1.39.142 1.74-.466a1.268 1.268 0 0 0-.468-1.734 1.277 1.277 0 0 0-1.74.466 1.267 1.267 0 0 0 .468 1.734zm-2.99-1.532a1.08 1.08 0 0 0 1.473-.395 1.074 1.074 0 0 0-.396-1.468 1.081 1.081 0 0 0-1.473.395 1.072 1.072 0 0 0 .396 1.468zm-2.202-1.84a.913.913 0 0 0 1.246-.335.907.907 0 0 0-.335-1.241.914.914 0 0 0-1.246.333.908.908 0 0 0 .335 1.243zm-1.501-1.974a.78.78 0 0 0 1.064-.285.775.775 0 0 0-.285-1.061.777.777 0 1 0-.779 1.346zm-.883-1.926a.67.67 0 0 0 .915-.246.666.666 0 0 0-.246-.91.671.671 0 0 0-.915.245.666.666 0 0 0 .246.911zm-.389-1.777a.573.573 0 1 0 .574-.993.576.576 0 0 0-.785.21.572.572 0 0 0 .211.783zm3.75 9.926c.598 0 1.083-.483 1.083-1.08 0-.596-.485-1.079-1.083-1.079a1.08 1.08 0 1 0 0 2.159zm-2.918-2.138a.92.92 0 0 0 1.296-.042.913.913 0 0 0-.042-1.292.92.92 0 0 0-1.297.042.912.912 0 0 0 .043 1.292zm-1.465-1.948a.778.778 0 0 0 1.097-.036.77.77 0 0 0-.036-1.093.777.777 0 0 0-1.096.036.772.772 0 0 0 .035 1.093zm-.859-1.924c.268.25.687.236.937-.03a.66.66 0 0 0-.03-.934.664.664 0 0 0-.937.03.658.658 0 0 0 .03.934zm-.356-1.764a.57.57 0 0 0 .805-.026.566.566 0 0 0-.026-.802.57.57 0 0 0-.805.027.566.566 0 0 0 .026.801zm.024-1.546a.489.489 0 0 0 .668-.71.49.49 0 0 0-.69.022.485.485 0 0 0 .022.688zm.675 8.56c.288.42.86.528 1.282.242a.916.916 0 0 0 .244-1.276.924.924 0 0 0-1.282-.243.918.918 0 0 0-.244 1.277zm-1.446-1.936a.786.786 0 0 0 1.09.206.78.78 0 0 0 .208-1.087.787.787 0 0 0-1.09-.206.78.78 0 0 0-.208 1.087zm-.858-1.883a.68.68 0 0 0 .942.18c.31-.21.39-.631.179-.94a.679.679 0 0 0-.942-.178c-.31.21-.39.63-.18.938zm-.36-1.754a.59.59 0 0 0 .817.155.584.584 0 0 0 .156-.815.59.59 0 0 0-.818-.155.586.586 0 0 0-.155.815zm.04-1.536a.503.503 0 0 0 .83-.564.504.504 0 0 0-.698-.132.5.5 0 0 0-.133.696zm.314-1.283a.428.428 0 0 0 .706-.48.427.427 0 0 0-.706.479zm-4.74-1.542a1.268 1.268 0 0 0-.466 1.735c.351.606 1.13.815 1.74.465.608-.35.818-1.127.466-1.734a1.276 1.276 0 0 0-1.74-.466zm2.83-1.81a1.073 1.073 0 0 0-.395 1.468c.297.513.957.69 1.473.394.517-.297.693-.954.396-1.469a1.08 1.08 0 0 0-1.474-.394zm2.701-.977a.908.908 0 0 0-.334 1.242.915.915 0 0 0 1.246.334.91.91 0 0 0 .334-1.243.915.915 0 0 0-1.246-.333zm2.467-.306a.775.775 0 0 0-.287 1.06.78.78 0 0 0 1.066.286.775.775 0 0 0 .285-1.061.78.78 0 0 0-1.064-.285zm2.114.204a.666.666 0 0 0-.245.912.67.67 0 0 0 1.16-.667.67.67 0 0 0-.915-.245zm1.738.554a.573.573 0 1 0 .574.993.571.571 0 0 0 .21-.782.577.577 0 0 0-.784-.21zM7.614 11.24a1.078 1.078 0 0 0-.723 1.345 1.084 1.084 0 0 0 2.072-.623 1.084 1.084 0 0 0-1.35-.722zm2.694-.953a.914.914 0 1 0 .53 1.75.915.915 0 1 0-.53-1.75zM12.734 10a.772.772 0 1 0 .447 1.48.772.772 0 1 0-.447-1.48zm2.1.223a.66.66 0 0 0-.443.823.663.663 0 0 0 1.27-.381.663.663 0 0 0-.826-.442zm1.71.577a.566.566 0 1 0 .33 1.086.568.568 0 1 0-.33-1.086zm1.33.795a.486.486 0 1 0 .283.932.487.487 0 1 0-.283-.932zm-7.77-3.707a.92.92 0 1 0 .134 1.834.922.922 0 0 0 .854-.984.92.92 0 0 0-.987-.85zm2.407-.278a.783.783 0 1 0 .113 1.56.783.783 0 1 0-.113-1.56zm2.064.204a.676.676 0 1 0 .098 1.348.677.677 0 1 0-.098-1.348zm1.703.568a.588.588 0 1 0 .084 1.173.588.588 0 0 0-.084-1.173zm1.314.804a.502.502 0 1 0 .071 1 .502.502 0 0 0-.071-1zm.957.915a.426.426 0 1 0 .061.85.426.426 0 0 0-.061-.85z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#242424"/><path fill="#FFF" fill-rule="nonzero" d="M22.257 6.77c0 .701-.57 1.27-1.274 1.27a1.272 1.272 0 0 1-1.274-1.27c0-.702.57-1.27 1.274-1.27.704 0 1.274.568 1.274 1.27zm-.918 4.424c-.596 0-1.08-.482-1.08-1.076 0-.594.484-1.075 1.08-1.075.596 0 1.079.481 1.079 1.075s-.483 1.076-1.08 1.076zm-.335 2.653a.91.91 0 0 1-.912-.91.91.91 0 0 1 .912-.909.91.91 0 0 1 .912.91.91.91 0 0 1-.912.909zm-.054 1.372a.779.779 0 0 1-1.56 0 .779.779 0 0 1 1.56 0zm-1.234 1.724c0 .37-.3.667-.669.667a.668.668 0 1 1 .67-.667zm-1.35 1.223a.574.574 0 1 1-1.148 0 .574.574 0 0 1 1.148 0zm6.874-7.409a1.084 1.084 0 0 1-2.11-.491 1.083 1.083 0 0 1 2.11.491zm-.518 2.803a.917.917 0 0 1-1.786-.417.916.916 0 0 1 1.786.417zm-.964 2.237a.775.775 0 0 1-1.51-.352.776.776 0 0 1 1.51.352zM22.516 17.5a.663.663 0 0 1-1.29-.3.661.661 0 0 1 .795-.493.66.66 0 0 1 .495.793zm-1.357 1.189a.569.569 0 0 1-1.108-.26.569.569 0 0 1 1.108.26zm-1.355.751a.49.49 0 0 1-.952-.222.49.49 0 0 1 .952.222zm7.104-4.856a.923.923 0 0 1-1.232.427.917.917 0 0 1-.428-1.229.923.923 0 0 1 1.231-.427.92.92 0 0 1 .429 1.229zm-.961 2.215a.785.785 0 0 1-1.413-.681.788.788 0 0 1 1.048-.364.78.78 0 0 1 .365 1.045zm-1.208 1.68a.68.68 0 0 1-.906.314.674.674 0 0 1-.314-.902.678.678 0 0 1 1.22.589zm-1.346 1.188a.59.59 0 0 1-.785.272.587.587 0 1 1 .512-1.056.587.587 0 0 1 .273.784zm-1.355.732a.503.503 0 0 1-.905-.437.504.504 0 0 1 .905.437zm-1.273.369a.428.428 0 0 1-.57.198.425.425 0 1 1 .372-.766.425.425 0 0 1 .198.568zm1.036 4.856a1.267 1.267 0 0 1-.468-1.734 1.277 1.277 0 0 1 1.74-.466c.61.35.82 1.127.469 1.734a1.276 1.276 0 0 1-1.74.466zm-2.99-1.532a1.072 1.072 0 0 1-.396-1.468 1.081 1.081 0 0 1 1.473-.395c.516.296.693.954.396 1.468a1.08 1.08 0 0 1-1.473.395zm-2.202-1.84a.908.908 0 0 1-.335-1.243.914.914 0 0 1 1.246-.333.907.907 0 0 1 .335 1.24.913.913 0 0 1-1.246.336zm-1.501-1.974a.777.777 0 1 1 .779-1.346c.372.214.5.689.285 1.06a.78.78 0 0 1-1.064.286zm-.883-1.926a.666.666 0 0 1-.246-.911.671.671 0 0 1 .915-.245c.32.184.43.592.246.91a.67.67 0 0 1-.915.246zm-.389-1.777a.572.572 0 0 1-.21-.783.576.576 0 0 1 .784-.21.573.573 0 1 1-.574.993zm3.75 9.926a1.081 1.081 0 0 1-1.083-1.08 1.08 1.08 0 0 1 1.083-1.079c.598 0 1.083.483 1.083 1.08 0 .596-.485 1.079-1.083 1.079zm-2.918-2.138a.912.912 0 0 1-.043-1.292.92.92 0 0 1 1.297-.042c.37.345.388.923.042 1.292a.92.92 0 0 1-1.296.042zm-1.465-1.948a.772.772 0 0 1-.035-1.093.777.777 0 0 1 1.096-.036.77.77 0 0 1 .036 1.093.778.778 0 0 1-1.097.036zm-.859-1.924a.658.658 0 0 1-.03-.933.664.664 0 0 1 .936-.031.66.66 0 0 1 .031.934.664.664 0 0 1-.937.03zm-.356-1.764a.566.566 0 0 1-.026-.801.57.57 0 0 1 .805-.027c.23.214.24.573.026.802a.57.57 0 0 1-.805.026zm.024-1.546a.485.485 0 0 1-.023-.688.49.49 0 0 1 .691-.022.489.489 0 0 1-.668.71zm.675 8.56a.918.918 0 0 1 .244-1.277.924.924 0 0 1 1.282.243.916.916 0 0 1-.244 1.276.925.925 0 0 1-1.282-.242zm-1.446-1.936a.78.78 0 0 1 .207-1.087.787.787 0 0 1 1.09.206.78.78 0 0 1-.207 1.087.786.786 0 0 1-1.09-.206zm-.858-1.883a.674.674 0 0 1 .179-.938.68.68 0 0 1 .942.178.674.674 0 0 1-.18.94.68.68 0 0 1-.941-.18zm-.36-1.754a.586.586 0 0 1 .155-.815.59.59 0 0 1 .818.155.584.584 0 0 1-.156.815.59.59 0 0 1-.817-.155zm.04-1.536a.5.5 0 0 1 .132-.696.504.504 0 0 1 .699.132.503.503 0 0 1-.831.564zm.314-1.283a.427.427 0 1 1 .706-.48.427.427 0 0 1-.706.48zm-4.74-1.542a1.276 1.276 0 0 1 1.74.466 1.268 1.268 0 0 1-.467 1.734c-.61.35-1.388.141-1.739-.465a1.268 1.268 0 0 1 .466-1.735zm2.83-1.81a1.08 1.08 0 0 1 1.474.393c.297.515.12 1.172-.396 1.469a1.082 1.082 0 0 1-1.473-.394 1.073 1.073 0 0 1 .395-1.469zm2.701-.977a.915.915 0 0 1 1.246.333.91.91 0 0 1-.334 1.243.915.915 0 0 1-1.246-.334.908.908 0 0 1 .334-1.242zm2.467-.306a.78.78 0 0 1 1.064.285.775.775 0 0 1-.285 1.06.78.78 0 0 1-1.066-.285.775.775 0 0 1 .287-1.06zm2.114.204a.67.67 0 0 1 .914.245.67.67 0 0 1-1.16.667.666.666 0 0 1 .246-.912zm1.738.554a.577.577 0 0 1 .785.21.571.571 0 0 1-.21.783.573.573 0 1 1-.575-.993zM7.614 11.24a1.084 1.084 0 0 1 1.35.722 1.084 1.084 0 0 1-2.073.624 1.077 1.077 0 0 1 .723-1.346zm2.694-.953a.915.915 0 0 1 .53 1.75.914.914 0 1 1-.53-1.75zM12.734 10a.772.772 0 1 1 .447 1.48.772.772 0 1 1-.447-1.48zm2.1.223a.66.66 0 0 1 .382 1.265.663.663 0 0 1-.825-.442.66.66 0 0 1 .444-.823zm1.71.577a.568.568 0 0 1 .328 1.086.566.566 0 1 1-.328-1.086zm1.33.795a.487.487 0 1 1 .283.932.486.486 0 1 1-.283-.932zm-7.77-3.707a.92.92 0 0 1 .988.85.922.922 0 0 1-1.84.134.92.92 0 0 1 .853-.984zm2.407-.278a.783.783 0 0 1 .113 1.56.783.783 0 1 1-.113-1.56zm2.064.204a.677.677 0 0 1 .098 1.348.676.676 0 0 1-.098-1.348zm1.703.568a.587.587 0 0 1 .085 1.17.587.587 0 1 1-.085-1.17zm1.314.804zm.957.915z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Miota);


/***/ }),

/***/ "a7NE":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sys.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sys = {
  symbol: 'sys',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M13.147 15.434a.11.11 0 0 1-.003.098.12.12 0 0 1-.157.047c-7.537-3.92 6.841-8.485 14.764-3.14.096.055.18.11.249.163-.081-.058-.166-.107-.249-.163-2.94-1.676-17.604-3.343-14.604 2.995m8.326 5.32c4.158-1.89.776-8.362-4.725-7.113a.118.118 0 0 1-.139-.085.11.11 0 0 1 .041-.11c4.28-3.216 12.314 4.292 4.823 7.307M4 18.011c12.101 7.743 18.334.467 13.955-2.71l-.006-.005a.108.108 0 0 1-.017-.152.116.116 0 0 1 .114-.04C28.547 17 14.26 27.665 4 18.01m8.2-7.156c-6.619 4.54.744 6.6 2.081 6.164a.139.139 0 0 1 .064-.002.111.111 0 0 1 .083.138c-.903 3.463-11.31-3.392-2.228-6.3M16 0C7.164 0 0 7.163 0 16c0 8.836 7.164 16 16 16s16-7.164 16-16c0-8.837-7.164-16-16-16"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#0082c6" r="16"/><path d="M18.046 15.103a.117.117 0 0 0-.114.041.108.108 0 0 0 .023.156C22.334 18.478 16.101 25.754 4 18.011c10.26 9.655 24.547-1.01 14.046-2.908zm-5.844-4.248c-9.086 2.907 1.323 9.763 2.226 6.3a.11.11 0 0 0-.083-.137.12.12 0 0 0-.064.001c-1.337.435-8.701-1.624-2.08-6.164zM28 12.602c-7.867-5.61-22.628-.984-15.013 2.977a.119.119 0 0 0 .157-.047.11.11 0 0 0 .003-.098C10.05 8.89 25.781 10.88 28 12.602zm-6.528 8.151c4.159-1.89.777-8.361-4.724-7.112a.116.116 0 0 1-.138-.085.107.107 0 0 1 .04-.11c4.28-3.216 12.314 4.292 4.822 7.307z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sys);


/***/ }),

/***/ "aD6T":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/block.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Block = {
  symbol: 'block',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.022 7l5.069 9-5.16 9H21.25l5.25-9-5.25-9H11.022zm5.43 3.166h2.988L22.789 16l-3.35 5.834h-2.986L19.802 16l-3.35-5.834zm-4.34.86L10.29 7.79 5.5 16l4.748 8.14 1.84-3.21L9.21 16l2.902-4.974z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#101341" fill-rule="nonzero"/><g fill="#FFF"><path d="M11.022 7H21.25l5.25 9-5.25 9H10.931l5.16-9-5.07-9zm5.43 3.166L19.803 16l-3.35 5.834h2.988L22.789 16l-3.35-5.834h-2.986z"/><path opacity=".5" d="M12.113 11.026L9.211 16l2.876 4.93-1.839 3.209L5.5 16l4.789-8.211z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Block);


/***/ }),

/***/ "aGHc":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/drgn.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Drgn = {
  symbol: 'drgn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M9.403 9.957L9.4 20.78h2.818l-.072-7.327 8.28 10.513 2.228 2.83-.018-1.573-.029-14.179h-2.774l.072 7.386L9.577 5.306l-.173-.22v3.948l-.004.92.003.003zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/><path d="M9.403 9.957l11.024 14.01-8.281-10.514.072 7.327H9.4l.003-10.823zm0-.923l.001-3.947.173.219-.161-.204-.013 3.932zm10.502 9.396l-.072-7.386h2.774l.03 14.18-.038-3.37-2.694-3.424z" opacity=".398"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#C91111"/><g fill="#FFF"><path opacity=".6" d="M9.4 20.78h2.818l-.072-7.327L22.64 26.776l-.033-15.732h-2.774l.072 7.401L9.404 5.087z"/><path d="M9.4 9.953l.016-4.851 13.183 16.752.055 4.942z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Drgn);


/***/ }),

/***/ "aPbi":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xas.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xas = {
  symbol: 'xas',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.992-17.529L26 14.47l-3.826-6.462.002-.007H9.922l.002.008-.002-.002L6 14.563l.039.006-.032.013L16.097 26l.426-.52zm-13.136.459l6.423-.011 2.122 3.635-5.363 6.162-5.353-6.112zm-2.778 2.98l-2.602-2.972 4.361-.007zm9.723-3.846l-3.038-5.205 4.883-.01 3.11 5.207zm4.771.846l-2.56 2.942-1.713-2.935zm-5.791-.844l-5.42.009 2.729-4.62zm-8.399-5.194l5.04-.01-3.08 5.214-5.06.009z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#faa00d" r="16"/><path d="M25.992 14.471l-9.469 11.01-.425.519L6.007 14.582l.032-.013L6 14.563l3.922-6.557.002.002L9.922 8h12.254l-.002.007L26 14.47zm-13.136.459l-2.17 3.674 5.352 6.112 5.363-6.162-2.122-3.635zm-2.778 2.98l1.76-2.979-4.362.007zm9.723-3.846l4.954-.008-3.11-5.208-4.882.01zm4.771.846l-4.273.007 1.713 2.935zm-5.791-.844L16.09 9.454l-2.73 4.62zm-8.399-5.194l-3.1 5.213 5.06-.009 3.08-5.214z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xas);


/***/ }),

/***/ "aRPK":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xtz.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xtz = {
  symbol: 'xtz',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.19-6c.993 0 1.917-.206 2.771-.619a4.037 4.037 0 0 0 1.91-1.878 6.02 6.02 0 0 0 .629-2.726 7.16 7.16 0 0 0-.175-1.466c-.108-.55-.353-1.123-.734-1.719-.38-.603-.923-1.077-1.63-1.42-.699-.352-1.328-.527-1.887-.527a3.51 3.51 0 0 0-.978.229l5.171-5.086-.839-.825-8.431.023V6.412L13.182 6h-2.166v.595l.745.734v2.657H8.5v1.169h3.26v6.277c0 .916.265 1.642.793 2.176.528.535 1.483.802 2.865.802.559 0 1.071-.153 1.537-.458.466-.306.83-.748 1.095-1.329a2.92 2.92 0 0 0 .058-.32.619.619 0 0 0-.163-.425c-.117-.083-.217-.125-.303-.125a.236.236 0 0 0-.151.057.342.342 0 0 0-.117.149 3.76 3.76 0 0 1-.885.893c-.341.245-.699.367-1.071.367-.482 0-.839-.168-1.072-.504-.233-.336-.35-.764-.35-1.283v-6.277h6.383l-4.612 6.048v.504l1.025-.504c.56-.306 1.025-.458 1.397-.458a2.99 2.99 0 0 1 1.584.446c.49.298.858.756 1.107 1.375.256.61.384 1.348.384 2.21 0 .795-.117 1.505-.35 2.131-.232.626-.593 1.1-1.082 1.42a2.93 2.93 0 0 1-1.643.482c-.434 0-.87-.061-1.304-.184-.435-.114-.753-.309-.955-.584.233-.069.435-.213.606-.435.17-.222.256-.508.256-.86 0-.29-.058-.534-.175-.732a1.27 1.27 0 0 0-.477-.47 1.497 1.497 0 0 0-.746-.172c-.295 0-.543.058-.745.172a1.27 1.27 0 0 0-.477.47c-.117.198-.175.443-.175.733 0 .794.334 1.535 1.001 2.222.668.687 1.732 1.031 3.191 1.031z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#A6E000"/><path fill="#FFF" d="M18.19 26c-1.46 0-2.524-.344-3.192-1.03-.667-.688-1.001-1.429-1.001-2.223 0-.29.058-.535.175-.733a1.27 1.27 0 0 1 .477-.47c.202-.114.45-.172.745-.172s.544.058.746.172c.202.115.36.271.477.47.117.198.175.443.175.733 0 .351-.085.637-.256.859a1.184 1.184 0 0 1-.606.435c.202.275.52.47.955.584.435.123.87.184 1.304.184a2.93 2.93 0 0 0 1.643-.481c.489-.321.85-.795 1.082-1.42.233-.627.35-1.337.35-2.131 0-.863-.128-1.6-.384-2.211-.249-.619-.618-1.077-1.107-1.375a2.99 2.99 0 0 0-1.584-.446c-.372 0-.838.152-1.397.458l-1.025.504v-.504l4.612-6.048h-6.382v6.277c0 .52.116.947.35 1.283.232.336.59.504 1.07.504.373 0 .73-.122 1.072-.367a3.76 3.76 0 0 0 .885-.893.342.342 0 0 1 .117-.15.236.236 0 0 1 .151-.056c.086 0 .186.042.303.125a.619.619 0 0 1 .163.424 2.92 2.92 0 0 1-.058.321c-.264.58-.63 1.023-1.095 1.329a2.748 2.748 0 0 1-1.537.458c-1.382 0-2.337-.267-2.865-.802-.528-.534-.792-1.26-.792-2.176v-6.277H8.5V9.986h3.26V7.33l-.744-.734V6h2.166l.815.412v3.574l8.431-.023.84.825-5.172 5.086a3.51 3.51 0 0 1 .978-.23c.56 0 1.188.176 1.887.528.707.343 1.25.817 1.63 1.42.381.596.626 1.169.734 1.719a7.16 7.16 0 0 1 .175 1.466 6.02 6.02 0 0 1-.629 2.726 4.037 4.037 0 0 1-1.91 1.878A6.291 6.291 0 0 1 18.19 26z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xtz);


/***/ }),

/***/ "aaFf":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bcio.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bcio = {
  symbol: 'bcio',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.94 7.436a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751zm4.05-2.43a.877.877 0 0 0 0 1.752.877.877 0 0 0 0-1.752zm0 9.719a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751zm4.049-2.43a.876.876 0 1 0 .002 1.753.876.876 0 0 0-.002-1.753zm4.05-2.43a.877.877 0 1 0 .001 1.754.877.877 0 0 0-.002-1.753zm-12.15 7.29a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751zM7.89 9.865a.876.876 0 1 0 .002 1.753.876.876 0 0 0-.002-1.752zm0 9.72a.876.876 0 1 0 .002 1.752.876.876 0 0 0-.002-1.753zm0-4.86a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751zm8.1-4.86a.877.877 0 1 0 0 1.754.877.877 0 0 0 0-1.753zm4.049-2.43a.877.877 0 1 0 .002 1.754.877.877 0 0 0-.002-1.753zm0 9.72a.876.876 0 1 0 .001 1.752.876.876 0 0 0-.001-1.752zm4.05-2.43a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751zm-4.05 7.289a.876.876 0 1 0 .001 1.753.876.876 0 0 0-.001-1.753zm4.05-2.43a.877.877 0 0 0 0 1.752.877.877 0 0 0 0-1.752zm-8.1 4.86a.877.877 0 0 0 0 1.751.877.877 0 0 0 .877-.875.877.877 0 0 0-.876-.876zm0-4.86a.877.877 0 1 0 .002 1.754.877.877 0 0 0-.001-1.754zm-4.05-7.289a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.75zm0 9.719a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#3F43AD"/><path d="M11.94 7.436a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751m4.05-2.43a.877.877 0 0 0 0 1.752.877.877 0 0 0 0-1.752m0 9.719a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751m4.049-2.43a.876.876 0 1 0 .002 1.753.876.876 0 0 0-.002-1.753m4.049-2.429a.877.877 0 1 0 .002 1.753.877.877 0 0 0-.002-1.753M11.94 17.155a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751M7.89 9.866a.876.876 0 1 0 .002 1.752.876.876 0 0 0-.002-1.752m0 9.718a.876.876 0 1 0 .002 1.753.876.876 0 0 0-.002-1.753m0-4.859a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751m8.1-4.859a.877.877 0 1 0 0 1.753.877.877 0 0 0 0-1.753m4.049-2.43a.877.877 0 1 0 .002 1.753.877.877 0 0 0-.002-1.753m0 9.719a.876.876 0 1 0 .001 1.752.876.876 0 0 0-.001-1.752m4.049-2.43a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751m-4.049 7.289a.876.876 0 1 0 .001 1.753.876.876 0 0 0-.001-1.753m4.049-2.43a.877.877 0 0 0 0 1.752.877.877 0 0 0 0-1.752m-8.098 4.86a.877.877 0 0 0 0 1.751.877.877 0 0 0 .876-.875.877.877 0 0 0-.876-.876m0-4.86a.877.877 0 1 0 .001 1.754.877.877 0 0 0-.001-1.754m-4.05-7.289a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.75m0 9.718a.877.877 0 0 0 0 1.751.877.877 0 0 0 0-1.751" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bcio);


/***/ }),

/***/ "ahZS":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lbc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lbc = {
  symbol: 'lbc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M24.176 17.184l-8.37 5.182-8.787-4.39v-2.58l9.284-5.806 8.315 4.056v.363l-8.813 5.476-6.749-3.346-.444.896 7.247 3.593 9.759-6.063v-1.544l-9.375-4.573L6.02 14.842v3.752l9.839 4.916 8.872-5.493-.215.862.97.242.621-2.485-2.485-.621-.242.97zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#006149" r="16"/><path d="M24.176 17.184l-.797-.199.242-.97 2.485.621-.62 2.485-.971-.242.215-.862-8.872 5.493-9.839-4.916v-3.752l10.224-6.394 9.375 4.573v1.544l-9.759 6.063-7.247-3.593.444-.896 6.749 3.346 8.813-5.476v-.363L16.303 9.59 7.02 15.396v2.58l8.787 4.39z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lbc);


/***/ }),

/***/ "aq4Q":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tomo.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tomo = {
  symbol: 'tomo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.525-17.536a.548.548 0 0 0 .048-1.094h-3.84v-.96a.634.634 0 0 0-1.22 0v.96h-1.027a.547.547 0 0 0 0 1.094h1.028v3.34a3.187 3.187 0 0 0 3.177 3.169 3.11 3.11 0 0 0 1.92-.701l.23-.192a.643.643 0 1 0-.844-.96l-.173.144a1.843 1.843 0 0 1-1.997.23 1.92 1.92 0 0 1-1.094-1.728v-3.302h3.792zm6.24 3.725a.48.48 0 0 0-.375-.567h-.24a.47.47 0 0 0-.46.365 7.488 7.488 0 1 1-14.132-4.733 6.845 6.845 0 0 1 3.706-3.705 7.546 7.546 0 0 1 9.331 2.669.48.48 0 0 0 .653.134l.086-.058a.518.518 0 0 0 .164-.71A8.64 8.64 0 0 0 13.37 8.33a8.102 8.102 0 0 0-4.992 4.924 8.582 8.582 0 1 0 16.387 4.935zM16.874 4.95h-.96A11.443 11.443 0 0 0 5.41 19.59a.547.547 0 0 0 .682.365h.077a.547.547 0 0 0 .288-.643 10.349 10.349 0 1 1 7.68 7.2.518.518 0 0 0-.519.192.557.557 0 0 0 .317.893A11.434 11.434 0 1 0 16.874 4.95z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#1A1F36"/><path d="M18.525 14.464a.548.548 0 0 0 .048-1.094h-3.84v-.96a.634.634 0 0 0-1.22 0v.96h-1.027a.547.547 0 1 0 0 1.094h1.028v3.34a3.187 3.187 0 0 0 3.177 3.169 3.11 3.11 0 0 0 1.92-.701l.23-.192a.643.643 0 1 0-.844-.96l-.173.144a1.843 1.843 0 0 1-1.997.23 1.92 1.92 0 0 1-1.094-1.728v-3.302h3.792zm6.24 3.725a.48.48 0 0 0-.375-.567h-.24a.47.47 0 0 0-.46.365 7.488 7.488 0 1 1-14.132-4.733 6.845 6.845 0 0 1 3.706-3.705 7.546 7.546 0 0 1 9.331 2.669.48.48 0 0 0 .653.134l.086-.058a.518.518 0 0 0 .164-.71A8.64 8.64 0 0 0 13.37 8.33a8.102 8.102 0 0 0-4.992 4.924 8.582 8.582 0 1 0 16.387 4.935zM16.874 4.95h-.96A11.443 11.443 0 0 0 5.41 19.59a.547.547 0 0 0 .682.365h.077a.547.547 0 0 0 .288-.643 10.349 10.349 0 1 1 7.68 7.2.518.518 0 0 0-.519.192.557.557 0 0 0 .317.893A11.434 11.434 0 1 0 16.874 4.95z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tomo);


/***/ }),

/***/ "b4cL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ary.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ary = {
  symbol: 'ary',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.917-10.89l-7.589 2.733a.806.806 0 0 1-.595 0L8.12 21.11a.912.912 0 0 1-.595-.86v1.1a.9.9 0 0 0 .595.86l7.588 2.733c.199.076.41.076.596 0l7.588-2.732a.912.912 0 0 0 .595-.86v-1.1a.848.848 0 0 1-.57.86zm0-1.948l-7.589 2.733a.806.806 0 0 1-.595 0L8.12 19.162a.929.929 0 0 1-.595-.872v1.113a.9.9 0 0 0 .595.86l7.588 2.732c.199.076.41.076.596 0l7.588-2.732a.912.912 0 0 0 .595-.86v-1.1a.868.868 0 0 1-.57.86zm0-1.96l-7.589 2.732a.806.806 0 0 1-.595 0L8.12 17.202a.912.912 0 0 1-.595-.86v1.1a.9.9 0 0 0 .595.86l7.6 2.745c.2.076.41.076.596 0l7.588-2.732a.912.912 0 0 0 .596-.86v-1.1a.88.88 0 0 1-.583.847zM7.5 10.662v4.832a.9.9 0 0 0 .595.86l7.589 2.732a.805.805 0 0 0 .595 0l7.613-2.732a.912.912 0 0 0 .595-.86v-4.832a.9.9 0 0 0-.595-.86l-7.6-2.745a.806.806 0 0 0-.596 0l-7.6 2.745a.9.9 0 0 0-.596.86z"  />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#343434" r="16"/><path d="M23.917 21.11a.848.848 0 0 0 .57-.86v1.1a.91.91 0 0 1-.595.86l-7.588 2.733a.806.806 0 0 1-.596 0L8.12 22.211a.9.9 0 0 1-.595-.86v-1.1c0 .379.235.733.595.86l7.613 2.732a.806.806 0 0 0 .595 0zm0-1.948a.867.867 0 0 0 .57-.86v1.1a.91.91 0 0 1-.595.86l-7.588 2.733a.806.806 0 0 1-.596 0L8.12 20.263a.9.9 0 0 1-.595-.86V18.29c0 .392.235.733.595.872l7.613 2.733a.806.806 0 0 0 .595 0zm0-1.96a.88.88 0 0 0 .583-.848v1.1a.91.91 0 0 1-.596.86l-7.588 2.733a.806.806 0 0 1-.595 0L8.12 18.302a.9.9 0 0 1-.595-.86v-1.1c0 .379.235.733.595.86l7.613 2.732a.806.806 0 0 0 .595 0zM7.5 10.662a.9.9 0 0 1 .595-.86l7.601-2.745a.806.806 0 0 1 .595 0l7.601 2.745a.9.9 0 0 1 .595.86v4.832a.91.91 0 0 1-.595.86l-7.613 2.732a.806.806 0 0 1-.595 0l-7.589-2.732a.9.9 0 0 1-.595-.86z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ary);


/***/ }),

/***/ "bRBE":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/iotx.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Iotx = {
  symbol: 'iotx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M13.577 22.012l-3.717-2.14v5.456l1.89-1.091 3.72 2.14V20.92l-1.893 1.092zm-3.35-9.704l.024.014v5.437l4.73-2.725-1.942-1.122.012-.006 2.726 1.572V10.03l.742.427V5l-4.738 2.732 3.988 2.293-2.008 1.155-2.722-1.573v3.15-5.438L6.3 10.044l3.92 2.261-4.73 2.729 4.737 2.725v-5.45zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.519-27v5.457l4.738-2.725L16.519 5zm4.738 2.732v5.457l4.737-2.732-4.737-2.725zm-4.738 2.725v5.457l4.738-2.725-4.738-2.732zm4.738 2.732v5.457l4.737-2.732-4.737-2.725zm-4.738 2.725v5.457l4.738-2.725-4.738-2.732zm4.738 2.732v5.457l4.737-2.732-4.737-2.725zM4.273 10.273v5.457l4.738-2.732-4.738-2.725zm2.465 5.48v5.457l4.737-2.732-4.737-2.725zm9.743 6.468v5.457l4.73-2.733-4.73-2.724zm.038-6.307l-4.73 2.732 4.73 2.725v-5.457zm-9.781 1.27L2 19.91l4.738 2.733v-5.457zm19.256-6.727l-4.737 2.732 4.737 2.725v-5.457zm-4.737 2.732l-4.738 2.725 4.738 2.732V13.19zm4.737 2.725l-4.737 2.732 4.737 2.725v-5.457zm-4.737 2.732l-4.738 2.725 4.738 2.732v-5.457zm0-10.914l-4.738 2.725 4.738 2.732V7.732z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00D4D5"/><g fill="#FFF"><path d="M16.519 5v5.457l4.738-2.725z"/><path opacity=".9" d="M21.257 7.732v5.457l4.737-2.732z"/><path opacity=".8" d="M16.519 10.457v5.457l4.738-2.725zm4.738 2.733v5.456l4.737-2.732z"/><path opacity=".8" d="M16.519 15.914v5.457l4.738-2.725z"/><path d="M21.257 18.646v5.457l4.737-2.732z"/><path opacity=".4" d="M4.273 10.273v5.457l4.738-2.732z"/><path opacity=".2" d="M10.25 12.302v5.457l4.73-2.725z"/><path opacity=".3" d="M6.738 15.753v5.457l4.737-2.732z"/><path opacity=".9" d="M9.86 19.871v5.457l4.73-2.732z"/><path opacity=".7" d="M16.48 22.22v5.458l4.73-2.733z"/><path opacity=".9" d="M11.039 9.607v5.458l4.73-2.725z"/><path opacity=".8" d="M16.519 5v5.457l-4.738-2.725z"/><path opacity=".6" d="M11.039 7.32v5.456L6.3 10.044z"/><path opacity=".6" d="M15.777 10.02v5.458l-4.738-2.733z"/><path opacity=".95" d="M10.228 12.302v5.457L5.49 15.034z"/><path opacity=".6" d="M16.519 15.914v5.457l-4.73-2.725z"/><path opacity=".55" d="M6.738 17.185v5.457L2 19.909z"/><path d="M25.994 10.457v5.457l-4.737-2.725z"/><path opacity=".95" d="M21.257 13.19v5.456l-4.738-2.732z"/><path opacity=".9" d="M25.994 15.914v5.457l-4.737-2.725z"/><path opacity=".7" d="M21.257 18.646v5.457l-4.738-2.732z"/><path opacity=".4" d="M15.47 20.92v5.457l-4.737-2.725z"/><path d="M21.257 7.732v5.457l-4.738-2.732z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Iotx);


/***/ }),

/***/ "bRkU":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ftc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ftc = {
  symbol: 'ftc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.603-26c-5.83 3.022-8.05 5.565-8.05 5.565l-.345 2.405c-.346.411-.627-.068-.627-.068l-.208-1.237-1.663 1.58c0 3.02-.627 4.053-.627 4.053-.276.41-.552.068-.552.068l-.138-3.158-1.042.894.07 5.018c-.973-.206-1.18-2.612-1.18-2.612-.766.685-.622 3.159-.622 3.159l-1.732-2.2 1.041 2.542L6.5 20.704l1.876 1.858c-.973.895-.139 1.58-.139 1.58a.624.624 0 0 1 .346-.827c.834-.41.696.758.696.758L7.892 25.72c-.207.342.138.273.138.273l1.663-1.784c.973 1.237 2.152.963 2.152.963-1.456-.616-1.456-2.064-1.456-2.064 1.249 1.996 3.332 1.306 3.332 1.306-2.36-.41-2.428-1.858-2.428-1.858 5.201 1.032 6.52-.41 6.52-.41l-6.175-.275c1.456-1.51 5.202-.895 5.202-.895l3.262-4.259 4.065-4.77a5.53 5.53 0 0 0 .914-1.505C26.25 7.463 24.603 6 24.603 6zm-11.1 13.95s5.962-8.454 8.804-10.444c.006 0-3.05 5.154-8.804 10.445z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#27323a" r="16"/><path d="M24.603 6s1.647 1.464.478 4.443a5.53 5.53 0 0 1-.914 1.506l-4.065 4.77-3.262 4.258s-3.746-.616-5.202.895l6.174.274s-1.318 1.443-6.52.41c0 0 .07 1.448 2.429 1.86 0 0-2.083.689-3.332-1.307 0 0 0 1.448 1.456 2.064 0 0-1.18.274-2.152-.963L8.03 25.994s-.345.069-.138-.273l1.387-1.648s.138-1.169-.696-.758c0 0-.553.205-.346.826 0 0-.834-.684.139-1.579L6.5 20.704l2.428 1.305-1.041-2.543 1.732 2.201s-.144-2.474.622-3.159c0 0 .207 2.406 1.18 2.612l-.07-5.018 1.042-.894.138 3.158s.276.342.552-.068c0 0 .627-1.032.627-4.054l1.663-1.58.208 1.238s.281.479.627.068l.345-2.405s2.22-2.543 8.05-5.565zm-11.1 13.95c5.754-5.29 8.81-10.444 8.804-10.444-2.842 1.99-8.804 10.445-8.804 10.445z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ftc);


/***/ }),

/***/ "bdue":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sphtx.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sphtx = {
  symbol: 'sphtx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 12.391h8.417v-.356H6zm0-1.035h8.417V11H6zm3.55 10.64h.338v-8.893H9.55zm.98 0h.337v-8.893h-.337zm15.232-.728l.238-.252-3.798-4.012-.238.251zM16.519 11l-.238.252 3.798 4.012.238-.251zm8.55 11l.238-.252-3.798-4.013-.238.252zm-9.242-10.268l-.239.252 3.798 4.012.239-.252zm5.421 4.768l-.454.48-.238.252-4.275 4.516.238.252 4.275-4.516.239-.252.454-.48.238-.252L26 11.984l-.238-.252-4.275 4.516zm-.454-.984l-.238.252-.455.48-.238.252-4.275 4.516.239.252 4.274-4.516.239-.252.454-.48.238-.252 4.275-4.516L25.07 11z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#00b098" r="16"/><path d="M6 12.391v-.356h8.417v.356zm0-1.035V11h8.417v.356zm3.55 10.64v-8.893h.338v8.893zm.98 0v-8.893h.337v8.893zm15.232-.728l-3.798-4.013.238-.251L26 21.016zM16.519 11l3.798 4.013-.238.251-3.798-4.012zm8.55 11l-3.798-4.013.238-.252 3.798 4.013zm-9.242-10.268l3.798 4.012-.239.252-3.798-4.012zm5.421 4.768l.239-.252 4.275-4.516.238.252-4.275 4.516-.238.252-.454.48-.239.252L16.52 22l-.238-.252 4.275-4.516.238-.252zm-.454-.984L25.07 11l.238.252-4.275 4.516-.238.252-.454.48-.239.252-4.274 4.516-.239-.252 4.275-4.516.238-.252.455-.48z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sphtx);


/***/ }),

/***/ "beFY":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eth.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eth = {
  symbol: 'eth',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.994-15.781L16.498 4 9 16.22l7.498 4.353 7.496-4.354zM24 17.616l-7.502 4.351L9 17.617l7.498 10.378L24 17.616z"/><g fill-rule="nonzero"><path fill-opacity=".298" d="M16.498 4v8.87l7.497 3.35zm0 17.968v6.027L24 17.616z"/><path fill-opacity=".801" d="M16.498 20.573l7.497-4.353-7.497-3.348z"/><path fill-opacity=".298" d="M9 16.22l7.498 4.353v-7.701z"/></g></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#627EEA"/><g fill="#FFF" fill-rule="nonzero"><path fill-opacity=".602" d="M16.498 4v8.87l7.497 3.35z"/><path d="M16.498 4L9 16.22l7.498-3.35z"/><path fill-opacity=".602" d="M16.498 21.968v6.027L24 17.616z"/><path d="M16.498 27.995v-6.028L9 17.616z"/><path fill-opacity=".2" d="M16.498 20.573l7.497-4.353-7.497-3.348z"/><path fill-opacity=".602" d="M9 16.22l7.498 4.353v-7.701z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eth);


/***/ }),

/***/ "biC6":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/colx.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Colx = {
  symbol: 'colx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.678-18.717l-1.688-1.688a2.715 2.715 0 0 0-1.936-.8h-.26v-.27c0-.473-.112-.923-.348-1.328a2.374 2.374 0 0 0-.473-.63l-1.688-1.689a2.715 2.715 0 0 0-1.937-.8H9.57c-.732 0-1.418.282-1.936.8L5.946 8.566a2.67 2.67 0 0 0-.8 1.925l-.045 7.295c-.01.731.282 1.44.8 1.958l1.688 1.689a2.714 2.714 0 0 0 1.936.799h.304v.27c0 .473.113.923.349 1.328.124.237.281.45.473.63l1.688 1.69a2.719 2.719 0 0 0 1.936.798h7.79c.732 0 1.418-.281 1.936-.799l1.689-1.688a2.72 2.72 0 0 0 .799-1.936v-7.317a2.727 2.727 0 0 0-.81-1.925zM9.525 19.755a.272.272 0 0 1-.191-.078l-.844-.845-.845-.844a.4.4 0 0 1-.079-.146v-7.339c0-.08.034-.147.08-.192l1.688-1.688c.022-.023.045-.034.067-.045a.3.3 0 0 1 .135-.034h7.79c.045 0 .079.011.124.034.034.011.056.034.079.056l1.688 1.689a.193.193 0 0 1 .056.078c.012.012.012.023.012.034 0 .011.01.023.01.034 0 .011.012.045.012.067v.36c0 .158-.124.27-.27.27h-1.35a.272.272 0 0 1-.192-.078l-.766-.765h-6.596l-.281.28-.383.384v6.337l.664.664h6.585l.766-.776.01-.012c.023-.011.046-.034.068-.045.034-.022.08-.022.113-.022h1.35c.09 0 .17.045.226.112a.269.269 0 0 1 .056.158v.383a.272.272 0 0 1-.079.191l-.844.844-.844.844c-.011.012-.034.023-.045.034 0 0-.011.011-.023.011-.011.012-.022.012-.034.012-.01 0-.01 0-.022.011-.011 0-.023.011-.034.011H9.525v.011zm14.499 2.747a.272.272 0 0 1-.08.191l-1.688 1.689a.239.239 0 0 1-.067.045.3.3 0 0 1-.135.034h-7.79a.257.257 0 0 1-.124-.034.202.202 0 0 1-.078-.056l-1.689-1.689c-.022-.022-.045-.045-.056-.079-.012-.01-.012-.022-.012-.033 0-.012-.01-.023-.01-.034 0-.011-.012-.045-.012-.068v-.36c0-.157.124-.27.27-.27h1.35c.08 0 .147.034.192.079l.766.765h6.585l.281-.281.383-.383v-6.337l-.664-.665h-6.574l-.765.777-.012.011c-.022.012-.045.034-.067.045-.034.023-.079.023-.113.023h-1.35a.294.294 0 0 1-.226-.113.269.269 0 0 1-.056-.157v-.383a.27.27 0 0 1 .079-.191l.844-.844.844-.845c.012-.011.034-.022.045-.034 0 0 .012-.01.023-.01.011-.012.022-.012.034-.012.01 0 .01 0 .022-.011.011 0 .023-.012.034-.012h7.846c.078 0 .146.034.191.08l.844.844.845.844a.155.155 0 0 1 .033.045.373.373 0 0 1 .045.101v.056c.012-.022.012 7.272.012 7.272z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#77C3B0"/><path d="M25.678 13.283l-1.688-1.688a2.715 2.715 0 0 0-1.936-.8h-.26v-.27c0-.473-.112-.923-.348-1.328a2.374 2.374 0 0 0-.473-.63l-1.688-1.689a2.715 2.715 0 0 0-1.937-.8H9.57c-.732 0-1.418.282-1.936.8L5.946 8.566a2.67 2.67 0 0 0-.8 1.925l-.045 7.295c-.01.731.282 1.44.8 1.958l1.688 1.689a2.714 2.714 0 0 0 1.936.799h.304v.27c0 .473.113.923.349 1.328.124.237.281.45.473.63l1.688 1.69a2.719 2.719 0 0 0 1.936.798h7.79c.732 0 1.418-.281 1.936-.799l1.689-1.688a2.72 2.72 0 0 0 .799-1.936v-7.317a2.727 2.727 0 0 0-.81-1.925zM9.525 19.755a.272.272 0 0 1-.191-.078l-.844-.845-.845-.844a.4.4 0 0 1-.079-.146v-7.339c0-.08.034-.147.08-.192l1.688-1.688c.022-.023.045-.034.067-.045a.3.3 0 0 1 .135-.034h7.79c.045 0 .079.011.124.034.034.011.056.034.079.056l1.688 1.689a.202.202 0 0 1 .056.078c.012.012.012.023.012.034 0 .011.01.023.01.034 0 .011.012.045.012.067v.36c0 .158-.124.27-.27.27h-1.35a.272.272 0 0 1-.192-.078l-.766-.765h-6.596l-.281.28-.383.384v6.337l.664.664h6.585l.766-.776.01-.012c.023-.011.046-.034.068-.045.034-.022.08-.022.113-.022h1.35c.09 0 .17.045.226.112a.269.269 0 0 1 .056.158v.383a.272.272 0 0 1-.079.191l-.844.844-.844.844c-.011.012-.034.023-.045.034 0 0-.011.011-.023.011-.011.012-.022.012-.034.012-.01 0-.01 0-.022.011-.011 0-.023.011-.034.011H9.525v.011zm14.499 2.747a.272.272 0 0 1-.08.191l-1.688 1.689a.239.239 0 0 1-.067.045.3.3 0 0 1-.135.034h-7.79a.257.257 0 0 1-.124-.034.202.202 0 0 1-.078-.056l-1.689-1.689c-.022-.022-.045-.045-.056-.079-.012-.01-.012-.022-.012-.033 0-.012-.01-.023-.01-.034 0-.011-.012-.045-.012-.068v-.36c0-.157.124-.27.27-.27h1.35c.08 0 .147.034.192.079l.766.765h6.585l.281-.281.383-.383v-6.337l-.664-.665h-6.574l-.765.777-.012.011c-.022.012-.045.034-.067.045-.034.023-.079.023-.113.023h-1.35a.294.294 0 0 1-.226-.113.269.269 0 0 1-.056-.157v-.383a.27.27 0 0 1 .079-.191l.844-.844.844-.845c.012-.011.034-.022.045-.034 0 0 .012-.01.023-.01.011-.012.022-.012.034-.012.01 0 .01 0 .022-.011.011 0 .023-.012.034-.012h7.846c.078 0 .146.034.191.08l.844.844.845.844c.01.011.022.022.033.045a.373.373 0 0 1 .045.101v.056c.012-.022.012 7.272.012 7.272z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Colx);


/***/ }),

/***/ "bk9O":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/game.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Game = {
  symbol: 'game',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.131-19.315v2.488h11.085v-2.488zm11.085 4.144H12.869v2.488h8.233v2.335c-1.104.952-3.266 1.444-3.266 1.444-6.347 1.106-8.37-4.33-8.37-4.33-1.84-6.265 2.62-8.753 2.62-8.753 5.474-3.317 9.568.921 9.568.921l1.932-1.888c-3.22-3.686-8.187-2.995-8.187-2.995-8.05.83-9.108 7.601-9.108 7.601-1.334 5.436 2.346 9.168 2.346 9.168 6.716 6.817 15.363.552 15.363.552V16.83z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2d475b" r="16"/><path d="M12.869 12.685h11.085v2.488H12.869zm11.085 4.144H24v6.543s-8.647 6.265-15.363-.552c0 0-3.68-3.732-2.346-9.168 0 0 1.058-6.771 9.108-7.6 0 0 4.967-.692 8.187 2.994l-1.932 1.888s-4.094-4.238-9.567-.92c0 0-4.462 2.487-2.622 8.752 0 0 2.024 5.436 8.371 4.33 0 0 2.162-.492 3.266-1.444v-2.335H12.87v-2.488z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Game);


/***/ }),

/***/ "blBR":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xrp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xrp = {
  symbol: 'xrp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.07-24l-4.574 4.523a3.556 3.556 0 0 1-4.996 0L8.93 8H6.035l6.02 5.957a5.621 5.621 0 0 0 7.89 0L25.961 8h-2.89zM8.895 24.563L13.504 20a3.556 3.556 0 0 1 4.996 0l4.605 4.563H26l-6.055-5.993a5.621 5.621 0 0 0-7.89 0L6 24.562h2.895z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#23292F"/><path d="M23.07 8h2.89l-6.015 5.957a5.621 5.621 0 0 1-7.89 0L6.035 8H8.93l4.57 4.523a3.556 3.556 0 0 0 4.996 0L23.07 8zM8.895 24.563H6l6.055-5.993a5.621 5.621 0 0 1 7.89 0L26 24.562h-2.895L18.5 20a3.556 3.556 0 0 0-4.996 0l-4.61 4.563z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xrp);


/***/ }),

/***/ "bxRk":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xmy.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xmy = {
  symbol: 'xmy',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm5.05-11h4.567c.764 0 1.383-.642 1.383-1.433s-.619-1.433-1.39-1.433l-2.637.018c.68-2.182 1.022-3.617 1.022-4.304 0-1.818-1.263-2.848-2.765-2.848-1.623 0-2.766.848-3.427 1.576C17.323 11.485 16.24 11 15.4 11s-1.803.242-2.525 1.152c-.16-.687-.6-1.03-1.322-1.03h-5.14a1.425 1.425 0 0 0 .031 2.848h3.065l-1.382 5.757c.04.849.44 1.273 1.202 1.273.841 0 1.382-.485 1.623-1.455.44-1.777.781-3.11 1.022-4 .36-1.333 1.142-1.939 1.983-1.939.842 0 1.202.606 1.202 1.091 0 .323-.112.84-.337 1.55-.577 2.127-.865 3.288-.865 3.48 0 .485.18 1.273 1.263 1.273.72 0 1.222-.364 1.502-1.09.722-2.789 1.182-4.506 1.383-5.152.3-.97 1.29-1.152 1.743-1.152.781 0 1.202.546 1.202 1.091 0 .283-.071.603-.214.96-.699 2.306-1.048 3.683-1.048 4.13 0 .91.661 1.213 1.262 1.213z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ec1076" fill-rule="nonzero" r="16"/><path d="M21.05 21c-.602 0-1.263-.303-1.263-1.212 0-.448.35-1.825 1.048-4.132.143-.356.214-.676.214-.959 0-.545-.42-1.09-1.202-1.09-.454 0-1.443.18-1.743 1.15-.2.647-.661 2.364-1.383 5.152-.28.727-.781 1.091-1.502 1.091-1.082 0-1.263-.788-1.263-1.273 0-.192.288-1.353.865-3.48.225-.71.337-1.227.337-1.55 0-.485-.36-1.09-1.202-1.09-.841 0-1.623.605-1.983 1.938-.24.89-.581 2.223-1.022 4-.24.97-.782 1.455-1.623 1.455-.762 0-1.162-.424-1.202-1.273l1.382-5.757H6.443a1.425 1.425 0 1 1-.03-2.849h5.139c.721 0 1.162.344 1.322 1.03C13.596 11.243 14.557 11 15.4 11s1.923.485 2.404 1.576c.66-.728 1.803-1.576 3.426-1.576 1.502 0 2.765 1.03 2.765 2.848 0 .687-.341 2.122-1.022 4.304l2.637-.018c.771 0 1.39.642 1.39 1.433S26.381 21 25.617 21z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xmy);


/***/ }),

/***/ "c6E8":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/usdt.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Usdt = {
  symbol: 'usdt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.922-18.207v-2.366h5.414V7.819H8.595v3.608h5.414v2.365c-4.4.202-7.709 1.074-7.709 2.118 0 1.044 3.309 1.915 7.709 2.118v7.582h3.913v-7.584c4.393-.202 7.694-1.073 7.694-2.116 0-1.043-3.301-1.914-7.694-2.117zm0 3.59v-.002c-.11.008-.677.042-1.942.042-1.01 0-1.721-.03-1.971-.042v.003c-3.888-.171-6.79-.848-6.79-1.658 0-.809 2.902-1.486 6.79-1.66v2.644c.254.018.982.061 1.988.061 1.207 0 1.812-.05 1.925-.06v-2.643c3.88.173 6.775.85 6.775 1.658 0 .81-2.895 1.485-6.775 1.657z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#26A17B"/><path fill="#FFF" d="M17.922 17.383v-.002c-.11.008-.677.042-1.942.042-1.01 0-1.721-.03-1.971-.042v.003c-3.888-.171-6.79-.848-6.79-1.658 0-.809 2.902-1.486 6.79-1.66v2.644c.254.018.982.061 1.988.061 1.207 0 1.812-.05 1.925-.06v-2.643c3.88.173 6.775.85 6.775 1.658 0 .81-2.895 1.485-6.775 1.657m0-3.59v-2.366h5.414V7.819H8.595v3.608h5.414v2.365c-4.4.202-7.709 1.074-7.709 2.118 0 1.044 3.309 1.915 7.709 2.118v7.582h3.913v-7.584c4.393-.202 7.694-1.073 7.694-2.116 0-1.043-3.301-1.914-7.694-2.117"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Usdt);


/***/ }),

/***/ "cBNS":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/data.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Data = {
  symbol: 'data',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.14-22.086l1.607-1.594c.38-.376.301-1.064-.174-1.535-.475-.472-1.17-.549-1.549-.172l-3.016 2.99-.103.103-2.628 2.605a4.56 4.56 0 0 0-5.867.45 4.464 4.464 0 0 0-.454 5.817l-2.006 1.99a7.844 7.844 0 0 1-1.189-2.293c-.673-2.038-.492-4.27.6-6.11 1.703-2.87 4.75-4.118 7.638-3.752a1.07 1.07 0 0 0 1.216-.986 1.307 1.307 0 0 0-1.174-1.374c-2.901-.297-5.9.65-8.115 2.846-3.67 3.638-3.885 9.409-.66 13.338l-1.84 1.825c-.363.36-.273 1.035.203 1.506.475.471 1.155.562 1.518.202l1.981-1.964h.001l1.432-1.42.003-.004 2.322-2.302a4.558 4.558 0 0 0 4.92-.976 4.463 4.463 0 0 0 .985-4.879l2.634-2.611c1.931 2.908 1.548 6.934-1.11 9.568a7.886 7.886 0 0 1-6.13 2.279.978.978 0 0 0-1.03.888l-.028.32a1.038 1.038 0 0 0 .991 1.13 10.306 10.306 0 0 0 7.832-2.996c3.597-3.567 4.013-9.061 1.19-12.89zm-7.001 7.535a2.18 2.18 0 0 1-3.06 0 2.135 2.135 0 0 1 0-3.033 2.179 2.179 0 0 1 3.06 0 2.135 2.135 0 0 1 0 3.033z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#E9570F"/><path fill="#FFF" d="M24.14 9.914l1.607-1.594c.38-.376.301-1.064-.174-1.535-.475-.472-1.17-.549-1.549-.172l-3.016 2.99-.103.103-2.628 2.605a4.56 4.56 0 0 0-5.867.45 4.464 4.464 0 0 0-.454 5.817l-2.006 1.99a7.844 7.844 0 0 1-1.189-2.293c-.673-2.038-.492-4.27.6-6.11 1.703-2.87 4.75-4.118 7.638-3.752a1.07 1.07 0 0 0 1.216-.986 1.307 1.307 0 0 0-1.174-1.374c-2.901-.297-5.9.65-8.115 2.846-3.67 3.638-3.885 9.409-.66 13.338l-1.84 1.825c-.363.36-.273 1.035.203 1.506.475.471 1.155.562 1.518.202l1.981-1.964h.001l1.432-1.42.003-.004 2.322-2.302a4.558 4.558 0 0 0 4.92-.976 4.463 4.463 0 0 0 .985-4.879l2.634-2.611c1.931 2.908 1.548 6.934-1.11 9.568a7.886 7.886 0 0 1-6.13 2.279.978.978 0 0 0-1.03.888l-.028.32a1.038 1.038 0 0 0 .991 1.13 10.306 10.306 0 0 0 7.832-2.996c3.597-3.567 4.013-9.061 1.19-12.89m-7.001 7.536a2.18 2.18 0 0 1-3.06 0 2.135 2.135 0 0 1 0-3.033 2.179 2.179 0 0 1 3.06 0 2.135 2.135 0 0 1 0 3.033"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Data);


/***/ }),

/***/ "cCPw":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vet.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vet = {
  symbol: 'vet',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.262-7.266c.502 1.021 1.952 1.021 2.453 0l7.78-15.849a.258.258 0 0 0-.233-.376h-.331a.382.382 0 0 0-.34.206l-5.605 11.372c-.5 1.02-1.951 1.02-2.452 0L10.388 8.706a.382.382 0 0 0-.34-.206H7.38a.38.38 0 0 0-.34.546l7.698 15.688z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#15BDFF"/><path fill="#FFF" fill-rule="nonzero" d="M14.738 24.734L7.04 9.046a.38.38 0 0 1 .34-.546h2.668c.143 0 .277.08.34.206l5.622 11.381c.5 1.02 1.951 1.02 2.452 0l5.604-11.372a.382.382 0 0 1 .34-.206h.332c.197 0 .322.206.233.376l-7.78 15.85c-.501 1.02-1.951 1.02-2.453 0z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vet);


/***/ }),

/***/ "cIjQ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/salt.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Salt = {
  symbol: 'salt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.5-27L7 25h19L16.5 5zm0 5.445l5.804 12.214H10.696L16.5 10.445z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#1BEEF4"/><path fill="#FFF" d="M16.5 10.445l5.804 12.214H10.696L16.5 10.445zM16.5 5L7 25h19L16.5 5z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Salt);


/***/ }),

/***/ "ceYx":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ardr.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ardr = {
  symbol: 'ardr',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.117-14.81L12.5 23l5.152-3.498-1.769-2.312zM16 6L6 23h5.455l7.272-12.526L16 6zm0 9.842L21.455 23H26l-6.364-9.842L16 15.842z"  />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3C87C7"/><path fill="#FFF" d="M15.883 17.19l1.769 2.312L12.5 23l3.383-5.81zM16 6l2.727 4.474L11.455 23H6L16 6zm0 9.842l3.636-2.684L26 23h-4.545L16 15.842z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ardr);


/***/ }),

/***/ "ciP+":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/atom.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Atom = {
  symbol: 'atom',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.605-8.418c.421 1.813.994 2.927 1.625 2.927.995 0 1.846-2.776 2.186-6.693 3.56 1.67 6.39 2.324 6.89 1.461.499-.861-1.477-2.99-4.695-5.248 3.23-2.245 5.213-4.365 4.718-5.23-.32-.557-1.614-.486-3.45.078a.711.711 0 00-.614-.361.728.728 0 00-.712.82c-.67.254-1.386.558-2.135.905-.34-3.926-1.191-6.71-2.188-6.71-.996 0-1.846 2.776-2.186 6.692-3.56-1.669-6.391-2.323-6.89-1.46-.312.54.344 1.576 1.669 2.828a.766.766 0 00-.022.183c0 .409.32.74.715.74a.692.692 0 00.284-.06 31.631 31.631 0 002.049 1.557c-3.23 2.245-5.213 4.365-4.717 5.23.496.864 3.335.217 6.91-1.442.076.879.178 1.701.3 2.448a.747.747 0 00-.309.61c0 .357.246.656.572.725zm.464-.063a.743.743 0 00.396-.663.73.73 0 00-.674-.739c-.124-.8-.212-1.671-.273-2.543a43.428 43.428 0 001.705-.868c.592.32 1.173.619 1.738.893a42.963 42.963 0 01-.377 2.912c-.497 2.814-1.192 3.406-1.192 3.406-.148.198-.297.05-.297.05-.596-.692-.894-1.975-.894-1.975a9.193 9.193 0 01-.132-.473zm-4.917-9.405a.758.758 0 00.08-.34c0-.41-.32-.74-.716-.74a.697.697 0 00-.426.145c-1.386-1.33-1.505-1.981-1.505-1.981v-.002c-.097-.228.106-.283.106-.283.897-.17 2.157.217 2.157.217 1.185.27 2.69.904 4.154 1.618a43.36 43.36 0 00-.098 1.924c-.571.35-1.119.702-1.637 1.053a45.36 45.36 0 01-2.115-1.61zM20.56 11.79a.701.701 0 00.496.207c.356 0 .651-.27.706-.622 1.83-.574 2.572-.507 2.832-.436a.185.185 0 01.135.198c-.05.537-1 1.507-1 1.507a29.526 29.526 0 01-3.72 3.113 43.305 43.305 0 00-1.663-1.08 43.344 43.344 0 00-.097-1.935 40.542 40.542 0 012.31-.952zm-.574 4.524c3.981 2.888 4.625 4.191 4.726 4.578a.185.185 0 01-.103.215c-.49.225-1.805-.11-1.805-.11a29.616 29.616 0 01-4.558-1.661c.047-.631.08-1.29.1-1.967.573-.35 1.12-.704 1.64-1.055zm-6.303.518a38.497 38.497 0 01-1.191-.8c.4-.263.8-.518 1.19-.76a47.517 47.517 0 00.001 1.56zm.012.53c.02.667.052 1.314.098 1.936a42.6 42.6 0 01-2.73 1.127c-2.687.968-3.547.66-3.547.66-.246-.03-.19-.234-.19-.234.302-.86 1.266-1.758 1.266-1.758.827-.89 2.13-1.875 3.48-2.783.514.35 1.057.703 1.623 1.053zm4.664-2.12c.513.305.818.496.818.496.146.103.289.203.427.302-.477.328-.9.602-1.246.816a47.441 47.441 0 00.001-1.615zm-.563 3.884c-.521-.247-.97-.477-1.326-.667a47.51 47.51 0 001.426-.818c-.024.512-.06 1.012-.1 1.485zm-3.585-1.45a47.58 47.58 0 001.341.776c-.434.223-.864.432-1.276.624a53.88 53.88 0 01-.065-1.4zm-.016-.52a71.817 71.817 0 01-.023-2.184 71.966 71.966 0 011.832-1.076c.732.4 1.392.778 1.918 1.086.004.334 0 .52 0 .52a26.59 26.59 0 01-.006 1.622c-.317.19-.5.288-.5.288a26.69 26.69 0 01-1.401.799c-.323-.18-.5-.29-.5-.29a26 26 0 01-1.32-.766zm2.327-3.551c.52-.29.839-.458.839-.458.156-.073.31-.144.46-.212.047.571.073 1.071.087 1.474a47.467 47.467 0 00-1.386-.804zm-2.284-.636c.43.216.854.436 1.26.653a47.584 47.584 0 00-1.32.759c.007-.594.02-.953.02-.953l.04-.46zm.052-.529c.503-4.892 1.308-6.103 1.592-6.385a.185.185 0 01.238-.019c.44.313.81 1.617.81 1.617.467 1.736.716 3.427.848 4.792a44.56 44.56 0 00-1.75.888 43.16 43.16 0 00-1.738-.893zm1.706 4.789a1.234 1.234 0 100-2.468 1.234 1.234 0 000 2.468z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2E3148"/><g transform="translate(6 5)" fill="#FFF"><path d="M10.02.53c-1.295 0-2.345 4.697-2.345 10.49s1.05 10.49 2.345 10.49c1.294 0 2.344-4.697 2.344-10.49S11.314.53 10.02.53zm.162 20.387c-.148.198-.297.05-.297.05-.596-.692-.894-1.975-.894-1.975-1.043-3.357-.795-10.564-.795-10.564.49-5.721 1.382-7.073 1.685-7.373a.185.185 0 01.238-.019c.44.313.81 1.617.81 1.617 1.09 4.048.991 7.848.991 7.848.099 3.308-.546 7.01-.546 7.01-.497 2.814-1.192 3.406-1.192 3.406z"/><path d="M19.118 5.8c-.645-1.124-5.24.303-10.267 3.186-5.027 2.883-8.573 6.13-7.93 7.254.645 1.124 5.241-.303 10.268-3.186 5.027-2.883 8.574-6.131 7.93-7.254zM1.515 16.085c-.246-.03-.19-.234-.19-.234.302-.86 1.266-1.758 1.266-1.758 2.393-2.575 8.769-5.946 8.769-5.946 5.206-2.422 6.823-2.32 7.233-2.208a.185.185 0 01.135.198c-.05.537-1 1.507-1 1.507-2.966 2.961-6.312 4.768-6.312 4.768-2.82 1.732-6.353 3.013-6.353 3.013-2.688.968-3.548.66-3.548.66z"/><path d="M19.095 16.277c.65-1.12-2.887-4.383-7.898-7.288C6.187 6.085 1.593 4.641.944 5.763c-.65 1.123 2.888 4.383 7.9 7.288 5.013 2.904 9.602 4.348 10.251 3.226zM1.375 6.196c-.097-.228.106-.283.106-.283.897-.17 2.157.217 2.157.217 3.427.78 9.538 4.608 9.538 4.608 4.705 3.292 5.427 4.743 5.535 5.154a.185.185 0 01-.103.215c-.49.225-1.805-.11-1.805-.11-4.05-1.086-7.289-3.075-7.289-3.075-2.91-1.57-5.788-3.985-5.788-3.985-2.187-1.842-2.35-2.74-2.35-2.74l-.002-.001z"/><circle cx="9.995" cy="10.995" r="1.234"/><circle cx="15.055" cy="6.256" r="1"/><circle cx="3.306" cy="8.774" r="1"/><circle cx="8.539" cy="17.856" r="1"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Atom);


/***/ }),

/***/ "ciRL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tix.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tix = {
  symbol: 'tix',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 11.386v1.15c0 .214.173.387.386.387H11.7c.773 0 1.16.353 1.16 1.058 0 .513-.387.833-1.16.961H6.386A.386.386 0 0 0 6 15.33v1.15c0 .213.173.386.386.386H11.7c1.095.064 1.643.45 1.643 1.154s-.548 1.058-1.643 1.058H6.386a.386.386 0 0 0-.386.386v1.15c0 .214.173.387.386.387H11.7c1.546 0 3.865-.48 3.865-2.885 0-1.025-.45-1.794-1.352-2.307.644-.577.966-1.218.966-1.923 0-1.69-1.45-2.885-3.768-2.885H6.387a.387.387 0 0 0-.387.386zm10.435 0v1.15c0 .214.173.387.386.387h2.899c.213 0 .386.173.386.387v7.304c0 .213.173.386.387.386h1.449a.386.386 0 0 0 .387-.386v-9.228a.386.386 0 0 0-.387-.386h-5.12a.386.386 0 0 0-.387.386zM23.68 11a.386.386 0 0 0-.386.386v1.15c0 .214.173.387.386.387h1.933a.386.386 0 0 0 .386-.386v-1.15a.386.386 0 0 0-.386-.387z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ef494d" fill-rule="nonzero" r="16"/><path d="M6 11.386c0-.213.173-.386.387-.386h5.024c2.318 0 3.768 1.196 3.768 2.885 0 .705-.322 1.346-.966 1.923.901.513 1.352 1.282 1.352 2.307C15.565 20.52 13.246 21 11.7 21H6.386A.386.386 0 0 1 6 20.614v-1.15c0-.214.173-.387.386-.387H11.7c1.095 0 1.643-.353 1.643-1.058s-.548-1.09-1.643-1.154H6.386A.386.386 0 0 1 6 16.48v-1.15c0-.214.173-.387.386-.387H11.7c.773-.128 1.16-.448 1.16-.961 0-.705-.387-1.058-1.16-1.058H6.386A.386.386 0 0 1 6 12.537v-1.15zm10.435 0c0-.213.173-.386.386-.386h5.121c.213 0 .387.173.387.386v9.228a.386.386 0 0 1-.387.386h-1.45a.386.386 0 0 1-.386-.386V13.31a.386.386 0 0 0-.386-.387h-2.9a.386.386 0 0 1-.386-.386zM23.68 11h1.933c.213 0 .386.173.386.386v1.15a.386.386 0 0 1-.386.387H23.68a.386.386 0 0 1-.386-.386v-1.15c0-.214.173-.387.386-.387z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tix);


/***/ }),

/***/ "csY+":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cred.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cred = {
  symbol: 'cred',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.864-16.034l-1.253 1.271L15.618 22 26 11.539l-1.253-1.271-9.13 9.19zm2.11-.31l1.255 1.273 5.616-5.658L19.864 10zm-2.276 4.83L7.251 15.7 6 16.97l4.734 4.762z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#37e8a3" r="16"/><path d="M12.136 15.966l3.482 3.493 9.13-9.191L26 11.538 15.618 22l-4.735-4.763zm2.11-.31L19.864 10l1.253 1.27-5.617 5.66zm-2.276 4.83l-1.236 1.246L6 16.97l1.251-1.27z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cred);


/***/ }),

/***/ "d761":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/kmd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Kmd = {
  symbol: 'kmd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-27L8.518 8.207a.932.932 0 0 0-.494.5L5 16l3.023 7.38c.094.228.275.41.504.506L16 27l7.473-3.114a.932.932 0 0 0 .504-.507L27 16l-3.024-7.294a.932.932 0 0 0-.494-.5L16 5zm0 4.475l4.568 1.957L22.525 16l-1.957 4.568L16 22.525l-4.568-1.957L9.475 16l1.957-4.568L16 9.475zm0 1.957l-3.263 1.305L11.432 16l1.305 3.263L16 20.568l3.263-1.305L20.568 16l-1.305-3.263L16 11.432z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#326464"/><path fill="#FFF" d="M16 5l7.482 3.207c.223.095.4.275.494.5L27 16l-3.023 7.38a.932.932 0 0 1-.504.506L16 27l-7.473-3.114a.932.932 0 0 1-.504-.507L5 16l3.024-7.294a.932.932 0 0 1 .494-.5L16 5zm0 4.475l-4.568 1.957L9.475 16l1.957 4.568L16 22.525l4.568-1.957L22.525 16l-1.957-4.568L16 9.475zm0 1.957l3.263 1.305L20.568 16l-1.305 3.263L16 20.568l-3.263-1.305L11.432 16l1.305-3.263L16 11.432z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Kmd);


/***/ }),

/***/ "d873":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/usd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Usd = {
  symbol: 'usd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.5-12.846c0-2.523-1.576-3.948-5.263-4.836v-4.44c1.14.234 2.231.725 3.298 1.496l1.359-2.196a9.49 9.49 0 0 0-4.56-1.776V6h-2.11v1.355c-3.032.234-5.093 1.963-5.093 4.486 0 2.64 1.649 3.925 5.19 4.813v4.58c-1.577-.234-2.886-.935-4.269-2.01L9.5 21.35a11.495 11.495 0 0 0 5.724 2.314V26h2.11v-2.313c3.08-.257 5.166-1.963 5.166-4.533zm-7.18-5.327c-1.867-.537-2.327-1.168-2.327-2.15 0-1.027.8-1.845 2.328-1.962zm4.318 5.49c0 1.122-.873 1.893-2.401 2.01v-4.229c1.892.538 2.401 1.168 2.401 2.22z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#6cde07" r="16"/><path d="M22.5 19.154c0 2.57-2.086 4.276-5.166 4.533V26h-2.11v-2.336A11.495 11.495 0 0 1 9.5 21.35l1.552-2.126c1.383 1.075 2.692 1.776 4.269 2.01v-4.58c-3.541-.888-5.19-2.173-5.19-4.813 0-2.523 2.061-4.252 5.093-4.486V6h2.11v1.402a9.49 9.49 0 0 1 4.56 1.776l-1.359 2.196c-1.067-.771-2.158-1.262-3.298-1.495v4.439c3.687.888 5.263 2.313 5.263 4.836zm-7.18-5.327V9.715c-1.527.117-2.327.935-2.327 1.963 0 .98.46 1.612 2.328 2.15zm4.318 5.49c0-1.05-.51-1.681-2.401-2.219v4.23c1.528-.118 2.401-.889 2.401-2.01z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Usd);


/***/ }),

/***/ "dCHs":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/waves.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Waves = {
  symbol: 'waves',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-26L6 16l10 10 10-10z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#0155ff" r="16"/><path d="M16 6l10 10-10 10L6 16z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Waves);


/***/ }),

/***/ "dCk2":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/glxt.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Glxt = {
  symbol: 'glxt',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM12.328 4.598c-.676.212-1.324.502-1.95.826-.48.265-.955.546-1.394.876a12.04 12.04 0 0 0-4.354 5.935 12.31 12.31 0 0 0-.543 2.506c-.046.576-.09 1.156-.05 1.733.032 1.203.28 2.39.67 3.525a12.033 12.033 0 0 0 7.618 7.4c.873.27 1.77.47 2.684.532.2.035.408.013.61.04 1.22.035 2.444-.108 3.62-.445.7-.184 1.38-.455 2.032-.773a12.032 12.032 0 0 0 5.41-5.336 11.86 11.86 0 0 0 .78-1.942c.24-.81.414-1.642.474-2.484.034-.202.012-.408.04-.61.006-.256.01-.509 0-.761-.028-.203-.006-.409-.04-.611-.066-.935-.275-1.858-.555-2.75a12.998 12.998 0 0 0-.804-1.882 12.16 12.16 0 0 0-.876-1.393 12.035 12.035 0 0 0-5.745-4.295c-1.415-.483-2.92-.726-4.416-.658-1.091.034-2.173.24-3.21.567zm2.31 4.33v2.802c-.006.05.04.078.065.112.43.452.864.9 1.294 1.353a973.586 973.586 0 0 1 0-4.267c-.452 0-.907-.003-1.36 0zm-5.91 1.45c.103.068.178.167.265.252.926.935 1.855 1.867 2.777 2.808.845.854 1.693 1.705 2.534 2.559-1.019 1.044-2.057 2.07-3.073 3.114-.813.82-1.627 1.64-2.437 2.459a1.195 1.195 0 0 1-.066.05c1.197 0 2.397.003 3.597-.006 1.225-1.282 2.456-2.56 3.678-3.844 1.225 1.281 2.453 2.562 3.678 3.844 1.197.009 2.394.003 3.59.006-.183-.147-.327-.33-.498-.49-.857-.866-1.72-1.733-2.575-2.602-.829-.845-1.673-1.677-2.496-2.528.2-.2.386-.408.592-.605 1.568-1.58 3.13-3.166 4.697-4.747.094-.09.172-.196.28-.27-1.2 0-2.396-.004-3.593.002-1.225 1.281-2.453 2.56-3.678 3.84-1.222-1.284-2.453-2.562-3.678-3.84-1.197-.003-2.397-.003-3.594-.003zm7.278 8.415c0 1.427.003 2.852-.003 4.28.455-.004.91 0 1.362 0v-2.806a.092.092 0 0 0-.031-.081c-.23-.25-.474-.483-.701-.732-.206-.225-.427-.43-.627-.661z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#005396"/><path d="M12.328 4.598a11.955 11.955 0 0 1 3.21-.567c1.497-.068 3.002.175 4.417.658A12.033 12.033 0 0 1 25.7 8.984c.33.44.608.913.876 1.393.311.608.592 1.234.804 1.883.28.891.49 1.814.555 2.749.034.202.012.408.04.61.01.253.006.506 0 .761-.028.203-.006.409-.04.611-.06.842-.234 1.674-.474 2.484a11.86 11.86 0 0 1-.78 1.942 12.032 12.032 0 0 1-5.41 5.336 10.98 10.98 0 0 1-2.033.773c-1.175.337-2.4.48-3.618.446-.203-.028-.412-.006-.611-.04-.913-.063-1.811-.262-2.684-.534A12.033 12.033 0 0 1 4.708 20c-.39-1.135-.64-2.322-.67-3.525-.041-.577.003-1.157.05-1.733.087-.851.28-1.693.542-2.506A12.04 12.04 0 0 1 8.984 6.3c.44-.33.913-.61 1.393-.876a12.212 12.212 0 0 1 1.951-.826zm2.31 4.33v2.802c-.006.05.04.078.065.112.43.452.864.9 1.294 1.353a973.586 973.586 0 0 1 0-4.267c-.452 0-.907-.003-1.36 0zm-5.91 1.45c.103.068.178.167.265.252.926.935 1.855 1.867 2.777 2.808.845.854 1.693 1.705 2.534 2.559-1.019 1.044-2.057 2.07-3.073 3.114-.813.82-1.627 1.64-2.437 2.459a1.195 1.195 0 0 1-.066.05c1.197 0 2.397.003 3.597-.006 1.225-1.282 2.456-2.56 3.678-3.844 1.225 1.281 2.453 2.562 3.678 3.844 1.197.009 2.394.003 3.59.006-.183-.147-.327-.33-.498-.49-.857-.866-1.72-1.733-2.575-2.602-.829-.845-1.673-1.677-2.496-2.528.2-.2.386-.408.592-.605 1.568-1.58 3.13-3.166 4.697-4.747.094-.09.172-.196.28-.27-1.2 0-2.396-.004-3.593.002-1.225 1.281-2.453 2.56-3.678 3.84-1.222-1.284-2.453-2.562-3.678-3.84-1.197-.003-2.397-.003-3.594-.003zm7.278 8.415c0 1.427.003 2.852-.003 4.28.455-.004.91 0 1.362 0v-2.806a.092.092 0 0 0-.031-.081c-.23-.25-.474-.483-.701-.732-.206-.225-.427-.43-.627-.661z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Glxt);


/***/ }),

/***/ "dl+X":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cdt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cdt = {
  symbol: 'cdt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-15.97C26.975 9.971 22.128 5.057 16.12 5v2.802c3.944-.002 7.316 2.863 7.984 6.782h-3.89c.15.458.228.935.234 1.416-.001.482-.08.96-.234 1.416h3.89c-.659 3.925-4.036 6.794-7.984 6.782V27c2.886 0 5.653-1.155 7.694-3.212A11.014 11.014 0 0 0 27 16.029zm-7.254 2.359a4.299 4.299 0 0 1-5.965 1.326c-2.011-1.295-2.6-3.988-1.316-6.015a4.299 4.299 0 0 1 5.965-1.327c.522.35.97.8 1.316 1.327h3.072c-1.136-3.305-4.472-5.3-7.893-4.72C11.505 9.56 9 12.547 9 16.044s2.505 6.484 5.925 7.064c3.421.58 6.757-1.414 7.893-4.72z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#272731" r="16"/><path d="M27 16.03c0 2.91-1.145 5.7-3.186 7.758A10.832 10.832 0 0 1 16.12 27v-2.802c3.948.012 7.325-2.857 7.984-6.782h-3.89c.154-.456.233-.934.234-1.416a4.78 4.78 0 0 0-.234-1.416h3.89c-.668-3.92-4.04-6.784-7.984-6.782V5c6.008.058 10.855 4.972 10.88 11.03zm-7.254 2.359h3.072c-1.136 3.305-4.472 5.3-7.893 4.72C11.505 22.527 9 19.541 9 16.043s2.505-6.483 5.925-7.064c3.421-.58 6.757 1.415 7.893 4.72h-3.072a4.72 4.72 0 0 0-1.316-1.327 4.299 4.299 0 0 0-5.965 1.327c-1.284 2.027-.695 4.72 1.316 6.015a4.299 4.299 0 0 0 5.965-1.326z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cdt);


/***/ }),

/***/ "dy/u":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bnty.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bnty = {
  symbol: 'bnty',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.195-12.6c-.47-.293-1.069-.251-1.54-.041a.316.316 0 0 0-.085-.168L21.688 16l1.882-3.19c.043-.043.043-.127.086-.169.47.252 1.026.252 1.54-.042a1.558 1.558 0 0 0 .598-2.141c-.428-.756-1.411-1.008-2.181-.588-.47.294-.77.756-.813 1.302h-3.935L16.984 7.98c-.043-.042-.086-.084-.086-.126.428-.294.727-.756.727-1.302 0-.881-.727-1.553-1.582-1.553-.856 0-1.583.714-1.583 1.553 0 .546.3 1.05.727 1.302-.042.042-.085.084-.085.126l-1.882 3.19H9.243a1.632 1.632 0 0 0-.813-1.3c-.77-.42-1.754-.169-2.181.587a1.558 1.558 0 0 0 .599 2.141c.47.294 1.069.252 1.54.042 0 .042.042.126.085.168L10.355 16 8.43 19.19c-.043.043-.043.127-.086.169-.47-.252-1.026-.252-1.54.042-.769.42-1.026 1.385-.598 2.141s1.411 1.008 2.181.588c.47-.294.77-.756.813-1.302h3.935l1.881 3.191c.043.042.086.084.086.126-.428.294-.727.756-.727 1.302 0 .881.727 1.553 1.582 1.553.856 0 1.583-.714 1.583-1.553 0-.546-.3-1.05-.727-1.302.042-.042.085-.084.085-.126l1.882-3.19h3.935c.042.503.299 1.007.812 1.3.77.42 1.754.169 2.181-.587a1.467 1.467 0 0 0-.513-2.141zm-7.142-4.45c0 .42-.171.756-.385 1.092.257.252.385.63.385 1.008 0 .881-.727 1.595-1.625 1.595h-2.053a.38.38 0 0 1-.385-.378v-4.534a.38.38 0 0 1 .385-.378h2.053c.898 0 1.625.714 1.625 1.595z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#fd7a3d" r="16"/><path d="M25.195 19.4c.77.42 1.027 1.386.513 2.142-.427.756-1.41 1.008-2.18.588a1.632 1.632 0 0 1-.813-1.302H18.78l-1.882 3.191c0 .042-.043.084-.085.126.427.252.727.756.727 1.302 0 .84-.727 1.553-1.583 1.553-.855 0-1.582-.672-1.582-1.553 0-.546.3-1.008.727-1.302 0-.042-.043-.084-.086-.126l-1.881-3.19H9.2c-.043.545-.342 1.007-.813 1.3-.77.42-1.753.169-2.181-.587s-.171-1.721.599-2.141c.513-.294 1.069-.294 1.54-.042.042-.042.042-.126.085-.168L10.355 16l-1.882-3.19a.316.316 0 0 1-.086-.169c-.47.21-1.069.252-1.54-.042a1.558 1.558 0 0 1-.598-2.141C6.676 9.702 7.66 9.45 8.43 9.87c.513.294.77.798.813 1.302h3.977l1.882-3.191c0-.042.043-.084.085-.126a1.53 1.53 0 0 1-.727-1.302c0-.84.727-1.553 1.583-1.553.855 0 1.582.672 1.582 1.553 0 .546-.3 1.008-.727 1.302 0 .042.043.084.086.126l1.881 3.19H22.8c.043-.545.342-1.007.813-1.3.77-.42 1.753-.169 2.181.587a1.558 1.558 0 0 1-.599 2.141c-.513.294-1.069.294-1.54.042-.042.042-.042.126-.085.168L21.688 16l1.882 3.19a.316.316 0 0 1 .086.169c.47-.21 1.069-.252 1.54.042zm-7.142-4.45c0-.881-.727-1.595-1.625-1.595h-2.053a.38.38 0 0 0-.385.378v4.534c0 .21.171.378.385.378h2.053c.898 0 1.625-.714 1.625-1.595 0-.378-.128-.756-.385-1.008.214-.336.385-.672.385-1.092z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bnty);


/***/ }),

/***/ "e3jQ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rub.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rub = {
  symbol: 'rub',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.5-16.762v1.808h1.764v2.608H10.5v1.705h1.764V25h1.988v-3.641h4v-1.705h-4v-2.608h2.509a7.91 7.91 0 0 0 2.26-.31c.696-.207 1.3-.52 1.814-.943.514-.421.92-.95 1.218-1.588.298-.637.447-1.386.447-2.247 0-.86-.14-1.6-.422-2.22-.282-.62-.671-1.133-1.168-1.537s-1.093-.706-1.789-.904A8.426 8.426 0 0 0 16.811 7h-4.547v8.238zm6.31 0h-2.558v-6.43h2.559c1.142 0 2.041.25 2.695.749.654.499.982 1.3.982 2.401 0 1.102-.328 1.924-.982 2.467-.654.542-1.553.813-2.695.813z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#64d1ff" r="16"/><path d="M10.5 15.238h1.764V7h4.547c.844 0 1.614.099 2.31.297.696.198 1.292.5 1.789.904s.886.917 1.168 1.536c.281.62.422 1.36.422 2.221s-.15 1.61-.447 2.247a4.478 4.478 0 0 1-1.218 1.588 5.113 5.113 0 0 1-1.813.943 7.91 7.91 0 0 1-2.261.31h-2.51v2.608h4v1.705h-4V25h-1.987v-3.641H10.5v-1.705h1.764v-2.608H10.5zm6.31 0c1.143 0 2.042-.271 2.696-.813.654-.543.982-1.365.982-2.467 0-1.101-.328-1.902-.982-2.401-.654-.5-1.553-.75-2.695-.75h-2.56v6.431z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rub);


/***/ }),

/***/ "eBUG":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/taas.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Taas = {
  symbol: 'taas',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM4 13v1.221h1.298V13H4zm1.298 4.774v-1.111h2.513v-1.221H4V19h5.075v-1.226H5.298zm17.627-2.332v1.22h3.777v1.112h-2.513V19H28v-3.558h-5.075zm3.798-1.162v-1.221h-3.8v1.22h3.8zm-16.411 1.162V19h3.81v-1.174h1.265v-2.384h-5.075zm3.777 2.332H11.61v-1.111h2.48v1.11zM10.312 13v1.221h5.075V13h-5.075zm6.334 2.442V19h3.81v-1.174h1.265v-2.384h-5.075zm3.772 2.332h-2.48v-1.111h2.48v1.11zM16.646 13v1.221h5.075V13h-5.075z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#002342"/><path fill="#FFF" d="M4 13h1.298v1.221H4V13zm1.298 4.774h3.777V19H4v-3.558h3.81v1.22H5.299v1.112zm17.627-2.332H28V19h-3.81v-1.226h2.512v-1.111h-3.777v-1.221zm3.798-1.162h-3.8v-1.221h3.8v1.22zm-16.411 1.162h5.075v2.384h-1.264V19h-3.811v-3.558zm3.777 2.332v-1.111H11.61v1.11h2.48zM10.312 13h5.075v1.221h-5.075V13zm6.334 2.442h5.075v2.384h-1.264V19h-3.81v-3.558zm3.772 2.332v-1.111h-2.48v1.11h2.48zM16.646 13h5.075v1.221h-5.075V13z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Taas);


/***/ }),

/***/ "eS1B":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/edo.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Edo = {
  symbol: 'edo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.94-8.126l1.709 1.722a1.377 1.377 0 0 0 1.949 0l1.719-1.722-2.694-2.697zm6.95-9.242l2.693-2.697-2.692-2.697-2.693 2.697zm-.669 8.363l6.255-6.265a1.382 1.382 0 0 0 0-1.953l-1.718-1.721-7.23 7.242zm-7.403-.278l7.218-7.23-2.692-2.697-7.218 7.23zm-3.822-3.8l2.705-2.698-2.693-2.698-1.718 1.722a1.382 1.382 0 0 0-.013 1.952zM18.883 8.129l-1.719-1.725a1.377 1.377 0 0 0-1.949 0L8.96 12.67l2.693 2.697z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#242424" r="16"/><path d="M13.06 23.874l2.683-2.697 2.694 2.697-1.719 1.722a1.377 1.377 0 0 1-1.95 0zm6.95-9.242l-2.692-2.697 2.693-2.697 2.692 2.697zm-.669 8.363l-2.693-2.697 7.23-7.242 1.718 1.721c.539.54.539 1.413 0 1.953zm-7.403-.278L9.246 20.02l7.218-7.23 2.692 2.697zm-3.822-3.8l-1.719-1.722a1.382 1.382 0 0 1 .013-1.952l1.718-1.722 2.693 2.698zM18.883 8.129l-7.23 7.238L8.96 12.67l6.255-6.266a1.377 1.377 0 0 1 1.95 0z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Edo);


/***/ }),

/***/ "eUMz":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/grc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Grc = {
  symbol: 'grc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.053-27h-.11c-.063.05-.122.107-.191.147-2.985 1.73-5.97 3.46-8.958 5.183-.204.118-.29.243-.29.491.008 3.465.005 6.929-.004 10.393 0 .21.06.33.242.435a1974.33 1974.33 0 0 1 6.468 3.743c.914.531 1.822 1.072 2.733 1.608h.11c.043-.032.084-.068.13-.095 3.015-1.749 6.03-3.498 9.047-5.244.166-.096.27-.19.27-.419a2234.53 2234.53 0 0 1-.008-10.476c0-.205-.074-.312-.24-.408a3499.05 3499.05 0 0 1-7.608-4.402c-.535-.31-1.061-.637-1.591-.956zm2.806 17.48c-.065-.045-.195-.064-.259-.028-.676.378-1.345.77-2.016 1.16-.029.016-.052.044-.092.079l1.464.915c-.441.26-.867.456-1.23.735-.506.388-.946.39-1.451 0-.351-.272-.764-.462-1.149-.69-.013-.007-.018-.029-.047-.082.632-.377 4.356-2.572 5.527-3.377 1.071-.738 1.95-1.696 2.424-2.943.2-.523.288-1.09.42-1.64.018-.074-.004-.158-.009-.253-.097-.005-.177-.013-.257-.014-2.007 0-4.015-.002-6.022.003-.098 0-.245.028-.285.094-.435.729-.854 1.467-1.305 2.25h4.426l.03.069c-.183.154-.35.333-.552.458-1.185.737-5.45 3.41-6.381 4.033-.146.097-.24.1-.385.016-1.3-.76-2.601-1.517-3.907-2.266-.149-.085-.193-.183-.192-.349.005-3.097.006-6.195.001-9.293 0-.168.047-.265.192-.348a488.06 488.06 0 0 0 3.934-2.276c.162-.095.258-.084.403.032.327.262.673.502 1.018.74.061.041.181.066.237.034.703-.403 1.398-.819 2.133-1.253l-1.438-.904c.303-.179.566-.335.83-.489.299-.175.594-.358.902-.517.089-.046.238-.063.32-.018.56.308 1.108.635 1.66.957.02.013.032.041.072.093-.465.285-3.976 2.368-5.234 3.192a7.38 7.38 0 0 0-2.361 2.481c-1.262 2.17-.91 5.142.82 6.955.61.638 1.27 1.21 2.014 1.681.076.049.215.085.282.048.693-.386 1.378-.789 2.064-1.187.014-.009.022-.028.036-.048-.52-.335-1.048-.659-1.56-1.008-.642-.44-1.241-.933-1.69-1.583-.907-1.31-.81-2.98.227-4.185.752-.874 1.702-1.488 2.674-2.07 1.244-.747 4.42-2.687 4.743-2.94.117-.09.194-.116.332-.035 1.331.78 2.669 1.547 3.998 2.329.08.047.156.18.156.275.01 3.125.01 6.25.003 9.376 0 .095-.07.233-.15.28-1.346.79-2.698 1.569-4.05 2.35-.03.017-.064.03-.087.041-.416-.3-.82-.597-1.233-.88zm2.894-9.337c-.702-1.244-1.748-2.142-2.917-2.911-.08-.053-.261-.019-.362.037-.558.308-1.107.634-1.659.955-.107.063-.213.128-.348.209l.18.124c.593.391 1.203.76 1.777 1.18.806.589 1.49 1.29 1.81 2.28.018.056.112.126.172.127.655.009 1.31.005 1.987.005-.038-.607-.295-1.394-.64-2.006z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#5411B3"/><path fill="#FFF" d="M16.053 5c.53.319 1.056.645 1.59.956 2.535 1.47 5.07 2.938 7.608 4.402.167.096.241.203.241.408-.005 3.492-.004 6.984.008 10.476 0 .228-.104.323-.27.419-3.017 1.746-6.032 3.495-9.047 5.244-.046.027-.087.063-.13.095h-.11c-.91-.536-1.82-1.077-2.733-1.608-2.154-1.251-4.31-2.5-6.468-3.743-.183-.105-.243-.225-.242-.435.01-3.464.012-6.928.005-10.393 0-.248.085-.373.289-.49 2.989-1.724 5.973-3.454 8.958-5.184.069-.04.128-.098.191-.147h.11zm2.806 17.48c.413.283.817.58 1.233.88.023-.01.057-.024.088-.041 1.35-.781 2.703-1.56 4.049-2.35.08-.047.15-.185.15-.28.007-3.126.006-6.251-.003-9.376a.377.377 0 0 0-.156-.275c-1.33-.782-2.667-1.55-3.998-2.329-.138-.08-.215-.056-.332.035-.323.253-3.499 2.193-4.743 2.94-.972.582-1.922 1.196-2.674 2.07-1.037 1.205-1.134 2.875-.227 4.185.449.65 1.048 1.144 1.69 1.583.512.349 1.04.673 1.56 1.008-.014.02-.022.04-.036.048-.686.398-1.37.8-2.064 1.187-.067.037-.206 0-.282-.048a10.765 10.765 0 0 1-2.014-1.68c-1.73-1.814-2.082-4.787-.82-6.956a7.38 7.38 0 0 1 2.36-2.481c1.26-.824 4.77-2.907 5.235-3.192-.04-.052-.051-.08-.072-.093-.552-.322-1.1-.65-1.66-.957-.082-.045-.231-.028-.32.018-.308.159-.603.342-.902.517-.264.154-.527.31-.83.489l1.438.904c-.735.434-1.43.85-2.133 1.253-.056.032-.176.007-.237-.035a17.38 17.38 0 0 1-1.018-.74c-.145-.115-.241-.126-.403-.031a488.06 488.06 0 0 1-3.934 2.276c-.145.083-.192.18-.192.348.005 3.098.004 6.196-.001 9.293 0 .166.043.264.192.35 1.306.748 2.608 1.504 3.907 2.265.144.085.24.081.385-.016.932-.623 5.196-3.296 6.381-4.033.201-.125.37-.304.552-.458l-.03-.07h-4.426c.45-.782.87-1.52 1.305-2.249.04-.066.187-.094.285-.094 2.007-.005 4.015-.003 6.022-.003.08 0 .16.009.257.014.005.095.027.18.009.254-.132.549-.22 1.116-.42 1.64-.474 1.246-1.353 2.204-2.424 2.942-1.17.805-4.895 3-5.527 3.377.03.053.034.075.047.083.385.227.798.417 1.149.689.505.39.945.388 1.45 0 .364-.279.79-.476 1.231-.735l-1.464-.915c.04-.035.063-.063.092-.08.67-.389 1.34-.78 2.016-1.16.064-.035.194-.016.259.029zm2.894-9.337c.345.612.602 1.399.64 2.006-.678 0-1.332.004-1.987-.005-.06-.001-.154-.07-.173-.128-.32-.988-1.003-1.69-1.81-2.28-.573-.419-1.183-.788-1.776-1.18-.05-.032-.099-.067-.18-.123.135-.081.24-.146.348-.209.552-.32 1.1-.647 1.66-.955.1-.056.28-.09.361-.037 1.17.769 2.215 1.667 2.917 2.911z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Grc);


/***/ }),

/***/ "eYVH":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/polis.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Polis = {
  symbol: 'polis',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.636-9.32v-1c0-.198-.133-.33-.335-.33h-.665v-1.004c0-.199-.133-.334-.331-.334h-.666v-7.345h.662c.199 0 .335-.132.335-.334v-1h.665a.322.322 0 0 0 .331-.268c.034-.166-.033-.298-.165-.368l-9.318-4.672a.46.46 0 0 0-.298 0l-9.652 4.672a.333.333 0 0 0-.166.364c0 .17.133.272.298.272h1v1c0 .198.133.33.331.33h.666v7.349h-.662c-.2 0-.335.132-.335.33v1.004h-.665c-.2 0-.332.132-.332.331v1.003c-.198 0-.334.133-.334.335s.132.334.331.334h19.305c.198 0 .334-.132.334-.33 0-.2-.132-.339-.33-.339h-.004zM7.993 11.998v-.665h15.974v.665H7.993zm13.643.67v7.344h-1.328v-7.345h1.328zm-3.328 0v7.344h-1.331v-7.345h1.33zm-3.328 0v7.344h-1.328v-7.345h1.328zm-3.328 0v7.344h-1.327v-7.345h1.327zm12.315 8.678H7.997v-.669H23.97v.669h-.003z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2C3E50"/><path d="M25.636 22.68v-1c0-.198-.133-.33-.335-.33h-.665v-1.004c0-.199-.133-.334-.331-.334h-.666v-7.345h.662c.199 0 .335-.132.335-.334v-1h.665a.322.322 0 0 0 .331-.268c.034-.166-.033-.298-.165-.368l-9.318-4.672a.46.46 0 0 0-.298 0l-9.652 4.672a.333.333 0 0 0-.166.364c0 .17.133.272.298.272h1v1c0 .198.133.33.331.33h.666v7.349h-.662c-.2 0-.335.132-.335.33v1.004h-.665c-.2 0-.332.132-.332.331v1.003c-.198 0-.334.133-.334.335s.132.334.331.334h19.305c.198 0 .334-.132.334-.33 0-.2-.132-.339-.33-.339h-.004zM7.993 11.998v-.665h15.974v.665H7.993zm13.643.67v7.344h-1.328v-7.345h1.328zm-3.328 0v7.344h-1.331v-7.345h1.33zm-3.328 0v7.344h-1.328v-7.345h1.328zm-3.328 0v7.344h-1.327v-7.345h1.327zm12.315 8.678H7.997v-.669H23.97v.669h-.003z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Polis);


/***/ }),

/***/ "eniR":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/oot.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Oot = {
  symbol: 'oot',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.346-7.007c.216-.021.624-.04 1.026-.104 2.118-.34 3.918-1.294 5.335-2.902 1.917-2.176 2.638-4.722 2.14-7.58-.394-2.258-1.521-4.107-3.334-5.511-2.03-1.573-4.342-2.16-6.88-1.788a8.583 8.583 0 0 0-4.862 2.404c-2.095 2.052-3.004 4.555-2.71 7.477a8.573 8.573 0 0 0 1.277 3.718.22.22 0 0 1 .027.2 4.963 4.963 0 0 1-1.01 1.793c-.71.805-.3 2.047.747 2.26.386.079.774.025 1.158-.025a7.183 7.183 0 0 0 2.55-.862c.08-.045.14-.042.22-.003 1.3.645 2.677.94 4.316.923zm-6.43-2.388c.104-.225.2-.424.29-.626.204-.469.364-.952.479-1.451a1.1 1.1 0 0 0-.17-.899c-.48-.718-.818-1.498-.964-2.349-.446-2.583.331-4.736 2.344-6.417 1.038-.867 2.258-1.331 3.61-1.425 2.002-.138 3.73.504 5.152 1.912 1.18 1.169 1.83 2.604 1.905 4.266.117 2.595-.963 4.599-3.133 5.992-1.255.805-2.658 1.088-4.145.929a6.497 6.497 0 0 1-2.564-.837c-.371-.213-.718-.2-1.07.048a6.078 6.078 0 0 1-1.594.817c-.037.012-.075.022-.14.04zm6.091-10.412c-.029.052-.045.077-.059.104-.38.768-.76 1.535-1.137 2.305-.038.077-.08.126-.172.139-.577.079-1.152.163-1.728.245l-.916.132-.03.048c.04.026.089.045.123.079.598.583 1.194 1.167 1.79 1.752.056.055.112.101.093.202-.124.681-.241 1.364-.36 2.046l-.104.632c.059-.028.09-.041.121-.058.747-.392 1.494-.783 2.238-1.18.104-.056.181-.05.282.003.74.397 1.482.787 2.224 1.178.032.017.067.028.113.046-.003-.04-.003-.063-.006-.084-.143-.845-.282-1.69-.432-2.533-.022-.123.01-.197.094-.278.478-.458.953-.92 1.427-1.382.151-.147.295-.303.45-.462-.036-.008-.065-.016-.094-.02-.84-.122-1.678-.245-2.518-.362-.112-.015-.18-.053-.23-.161-.193-.415-.398-.823-.6-1.234-.185-.377-.37-.755-.569-1.157z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#25AAE1" fill-rule="nonzero"/><path fill="#FFF" d="M16.346 24.993c-1.64.018-3.017-.278-4.315-.923-.08-.04-.14-.042-.22.003a7.183 7.183 0 0 1-2.551.862c-.384.05-.772.104-1.158.025a1.366 1.366 0 0 1-.747-2.26 4.963 4.963 0 0 0 1.01-1.793.215.215 0 0 0-.027-.2 8.573 8.573 0 0 1-1.277-3.718c-.294-2.922.615-5.425 2.71-7.477a8.583 8.583 0 0 1 4.863-2.404c2.537-.371 4.849.215 6.88 1.788 1.812 1.404 2.94 3.253 3.333 5.511.498 2.858-.223 5.404-2.14 7.58-1.417 1.608-3.217 2.563-5.335 2.902-.402.065-.81.083-1.026.104zm-6.43-2.388c.065-.018.103-.028.14-.04a6.078 6.078 0 0 0 1.594-.817c.352-.248.699-.26 1.07-.048.796.456 1.649.74 2.564.837 1.487.159 2.89-.124 4.145-.93 2.17-1.392 3.25-3.396 3.133-5.991-.075-1.662-.726-3.097-1.905-4.266-1.421-1.408-3.15-2.05-5.153-1.912-1.35.094-2.57.558-3.609 1.425-2.013 1.68-2.79 3.834-2.344 6.417.146.85.485 1.63.963 2.35a1.1 1.1 0 0 1 .171.898 8.16 8.16 0 0 1-.48 1.45c-.089.203-.185.402-.288.627zm6.091-10.412l.57 1.157c.2.41.406.82.6 1.234.05.108.117.146.229.161.84.117 1.679.24 2.518.361.029.005.058.013.094.02-.155.16-.299.316-.45.463-.474.463-.949.924-1.427 1.382-.083.08-.116.155-.094.278.15.843.29 1.688.432 2.533.003.021.003.043.006.084-.046-.018-.081-.029-.113-.046-.742-.391-1.485-.781-2.224-1.178-.1-.054-.178-.059-.282-.003-.744.397-1.491.788-2.238 1.18-.03.017-.062.03-.12.058.037-.227.069-.43.104-.632.118-.682.235-1.365.36-2.046.018-.1-.038-.147-.094-.202a590.25 590.25 0 0 0-1.79-1.752c-.034-.034-.082-.053-.124-.079l.031-.048.916-.132c.576-.082 1.151-.166 1.728-.245.092-.013.134-.062.172-.14.377-.769.758-1.536 1.137-2.304.014-.027.03-.052.06-.104z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Oot);


/***/ }),

/***/ "ewxM":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nano.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nano = {
  symbol: 'nano',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.95-21c-.858 0-1.583.693-1.583 1.583 0 1.254-.198 1.583-1.584 1.583h-.132a1.548 1.548 0 0 0-1.418 1.55v.034c0 1.22-.23 1.517-1.583 1.517-.066 0-.132 0-.165.033-.792.099-1.418.758-1.418 1.55 0 .858.692 1.583 1.583 1.583.825 0 1.517-.66 1.55-1.451v-.132c0-1.121.363-1.55 1.55-1.583h.033c.825 0 1.518-.66 1.55-1.484v-.1c0-1.154.363-1.583 1.584-1.583.857 0 1.583-.692 1.583-1.583 0-.824-.693-1.517-1.55-1.517zm-9.302 3.166h-.132c-1.385 0-1.583-.33-1.583-1.583a1.584 1.584 0 0 0-3.166 0c0 1.254-.198 1.55-1.583 1.55h-.132a1.548 1.548 0 0 0-1.419 1.55c0 .858.693 1.584 1.584 1.584.824 0 1.517-.66 1.55-1.451v-.1c0-1.154.363-1.583 1.583-1.583s1.583.43 1.583 1.55c0 .858.693 1.584 1.583 1.584.891 0 1.584-.693 1.584-1.583a1.597 1.597 0 0 0-1.452-1.518zm-9.565 6.267a1.583 1.583 0 1 0 0-3.166 1.583 1.583 0 0 0 0 3.166z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle fill="#4A90E2" cx="16" cy="16" r="16"/><path d="M24.95 11c-.858 0-1.583.693-1.583 1.583 0 1.254-.198 1.583-1.584 1.583h-.132a1.548 1.548 0 0 0-1.418 1.55v.034c0 1.22-.23 1.517-1.583 1.517-.066 0-.132 0-.165.033-.792.099-1.418.758-1.418 1.55 0 .858.692 1.583 1.583 1.583.825 0 1.517-.66 1.55-1.451v-.132c0-1.121.363-1.55 1.55-1.583h.033c.825 0 1.518-.66 1.55-1.484v-.1c0-1.154.363-1.583 1.584-1.583.857 0 1.583-.692 1.583-1.583 0-.824-.693-1.517-1.55-1.517zm-9.302 3.166a1.597 1.597 0 0 1 1.452 1.518c0 .89-.693 1.583-1.584 1.583-.89 0-1.583-.726-1.583-1.583 0-1.122-.363-1.55-1.583-1.55s-1.583.428-1.583 1.583v.099c-.033.791-.726 1.45-1.55 1.45-.89 0-1.584-.725-1.584-1.582 0-.825.627-1.485 1.419-1.55h.132c1.385 0 1.583-.297 1.583-1.55a1.584 1.584 0 0 1 3.166 0c0 1.253.198 1.582 1.583 1.582h.132zm-9.565 6.267a1.583 1.583 0 1 1 0-3.166 1.583 1.583 0 0 1 0 3.166z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nano);


/***/ }),

/***/ "f/eL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/kin.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Kin = {
  symbol: 'kin',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.636-18.97c.35 0 .633-.278.633-.62v-.367a.626.626 0 0 0-.633-.62h-.376a.626.626 0 0 0-.633.62v.986zm-5.935 0v-.987a.626.626 0 0 0-.633-.62h-.375a.626.626 0 0 0-.633.62v.367c0 .342.283.62.633.62zm-1.008 6.583h.375c.35 0 .633-.277.633-.619v-.987h-1.008a.626.626 0 0 0-.633.62v.367c0 .342.283.62.633.62zm6.567 0h.376c.35 0 .633-.277.633-.619v-.367a.626.626 0 0 0-.633-.62h-1.01v.987c0 .342.284.62.634.62zm-3.284-8.03h.376c.35 0 .633-.276.633-.618v-.368a.626.626 0 0 0-.633-.619h-.376a.626.626 0 0 0-.633.62v.367c0 .342.284.619.633.619zm0 9.797h.376c.35 0 .633-.278.633-.62v-.367a.626.626 0 0 0-.633-.62h-.376a.626.626 0 0 0-.633.62v.368c0 .341.284.619.633.619zm4.926-4.979h.375c.35 0 .633-.277.633-.619v-.367a.626.626 0 0 0-.633-.62h-.375a.626.626 0 0 0-.633.62v.367c0 .342.283.62.633.62zm-10.015 0h.375c.35 0 .634-.277.634-.619v-.367a.626.626 0 0 0-.634-.62h-.375a.626.626 0 0 0-.633.62v.367c0 .342.283.62.633.62zm7.285-1.544a.452.452 0 0 0 .455-.45V13.19h-1.253a.452.452 0 0 0-.455.45v.4c0 .45-.347.84-.804.84a.862.862 0 0 1-.85-.84v-.417a.436.436 0 0 0-.439-.433h-1.125v4.978h1.116a.445.445 0 0 0 .448-.443v-.374c0-.476.355-.875.812-.875a.85.85 0 0 1 .842.834v.412c0 .246.202.446.451.446h1.257v-1.231a.449.449 0 0 0-.452-.446H17.8c-.457 0-.881-.366-.881-.817a.824.824 0 0 1 .828-.817h.425zm.481 6.565a.558.558 0 0 0-.31.735.58.58 0 0 0 .75.304.557.557 0 0 0 .31-.734.58.58 0 0 0-.75-.305zM13.4 8.897a.558.558 0 0 0-.311.734.58.58 0 0 0 .75.304.558.558 0 0 0 .311-.734.58.58 0 0 0-.75-.304zm8.554 4.428a.58.58 0 0 0 .75.304.558.558 0 0 0 .312-.735.58.58 0 0 0-.75-.304.558.558 0 0 0-.312.735zM9.312 18.463a.58.58 0 0 0 .751.304.558.558 0 0 0 .311-.734.579.579 0 0 0-.75-.304.558.558 0 0 0-.312.734zm0-5.569a.558.558 0 0 0 .311.735.58.58 0 0 0 .751-.304.558.558 0 0 0-.31-.735.58.58 0 0 0-.752.304zm9.177-2.959a.58.58 0 0 0 .75-.304.558.558 0 0 0-.31-.734.58.58 0 0 0-.75.304.558.558 0 0 0 .31.734zm3.465 8.098a.558.558 0 0 0 .311.734.58.58 0 0 0 .75-.304.558.558 0 0 0-.31-.734.579.579 0 0 0-.75.304zm-8.883 4.588a.58.58 0 0 0 .75-.304.558.558 0 0 0-.31-.734.58.58 0 0 0-.75.304.557.557 0 0 0 .31.734zm8.443-1.63a.316.316 0 0 0 0 .455c.129.125.336.125.464 0s.129-.329 0-.454a.334.334 0 0 0-.464 0zM10.35 9.912a.316.316 0 0 0 0 .455.334.334 0 0 0 .464 0c.128-.126.128-.329 0-.454s-.336-.126-.464 0zm11.164.455a.334.334 0 0 0 .464 0c.129-.126.129-.329 0-.454s-.335-.126-.464 0a.316.316 0 0 0 0 .454zM10.35 21.446c.128.125.336.125.464 0s.128-.329 0-.454a.334.334 0 0 0-.464 0 .316.316 0 0 0 0 .454zm13.53-5.847c0 .177.148.32.329.32a.325.325 0 0 0 .328-.32.325.325 0 0 0-.328-.322.325.325 0 0 0-.328.322zm-15.925 0c0 .177.147.32.329.32a.325.325 0 0 0 .328-.32.325.325 0 0 0-.328-.322.325.325 0 0 0-.329.322zm8.21-7.387a.325.325 0 0 0 .328-.321.325.325 0 0 0-.329-.322.325.325 0 0 0-.328.322c0 .177.147.32.328.32zm0 15.576a.325.325 0 0 0 .328-.32.325.325 0 0 0-.329-.322.325.325 0 0 0-.328.321c0 .177.147.321.328.321zm10.178-8.19c0 .178.148.322.329.322a.325.325 0 0 0 .328-.321.325.325 0 0 0-.328-.322.325.325 0 0 0-.329.322zm-21.097-.16c-.136 0-.246.108-.246.24s.11.242.246.242.247-.108.247-.241-.11-.241-.247-.241zM15.672 5.321c0 .177.147.321.328.321s.328-.144.328-.32c0-.178-.147-.322-.328-.322s-.328.144-.328.321zm9.725 14.105a.479.479 0 0 0 .262.631.5.5 0 0 0 .646-.256.479.479 0 0 0-.263-.632.497.497 0 0 0-.645.257zm-5.33 5.19a.334.334 0 0 0-.43.172.313.313 0 0 0 0 .245.331.331 0 0 0 .606.004.313.313 0 0 0 .001-.245.323.323 0 0 0-.176-.175zM6.442 11.289a.335.335 0 0 0-.251-.001.322.322 0 0 0-.179.172.313.313 0 0 0-.002.246.331.331 0 0 0 .606.004.313.313 0 0 0 .002-.246.323.323 0 0 0-.176-.175zm-.916 8.25a.398.398 0 0 0 .218.525c.21.086.45-.01.538-.213a.398.398 0 0 0-.218-.526.414.414 0 0 0-.538.213zM19.863 6.252c.208.086.45-.01.537-.214a.398.398 0 0 0-.218-.526.414.414 0 0 0-.538.214c-.088.204.01.44.219.526zm6.141 4.867a.242.242 0 0 0-.134.13.234.234 0 0 0-.001.184.249.249 0 0 0 .455.003.24.24 0 0 0-.131-.316.248.248 0 0 0-.189-.001zM11.587 5.95a.24.24 0 0 0 .13.316.25.25 0 0 0 .323-.129.239.239 0 0 0-.13-.315.247.247 0 0 0-.323.128zm.063 18.962a.247.247 0 0 0-.228.148.24.24 0 0 0 .132.315.248.248 0 0 0 .322-.128.239.239 0 0 0-.13-.315.247.247 0 0 0-.096-.02zm11.642-1.7a.316.316 0 0 0 0-.454.33.33 0 0 0-.232-.094.33.33 0 0 0-.233.094.316.316 0 0 0 0 .455.334.334 0 0 0 .465 0zM7.935 8.033a.475.475 0 0 0 0 .681.497.497 0 0 0 .697 0 .475.475 0 0 0 0-.681.501.501 0 0 0-.697 0zm15.525.09a.237.237 0 0 0 0 .34.25.25 0 0 0 .349 0 .238.238 0 0 0 0-.34.248.248 0 0 0-.349 0zM8.027 22.735a.237.237 0 0 0 0 .34.25.25 0 0 0 .349 0 .237.237 0 0 0 0-.34c-.047-.046-.109-.07-.175-.07s-.127.024-.174.07zM16.082 27c.227 0 .41-.18.41-.401a.406.406 0 0 0-.41-.402c-.227 0-.41.18-.41.402 0 .221.183.401.41.401z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#005fff" r="16"/><path d="M13.701 18.007V13.19h1.125c.243 0 .44.194.44.433v.416c0 .452.392.84.849.84.457 0 .804-.388.804-.84v-.4c0-.248.203-.45.455-.45h1.253v1.218c0 .248-.204.45-.455.45h-.425a.824.824 0 0 0-.828.817c0 .451.424.817.881.817h.375c.25 0 .452.2.452.446v1.07h1.009c.35 0 .633.278.633.62v.367c0 .342-.284.62-.633.62h-.376a.626.626 0 0 1-.633-.62v-.826H17.37c-.25 0-.451-.2-.451-.446v-.412a.85.85 0 0 0-.842-.834c-.457 0-.812.4-.812.875v.374c0 .245-.2.443-.448.443h-1.116v.826c0 .342-.283.62-.633.62h-.375a.626.626 0 0 1-.633-.62v-.367c0-.342.283-.62.633-.62zm5.935-4.978h-1.01v-.986c0-.342.284-.62.634-.62h.376c.35 0 .633.278.633.62v.367c0 .342-.284.62-.633.62zm-5.935 0h-1.008a.626.626 0 0 1-.633-.619v-.367c0-.342.283-.62.633-.62h.375c.35 0 .633.278.633.62zm2.275-1.445a.626.626 0 0 1-.633-.62v-.367c0-.342.284-.619.633-.619h.376c.35 0 .633.277.633.62v.367a.626.626 0 0 1-.633.619zm0 9.796a.626.626 0 0 1-.633-.62v-.367c0-.342.284-.62.633-.62h.376c.35 0 .633.278.633.62v.368a.626.626 0 0 1-.633.619zm4.926-4.979a.626.626 0 0 1-.633-.619v-.367c0-.342.283-.62.633-.62h.375c.35 0 .633.278.633.62v.367c0 .342-.283.62-.633.62zm-10.015 0a.626.626 0 0 1-.633-.619v-.367c0-.342.283-.62.633-.62h.375c.35 0 .634.278.634.62v.367c0 .342-.284.62-.634.62zm7.766 5.021a.58.58 0 0 1 .75.305.557.557 0 0 1-.31.734.58.58 0 0 1-.75-.304.558.558 0 0 1 .31-.735zM13.4 8.897a.58.58 0 0 1 .75.304.558.558 0 0 1-.31.734.58.58 0 0 1-.751-.304.558.558 0 0 1 .31-.734zm8.554 4.428a.558.558 0 0 1 .311-.735.58.58 0 0 1 .75.304.558.558 0 0 1-.31.735.58.58 0 0 1-.75-.304zM9.312 18.463a.558.558 0 0 1 .311-.734.579.579 0 0 1 .751.304.558.558 0 0 1-.31.734.58.58 0 0 1-.752-.304zm0-5.569a.58.58 0 0 1 .751-.304.558.558 0 0 1 .311.735.58.58 0 0 1-.75.304.558.558 0 0 1-.312-.735zm9.177-2.959a.558.558 0 0 1-.31-.734.58.58 0 0 1 .75-.304.558.558 0 0 1 .31.734.58.58 0 0 1-.75.304zm3.465 8.098a.579.579 0 0 1 .75-.304.558.558 0 0 1 .312.734.58.58 0 0 1-.75.304.558.558 0 0 1-.312-.734zm-8.883 4.588a.557.557 0 0 1-.31-.734.58.58 0 0 1 .75-.304.558.558 0 0 1 .31.734.58.58 0 0 1-.75.304zm8.443-1.63a.334.334 0 0 1 .464 0c.129.126.129.33 0 .455s-.335.125-.464 0a.316.316 0 0 1 0-.454zM10.35 9.912c.128-.125.336-.125.464 0s.128.33 0 .455a.334.334 0 0 1-.464 0 .316.316 0 0 1 0-.454zm11.164.455a.316.316 0 0 1 0-.454c.129-.126.336-.126.464 0s.129.328 0 .454a.334.334 0 0 1-.464 0zM10.35 21.446a.316.316 0 0 1 0-.454.334.334 0 0 1 .464 0c.128.125.128.329 0 .454s-.336.125-.464 0zm13.53-5.847c0-.178.148-.322.329-.322.181 0 .328.144.328.322a.325.325 0 0 1-.328.32.325.325 0 0 1-.328-.32zm-15.925 0c0-.178.147-.322.329-.322.18 0 .328.144.328.322a.325.325 0 0 1-.328.32.325.325 0 0 1-.329-.32zm8.21-7.387a.325.325 0 0 1-.33-.321c0-.178.148-.322.33-.322.18 0 .328.144.328.322a.325.325 0 0 1-.329.32zm0 15.576a.325.325 0 0 1-.33-.32c0-.178.148-.322.33-.322.18 0 .328.144.328.321a.325.325 0 0 1-.329.321zm10.178-8.19c0-.177.148-.32.329-.32.18 0 .328.143.328.32a.325.325 0 0 1-.328.322.325.325 0 0 1-.329-.321zm-21.097-.16c.136 0 .247.108.247.24s-.11.242-.247.242c-.136 0-.246-.108-.246-.241s.11-.241.246-.241zM15.672 5.321c0-.177.147-.321.328-.321s.328.144.328.321c0 .177-.147.321-.328.321s-.328-.144-.328-.32zm9.725 14.105a.497.497 0 0 1 .645-.257.48.48 0 0 1 .263.632.494.494 0 0 1-.646.256.479.479 0 0 1-.262-.631zm-5.33 5.19a.322.322 0 0 1 .177.176.313.313 0 0 1-.001.245.331.331 0 0 1-.606-.004.313.313 0 0 1 0-.245.323.323 0 0 1 .18-.173.337.337 0 0 1 .25.002zM6.442 11.289c.08.034.143.096.176.175a.313.313 0 0 1-.001.246.331.331 0 0 1-.606-.004.313.313 0 0 1 .001-.246.322.322 0 0 1 .179-.172.336.336 0 0 1 .251.001zm-.916 8.25a.414.414 0 0 1 .538-.214.398.398 0 0 1 .218.526.414.414 0 0 1-.538.213.398.398 0 0 1-.218-.526zM19.863 6.252a.398.398 0 0 1-.219-.526.414.414 0 0 1 .538-.214.398.398 0 0 1 .218.526.414.414 0 0 1-.537.214zm6.141 4.867a.251.251 0 0 1 .189.001.24.24 0 0 1-.003.445.249.249 0 0 1-.321-.132.234.234 0 0 1 .001-.185.242.242 0 0 1 .134-.129zM11.587 5.95a.247.247 0 0 1 .322-.128.239.239 0 0 1-.003.445.25.25 0 0 1-.188-.001.24.24 0 0 1-.131-.316zm.063 18.962c.032 0 .064.007.095.02a.239.239 0 0 1 .131.315.248.248 0 0 1-.322.128.24.24 0 0 1-.132-.315.247.247 0 0 1 .228-.148zm11.642-1.7a.334.334 0 0 1-.465 0 .316.316 0 0 1 0-.454.33.33 0 0 1 .233-.094.33.33 0 0 1 .232.094.316.316 0 0 1 0 .455zM7.935 8.033a.501.501 0 0 1 .697 0 .475.475 0 0 1 0 .681.497.497 0 0 1-.697 0 .475.475 0 0 1 0-.681zm15.525.09a.248.248 0 0 1 .348 0 .238.238 0 0 1 0 .34.25.25 0 0 1-.348 0 .236.236 0 0 1 0-.34zM8.027 22.735a.248.248 0 0 1 .348 0 .237.237 0 0 1 0 .34.25.25 0 0 1-.348 0 .237.237 0 0 1 0-.34zM16.082 27a.406.406 0 0 1-.41-.401c0-.222.183-.402.41-.402.227 0 .41.18.41.402a.406.406 0 0 1-.41.401z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Kin);


/***/ }),

/***/ "f6Op":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fair.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fair = {
  symbol: 'fair',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-8-7.746v.266l.045.175c.16.599.575.972 1.175 1.154.708.215 1.432.172 2.15.047 1.052-.182 1.932-.677 2.675-1.399.514-.5.936-1.064 1.281-1.683.712-1.277 1.147-2.649 1.536-4.036.194-.69.362-1.386.537-2.08.03-.119.083-.158.217-.158.493.003.987-.003 1.48-.022.288-.011.559-.09.753-.319.093-.11.196-.214.282-.329.265-.353.22-.803-.096-1.117-.259-.256-.587-.349-.942-.362-.33-.012-.66-.002-.994-.002-.002-.028-.007-.046-.003-.062.08-.326.165-.652.242-.979.018-.08.068-.079.131-.08.475-.008.95-.012 1.424-.028.355-.012.695-.061.985-.299.356-.29.431-.59.358-.971-.072-.375-.345-.594-.702-.728-.293-.11-.599-.111-.906-.106-.212.003-.425 0-.642 0 .005-.043.003-.07.011-.096.25-.816.554-1.612.974-2.364.202-.361.442-.698.749-.987.057-.054.134-.09.202-.134l.027.035c-.012.033-.025.066-.035.1-.134.448-.093.87.24 1.23.354.386.812.53 1.344.512.693-.023 1.458-.595 1.5-1.495.016-.317-.117-.585-.254-.854a1.754 1.754 0 0 0-1.03-.884c-.776-.266-1.573-.232-2.362-.092-1.19.211-2.183.787-3.026 1.6-.64.617-1.156 1.328-1.596 2.085-.241.416-.445.852-.653 1.285-.06.126-.127.175-.278.172a73.09 73.09 0 0 0-1.873-.004 1.727 1.727 0 0 0-.438.055c-.398.11-.647.369-.705.757-.057.384.04.73.393.974.284.196.613.273.952.287.432.017.865.004 1.303.004 0 .034.005.057 0 .077-.092.346-.183.693-.281 1.037-.009.031-.068.07-.104.07-.386.006-.772-.001-1.159.005-.403.007-.815-.019-1.207.05-.56.096-.854.477-.844.973.01.567.418.936 1.017.982.44.034.884.021 1.326.028.13.002.259 0 .4 0-.02.093-.033.172-.054.248-.527 1.94-1.05 3.883-1.586 5.821-.099.357-.246.702-.377 1.05-.02.053-.077.093-.117.138-.037-.046-.084-.088-.108-.14a1.086 1.086 0 0 0-.392-.457c-.533-.362-1.12-.426-1.735-.257-.606.167-1.012.535-1.167 1.132L8 24.254z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#C99705"/><path fill="#FFF" d="M8 24.254l.043-.175c.155-.597.561-.965 1.167-1.132.615-.17 1.202-.105 1.735.257.175.118.307.269.392.458.024.051.071.093.108.14.04-.046.097-.086.117-.138.131-.349.278-.694.377-1.05.536-1.94 1.06-3.881 1.586-5.822.021-.076.034-.155.053-.247-.14 0-.27.001-.399 0-.442-.008-.886.005-1.326-.029-.599-.046-1.006-.415-1.017-.982-.01-.496.283-.877.844-.974.392-.068.804-.042 1.207-.049.387-.006.773 0 1.16-.004.035 0 .094-.04.103-.071.098-.344.189-.69.28-1.037.006-.02.001-.043.001-.077-.438 0-.871.013-1.303-.004-.34-.014-.668-.091-.952-.287-.353-.243-.45-.59-.393-.974.058-.388.307-.648.705-.757.14-.038.292-.054.438-.055a77.962 77.962 0 0 1 1.873.004c.151.003.218-.046.278-.172.208-.433.412-.87.653-1.285.44-.757.956-1.468 1.596-2.086.843-.812 1.836-1.388 3.026-1.599.79-.14 1.586-.174 2.362.092.466.16.812.457 1.03.884.137.27.27.537.255.854-.043.9-.808 1.472-1.501 1.495-.532.018-.99-.126-1.344-.511-.333-.362-.374-.783-.24-1.232.01-.033.023-.066.035-.1l-.027-.034c-.068.044-.145.08-.202.134a4.077 4.077 0 0 0-.75.987c-.42.752-.723 1.548-.973 2.364-.008.025-.006.053-.01.096.216 0 .429.003.64 0 .308-.005.614-.004.907.106.357.134.63.353.702.728.073.381-.002.68-.358.971-.29.238-.63.287-.985.299-.474.016-.95.02-1.424.028-.063.001-.113 0-.131.08-.077.327-.161.653-.242.979-.004.016.001.034.003.062.333 0 .664-.01.994.002.355.013.683.106.942.362.316.314.36.764.096 1.117-.086.115-.189.22-.282.33-.194.228-.465.307-.753.318-.493.02-.987.025-1.48.022-.134 0-.187.04-.217.158-.175.694-.343 1.39-.537 2.08-.39 1.387-.824 2.76-1.536 4.036a7.251 7.251 0 0 1-1.281 1.683c-.743.722-1.623 1.217-2.675 1.4-.718.124-1.442.167-2.15-.048-.6-.182-1.015-.555-1.175-1.154L8 24.52v-.266z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fair);


/***/ }),

/***/ "fKRL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xem.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xem = {
  symbol: 'xem',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6.145 11.954c.084.7.206 1.398.365 2.093.025.111.058.209.1.3a4.53 4.53 0 0 0 8.47-.671c.11-.395.163-.817.18-1.353a6.005 6.005 0 0 1 3.169-5.178 26.063 26.063 0 0 0-2.015-.14 20.221 20.221 0 0 0-6.262.852A20.035 20.035 0 0 0 6 9.637c.002.759.05 1.53.145 2.317zm16.613 8.56a20.147 20.147 0 0 0 3.164-9.215c.05-.57.076-1.123.078-1.664a19.598 19.598 0 0 0-1.356-.704c-.763-.357-1.389-.612-2.008-.807a4.468 4.468 0 0 0-2.437-.083 4.518 4.518 0 0 0-3.382 5.219c.244 1.306.937 2.318 2.074 3.04a7.075 7.075 0 0 0 .239.146 5.933 5.933 0 0 1 2.147 2.262 5.91 5.91 0 0 1 .729 2.89c.263-.353.514-.715.752-1.084zm-3.037 3.673a.581.581 0 0 0 .118-.162l.044-.087c.09-.177.128-.251.172-.343.52-1.085.618-2.186.283-3.307a4.52 4.52 0 0 0-4.902-3.206 4.604 4.604 0 0 0-1.706.57 6.027 6.027 0 0 1-6.034-.013 20.346 20.346 0 0 0 4.063 6.031 20.375 20.375 0 0 0 3.225 2.691c.409.275.809.524 1.018.639a20.522 20.522 0 0 0 3.72-2.813z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#67B2E8"/><path fill="#FFF" d="M6.145 11.954A19.83 19.83 0 0 1 6 9.636a20.035 20.035 0 0 1 4.152-1.779 20.221 20.221 0 0 1 6.262-.853c.568.011 1.39.074 2.014.141a6.005 6.005 0 0 0-3.065 4.19c-.06.314-.093.64-.104.988-.016.536-.068.958-.18 1.353a4.53 4.53 0 0 1-8.469.672 1.475 1.475 0 0 1-.1-.3 20.172 20.172 0 0 1-.365-2.094zm16.613 8.56c-.238.37-.49.73-.752 1.085a5.898 5.898 0 0 0-.73-2.89 5.933 5.933 0 0 0-2.146-2.263l-.09-.055a7.075 7.075 0 0 1-.149-.09c-1.137-.723-1.83-1.735-2.074-3.041A4.518 4.518 0 0 1 20.2 8.041c.82-.198 1.63-.17 2.437.083.619.195 1.245.45 2.008.807.44.207.884.437 1.356.704a20.113 20.113 0 0 1-.452 4.148 20.147 20.147 0 0 1-2.79 6.731zm-3.037 3.673A20.522 20.522 0 0 1 16.001 27a15.74 15.74 0 0 1-1.017-.639 20.375 20.375 0 0 1-7.288-8.722 5.882 5.882 0 0 0 2.42.785 6.027 6.027 0 0 0 3.614-.773 4.618 4.618 0 0 1 1.706-.569 4.52 4.52 0 0 1 4.902 3.206c.335 1.121.237 2.222-.283 3.307-.044.092-.082.166-.172.343l-.044.087a.581.581 0 0 1-.118.162z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xem);


/***/ }),

/***/ "fLIG":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/hot.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Hot = {
  symbol: 'hot',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7 21.23c-.118.264-.218.5-.327.755-.182.419-.373.837-.555 1.256-.027.054-.009.072.037.081.081.019.163.028.245.037.228.009.464.018.7.018.155.01.319.01.483 0 .281-.027.563-.055.845-.1a8.122 8.122 0 0 0 2.365-.71 7.21 7.21 0 0 0 1.146-.663c.3-.228.6-.455.882-.7.182-.164.355-.337.51-.528.218-.246.418-.51.609-.773.246-.346.446-.719.61-1.11.2-.464.345-.946.436-1.437h1.837c.082 0 .127.018.127.11.01.045.019.1.037.145.1.473.245.937.455 1.373a7.322 7.322 0 0 0 1.4 2.001c.128.136.273.273.419.391.227.182.454.364.69.537.456.318.928.582 1.438.8a8.51 8.51 0 0 0 1.31.437c.372.081.754.145 1.127.2.273.036.555.063.837.063.31 0 .628-.018.937-.036.127-.01.245-.036.373-.064-.137-.309-.264-.6-.391-.891a53.702 53.702 0 0 1-.473-1.091c-.01-.019-.028-.028-.046-.037-.09-.009-.182-.009-.273-.018l-.718-.055a4.781 4.781 0 0 1-1.137-.245 5.972 5.972 0 0 1-1.1-.491 5.337 5.337 0 0 1-1.42-1.146 6.648 6.648 0 0 1-.436-.564 4.45 4.45 0 0 1-.537-1.082c-.036-.11-.063-.219-.1-.346h1.328c.146 0 .182-.027.237-.155.182-.436.373-.864.555-1.291l.263-.6c-.009-.01-.018-.01-.027-.019a2.643 2.643 0 0 0-.837-.136c-.473-.01-.955 0-1.428 0h-.1c.01-.027.01-.064.019-.091.109-.373.254-.728.436-1.064.227-.41.51-.782.837-1.11.127-.136.282-.254.418-.373.337-.282.7-.518 1.092-.709a6.308 6.308 0 0 1 2.683-.628c.054.01.1.01.154 0 .064-.018.155.019.191-.072.055-.146.118-.282.182-.419.173-.39.337-.773.5-1.155L26 9.161c-.018-.018-.018-.027-.027-.027-.21-.036-.419-.082-.628-.09-.209-.01-.418 0-.636 0-.146 0-.282.008-.428.017-.227.019-.455.037-.673.073a7.581 7.581 0 0 0-.791.146c-.346.09-.691.2-1.037.318-.5.182-.973.41-1.428.691a8.284 8.284 0 0 0-1.237.928 5.797 5.797 0 0 0-.518.537 9.583 9.583 0 0 0-.61.773c-.209.29-.39.609-.536.936-.182.391-.328.8-.437 1.228a7.53 7.53 0 0 1-.09.437h-1.847a.08.08 0 0 1-.073-.055c-.045-.2-.082-.41-.136-.61a6.333 6.333 0 0 0-.746-1.727 7.758 7.758 0 0 0-1.192-1.474c-.09-.081-.181-.163-.272-.236-.2-.164-.41-.328-.619-.482a7.999 7.999 0 0 0-1.519-.846 9.083 9.083 0 0 0-1.182-.41 8.738 8.738 0 0 0-1.928-.281 6.8 6.8 0 0 0-1.219.054L6 9.116c.091.21.182.4.264.6.109.237.209.482.318.728.091.209.182.41.273.618a.08.08 0 0 0 .055.055c.063.009.127.018.19.018.264.018.519.027.783.055.336.045.664.118.982.218.382.127.755.291 1.11.491.345.191.654.418.936.682.228.218.437.446.628.691.391.5.673 1.074.837 1.692.018.064.018.118.036.191h-.118c-.446 0-.882-.009-1.328 0a.207.207 0 0 0-.146.055.603.603 0 0 0-.081.172l-.555 1.283a13.52 13.52 0 0 1-.228.536c.01.01.019.019.037.028.027 0 .054.009.082.018.29.064.582.1.882.1h1.428c-.01.027-.01.064-.018.09a5.05 5.05 0 0 1-.455 1.129c-.228.4-.51.773-.837 1.1a6.751 6.751 0 0 1-.482.41 5.494 5.494 0 0 1-1.928.964 6.276 6.276 0 0 1-1.082.19c-.191.01-.392 0-.583 0z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#8834FF"/><path d="M7 21.23c.191 0 .392.01.583 0 .363-.027.727-.1 1.082-.19a5.494 5.494 0 0 0 1.928-.965c.164-.127.327-.263.482-.409.327-.327.61-.7.837-1.1.2-.355.345-.737.455-1.128.009-.027.009-.064.018-.091h-1.428a4.1 4.1 0 0 1-.882-.1.248.248 0 0 0-.082-.018.131.131 0 0 1-.037-.028c.082-.181.155-.354.228-.536l.555-1.283a.603.603 0 0 1 .081-.172.207.207 0 0 1 .146-.055c.446-.009.882 0 1.328 0h.118c-.018-.073-.018-.127-.036-.19a4.682 4.682 0 0 0-.837-1.693 6.426 6.426 0 0 0-.628-.69 4.666 4.666 0 0 0-.936-.683 6.341 6.341 0 0 0-1.11-.491 5.91 5.91 0 0 0-.982-.218c-.264-.028-.519-.037-.782-.055-.064 0-.128-.009-.191-.018a.082.082 0 0 1-.055-.055c-.091-.209-.182-.409-.273-.618-.11-.246-.21-.491-.318-.728-.082-.2-.173-.39-.264-.6l.191-.055c.4-.054.81-.072 1.219-.054a8.738 8.738 0 0 1 1.928.282c.4.109.8.245 1.182.409.537.227 1.046.51 1.52.846.208.154.417.318.618.482.09.073.181.155.272.236.455.437.855.937 1.192 1.474.336.536.582 1.118.746 1.728.054.2.09.41.136.61a.08.08 0 0 0 .073.054h1.846c.037-.146.064-.291.091-.437.11-.427.255-.837.437-1.228.145-.327.327-.645.536-.936.191-.264.391-.528.61-.773a5.73 5.73 0 0 1 .518-.537 8.284 8.284 0 0 1 1.237-.928c.455-.282.928-.51 1.428-.691.346-.118.691-.227 1.037-.318.263-.064.518-.11.791-.146.218-.036.446-.054.673-.073.146-.009.282-.018.428-.018.218 0 .427-.009.636 0 .21.01.419.055.628.091.009 0 .009.01.027.027l-.155.364c-.163.382-.327.764-.5 1.155a5.877 5.877 0 0 0-.182.419c-.036.09-.127.054-.19.072-.055.01-.1.01-.155 0a6.308 6.308 0 0 0-2.683.628 5.348 5.348 0 0 0-1.092.71c-.136.118-.29.236-.418.372-.328.328-.61.7-.837 1.11a5.451 5.451 0 0 0-.436 1.064c-.01.027-.01.064-.019.091h.1c.473 0 .955-.01 1.428 0 .282 0 .564.045.837.136.01.01.018.01.027.019l-.263.6c-.182.427-.373.855-.555 1.291-.055.128-.091.155-.237.155h-1.328c.037.127.064.236.1.346.128.382.31.745.537 1.082.137.2.282.382.437.564.09.109.19.218.29.309.337.327.72.61 1.128.837.346.2.719.364 1.101.49.364.128.746.21 1.137.246l.718.055c.091.01.182.01.273.018.018.01.037.018.046.037.154.363.309.727.473 1.091l.39.891c-.127.028-.245.055-.372.064-.31.018-.628.036-.937.036-.282 0-.564-.027-.837-.063a16.283 16.283 0 0 1-1.128-.2 8.51 8.51 0 0 1-1.31-.437 7.936 7.936 0 0 1-1.436-.8 19.28 19.28 0 0 1-.691-.537 4.257 4.257 0 0 1-.419-.391 7.38 7.38 0 0 1-1.4-2 6.055 6.055 0 0 1-.455-1.374c-.018-.046-.027-.1-.037-.146 0-.09-.045-.109-.127-.109h-1.837a6.713 6.713 0 0 1-.437 1.437 5.722 5.722 0 0 1-.609 1.11 9.887 9.887 0 0 1-.61.773 4.653 4.653 0 0 1-.509.527c-.282.246-.582.473-.882.7a7.216 7.216 0 0 1-1.146.665 8.122 8.122 0 0 1-2.365.709c-.282.045-.564.073-.845.1a4.26 4.26 0 0 1-.482 0c-.237 0-.473-.01-.7-.018-.083-.01-.165-.018-.246-.037-.046-.009-.064-.027-.037-.081.182-.419.373-.837.555-1.256.11-.254.21-.49.327-.754z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Hot);


/***/ }),

/***/ "fOJh":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ngc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ngc = {
  symbol: 'ngc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.5-15.158l-2.608.134 2.326-5.925-7.084.976-.634 6.532h1.55L13.805 26zm-5.498 6.498c0 .13-.11.236-.246.236s-.247-.106-.247-.236v-1.75c0-.13.11-.236.247-.236s.246.105.246.235zm-1.832-5.286l.544-5.73a.223.223 0 0 1 .226-.196h.04c.064 0 .124.025.167.07s.064.105.059.165l-.473 5.22h1.41l-.065 3.176a.27.27 0 0 1-.275.258h-.012c-.074 0-.145-.029-.197-.08s-.08-.119-.079-.19l.064-2.693zm0-6.6l6.907-.808-3.383-1.414S17.046 6.673 14.72 6l-.211.808s1.41.337 1.269 2.492z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f80000" r="16"/><path d="M20.5 16.842L13.804 26l.247-7.441H12.5l.634-6.532 7.084-.976-2.326 5.925zm-5.498 6.498v-1.75c0-.13-.11-.236-.246-.236s-.247.105-.247.235v1.751c0 .13.11.236.247.236s.246-.106.246-.236zm-1.832-5.286h1.41l-.065 2.693c-.001.071.027.14.079.19s.123.08.197.08h.012a.27.27 0 0 0 .275-.258l.065-3.177h-1.41l.473-5.219c.005-.06-.016-.12-.059-.165s-.103-.07-.167-.07h-.04a.223.223 0 0 0-.226.197zm0-6.6L15.778 9.3c.14-2.155-1.27-2.492-1.27-2.492L14.72 6c2.326.673 1.974 3.232 1.974 3.232l3.383 1.414z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ngc);


/***/ }),

/***/ "fPC3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btt = {
  symbol: 'btt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11.743-18.461a11.886 11.886 0 0 0-.698-2.241 12.102 12.102 0 0 0-1.102-2.033 11.864 11.864 0 0 0-1.457-1.763 11.864 11.864 0 0 0-1.764-1.457 12.518 12.518 0 0 0-2.032-1.102 11.886 11.886 0 0 0-9.282 0 11.864 11.864 0 0 0-3.796 2.56 11.864 11.864 0 0 0-1.457 1.762 12.518 12.518 0 0 0-1.102 2.033 11.886 11.886 0 0 0 0 9.282c.294.71.674 1.383 1.102 2.032a11.88 11.88 0 0 0 1.457 1.764 11.864 11.864 0 0 0 1.764 1.457c.636.428 1.322.796 2.032 1.102a11.886 11.886 0 0 0 9.282 0c.71-.294 1.383-.674 2.032-1.102a11.864 11.864 0 0 0 1.764-1.457 11.864 11.864 0 0 0 1.457-1.764c.428-.636.796-1.322 1.102-2.032a11.886 11.886 0 0 0 .698-7.041zM16.06 26.384c-5.767 0-10.432-4.678-10.432-10.433S10.306 5.518 16.06 5.518c5.755 0 10.433 4.678 10.433 10.433S21.816 26.384 16.06 26.384zm.184-.906h.283c.049 0 .097 0 .146-.013h.013c.049 0 .085 0 .134-.012h.037c.037 0 .074 0 .11-.012h.037c.037 0 .074-.012.123-.012h.024c.049 0 .098-.013.147-.013.049 0 .086-.012.135-.024h.024c.037 0 .074-.012.11-.012h.025c.049-.013.086-.013.135-.025.097-.012.195-.037.281-.061h.025c.036-.012.085-.012.122-.025h.012c.098-.024.184-.049.282-.073a10.948 10.948 0 0 1-2.73-.257c-1.348-.294-2.633-.82-3.723-1.727a7.544 7.544 0 0 1-2.718-5.865 7.127 7.127 0 0 1 1.677-4.555c1.396-1.653 3.38-2.523 5.412-2.572h.282V8.592h-.318a9.186 9.186 0 0 0-1.837.22 8.83 8.83 0 0 0-1.763.6c-.576.27-1.115.6-1.617.98a8.618 8.618 0 0 0-1.408 1.347 8.333 8.333 0 0 0-1.016 1.506 8.61 8.61 0 0 0-.674 1.628 8.9 8.9 0 0 0-.33 1.703l-.037.538v.318c.012.625.086 1.237.22 1.837.135.613.343 1.2.6 1.764.307.673.858 1.665 1.678 2.412a9.47 9.47 0 0 0 5.877 2.033h.221zm2.67-1.568a12.454 12.454 0 0 1-1.8-.196c-2.523-.453-4.69-1.996-5.486-4.322-.968-2.829.514-5.89 3.33-6.82a5.21 5.21 0 0 1 1.665-.27c.723 0 1.445.147 2.107.416l.685-1.457a13.136 13.136 0 0 0-.624-.232 7.213 7.213 0 0 0-2.168-.331 6.87 6.87 0 0 0-2.167.355 6.81 6.81 0 0 0-2.412 1.396 7.02 7.02 0 0 0-.918.992 6.66 6.66 0 0 0-.698 1.139 6.904 6.904 0 0 0-.686 2.584c-.061.93.061 1.86.367 2.742a6.77 6.77 0 0 0 1.47 2.437c.6.649 1.298 1.139 2.142 1.592.882.465 1.972.71 3.11.87.735.097 1.715.122 2.29.122.502-.184.71-.27.98-.38.233-.11.465-.22.698-.355.233-.135.27-.16.661-.416a.68.68 0 0 0 .098-.074c-1.347.233-1.69.22-2.645.208zm3.012-1.824c-.38.024-.919.06-1.531.06-1.09 0-2.425-.097-3.563-.477-1.764-.587-3.429-2.093-3.429-3.955a3.352 3.352 0 0 1 3.355-3.355c1.261 0 2.351.698 2.927 1.714l1.457-.722a4.734 4.734 0 0 0-.87-1.163 4.966 4.966 0 0 0-7.029 0 4.966 4.966 0 0 0-1.457 3.514 4.9 4.9 0 0 0 .43 1.984c.256.563.612 1.09 1.065 1.58.796.856 1.885 1.542 3.049 1.934 1.114.367 2.755.502 4.347.392.44-.037.771-.074 1.334-.196a9.188 9.188 0 0 0 1.47-1.457c-.38.037-1.078.11-1.555.147z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><g fill="#FFF"><path d="M27.743 13.539a11.886 11.886 0 0 0-.698-2.241 12.102 12.102 0 0 0-1.102-2.033 11.864 11.864 0 0 0-1.457-1.763 11.864 11.864 0 0 0-1.764-1.457 12.518 12.518 0 0 0-2.032-1.102 11.886 11.886 0 0 0-9.282 0 11.864 11.864 0 0 0-3.796 2.56 11.864 11.864 0 0 0-1.457 1.762 12.518 12.518 0 0 0-1.102 2.033 11.886 11.886 0 0 0 0 9.282c.294.71.674 1.383 1.102 2.032a11.88 11.88 0 0 0 1.457 1.764 11.864 11.864 0 0 0 1.764 1.457c.636.428 1.322.796 2.032 1.102a11.886 11.886 0 0 0 9.282 0c.71-.294 1.383-.674 2.032-1.102a11.864 11.864 0 0 0 1.764-1.457 11.864 11.864 0 0 0 1.457-1.764c.428-.636.796-1.322 1.102-2.032a11.886 11.886 0 0 0 .698-7.041zM16.06 26.384c-5.767 0-10.432-4.678-10.432-10.433S10.306 5.518 16.06 5.518c5.755 0 10.433 4.678 10.433 10.433S21.816 26.384 16.06 26.384z"/><path d="M16.245 25.478h.282c.049 0 .097 0 .146-.013h.013c.049 0 .085 0 .134-.012h.037c.037 0 .074 0 .11-.012h.037c.037 0 .074-.012.123-.012h.024c.049 0 .098-.013.147-.013.049 0 .086-.012.135-.024h.024c.037 0 .074-.012.11-.012h.025c.049-.013.086-.013.135-.025.097-.012.195-.037.281-.061h.025c.036-.012.085-.012.122-.025h.012c.098-.024.184-.049.282-.073a10.948 10.948 0 0 1-2.73-.257c-1.348-.294-2.633-.82-3.723-1.727a7.544 7.544 0 0 1-2.718-5.865 7.127 7.127 0 0 1 1.677-4.555c1.396-1.653 3.38-2.523 5.412-2.572h.282V8.592h-.318a9.186 9.186 0 0 0-1.837.22 8.83 8.83 0 0 0-1.763.6c-.576.27-1.115.6-1.617.98a8.618 8.618 0 0 0-1.408 1.347 8.333 8.333 0 0 0-1.016 1.506 8.61 8.61 0 0 0-.674 1.628 8.9 8.9 0 0 0-.33 1.703l-.037.538v.318c.012.625.086 1.237.22 1.837.135.613.343 1.2.6 1.764.307.673.858 1.665 1.678 2.412a9.47 9.47 0 0 0 5.877 2.033h.221z"/><path d="M18.914 23.91a12.454 12.454 0 0 1-1.8-.196c-2.522-.453-4.69-1.996-5.485-4.322-.968-2.829.514-5.89 3.33-6.82a5.21 5.21 0 0 1 1.665-.27c.723 0 1.445.147 2.107.416l.685-1.457a13.136 13.136 0 0 0-.624-.232 7.213 7.213 0 0 0-2.168-.331 6.87 6.87 0 0 0-2.167.355 6.81 6.81 0 0 0-2.412 1.396 7.02 7.02 0 0 0-.918.992 6.66 6.66 0 0 0-.698 1.139 6.904 6.904 0 0 0-.686 2.584c-.061.93.061 1.86.367 2.742a6.77 6.77 0 0 0 1.47 2.437c.6.649 1.298 1.139 2.142 1.592.882.465 1.972.71 3.11.87.735.097 1.715.122 2.29.122.502-.184.71-.27.98-.38.233-.11.465-.22.698-.355.233-.135.27-.16.661-.416a.68.68 0 0 0 .098-.074c-1.347.233-1.69.22-2.645.208z"/><path d="M21.927 22.086c-.38.024-.919.06-1.531.06-1.09 0-2.425-.097-3.563-.477-1.764-.587-3.429-2.093-3.429-3.955a3.352 3.352 0 0 1 3.355-3.355c1.261 0 2.351.698 2.927 1.714l1.457-.722a4.734 4.734 0 0 0-.87-1.163 4.966 4.966 0 0 0-7.029 0 4.966 4.966 0 0 0-1.457 3.514 4.9 4.9 0 0 0 .43 1.984c.256.563.612 1.09 1.065 1.58.796.856 1.885 1.542 3.049 1.934 1.114.367 2.755.502 4.347.392.44-.037.771-.074 1.334-.196a9.188 9.188 0 0 0 1.47-1.457c-.38.037-1.078.11-1.555.147z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btt);


/***/ }),

/***/ "fRQO":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/npxs.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Npxs = {
  symbol: 'npxs',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.028-28C9.372 4 4 9.372 4 15.972s5.372 11.982 11.982 11.982c6.609 0 11.981-5.372 11.981-11.982C27.963 9.363 22.582 4 15.973 4zm0 23.03c-6.092 0-11.058-4.956-11.058-11.058C4.924 9.88 9.88 4.923 15.972 4.923c6.093 0 11.059 4.957 11.059 11.059 0 6.092-4.957 11.049-11.059 11.049zM9.774 10.658l4.686 4.686.882-.881-4.687-4.687-.881.882zm6.818 6.82l4.686 4.687.882-.882-4.687-4.686-.881.881zm-1.496-1.502l.888.888.881-.881-.887-.888-.882.881zm1.509-1.474l.881.88 4.687-4.686-.882-.88-4.686 4.686zM9.808 21.29l.88.881 4.687-4.686-.881-.881-4.686 4.686z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F5D100"/><g fill="#FFF"><path d="M15.972 4C9.372 4 4 9.372 4 15.972s5.372 11.982 11.982 11.982c6.609 0 11.981-5.372 11.981-11.982C27.963 9.363 22.582 4 15.973 4zm0 23.03c-6.092 0-11.058-4.956-11.058-11.058C4.924 9.88 9.88 4.923 15.972 4.923c6.093 0 11.059 4.957 11.059 11.059 0 6.092-4.957 11.049-11.059 11.049z"/><path d="M9.774 10.656l.88-.881 4.688 4.687-.881.88zm6.818 6.821l.881-.881 4.687 4.687-.881.88zm-1.495-1.502l.88-.88.888.886-.88.882zm1.508-1.475l4.687-4.686.88.881-4.686 4.687zm-6.797 6.788l4.686-4.686.881.88-4.686 4.687z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Npxs);


/***/ }),

/***/ "fecL":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mnx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mnx = {
  symbol: 'mnx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M14.863 26.986v-3.37A7.7 7.7 0 0 1 8.336 16a7.7 7.7 0 0 1 6.527-7.616v-3.37C9.32 5.595 5 10.292 5 16c0 5.708 4.32 10.405 9.863 10.986zM17.038 5v3.363a7.7 7.7 0 0 1 6.585 6.474h3.363C26.44 9.617 22.268 5.48 17.038 5zM27 17.017h-3.356a7.7 7.7 0 0 1-6.606 6.62V27c5.278-.483 9.48-4.694 9.962-9.983zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00ADEF" fill-rule="nonzero"/><path fill="#FFF" d="M14.863 26.986C9.32 26.405 5 21.708 5 16c0-5.708 4.32-10.405 9.863-10.986v3.37A7.7 7.7 0 0 0 8.336 16a7.7 7.7 0 0 0 6.527 7.616v3.37zM17.038 5c5.23.479 9.403 4.617 9.948 9.837h-3.363a7.7 7.7 0 0 0-6.585-6.474V5zM27 17.017c-.482 5.29-4.684 9.5-9.962 9.983v-3.363a7.7 7.7 0 0 0 6.606-6.62H27z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mnx);


/***/ }),

/***/ "fhva":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ryo.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ryo = {
  symbol: 'ryo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.014-28C9.376 4 4 9.376 4 15.986S9.376 27.97 15.986 27.97 27.97 22.595 27.97 15.986C27.971 9.376 22.595 4 15.986 4zm0 1.632a10.34 10.34 0 0 1 10.353 10.354 10.34 10.34 0 0 1-10.353 10.353A10.34 10.34 0 0 1 5.632 15.986 10.341 10.341 0 0 1 15.986 5.632zm-4.453 5.928v8.85h8.905v-8.85h-8.905zm1.45 1.45h6.004v5.95h-6.003v-5.95z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#3D58B0"/><g fill="#FFF"><path d="M15.986 4C9.376 4 4 9.376 4 15.986S9.376 27.97 15.986 27.97 27.97 22.595 27.97 15.986C27.971 9.376 22.595 4 15.986 4zm0 1.632a10.34 10.34 0 0 1 10.353 10.354 10.34 10.34 0 0 1-10.353 10.353A10.34 10.34 0 0 1 5.632 15.986 10.341 10.341 0 0 1 15.986 5.632z"/><path d="M11.533 11.56v8.85h8.905v-8.85h-8.905zm1.45 1.45h6.004v5.95h-6.003v-5.95z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ryo);


/***/ }),

/***/ "ftRV":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gold.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gold = {
  symbol: 'gold',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.25-28C9.26 4 4 9.26 4 15.75S9.26 27.5 15.75 27.5 27.5 22.24 27.5 15.75A11.75 11.75 0 0 0 15.75 4zm0 20.57a8.82 8.82 0 1 1 0-17.64 8.82 8.82 0 0 1 0 17.64zm-2.93-8.81l2.94 4.4 2.92-4.4-2.92-4.41-2.94 4.41z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F1B32B"/><path d="M15.75 4C9.26 4 4 9.26 4 15.75S9.26 27.5 15.75 27.5 27.5 22.24 27.5 15.75A11.75 11.75 0 0 0 15.75 4zm0 20.57a8.82 8.82 0 1 1 0-17.64 8.82 8.82 0 0 1 0 17.64zm-2.93-8.81l2.94 4.4 2.92-4.4-2.92-4.41-2.94 4.41z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gold);


/***/ }),

/***/ "gY/P":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dlt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dlt = {
  symbol: 'dlt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.193-23.042a.244.244 0 0 1 .222-.143c.094 0 .18.057.22.145l6.29 13.695a.877.877 0 0 0 .794.516h.084a.57.57 0 0 0 .548-.423.955.955 0 0 0-.058-.666L16.614 6.83a.497.497 0 0 0-.135-.171.692.692 0 0 0-.892.008 1.245 1.245 0 0 0-.313.411l-7.19 15.148a.874.874 0 0 0 .29 1.09l.056.04c.138.094.3.144.466.144h10.752a.96.96 0 0 0 .835-.495.641.641 0 0 0 .031-.56l-.01-.025a.732.732 0 0 0-.674-.455H9.713z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#f4ae95" r="16"/><path d="M15.807 8.958L9.713 21.965H19.83c.293 0 .558.18.673.455l.011.025a.641.641 0 0 1-.031.56.96.96 0 0 1-.835.495H8.896a.826.826 0 0 1-.466-.145l-.056-.038a.874.874 0 0 1-.29-1.09l7.19-15.149c.075-.158.182-.298.313-.41a.692.692 0 0 1 .892-.01.497.497 0 0 1 .135.172l7.293 15.252c.1.207.12.444.058.666a.57.57 0 0 1-.548.423h-.084a.877.877 0 0 1-.794-.516L16.249 8.96a.244.244 0 0 0-.22-.145.244.244 0 0 0-.222.143z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dlt);


/***/ }),

/***/ "gYMh":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/exp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Exp = {
  symbol: 'exp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10-17.283v-3.984c-.043.016-.088.027-.127.049l-4.656 2.613c-.08.044-.087.083-.05.16.781 1.634.778 3.265-.015 4.893-.04.082-.033.123.05.17 1.552.863 3.103 1.73 4.654 2.595.03.016.062.029.106.049.005-.1.012-.18.012-.26l.004-2.507c.003-1.22.007-2.442.012-3.662 0-.039.006-.077.01-.116zM16.3 5h-.02c-.006.048-.017.095-.017.143 0 .7 0 1.4.003 2.099.003 1.013.009 2.027.01 3.04 0 .099.036.135.13.135a1.3 1.3 0 0 1 .16.01c1.784.208 3.188 1.028 4.211 2.463.081.114.08.115.2.048l4.619-2.579c.03-.017.059-.037.101-.064-.047-.028-.08-.05-.113-.068l-9.049-5.085c-.08-.045-.157-.095-.235-.142zm-.62 22h.06c.004-.025.011-.05.011-.075l-.005-2.545c-.003-.897-.007-1.794-.006-2.691 0-.1-.038-.126-.134-.13a4.507 4.507 0 0 1-.507-.048c-1.639-.266-2.945-1.051-3.9-2.377-.058-.08-.1-.099-.193-.047-1.53.857-3.06 1.711-4.59 2.566-.03.017-.056.038-.096.065.059.035.1.06.143.084l9.116 5.125c.036.02.067.048.101.073zM6 20.45v.817c.045-.011.095-.013.134-.035a4127.01 4127.01 0 0 0 4.585-2.575c.13-.073.128-.072.063-.204-.796-1.643-.8-3.286 0-4.928.044-.092.032-.13-.057-.18-1.524-.847-3.045-1.697-4.567-2.547-.03-.017-.062-.03-.106-.051-.003.045-.007.073-.007.1l-.005.962c-.005 1.487-.01 2.973-.013 4.46l-.007 2.826c0 .421-.002.842-.004 1.263 0 .03-.01.062-.016.093zm13.473-.93c-.003-.042-.006-.083-.007-.124-.018-.51-.088-1.013-.266-1.496-.193-.524-.472-.993-.94-1.335-.111-.08-.116-.079-.184.039a6.93 6.93 0 0 1-.938 1.267c-1.43 1.514-3.332 1.78-5.06 1.185-.034-.011-.066-.026-.099-.04.359.027.711.048 1.063-.005.757-.114 1.37-.448 1.76-1.112.075-.126.075-.127-.063-.188-1.056-.467-1.779-1.232-2.163-2.296-.309-.853-.36-1.733-.266-2.626.009-.08.02-.161.031-.241.013-.08.028-.159.042-.238.024.029.03.057.038.084.1.346.186.696.303 1.035.134.387.338.74.63 1.039.146.15.315.268.517.337.155.053.16.052.24-.09a4.465 4.465 0 0 1 2.509-2.085c.87-.299 1.769-.359 2.682-.273.147.014.293.036.44.054l.02-.032-.168-.144c-1.493-1.274-3.199-1.683-5.122-1.17-2.56.684-4.276 3.275-3.708 5.954.608 2.862 3.577 4.664 6.504 3.944 2.638-.648 4.337-3.095 3.954-5.702a4.994 4.994 0 0 0-1.337-2.74.236.236 0 0 0-.16-.071 4.11 4.11 0 0 0-1.259.246c-.58.224-1.051.574-1.32 1.137-.119.25-.098.199.103.3.758.38 1.38.903 1.81 1.625.374.627.552 1.308.595 2.026a5.147 5.147 0 0 1-.181 1.735zm6.268 2.212c-.056-.033-.092-.056-.128-.076l-4.644-2.575c-.137-.076-.136-.076-.23.053-1.07 1.465-2.528 2.271-4.37 2.423-.082.007-.105.035-.105.113.002 1.73.001 3.459.002 5.189 0 .033.007.067.012.122l9.463-5.25zM15.739 5.036c-.068.036-.12.061-.17.089-3.037 1.685-6.075 3.37-9.111 5.056-.055.031-.104.072-.156.108.05.034.1.07.153.1l4.52 2.51c.127.07.125.069.21-.049 1.089-1.494 2.574-2.307 4.451-2.443.1-.007.11-.047.11-.127V5.16c0-.034-.004-.068-.007-.124z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FFAA5C"/><path fill="#FFF" d="M26 14.717c-.004.039-.01.077-.01.116-.005 1.22-.01 2.441-.012 3.662l-.004 2.507c0 .08-.007.16-.012.26-.044-.02-.076-.033-.106-.05l-4.654-2.595c-.083-.046-.09-.087-.05-.169.793-1.628.796-3.26.015-4.892-.037-.078-.03-.117.05-.161l4.656-2.613c.039-.022.084-.033.127-.049v3.984zM16.3 5c.078.047.155.097.235.142l9.049 5.085c.034.019.066.04.113.068-.042.027-.07.047-.101.064l-4.618 2.579c-.121.067-.12.066-.2-.048-1.024-1.435-2.428-2.255-4.212-2.463a1.3 1.3 0 0 0-.16-.01c-.094 0-.13-.036-.13-.135-.001-1.013-.007-2.027-.01-3.04l-.003-2.099c0-.048.011-.095.017-.143h.02zm-.62 22c-.034-.025-.065-.053-.1-.073l-9.117-5.125c-.043-.024-.084-.05-.143-.084.04-.027.066-.048.096-.065 1.53-.855 3.06-1.709 4.59-2.566.092-.052.135-.032.192.047.956 1.326 2.262 2.11 3.901 2.377.167.027.338.04.507.048.096.004.134.03.134.13-.001.897.003 1.794.006 2.69l.005 2.546c0 .025-.007.05-.011.075h-.06zM6 20.45c.005-.03.015-.061.016-.092l.004-1.263.007-2.827.013-4.459.005-.961c0-.028.004-.056.007-.101.044.021.076.034.106.051 1.522.85 3.043 1.7 4.567 2.548.089.049.101.087.057.18-.8 1.641-.796 3.284 0 4.927.065.132.067.131-.063.204-1.528.86-3.056 1.718-4.585 2.575-.039.022-.09.024-.134.035v-.816zm13.473-.93c.163-.573.216-1.15.18-1.736-.042-.718-.22-1.4-.594-2.026-.43-.722-1.052-1.245-1.81-1.625-.2-.101-.222-.05-.103-.3.269-.563.74-.913 1.32-1.137a4.11 4.11 0 0 1 1.258-.246.236.236 0 0 1 .16.072 4.994 4.994 0 0 1 1.338 2.739c.383 2.607-1.316 5.054-3.954 5.702-2.927.72-5.896-1.082-6.504-3.944-.568-2.679 1.148-5.27 3.708-5.954 1.923-.513 3.629-.104 5.122 1.17l.169.144-.021.032c-.147-.018-.293-.04-.44-.054-.913-.086-1.811-.026-2.682.273a4.465 4.465 0 0 0-2.508 2.085c-.08.142-.086.143-.24.09a1.31 1.31 0 0 1-.519-.337 2.747 2.747 0 0 1-.629-1.039c-.117-.34-.203-.69-.303-1.035-.008-.027-.014-.055-.038-.084-.014.08-.03.158-.042.238-.012.08-.022.16-.03.24-.095.894-.044 1.774.265 2.627.384 1.064 1.107 1.83 2.163 2.296.138.061.138.062.064.188-.391.664-1.004.998-1.761 1.112-.352.053-.704.032-1.063.006.033.013.065.028.098.04 1.73.595 3.63.328 5.061-1.186a6.93 6.93 0 0 0 .938-1.267c.068-.118.073-.119.183-.039.469.342.748.81.94 1.335.179.483.25.985.267 1.496.001.041.004.082.007.123zm6.268 2.212l-9.463 5.249c-.005-.055-.012-.089-.012-.122 0-1.73 0-3.46-.002-5.19 0-.077.023-.105.106-.112 1.84-.152 3.299-.958 4.37-2.423.093-.129.092-.13.23-.053l4.643 2.575c.036.02.072.043.128.076zM15.739 5.036c.003.056.006.09.006.124 0 1.707 0 3.414.002 5.12 0 .08-.012.12-.11.127-1.878.136-3.363.949-4.451 2.443-.086.118-.084.119-.21.049l-4.521-2.51c-.053-.03-.102-.066-.153-.1.052-.036.1-.077.156-.108l9.11-5.056c.051-.028.103-.053.17-.089z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Exp);


/***/ }),

/***/ "gbNV":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/poly.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Poly = {
  symbol: 'poly',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-20.737l-.044-.707-.218.593-1.226 1.03-1.404.21-.42-.39 1.23-1.633L26.18 10l-1.364.028-1.983 1.382-1.859-.128L18.363 10l-1.542.3-4.81 3.845-2.32.717-.953.93-1.706.024-.845 1.51L5 17.654l1.122.147 1.043-1.353 1.612.323-.03 1.448-.805 2.084-.46 1.928-.495.769 1.256-.266-.143-.788 1.068-2.118 2.056-.797.796-1.268 1.345-.94 2.67.375 2.689-1.135-.455 1.795-1.196.104-.341 1.472 1.023-.655 1.696-.707 1.325-2 .084-.944.712.707 2.071 1.249 1.177-.537-.07-2.64-.34-1.02 1.537-.375z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#4c5a95" r="16"/><path d="M27 11.263l-.044-.707-.218.593-1.226 1.03-1.404.209-.42-.389 1.231-1.633 1.26-.366-1.364.028-1.983 1.382-1.859-.128L18.363 10l-1.542.299-4.811 3.846-2.318.717-.954.931-1.706.023-.845 1.51L5 17.654l1.122.147 1.043-1.353 1.612.323-.03 1.448-.805 2.084-.46 1.928-.495.769 1.256-.266-.143-.788 1.068-2.118 2.056-.797.796-1.268 1.345-.94 2.67.375 2.689-1.135-.455 1.795-1.196.104-.341 1.472 1.023-.655 1.696-.707 1.325-1.999.084-.945.712.707 2.071 1.249 1.177-.537-.069-2.639-.342-1.021 1.538-.375z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Poly);


/***/ }),

/***/ "gryJ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/huc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Huc = {
  symbol: 'huc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M11.5 14.5V6h-3v16h3v-4.5h9V26h3V10h-3v4.5zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ffc018" r="16"/><path d="M11.5 14.5h9V10h3v16h-3v-8.5h-9V22h-3V6h3z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Huc);


/***/ }),

/***/ "h6ac":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "hCcw":
/*!*************************************!*\
  !*** ./src/js/component-coinbox.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");




__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].component('coinbox', {
    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_js__["a" /* default */]],
    data: function data() {
        return {
            thisWallet: null
        };
    },
    props: ['coin'],
    template: '<div class="coinbox">\n                <div class="flex flex-row flex-wrap justify-center pt2 ">\n                    <coin v-for="coin in thisWallet" :key="coin.name" :coin="coin">\n                    </coin>\n                </div>\n            </div>',

    mounted: function mounted() {
        this.setupEvents();
    },

    methods: {
        setupEvents: function setupEvents() {
            var _this = this;

            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$on('wallet-built-' + this.$parent._uid, function (w) {
                _this.thisWallet = w;
            });
        }
    }
});

/* unused harmony default export */ var _unused_webpack_default_export = ('');

/***/ }),

/***/ "hFbM":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bcbc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bcbc = {
  symbol: 'bcbc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32c8.837 0 16-7.163 16-16S24.837 0 16 0 0 7.163 0 16s7.163 16 16 16zM12.483 7.793a8.755 8.755 0 1 0 10.75 12.427l-7.662-4.235L18.68 7.8a8.755 8.755 0 0 0-6.196-.007zm.546 1.573a7.089 7.089 0 0 1 5.018.006l-2.517 6.627 6.204 3.43a7.089 7.089 0 1 1-8.705-10.063zm2.936-4.386c1.191.047 2.366.287 3.48.71L15.53 15.999l9.651 5.335A11.028 11.028 0 1 1 15.965 4.98zm7.529 3.812c.264 0 .51.031.736.095.666.183 1.116.597 1.35 1.241.143.391.174.775.094 1.152-.072.374-.245.71-.519 1.01.514-.023.963.092 1.35.342.383.242.666.613.847 1.111.257.706.18 1.351-.233 1.935-.408.574-1.137 1.053-2.188 1.435l-4.164 1.516-2.931-8.053 3.934-1.432c.644-.234 1.219-.352 1.724-.352zm-.61 1.666c-.24 0-.517.058-.833.173l-1.852.674.69 1.899 1.853-.675c.46-.167.78-.374.958-.622.18-.248.212-.529.097-.843-.114-.314-.318-.505-.612-.572a1.221 1.221 0 0 0-.301-.034zm1.562 3.122c-.252.003-.548.066-.888.19l-2.174.791.724 1.99 2.174-.791c.49-.179.83-.393 1.016-.644.195-.253.23-.548.108-.886-.16-.437-.48-.654-.96-.65z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#004ab5" r="16"/><path d="M12.483 7.793a8.755 8.755 0 1 0 10.75 12.427l-7.662-4.235L18.68 7.8a8.755 8.755 0 0 0-6.196-.007zm.546 1.573a7.089 7.089 0 0 1 5.018.006l-2.517 6.627 6.204 3.43a7.089 7.089 0 1 1-8.705-10.063zm2.936-4.386c1.191.047 2.366.287 3.48.71L15.53 15.999l9.651 5.335A11.028 11.028 0 1 1 15.965 4.98zm7.529 3.812c.264 0 .51.031.736.095.666.183 1.116.597 1.35 1.241.143.391.174.775.094 1.152-.072.374-.245.71-.519 1.01.514-.023.963.092 1.35.342.383.242.666.613.847 1.111.257.706.18 1.351-.233 1.935-.408.574-1.137 1.053-2.188 1.435l-4.164 1.516-2.931-8.053 3.934-1.432c.644-.234 1.219-.352 1.724-.352zm-.61 1.666c-.24 0-.517.058-.833.173l-1.852.674.69 1.899 1.853-.675c.46-.167.78-.374.958-.622.18-.248.212-.529.097-.843-.114-.314-.318-.505-.612-.572a1.221 1.221 0 0 0-.301-.034zm1.562 3.122c-.252.003-.548.066-.888.19l-2.174.791.724 1.99 2.174-.791c.49-.179.83-.393 1.016-.644.195-.253.23-.548.108-.886-.16-.437-.48-.654-.96-.65z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bcbc);


/***/ }),

/***/ "hJQ8":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/unity.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Unity = {
  symbol: 'unity',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd" fill="${
      c ? c : this.color
    }"><path d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.712-9.268c.866.132 1.74.198 2.617.197 2.976 0 5.677-.743 7.66-1.948-2.434-3.414-6.087-8.182-9.913-9.546a8.25 8.25 0 0 0-2.78-.48c-1.002 0-1.826.19-2.478.562-.653.373-.977.847-.977 1.408-.001.212.052.422.157.61.12.203.284.381.48.522.545.39 1.722.637 3.536.748.832.047 1.48.09 1.937.149 1.345.144 2.41.559 3.198 1.242.785.685 1.178 1.522 1.178 2.522 0 1.186-.537 2.164-1.612 2.934-.81.576-1.81.936-3 1.08zM9.009 20.79a8.86 8.86 0 0 0 3.011.545c1.226 0 2.222-.249 2.987-.747s1.149-1.139 1.149-1.922c0-.623-.275-1.134-.825-1.534-1.63-1.19-5.594-.591-7.749-1.527-.616-.287-1.088-.652-1.407-1.1a2.549 2.549 0 0 1-.463-1.201c-1.725 3.06-.196 6.21 3.297 7.486zm16.903-1.915c.657-.89 1.024-1.881 1.024-2.927 0-1.045-.367-2.038-1.024-2.927zm-1.649-7.46C22.24 9.936 19.244 9 15.905 9a16.87 16.87 0 0 0-4.077.49c.78.074 1.55.234 2.293.477 4.303 1.398 7.804 5.583 10.147 8.91z"/><path d="M25.912 18.875v-5.854c.657.889 1.024 1.882 1.024 2.927 0 1.046-.367 2.037-1.024 2.927zm-1.649-7.46l.005 7.461c-2.343-3.326-5.844-7.511-10.147-8.909a10.616 10.616 0 0 0-2.293-.477A16.87 16.87 0 0 1 15.905 9c3.34 0 6.335.936 8.358 2.415z" fill-rule="nonzero" opacity=".5"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#f58634" r="16"/><g fill="#fff" fill-rule="nonzero"><path d="M13.288 22.732h.004c1.189-.144 2.189-.504 3-1.08 1.074-.77 1.611-1.748 1.611-2.934 0-1-.393-1.837-1.178-2.522-.787-.683-1.853-1.098-3.198-1.242-.457-.059-1.105-.102-1.937-.15-1.814-.11-2.991-.358-3.537-.747a1.742 1.742 0 0 1-.48-.522 1.236 1.236 0 0 1-.156-.61c0-.561.324-1.035.977-1.408.652-.372 1.476-.562 2.478-.562.949 0 1.89.162 2.78.48 3.826 1.364 7.48 6.132 9.913 9.546-1.983 1.205-4.684 1.948-7.66 1.948-.876 0-1.751-.065-2.617-.197zM9.009 20.79c-3.493-1.275-5.022-4.426-3.297-7.486.048.43.207.843.463 1.2.32.449.79.814 1.407 1.101 2.155.936 6.118.338 7.75 1.527.549.4.824.911.824 1.534 0 .783-.383 1.424-1.149 1.922-.765.498-1.761.747-2.987.747a8.86 8.86 0 0 1-3.01-.545z"/><path d="M25.912 18.875v-5.854c.657.889 1.024 1.882 1.024 2.927 0 1.046-.367 2.037-1.024 2.927zm-1.649-7.46l.005 7.461c-2.343-3.326-5.844-7.511-10.147-8.909a10.616 10.616 0 0 0-2.293-.477A16.87 16.87 0 0 1 15.905 9c3.34 0 6.335.936 8.358 2.415z" opacity=".5"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Unity);


/***/ }),

/***/ "hVwi":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/trx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Trx = {
  symbol: 'trx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.745-19.734c-.799-.567-1.654-1.172-2.49-1.772-.019-.014-.037-.028-.06-.042a1.12 1.12 0 0 0-.328-.187l-.01-.005a3200.4 3200.4 0 0 1-6.709-1.654L9.164 7.129l-.157-.042c-.18-.051-.388-.108-.61-.08a.421.421 0 0 0-.17.066l-.056.047a.69.69 0 0 0-.157.253L8 7.411v.215l.01.033c1.26 3.585 2.554 7.222 3.802 10.741.961 2.71 1.96 5.516 2.934 8.272.06.187.231.31.444.328h.046a.519.519 0 0 0 .462-.258l3.66-5.413c.891-1.317 1.783-2.638 2.675-3.955l1.095-1.622c.6-.89 1.22-1.809 1.835-2.704l.032-.046v-.057c.014-.164.018-.501-.25-.68zm-4.288 1.973c-.86.454-1.737.923-2.62 1.387l1.544-1.678c.642-.703 1.312-1.43 1.968-2.142l.014-.014c.055-.075.125-.145.199-.22.05-.051.106-.103.157-.164.342.24.688.483 1.021.722.24.173.485.347.735.52a257.207 257.207 0 0 0-3.018 1.589zm-2.208-.225c-.661.726-1.345 1.471-2.024 2.207a1308.127 1308.127 0 0 0-3.965-4.855l-1.779-2.17-.004-.005c-.134-.154-.264-.323-.393-.482-.083-.108-.171-.211-.259-.319.536.14 1.077.272 1.608.398.467.113.952.23 1.428.352l8.045 1.982c-.892.966-1.789 1.945-2.657 2.892zm-2.325 9.134c.051-.492.107-.998.153-1.495.042-.399.083-.806.125-1.195.064-.624.134-1.27.19-1.903l.013-.112c.046-.404.092-.82.12-1.238a1.38 1.38 0 0 1 .167-.08c.069-.032.138-.06.207-.102a611.674 611.674 0 0 1 3.207-1.697c1.068-.562 2.163-1.144 3.249-1.72a935.472 935.472 0 0 0-2.944 4.35c-.827 1.222-1.677 2.483-2.523 3.725-.332.497-.679 1.003-1.007 1.49-.37.544-.749 1.101-1.118 1.66.046-.563.101-1.13.161-1.683zM9.484 9.496c-.06-.169-.126-.342-.181-.506 1.248 1.528 2.504 3.065 3.729 4.555.633.773 1.266 1.542 1.899 2.32.125.145.25.3.37.45.157.192.314.394.485.586-.056.482-.102.97-.153 1.438-.032.328-.064.657-.101.99v.004c-.014.21-.042.422-.065.628l-.106.933-.005.032c-.083.947-.185 1.903-.282 2.831-.041.384-.078.778-.12 1.172-.023-.07-.05-.141-.074-.207a21.05 21.05 0 0 1-.203-.576l-.495-1.392L9.483 9.496z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><path fill="#FFF" d="M24.745 12.266c-.799-.567-1.654-1.172-2.49-1.772-.019-.014-.037-.028-.06-.042a1.12 1.12 0 0 0-.328-.187l-.01-.005a3200.4 3200.4 0 0 1-6.709-1.654L9.164 7.129l-.157-.042c-.18-.051-.388-.108-.61-.08a.421.421 0 0 0-.17.066l-.056.047a.69.69 0 0 0-.157.253L8 7.411v.215l.01.033c1.26 3.585 2.554 7.222 3.802 10.741.961 2.71 1.96 5.516 2.934 8.272.06.187.231.31.444.328h.046a.519.519 0 0 0 .462-.258l3.66-5.413c.891-1.317 1.783-2.638 2.675-3.955l1.095-1.622c.6-.89 1.22-1.809 1.835-2.704l.032-.046v-.057c.014-.164.018-.501-.25-.68m-4.288 1.974c-.86.454-1.737.923-2.62 1.387l1.544-1.678c.642-.703 1.312-1.43 1.968-2.142l.014-.014c.055-.075.125-.145.199-.22.05-.051.106-.103.157-.164.342.24.688.483 1.021.722.24.173.485.347.735.52a257.207 257.207 0 0 0-3.018 1.589m-2.208-.225c-.661.726-1.345 1.471-2.024 2.207a1308.127 1308.127 0 0 0-3.965-4.855l-1.779-2.17-.004-.005c-.134-.154-.264-.323-.393-.482-.083-.108-.171-.211-.259-.319.536.14 1.077.272 1.608.398.467.113.952.23 1.428.352l8.045 1.982c-.892.966-1.789 1.945-2.657 2.892m-2.325 9.134c.051-.492.107-.998.153-1.495.042-.399.083-.806.125-1.195.064-.624.134-1.27.19-1.903l.013-.112c.046-.404.092-.82.12-1.238a1.38 1.38 0 0 1 .167-.08c.069-.032.138-.06.207-.102a611.674 611.674 0 0 1 3.207-1.697c1.068-.562 2.163-1.144 3.249-1.72a935.472 935.472 0 0 0-2.944 4.35c-.827 1.222-1.677 2.483-2.523 3.725-.332.497-.679 1.003-1.007 1.49-.37.544-.749 1.101-1.118 1.66.046-.563.101-1.13.161-1.683M9.484 9.496c-.06-.169-.126-.342-.181-.506 1.248 1.528 2.504 3.065 3.729 4.555.633.773 1.266 1.542 1.899 2.32.125.145.25.3.37.45.157.192.314.394.485.586-.056.482-.102.97-.153 1.438-.032.328-.064.657-.101.99v.004c-.014.21-.042.422-.065.628l-.106.933-.005.032c-.083.947-.185 1.903-.282 2.831-.041.384-.078.778-.12 1.172-.023-.07-.05-.141-.074-.207a21.05 21.05 0 0 1-.203-.576l-.495-1.392L9.483 9.496"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Trx);


/***/ }),

/***/ "hY8z":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dth.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dth = {
  symbol: 'dth',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.084-28c-5.47.004-9.904 4.436-9.91 9.905.005.534.065 1.066.178 1.588a.154.154 0 0 0 .24.09 2.236 2.236 0 0 1 1.298-.418.152.152 0 0 0 .155-.177 6.04 6.04 0 0 1-.102-1.072 8.14 8.14 0 0 1 16.28 0c0 4.49-5.744 10.225-7.8 12.25a.484.484 0 0 1-.678 0 60.771 60.771 0 0 1-2.532-2.625h-.042a8.625 8.625 0 0 1-2.294-.55l-.136-.055a.152.152 0 0 0-.178.237 57.5 57.5 0 0 0 4.046 4.357 2.109 2.109 0 0 0 2.945 0c3.62-3.576 8.44-8.866 8.44-13.625-.006-5.47-4.44-9.901-9.91-9.905zm4.12 10.907v-.405a4.259 4.259 0 0 0-.091-.764 4.766 4.766 0 0 0-.22-.743 5.19 5.19 0 0 0-.345-.7 5.334 5.334 0 0 0-2.303-2.093 4.146 4.146 0 0 0-1.465-.393h-2.143a.377.377 0 0 0-.321.305v.034a.13.13 0 0 0 0 .018v6.491c.007.192.001.384-.018.575-.032.228-.091.45-.178.663a2.287 2.287 0 0 1-.952 1.116c-.2.119-.414.21-.638.273a3.241 3.241 0 0 1-.76.116c.795.575 1.73.93 2.707 1.027a6.216 6.216 0 0 0 3.003-.482 7.025 7.025 0 0 0 2.5-1.786l-.01-.009c.35-.393.637-.837.853-1.316.2-.482.321-.994.357-1.514a4.49 4.49 0 0 0 .024-.413zm1.764-.466a6.018 6.018 0 0 0-.129-1.071 6.509 6.509 0 0 0-.776-1.977A7.093 7.093 0 0 0 17.986 8.6a5.91 5.91 0 0 0-2.084-.554c-.091 0-.179 0-.279-.01h-1.998c-.064 0-.13 0-.195.014-.261.03-.515.11-.748.234a2.143 2.143 0 0 0-1.128 1.743v6.63c0 .116-.008.232-.024.347-.01.078-.029.154-.057.228a.568.568 0 0 1-.09.152.675.675 0 0 1-.344.198c-.197.05-.4.066-.603.047a3.35 3.35 0 0 1-1.941-.868.884.884 0 0 0-1.377 1.071 9.273 9.273 0 0 0 2.514 2.923 7.455 7.455 0 0 0 1.736.965 7.296 7.296 0 0 0 1.937.464 7.982 7.982 0 0 0 3.863-.604 8.241 8.241 0 0 0 3.137-2.287l.011.009a6.929 6.929 0 0 0 1.14-1.773 6.573 6.573 0 0 0 .485-2.065c.014-.178.023-.339.029-.509v-.251c.007-.074.001-.175 0-.263h-.002z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#3C80F1"/><g fill="#FFF"><path d="M16.084 4c-5.47.004-9.904 4.436-9.91 9.905.005.534.065 1.066.178 1.588a.154.154 0 0 0 .24.09 2.236 2.236 0 0 1 1.298-.418.152.152 0 0 0 .155-.177 6.04 6.04 0 0 1-.102-1.072 8.14 8.14 0 1 1 16.28 0c0 4.49-5.744 10.225-7.8 12.25a.484.484 0 0 1-.678 0 60.771 60.771 0 0 1-2.533-2.625h-.04a8.625 8.625 0 0 1-2.295-.55l-.136-.055a.152.152 0 0 0-.179.237 57.5 57.5 0 0 0 4.047 4.357 2.109 2.109 0 0 0 2.945 0c3.62-3.576 8.44-8.866 8.44-13.625-.006-5.47-4.44-9.901-9.91-9.905"/><path d="M20.204 14.907c0 .14-.011.277-.024.413a4.805 4.805 0 0 1-.357 1.514c-.216.48-.504.923-.853 1.316l.01.009a7.025 7.025 0 0 1-2.5 1.786 6.216 6.216 0 0 1-3.003.482A5.557 5.557 0 0 1 10.77 19.4c.257-.008.512-.047.76-.116a2.59 2.59 0 0 0 .638-.273 2.288 2.288 0 0 0 .952-1.116c.087-.213.146-.435.178-.663.02-.19.025-.383.018-.575v-6.49a.13.13 0 0 1 0-.019v-.034a.377.377 0 0 1 .321-.305h2.143c.508.04 1.005.173 1.465.393a5.334 5.334 0 0 1 2.303 2.093c.132.224.248.458.345.7.093.24.167.49.22.742.053.252.083.508.09.765v.406zm1.764-.466a6.018 6.018 0 0 0-.129-1.071 6.509 6.509 0 0 0-.776-1.977A7.093 7.093 0 0 0 17.986 8.6a5.91 5.91 0 0 0-2.084-.554c-.091 0-.179 0-.279-.01h-1.998c-.064 0-.13 0-.195.014-.261.03-.515.11-.748.234a2.143 2.143 0 0 0-1.128 1.743v6.63c0 .116-.008.232-.024.347-.01.078-.029.154-.057.228a.568.568 0 0 1-.09.152.675.675 0 0 1-.344.198c-.197.05-.4.066-.603.047a3.35 3.35 0 0 1-1.941-.868.884.884 0 0 0-1.377 1.071 9.273 9.273 0 0 0 2.514 2.923 7.455 7.455 0 0 0 1.736.965 7.296 7.296 0 0 0 1.937.464 7.982 7.982 0 0 0 3.863-.604 8.241 8.241 0 0 0 3.137-2.287l.011.009a6.929 6.929 0 0 0 1.14-1.773 6.573 6.573 0 0 0 .485-2.065c.014-.178.023-.339.029-.509v-.251c.007-.074.001-.175 0-.263h-.002z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dth);


/***/ }),

/***/ "hdb3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/blz.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Blz = {
  symbol: 'blz',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-4.367-11.664a1.676 1.676 0 0 0-2.4-.003c-.32.324-.5.765-.5 1.225 0 .46.18.9.5 1.225.664.674 1.738.673 2.4-.003s.662-1.77 0-2.444zm11.063-11.61a1.675 1.675 0 0 0-1.85.376 1.745 1.745 0 0 0-.498 1.223c0 .459.179.899.498 1.223.485.494 1.216.642 1.85.375s1.048-.899 1.048-1.598c0-.7-.414-1.33-1.048-1.598zM11.41 19.003l1.792 1.825 1.64-1.672a3.263 3.263 0 0 1-1.795-1.829zm9.697-6.137l-1.791-1.825-1.641 1.672c.405.165.772.413 1.081.727.308.312.55.686.71 1.098zm-.687 7.942a1.753 1.753 0 0 0 .368 1.885c.319.325.75.508 1.201.508.45 0 .882-.183 1.2-.508a1.754 1.754 0 0 0 .369-1.885 1.698 1.698 0 0 0-1.569-1.067c-.687 0-1.306.421-1.569 1.067zM9.035 9.51a1.753 1.753 0 0 0 .368 1.885c.319.324.75.507 1.201.507.45 0 .882-.183 1.2-.507a1.755 1.755 0 0 0 .369-1.885 1.698 1.698 0 0 0-1.569-1.068c-.687 0-1.306.421-1.569 1.068zM19.18 20.754l1.792-1.825-1.641-1.672a3.263 3.263 0 0 1-1.796 1.83zm-5.841-9.81l-1.792 1.826 1.641 1.672c.163-.413.406-.788.714-1.102.307-.314.674-.56 1.078-.723zm2.942-1.481c.938 0 1.7-.775 1.7-1.732 0-.459-.18-.9-.498-1.224A1.683 1.683 0 0 0 16.28 6c-.939 0-1.7.775-1.7 1.731s.761 1.732 1.7 1.732zm1.7 14.806c0-.46-.18-.9-.498-1.225a1.683 1.683 0 0 0-1.202-.507c-.939 0-1.7.775-1.7 1.732S15.342 26 16.281 26s1.7-.775 1.7-1.731zm-1.083-13.9h-1.07v2.144a3.075 3.075 0 0 1 1.07 0zm0 9.212a3.075 3.075 0 0 1-1.07 0v2.145h1.07zm5.332-3.392a1.683 1.683 0 0 0 2.772.562c.32-.325.498-.766.498-1.225 0-.7-.414-1.332-1.05-1.6a1.677 1.677 0 0 0-1.851.376 1.755 1.755 0 0 0-.369 1.887zM6.5 15.82c0 .956.761 1.731 1.7 1.731.45 0 .883-.182 1.202-.507.319-.324.497-.765.497-1.224 0-.957-.761-1.732-1.7-1.731-.938 0-1.7.775-1.699 1.731zm15.083.545v-1.091H19.48c.061.36.061.729 0 1.089zm-8.643 0a3.25 3.25 0 0 1 0-1.09h-2.105v1.09zm3.29 2.037c1.33 0 2.41-1.099 2.41-2.454-.001-1.356-1.08-2.454-2.41-2.455-1.331 0-2.41 1.099-2.41 2.455s1.079 2.454 2.41 2.454z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#18578c" r="16"/><path d="M11.633 20.336c.662.675.662 1.769 0 2.444s-1.736.677-2.4.003c-.32-.324-.5-.765-.5-1.225 0-.46.18-.9.5-1.225a1.676 1.676 0 0 1 2.4.003zm11.063-11.61a1.73 1.73 0 0 1 1.048 1.599c0 .7-.414 1.33-1.048 1.598s-1.365.12-1.85-.375a1.745 1.745 0 0 1-.498-1.223c0-.46.179-.9.498-1.223a1.675 1.675 0 0 1 1.85-.375zM11.41 19.003l1.637-1.676a3.263 3.263 0 0 0 1.796 1.83l-1.641 1.671zm9.697-6.137l-1.641 1.672a3.226 3.226 0 0 0-.71-1.098 3.227 3.227 0 0 0-1.081-.727l1.64-1.672zm-.687 7.942a1.698 1.698 0 0 1 1.569-1.067c.687 0 1.306.421 1.569 1.067.262.647.117 1.39-.368 1.885a1.68 1.68 0 0 1-1.201.508 1.68 1.68 0 0 1-1.2-.508 1.753 1.753 0 0 1-.369-1.885zM9.035 9.51a1.698 1.698 0 0 1 1.569-1.068c.687 0 1.306.421 1.569 1.068.262.646.117 1.39-.368 1.885a1.68 1.68 0 0 1-1.201.507 1.68 1.68 0 0 1-1.2-.507 1.753 1.753 0 0 1-.369-1.885zM19.18 20.754l-1.645-1.667a3.263 3.263 0 0 0 1.796-1.83l1.64 1.672zm-5.841-9.81l1.64 1.673a3.17 3.17 0 0 0-1.077.723c-.308.314-.551.69-.714 1.102l-1.64-1.672zm2.942-1.481c-.939 0-1.7-.775-1.7-1.732S15.342 6 16.281 6c.45 0 .883.182 1.202.507.319.325.498.765.497 1.224 0 .957-.76 1.732-1.7 1.732zm1.7 14.806c0 .956-.762 1.731-1.7 1.731s-1.7-.775-1.7-1.731.761-1.732 1.7-1.732c.45 0 .883.182 1.202.507.319.325.498.765.497 1.225zm-1.083-13.9v2.144a3.075 3.075 0 0 0-1.07 0v-2.144zm0 9.212v2.145h-1.07V19.58c.354.063.716.063 1.07 0zm5.332-3.392a1.755 1.755 0 0 1 .369-1.887 1.677 1.677 0 0 1 1.852-.376c.635.268 1.049.9 1.049 1.6 0 .46-.179.9-.497 1.225a1.683 1.683 0 0 1-2.773-.562zM6.5 15.82c0-.956.76-1.731 1.7-1.731.938 0 1.699.774 1.7 1.73 0 .46-.18.9-.498 1.225a1.683 1.683 0 0 1-1.202.507c-.939 0-1.7-.775-1.7-1.73zm15.083.545l-2.104-.002a3.25 3.25 0 0 0 0-1.09h2.104zm-8.643 0h-2.105v-1.09h2.105a3.25 3.25 0 0 0 0 1.09zm3.29 2.037c-1.331 0-2.41-1.099-2.41-2.454s1.079-2.455 2.41-2.455c1.33 0 2.409 1.1 2.41 2.455 0 1.355-1.08 2.454-2.41 2.454z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Blz);


/***/ }),

/***/ "hi3C":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/enj.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Enj = {
  symbol: 'enj',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.313-23c-3.022 0-6.043 0-9.052.006-.83.082-1.672.12-2.495.297-2.318.491-3.371 1.6-3.647 3.857-.047.353-.08.712-.119 1.071v3.636c.06.46.105.927.184 1.387.35 1.992 1.383 3 3.457 3.41.882.17 1.777.277 2.673.296 2.91.057 5.82.05 8.73 0 .697-.007 1.402-.057 2.073-.265.784-.24 1.133-1.172.685-1.84-.23-.347-.6-.397-.994-.397-3.101 0-6.195.006-9.296-.013-.889-.006-1.778-.057-2.64-.29-.777-.208-1.258-.674-1.455-1.424-.105-.403-.132-.813-.165-1.23-.04-.453-.046-.453.435-.453h12.99c.183 0 .374-.006.559-.038.44-.082.698-.308.724-.718.033-.51.178-1.065-.402-1.418a1.124 1.124 0 0 0-.573-.151H10.957c-.744 0-.744 0-.685-.713.132-1.518.724-2.142 2.298-2.388a8.84 8.84 0 0 1 1.422-.12c3.173-.013 6.353-.019 9.526-.025a5.12 5.12 0 0 0 .698-.05c.388-.064.632-.297.698-.675.164-.933-.152-1.393-1.12-1.576-.487-.088-.987-.12-1.48-.176z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#624dbf" r="16"/><path d="M22.313 9c.494.057.994.088 1.482.176.967.183 1.283.643 1.119 1.576-.066.378-.31.611-.698.674a5.12 5.12 0 0 1-.698.05c-3.173.007-6.353.013-9.526.026-.48 0-.955.044-1.422.12-1.574.246-2.166.87-2.298 2.388-.06.713-.06.713.685.713h13.028c.205.006.402.044.573.15.58.354.435.908.402 1.419-.026.41-.283.636-.724.718a3.341 3.341 0 0 1-.56.038h-12.99c-.48 0-.473 0-.434.454.033.416.06.826.165 1.229.197.75.678 1.216 1.455 1.424.862.233 1.751.284 2.64.29 3.1.019 6.195.013 9.296.013.395 0 .763.05.994.397.448.668.099 1.6-.685 1.84-.671.208-1.376.258-2.074.265-2.91.05-5.82.057-8.73 0a15.91 15.91 0 0 1-2.672-.296c-2.074-.41-3.108-1.418-3.457-3.41-.079-.46-.125-.926-.184-1.387v-3.636c.04-.36.072-.718.119-1.071.276-2.257 1.33-3.366 3.647-3.857.823-.177 1.665-.215 2.495-.297C16.27 9 19.29 9 22.313 9z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Enj);


/***/ }),

/***/ "hor5":
/*!**********************************!*\
  !*** ./src/js/component-coin.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__eventBus_js__ = __webpack_require__(/*! ./eventBus.js */ "/0us");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_js__ = __webpack_require__(/*! ./mixins.js */ "JHOU");




__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].component('coin', {
    mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_js__["a" /* default */]],
    props: ['coin', 'thisChart'],
    template: '<div class="flex">\n            <div class="coinBox pa1 ma1 tc"  ref="coin-{{coin.symbol}}" @mouseenter="onMouseEnter" @mouseleave="onMouseLeave">\n                <div class="fw7">{{ coin.symbol }}</div>\n                <div class="">{{ coin.holding | formatWithCommas }}</div>\n                <div v-if="coin.hasData">\n                    <div class="">${{ coin.holding_value | formatUSD }}</div>\n                    <hr>\n                    <div class="f5 mt2" >${{ coin.quote.USD.price | formatUSD }} </div>\n                    <div class="f7 tl" v-bind:class="{ \'dark-red\': coin.quote.USD.percent_change_1h<0, \'dark-green\': coin.quote.USD.percent_change_1h>0 }" >H: {{ coin.quote.USD.percent_change_1h | formatUSD}}% </div>\n                    <div class="f7 tl" v-bind:class="{ \'dark-red\': coin.quote.USD.percent_change_24h<0, \'dark-green\': coin.quote.USD.percent_change_24h>0 }" >D: {{ coin.quote.USD.percent_change_24h | formatUSD}}% </div>\n                    <div class="f7 tl" v-bind:class="{ \'dark-red\': coin.quote.USD.percent_change_7d<0, \'dark-green\': coin.quote.USD.percent_change_7d>0 }" >W: {{ coin.quote.USD.percent_change_7d | formatUSD}}% </div>\n                </div>\n                <div v-else>\n                    <div>-</div>\n                    <hr>\n                    <small>no<br>data</small>\n                </div>\n            </div>\n        </div>',
    methods: {
        onMouseEnter: function onMouseEnter(e) {
            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$emit('coin-mouseover-' + this.$parent._uid, this.coin.name);
        },
        onMouseLeave: function onMouseLeave(e) {
            __WEBPACK_IMPORTED_MODULE_1__eventBus_js__["a" /* default */].$emit('coin-mouseleave-' + this.$parent._uid, this.coin.name);
        }
    }
});
/* unused harmony default export */ var _unused_webpack_default_export = ('');

/***/ }),

/***/ "htvg":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btm.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btm = {
  symbol: 'btm',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M10.827 15.376l1.745-3.7L7.23 17.02 6 18.248l3.894 3.858-.812-3.032 1.745-3.699-1.745 3.7 5.442-5.443-1.952-1.955-1.745 3.699zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM12.926 9.082l5.442 5.442L13.752 6l-3.86 3.894 3.034-.812zm6.148 13.836l-5.442-5.442L18.248 26l3.858-3.894-3.032.812zM20.04 9.34l2.066.552.814 3.032-5.444 5.444 1.952 1.953L26 13.75l-1.638-6.113L18.248 6l-.772.775L20.04 9.34zM13.752 26l.772-.775-2.564-2.567-2.066-.552L6 18.248l1.64 6.112L13.752 26zM26 18.248l-.775-.772-2.565 2.564-.554 2.066L18.248 26l6.114-1.638L26 18.248zM6 13.752l.775.772 2.565-2.566.552-2.064L13.752 6 7.64 7.638 6 13.752zm14.32-1.183l-5.34-5.338L13.752 6l4.616 8.524 1.953-1.955zm-8.64 6.86L18.247 26l-4.616-8.524-1.953 1.952z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#504C4C"/><path fill="#FFF" d="M10.827 15.376l-1.745 3.698.812 3.032 2.066.552 2.564 2.567-.772.775-6.112-1.64L6 18.248l1.23-1.228 5.342-5.343-1.745 3.699-1.745 3.698 5.442-5.442-1.952-1.955-1.745 3.699zm2.805 2.1l5.442 5.442 3.032-.812.554-2.066 2.565-2.564.775.772-1.638 6.114L18.248 26l-6.569-6.572 1.953-1.952zm4.736-2.952l-5.442-5.442-3.034.812-.552 2.063-2.565 2.567L6 13.752l1.64-6.114L13.752 6l1.228 1.23 5.34 5.34-1.952 1.954zM20.04 9.34l-2.564-2.565.772-.775 6.114 1.638L26 13.752l-6.572 6.569-1.952-1.953 5.444-5.444-.814-3.032-2.066-.552z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btm);


/***/ }),

/***/ "i4/e":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/aeur.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Aeur = {
  symbol: 'aeur',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.048-13.014a7.144 7.144 0 0 0 .093 0 .055.055 0 0 1 .004.014.049.049 0 1 1-.097-.014zm-6.014-3.493a6.993 6.993 0 0 0 6.055 10.493 7.002 7.002 0 0 0 6.993-6.993 6.96 6.96 0 0 0-.94-3.503 6.993 6.993 0 1 0-12.11.003zM16.048 12a7.138 7.138 0 0 0-.097 0 .049.049 0 0 1 .049-.05.055.055 0 0 1 .049.05z"/>`;
  },
  colorIcon() {
    return `<defs><linearGradient x1="50%" y1="0%" x2="50%" y2="143.239%" id="a"><stop stop-color="#FFF" offset="0%"/><stop stop-color="#FFF" stop-opacity=".83" offset="3%"/><stop stop-color="#FFF" stop-opacity=".66" offset="7%"/><stop stop-color="#FFF" stop-opacity=".5" offset="11%"/><stop stop-color="#FFF" stop-opacity=".37" offset="15%"/><stop stop-color="#FFF" stop-opacity=".25" offset="19%"/><stop stop-color="#FFF" stop-opacity=".16" offset="25%"/><stop stop-color="#FFF" stop-opacity=".09" offset="30%"/><stop stop-color="#FFF" stop-opacity=".04" offset="37%"/><stop stop-color="#FFF" stop-opacity=".01" offset="47%"/><stop stop-color="#FFF" stop-opacity="0" offset="100%"/></linearGradient></defs><g fill="none"><circle cx="16" cy="16" r="16" fill="#051D2D"/><g transform="translate(9 6)" fill="url(#a)"><path d="M6.993 13.986a6.993 6.993 0 1 1 6.993-6.993 7.002 7.002 0 0 1-6.993 6.993zM7 6.951A.049.049 0 1 0 7.049 7a.055.055 0 0 0-.05-.05z"/><path d="M6.993 20.986a6.993 6.993 0 1 1 6.993-6.993 7.002 7.002 0 0 1-6.993 6.993zM7 13.951a.049.049 0 1 0 .049.049.055.055 0 0 0-.05-.05z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Aeur);


/***/ }),

/***/ "iNZx":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btc = {
  symbol: 'btc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.189-17.98c.314-2.096-1.283-3.223-3.465-3.975l.708-2.84-1.728-.43-.69 2.765c-.454-.114-.92-.22-1.385-.326l.695-2.783L15.596 6l-.708 2.839c-.376-.086-.746-.17-1.104-.26l.002-.009-2.384-.595-.46 1.846s1.283.294 1.256.312c.7.175.826.638.805 1.006l-.806 3.235c.048.012.11.03.18.057l-.183-.045-1.13 4.532c-.086.212-.303.531-.793.41.018.025-1.256-.313-1.256-.313l-.858 1.978 2.25.561c.418.105.828.215 1.231.318l-.715 2.872 1.727.43.708-2.84c.472.127.93.245 1.378.357l-.706 2.828 1.728.43.715-2.866c2.948.558 5.164.333 6.097-2.333.752-2.146-.037-3.385-1.588-4.192 1.13-.26 1.98-1.003 2.207-2.538zm-3.95 5.538c-.533 2.147-4.148.986-5.32.695l.95-3.805c1.172.293 4.929.872 4.37 3.11zm.535-5.569c-.487 1.953-3.495.96-4.47.717l.86-3.45c.975.243 4.118.696 3.61 2.733z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#F7931A"/><path fill="#FFF" fill-rule="nonzero" d="M23.189 14.02c.314-2.096-1.283-3.223-3.465-3.975l.708-2.84-1.728-.43-.69 2.765c-.454-.114-.92-.22-1.385-.326l.695-2.783L15.596 6l-.708 2.839c-.376-.086-.746-.17-1.104-.26l.002-.009-2.384-.595-.46 1.846s1.283.294 1.256.312c.7.175.826.638.805 1.006l-.806 3.235c.048.012.11.03.18.057l-.183-.045-1.13 4.532c-.086.212-.303.531-.793.41.018.025-1.256-.313-1.256-.313l-.858 1.978 2.25.561c.418.105.828.215 1.231.318l-.715 2.872 1.727.43.708-2.84c.472.127.93.245 1.378.357l-.706 2.828 1.728.43.715-2.866c2.948.558 5.164.333 6.097-2.333.752-2.146-.037-3.385-1.588-4.192 1.13-.26 1.98-1.003 2.207-2.538zm-3.95 5.538c-.533 2.147-4.148.986-5.32.695l.95-3.805c1.172.293 4.929.872 4.37 3.11zm.535-5.569c-.487 1.953-3.495.96-4.47.717l.86-3.45c.975.243 4.118.696 3.61 2.733z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btc);


/***/ }),

/***/ "iOOw":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rlc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rlc = {
  symbol: 'rlc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.683-19.114c-1.63.171-2.866 1.657-2.754 3.314 0 .457-.169.857-.562 1.086a1.12 1.12 0 0 1-.618.171c-.225 0-.394-.057-.619-.171-.506-.286-1.068-.457-1.63-.457h-.337c-1.63.171-2.81 1.657-2.699 3.314 0 .457-.168.857-.562 1.086a1.12 1.12 0 0 1-.618.171.939.939 0 0 1-.562-.171c-.506-.286-1.068-.458-1.63-.458h-.338c-1.517.172-2.642 1.486-2.698 3.086 0 1.714 1.35 3.143 3.036 3.143h.28c1.462-.171 2.643-1.314 2.755-2.8v-.514c0-.457.169-.857.562-1.086a1.12 1.12 0 0 1 .619-.171c.225 0 .393.057.618.171.506.286 1.068.457 1.63.457h.337a3.08 3.08 0 0 0 2.699-2.8v-.514c0-.457.168-.857.562-1.086a1.12 1.12 0 0 1 .618-.171c.225 0 .394.057.562.171.506.286 1.068.457 1.63.457h.338C25.82 18.83 27 17.572 27 15.972c0-1.715-1.35-3.143-3.036-3.143-.112 0-.224 0-.28.057zM17.22 8.943c-1.63.171-2.867 1.657-2.755 3.314 0 .457-.168.857-.562 1.086a1.12 1.12 0 0 1-.618.171.939.939 0 0 1-.562-.171c-.506-.286-1.068-.457-1.63-.457h-.338c-1.517.228-2.642 1.486-2.642 3.028 0 1.715 1.35 3.143 3.036 3.143h.281c1.462-.172 2.642-1.315 2.754-2.8v-.514c0-.457.17-.857.563-1.086a1.12 1.12 0 0 1 .618-.171.94.94 0 0 1 .562.171c.506.286 1.068.457 1.63.457h.337c1.518-.171 2.643-1.485 2.699-3.085 0-1.715-1.35-3.143-3.036-3.143-.168 0-.225 0-.337.057zM11.036 5C9.359 5 8 6.382 8 8.086s1.36 3.085 3.036 3.085S14.07 9.79 14.07 8.086 12.711 5 11.036 5z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FFD800"/><path fill="#FFF" d="M23.683 12.886c.057-.057.17-.057.281-.057 1.687 0 3.036 1.428 3.036 3.143 0 1.6-1.18 2.857-2.698 3.142h-.338c-.562 0-1.124-.171-1.63-.457a.939.939 0 0 0-.562-.171c-.225 0-.45.057-.618.171-.394.229-.562.629-.562 1.086v.514a3.08 3.08 0 0 1-2.699 2.8h-.337c-.562 0-1.124-.171-1.63-.457-.225-.114-.393-.171-.618-.171-.225 0-.45.057-.619.171-.393.229-.562.629-.562 1.086v.514c-.112 1.486-1.293 2.629-2.754 2.8h-.281c-1.687 0-3.036-1.429-3.036-3.143.056-1.6 1.18-2.914 2.698-3.086h.338c.562 0 1.124.172 1.63.458a.939.939 0 0 0 .562.171c.225 0 .45-.057.618-.171.394-.229.562-.629.562-1.086-.112-1.657 1.069-3.143 2.699-3.314h.337c.562 0 1.124.171 1.63.457.225.114.394.171.619.171.224 0 .45-.057.618-.171.393-.229.562-.629.562-1.086-.112-1.657 1.124-3.143 2.754-3.314zM17.22 8.943c.112-.057.169-.057.337-.057 1.687 0 3.036 1.428 3.036 3.143-.056 1.6-1.18 2.914-2.699 3.085h-.337c-.562 0-1.124-.171-1.63-.457a.939.939 0 0 0-.562-.171c-.225 0-.45.057-.618.171-.394.229-.563.629-.563 1.086v.514c-.112 1.485-1.292 2.628-2.754 2.8h-.281c-1.686 0-3.036-1.428-3.036-3.143 0-1.542 1.125-2.8 2.642-3.028h.338c.562 0 1.124.171 1.63.457a.939.939 0 0 0 .562.171c.225 0 .45-.057.618-.171.394-.229.562-.629.562-1.086-.112-1.657 1.125-3.143 2.755-3.314zM11.036 5c1.676 0 3.035 1.382 3.035 3.086s-1.36 3.085-3.035 3.085C9.359 11.171 8 9.79 8 8.086S9.36 5 11.036 5z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rlc);


/***/ }),

/***/ "iQv3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dai.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dai = {
  symbol: 'dai',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.633-16.183L15.817 5 5 15.817l10.817 3.996 10.816-3.996zM8.364 14.9l7.333-7.498s7.169 7.333 7.471 7.48c.303.146-4.931 0-4.931 0l-2.42-2.475-2.448 2.493H8.364zm7.453 5.674L5 16.605l10.817 10.028L26.633 16.55l-10.816 4.024z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#B68900"/><path d="M26.633 15.817L15.817 5 5 15.817l10.817 3.996 10.816-3.996zM8.364 14.9l7.333-7.498s7.169 7.333 7.471 7.48c.303.146-4.931 0-4.931 0l-2.42-2.475-2.448 2.493H8.364zm7.453 5.674l10.816-4.024-10.816 10.083L5 16.605l10.817 3.97z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dai);


/***/ }),

/***/ "iXb3":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/coqui.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Coqui = {
  symbol: 'coqui',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.82-17.285c.377-.018.75-.091 1.18-.146-.087-.62-.132-1.218-.26-1.797-.533-2.417-1.796-4.374-3.78-5.85-1.661-1.233-3.538-1.863-5.604-1.911-.863-.02-1.726-.007-2.59-.004a9.6 9.6 0 0 0-2.497.338 9.83 9.83 0 0 0-7.252 9.203 43.836 43.836 0 0 0 .028 3.156c.022.553.098 1.113.224 1.652.563 2.429 1.869 4.375 3.892 5.826 1.681 1.205 3.57 1.792 5.635 1.814.745.008 1.49 0 2.235.002a9.524 9.524 0 0 0 2.083-.205c3.055-.675 5.313-2.406 6.777-5.171.593-1.12.914-2.327 1.036-3.588.018-.194.021-.39.033-.62-.68-.063-1.34-.15-2.003-.177a18.66 18.66 0 0 0-1.907.026c-.563.035-1.124.126-1.685.2a.472.472 0 0 0-.225.1c-1.109.905-2.196 1.838-3.163 2.9-.392.43-.768.872-.931 1.458-.16.57-.617.888-1.213.888a1.324 1.324 0 0 1-1.303-1.116c-.091-.64.232-1.272.888-1.429.328-.078.622-.234.863-.466a68.31 68.31 0 0 0 1.565-1.553c.244-.25.462-.527.688-.795.188-.223.106-.45-.178-.496-.102-.016-.206-.021-.309-.028-.757-.047-1.514-.114-2.271-.132a20.9 20.9 0 0 0-1.787.056c-.37.023-.729.11-1.058.3a1.434 1.434 0 0 1-.408.166c-.492.103-1.04-.175-1.318-.651a1.327 1.327 0 0 1 .201-1.588c.334-.342.934-.58 1.513-.232.175.104.375.192.573.226.431.072.868.14 1.303.144.779.008 1.558-.023 2.336-.055.413-.017.825-.06 1.236-.108.265-.03.353-.27.18-.477-.604-.725-1.226-1.435-1.92-2.076-.387-.358-.796-.674-1.327-.802a.901.901 0 0 1-.39-.228c-.613-.592-.488-1.625.24-2.069.694-.423 1.63-.142 1.854.589.166.542.462.988.828 1.401 1.004 1.13 2.149 2.108 3.314 3.063a.409.409 0 0 0 .197.092c.704.082 1.407.2 2.113.225.787.028 1.577-.018 2.364-.055z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#71C800" fill-rule="nonzero"/><path fill="#FFF" d="M25.82 14.715c-.787.037-1.577.083-2.364.055-.706-.026-1.409-.143-2.113-.225a.409.409 0 0 1-.197-.092c-1.165-.955-2.31-1.932-3.314-3.063-.366-.413-.662-.859-.828-1.401-.223-.731-1.16-1.012-1.854-.589-.728.444-.853 1.477-.24 2.069a.901.901 0 0 0 .39.228c.53.128.94.444 1.327.802.694.641 1.316 1.35 1.92 2.076.173.207.085.447-.18.477-.41.048-.823.091-1.236.108-.778.032-1.557.063-2.336.055-.435-.005-.872-.072-1.303-.144a1.693 1.693 0 0 1-.573-.226c-.579-.347-1.179-.11-1.513.232a1.327 1.327 0 0 0-.201 1.588c.278.476.826.754 1.318.65.142-.03.282-.093.408-.166.33-.188.688-.276 1.058-.299.594-.036 1.192-.07 1.787-.056.757.018 1.514.085 2.271.132.103.007.207.012.309.028.284.046.366.273.178.496-.226.268-.444.545-.688.795a68.31 68.31 0 0 1-1.565 1.553 1.852 1.852 0 0 1-.863.466c-.656.157-.98.79-.888 1.43.092.636.66 1.114 1.303 1.115.596 0 1.054-.318 1.213-.888.163-.586.539-1.028.931-1.459.967-1.061 2.054-1.994 3.163-2.9a.472.472 0 0 1 .225-.1c.561-.073 1.122-.164 1.685-.199a18.66 18.66 0 0 1 1.907-.026c.663.027 1.323.114 2.003.177-.012.23-.015.426-.033.62-.122 1.26-.443 2.467-1.036 3.588-1.464 2.765-3.722 4.496-6.777 5.171a9.524 9.524 0 0 1-2.083.205c-.745-.001-1.49.006-2.235-.002-2.065-.022-3.954-.61-5.635-1.814-2.023-1.45-3.33-3.397-3.892-5.826a8.885 8.885 0 0 1-.224-1.652 43.836 43.836 0 0 1-.028-3.156 9.83 9.83 0 0 1 7.252-9.203 9.6 9.6 0 0 1 2.497-.338c.864-.003 1.727-.016 2.59.004 2.066.048 3.943.678 5.603 1.912 1.985 1.475 3.248 3.432 3.78 5.849.129.58.174 1.178.261 1.797-.43.055-.803.128-1.18.146z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Coqui);


/***/ }),

/***/ "icOs":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/poe.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Poe = {
  symbol: 'poe',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.758-24.268A4.283 4.283 0 0 0 21.742 6.5c-1.145 0-2.211.44-3.016 1.232L8.87 17.438a.5.5 0 0 0-.145.382v4.996L6 25.5h1.503l2.018-1.987h5.044a.51.51 0 0 0 .378-.162l9.806-9.658.01-.01A4.162 4.162 0 0 0 26 10.724a4.171 4.171 0 0 0-1.242-2.99zM19.026 8.86l.417-.41a3.253 3.253 0 0 1 2.299-.936c.863 0 1.678.334 2.299.936.01.01.02.028.039.038.591.602.911 1.385.911 2.226 0 .85-.34 1.652-.95 2.264l-.427.42h-3.812l2.503-2.465a.514.514 0 0 0 .019-.716c-.01-.01-.01-.02-.02-.029a.539.539 0 0 0-.746 0l-2.522 2.484V8.859zM10.55 22.501l2.056-2.026h3.812l-2.056 2.026zm5.984-5.904l2.435-2.398h3.812l-2.435 2.398zm2.978.822l-2.27 2.235H13.43l2.27-2.235zm-3.753-5.34l2.444-2.408v3.802l-2.444 2.417zm-3.104 3.056l2.27-2.235v3.802l-2.27 2.235zm-2.91 2.866l2.085-2.044v3.802l-2.085 2.044z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#dcd6cc" r="16"/><path d="M24.758 7.732A4.283 4.283 0 0 0 21.742 6.5c-1.145 0-2.211.44-3.016 1.232L8.87 17.438a.5.5 0 0 0-.145.382v4.996L6 25.5h1.503l2.018-1.987h5.044a.51.51 0 0 0 .378-.162l9.806-9.658.01-.01A4.162 4.162 0 0 0 26 10.724a4.171 4.171 0 0 0-1.242-2.99zM19.026 8.86l.417-.41a3.253 3.253 0 0 1 2.299-.936c.863 0 1.678.334 2.299.936.01.01.02.028.039.038.591.602.911 1.385.911 2.226 0 .85-.34 1.652-.95 2.264l-.427.42h-3.812l2.503-2.465a.514.514 0 0 0 .019-.716c-.01-.01-.01-.02-.02-.029a.539.539 0 0 0-.746 0l-2.522 2.484V8.859zM10.55 22.501l2.056-2.026h3.812l-2.056 2.026zm5.984-5.904l2.435-2.398h3.812l-2.435 2.398zm2.978.822l-2.27 2.235H13.43l2.27-2.235zm-3.753-5.34l2.444-2.408v3.802l-2.444 2.417zm-3.104 3.056l2.27-2.235v3.802l-2.27 2.235zm-2.91 2.866l2.085-2.044v3.802l-2.085 2.044z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Poe);


/***/ }),

/***/ "irhm":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/iop.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Iop = {
  symbol: 'iop',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M10.123 8.283l-3.625 3.293v3.233l-.355.639a1.14 1.14 0 0 0 0 1.104l.355.639v7.199h3.998l.025.044c.194.35.558.566.952.566h8.955c.39 0 .75-.212.946-.557l.592-1.04 3.437-2.98v-3.07l.449-.791a1.14 1.14 0 0 0 0-1.124l-.449-.79v-7.14h-4.058A1.089 1.089 0 0 0 20.428 7h-8.955a1.09 1.09 0 0 0-.952.566zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.473 8.119h8.955L24.905 16l-4.477 7.881h-8.955L7.095 16zm.405.712L7.895 16l3.983 7.17h8.149L24.1 16l-4.073-7.17zm1.883 3.05h4.677l2.189 4.068-2.19 4.068h-4.676l-2.189-4.068z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#4cb8d1" fill-rule="nonzero" r="16"/><path d="M10.123 8.283l.398-.717A1.09 1.09 0 0 1 11.473 7h8.955c.371 0 .716.192.917.508h4.058v7.14l.449.79a1.14 1.14 0 0 1 0 1.124l-.449.79v3.072l-3.437 2.978-.592 1.041a1.09 1.09 0 0 1-.946.557h-8.955a1.09 1.09 0 0 1-.952-.566l-.025-.044H6.498v-7.2l-.355-.639a1.14 1.14 0 0 1 0-1.104l.355-.639v-3.233zm1.35-.164L7.095 16l4.378 7.881h8.955L24.905 16l-4.477-7.881zm.405.712h8.149L24.1 16l-4.073 7.17h-8.149L7.895 16zm1.883 3.05l-2.189 4.068 2.19 4.068h4.676l2.189-4.068-2.19-4.068z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Iop);


/***/ }),

/***/ "iyJi":
/*!*************************!*\
  !*** ./src/js/store.js ***!
  \*************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__ = __webpack_require__(/*! vue/dist/vue.esm.js */ "7+uW");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(/*! vuex */ "NYxO");



__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm_js__["a" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */]);

var store = new __WEBPACK_IMPORTED_MODULE_1_vuex__["a" /* default */].Store({
  state: {
    count: 0,
    allCoins: []
  },
  mutations: {
    increment: function increment(state) {
      state.count++;
    },
    addAllCoins: function addAllCoins(state, coin) {
      state.allCoins = coin;
    }
  },
  getters: {
    allCoins: function allCoins(state) {
      return state.allCoins;
    }
  }
});

/* harmony default export */ __webpack_exports__["a"] = (store);

/***/ }),

/***/ "jEzQ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dcr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dcr = {
  symbol: 'dcr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.144-14.38l6.023 5.257h3.99l-3.484-3.042a5.632 5.632 0 0 0 3.38-6.29A5.602 5.602 0 0 0 19.274 9h-4.419l3.014 2.629h1.406a2.987 2.987 0 0 1 2.978 2.995 2.987 2.987 0 0 1-2.978 2.995h-4.42zm2.157-3.36L10.993 9h-3.99l3.481 3.043a5.632 5.632 0 0 0-3.38 6.29 5.602 5.602 0 0 0 5.49 4.545h4.418L14 20.25h-1.407a2.987 2.987 0 0 1-2.978-2.995 2.987 2.987 0 0 1 2.978-2.995h4.42z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2ED6A1"/><path fill="#FFF" fill-rule="nonzero" d="M14.856 17.62h4.42a2.987 2.987 0 0 0 2.978-2.996 2.987 2.987 0 0 0-2.978-2.995H17.87L14.856 9h4.42a5.602 5.602 0 0 1 5.488 4.545 5.632 5.632 0 0 1-3.379 6.29l3.485 3.042h-3.991l-6.023-5.258zm2.157-3.36h-4.42a2.987 2.987 0 0 0-2.978 2.994 2.987 2.987 0 0 0 2.978 2.995H14l3.012 2.63h-4.419a5.602 5.602 0 0 1-5.488-4.545 5.632 5.632 0 0 1 3.379-6.29L7.002 9h3.991l6.02 5.26z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dcr);


/***/ }),

/***/ "jKc5":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eos.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eos = {
  symbol: 'eos',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.428-20.453l-2.47 11.284a.322.322 0 0 0 .155.363l7.573 4.745c.056.035.116.05.173.05a.317.317 0 0 0 .174-.05l7.573-4.745a.322.322 0 0 0 .154-.363l-2.47-11.284a.322.322 0 0 0-.058-.13l-5.11-6.982a.311.311 0 0 0-.263-.132.311.311 0 0 0-.262.132l-5.11 6.983a.322.322 0 0 0-.059.13zm-1.395 9.367l1.767-8.07 1.01 3.171-2.777 4.899zm-.216 1.68l3.257-5.748 1.83 5.747H8.96zm.565.64h4.726l1.178 3.699-5.904-3.7zm2.857-7.978l-1.143-3.588 4.44-6.065v3.836l-3.297 5.817zm3.62 11.369l-1.08-3.392h2.16l-1.08 3.392zm.574.308l1.178-3.7h4.726l-5.904 3.7zm4.486-14.089l1.766 8.07-2.776-4.899 1.01-3.17zm-1.44 2.412L16.327 9.44V5.603l4.44 6.065-1.144 3.588zm3.422 7.337H17.96l1.83-5.747 3.256 5.747zm-7.042-12.427l3.356 5.921-2.072 6.506H14.72l-2.072-6.506 3.355-5.921z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#000" fill-rule="nonzero"/><path stroke="#FFF" stroke-linecap="round" stroke-linejoin="round" stroke-width=".64" d="M10.886 11.61L16 27.667l-7.588-4.754 2.474-11.303L16 4.624v4.9L8.412 22.913h15.183L16.007 9.524v-4.9l5.113 6.986 2.475 11.303-7.588 4.754L21.12 11.61"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eos);


/***/ }),

/***/ "jYtf":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ong.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ong = {
  symbol: 'ong',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.057-5.689c5.74 0 10.088-3.846 10.99-8.878h-4.897c-.732 2.672-3.004 4.628-6.035 4.628-3.009 0-5.31-1.97-6.073-4.628H5c.869 5.05 5.18 8.878 10.943 8.878zm.028-16.257a2.527 2.527 0 1 0 0-5.054 2.527 2.527 0 0 0 0 5.054zm-6.316 7.38h12.63c-.006-3.594-2.633-6.577-6.345-6.577-3.711 0-6.285 2.933-6.285 6.525v.051z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#000" fill-rule="nonzero"/><g transform="translate(5 5)" fill="#FFF"><path d="M10.943 21.311c5.74 0 10.088-3.846 10.99-8.878h-4.897c-.732 2.672-3.004 4.628-6.035 4.628-3.009 0-5.31-1.97-6.073-4.628H0c.869 5.05 5.18 8.878 10.943 8.878z"/><circle cx="10.971" cy="2.527" r="2.527"/><path d="M4.655 12.433v-.05c0-3.593 2.574-6.526 6.285-6.526 3.712 0 6.34 2.983 6.346 6.576H4.655z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ong);


/***/ }),

/***/ "jZFQ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ppp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ppp = {
  symbol: 'ppp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.312-24.956a1.255 1.255 0 0 0-1.802 0L19.183 9.43 16.2 6.377a1.204 1.204 0 0 0-.2-.166 1.147 1.147 0 0 0-1.488.139l-.025.026h-.001l-.001.002-7.624 7.819a.198.198 0 0 1-.014.015l-.016.015c-.44.45-.44 1.181 0 1.632l2.306 2.354c.44.443 1.146.44 1.582-.007a1.17 1.17 0 0 0 .007-1.62l-1.45-1.483 6.005-6.16 3.118 3.195c.382.39.97.477 1.442.21a1.29 1.29 0 0 0 .342-.25l3.13-3.208a1.33 1.33 0 0 0 0-1.846zm1.858 9.102l-.028-.029-.003-.002-.002-.002-2.273-2.325a1.105 1.105 0 0 0-1.582.007 1.17 1.17 0 0 0-.007 1.62l1.45 1.483-5.994 6.144-3.126-3.198a1.193 1.193 0 0 0-1.12-.336c-.249.05-.478.176-.656.362l-3.13 3.208c-.324.329-.451.81-.334 1.262.118.452.462.805.904.925s.911-.01 1.233-.342l2.313-2.378 2.917 2.984a1.148 1.148 0 0 0 1.754.122l7.654-7.848a.198.198 0 0 1 .015-.015l.016-.015a1.165 1.165 0 0 0-.001-1.627z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#348f8d" r="16"/><path d="M23.312 7.044a1.33 1.33 0 0 1 0 1.846l-3.13 3.209a1.29 1.29 0 0 1-.342.25 1.19 1.19 0 0 1-1.442-.211L15.28 8.944l-6.005 6.159 1.45 1.483a1.17 1.17 0 0 1-.007 1.62 1.105 1.105 0 0 1-1.582.007L6.83 15.86a1.174 1.174 0 0 1 0-1.632l.016-.015a.198.198 0 0 0 .014-.015l7.624-7.82h.001l.001-.001.025-.026A1.147 1.147 0 0 1 16 6.21c.072.049.14.104.2.167l2.984 3.053 2.327-2.386a1.255 1.255 0 0 1 1.802 0zm1.858 9.102a1.165 1.165 0 0 1 .001 1.627l-.016.015a.198.198 0 0 0-.015.015l-7.654 7.847a1.148 1.148 0 0 1-1.754-.121l-2.917-2.984-2.313 2.378c-.322.332-.792.463-1.233.342s-.786-.473-.904-.925c-.117-.451.01-.933.335-1.262l3.129-3.208c.178-.186.407-.312.657-.362.404-.09.826.036 1.119.336l3.126 3.198 5.994-6.144-1.45-1.483a1.17 1.17 0 0 1 .007-1.62 1.105 1.105 0 0 1 1.582-.007l2.273 2.325.002.002.003.002z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ppp);


/***/ }),

/***/ "ji6n":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/med.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Med = {
  symbol: 'med',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8-19.939l-8 4.805-8-4.805v8.915l2.536 1.48v-5.953L16 19.777l5.464-3.27v5.95L24 20.977V12.06zm-7.97 11.117l-2.338-1.399-2.31 1.399L16.03 26l4.649-2.822-2.31-1.399-2.34 1.399zm4.62-14.356L16 6l-4.65 2.822 2.311 1.399L16 8.822l2.339 1.399 2.31-1.399z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00B0FF"/><path fill="#FFF" fill-rule="nonzero" d="M24 12.061v8.915l-2.536 1.48v-5.95L16 19.776l-5.464-3.273v5.953L8 20.976V12.06l8 4.805 8-4.805zm-7.97 11.117l2.34-1.399 2.31 1.399L16.03 26l-4.648-2.822 2.31-1.399 2.339 1.399zm4.62-14.356l-2.311 1.399L16 8.822l-2.339 1.399-2.31-1.399L16 6l4.65 2.822z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Med);


/***/ }),

/***/ "juRA":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/yoyow.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Yoyow = {
  symbol: 'yoyow',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M21.49 16.575A.743.743 0 0 0 22.687 16a.72.72 0 0 0-.157-.45c.369.334.86.538 1.4.538 1.144 0 2.071-.915 2.071-2.044S25.073 12 23.929 12s-2.071.915-2.071 2.044c0 .532.206 1.017.545 1.381a.743.743 0 0 0-1.196.575c0 .17.059.326.157.45a2.079 2.079 0 0 0-1.4-.538c-.54 0-1.03.204-1.4.538a.72.72 0 0 0 .158-.45.743.743 0 1 0-1.196-.575 2.02 2.02 0 0 0 .545-1.381C18.071 12.915 17.144 12 16 12s-2.071.915-2.071 2.044c0 .532.206 1.017.545 1.381a.743.743 0 0 0-1.196.575c0 .17.059.326.157.45a2.079 2.079 0 0 0-1.4-.538c-.54 0-1.03.204-1.4.538a.72.72 0 0 0 .158-.45.743.743 0 1 0-1.196-.575 2.02 2.02 0 0 0 .545-1.381c0-1.129-.927-2.044-2.071-2.044C6.927 12 6 12.915 6 14.044s.927 2.044 2.071 2.044c.54 0 1.031-.204 1.4-.538a.72.72 0 0 0-.157.45c0 .403.33.73.74.73.171 0 .33-.058.455-.155a2.022 2.022 0 0 0-.545 1.381c0 1.129.928 2.044 2.072 2.044 1.143 0 2.07-.915 2.07-2.044 0-.532-.206-1.017-.544-1.381A.743.743 0 0 0 14.757 16a.72.72 0 0 0-.157-.45c.369.334.86.538 1.4.538s1.031-.204 1.4-.538a.72.72 0 0 0-.157.45c0 .403.33.73.74.73.171 0 .33-.058.455-.155a2.022 2.022 0 0 0-.545 1.381c0 1.129.928 2.044 2.071 2.044 1.144 0 2.072-.915 2.072-2.044 0-.532-.207-1.017-.545-1.381zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#21a5de" r="16"/><path d="M21.49 16.575c.34.364.546.849.546 1.381 0 1.129-.928 2.044-2.072 2.044-1.143 0-2.07-.915-2.07-2.044 0-.532.206-1.017.544-1.381A.743.743 0 0 1 17.243 16a.72.72 0 0 1 .157-.45c-.369.334-.86.538-1.4.538s-1.031-.204-1.4-.538a.72.72 0 0 1 .157.45c0 .403-.33.73-.74.73a.743.743 0 0 1-.455-.155c.338.364.545.849.545 1.381 0 1.129-.928 2.044-2.071 2.044-1.144 0-2.072-.915-2.072-2.044 0-.532.207-1.017.545-1.381A.743.743 0 0 1 9.314 16a.72.72 0 0 1 .157-.45c-.369.334-.86.538-1.4.538-1.144 0-2.071-.915-2.071-2.044S6.927 12 8.071 12c1.144 0 2.071.915 2.071 2.044a2.02 2.02 0 0 1-.545 1.381.743.743 0 0 1 1.196.575.72.72 0 0 1-.157.45c.368-.334.86-.538 1.4-.538.54 0 1.03.204 1.4.538a.72.72 0 0 1-.158-.45.743.743 0 1 1 1.196-.575 2.022 2.022 0 0 1-.545-1.381c0-1.129.927-2.044 2.071-2.044s2.071.915 2.071 2.044a2.02 2.02 0 0 1-.545 1.381.743.743 0 0 1 1.196.575.72.72 0 0 1-.157.45c.368-.334.86-.538 1.4-.538.54 0 1.03.204 1.4.538a.72.72 0 0 1-.158-.45.743.743 0 1 1 1.196-.575 2.022 2.022 0 0 1-.545-1.381c0-1.129.927-2.044 2.071-2.044S26 12.915 26 14.044s-.927 2.044-2.071 2.044c-.54 0-1.031-.204-1.4-.538a.72.72 0 0 1 .157.45c0 .403-.33.73-.74.73a.743.743 0 0 1-.455-.155z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Yoyow);


/***/ }),

/***/ "jvcQ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mona.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mona = {
  symbol: 'mona',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.53-18.586L22.105 7l-2.797 4.414a14.096 14.096 0 0 0-6.617 0L9.902 7l-1.43 6.414C6.937 14.642 6 16.247 6 18.009c0 3.86 4.476 6.989 9.997 6.989s9.997-3.13 9.997-6.989c-.001-1.762-.93-3.367-2.465-4.595zM10.442 16.35h-.666l1.627-1.876h1.184l-2.145 1.876zm5.504 4.584l-2.766-4.872.683-.39.617 1.085h3.021l.644-1.09.676.402-2.875 4.865zm5.613-4.584l-2.146-1.876h1.192l1.625 1.876h-.671zm-5.6 3.015l1.075-1.82h-2.108l1.033 1.82z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#DEC799"/><path fill="#FFF" d="M23.53 13.414L22.105 7l-2.797 4.414a14.096 14.096 0 0 0-6.617 0L9.902 7l-1.43 6.414C6.937 14.642 6 16.247 6 18.009c0 3.86 4.476 6.989 9.997 6.989s9.997-3.13 9.997-6.989c-.001-1.762-.93-3.367-2.465-4.595zM10.442 16.35h-.666l1.627-1.876h1.184l-2.145 1.876zm5.504 4.584l-2.766-4.872.683-.39.617 1.085h3.021l.644-1.09.676.402-2.875 4.865zm5.613-4.584l-2.146-1.876h1.192l1.625 1.876h-.671zm-5.6 3.015l-1.033-1.82h2.108l-1.075 1.82z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mona);


/***/ }),

/***/ "jzNG":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fuel.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fuel = {
  symbol: 'fuel',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.532-22h-6.495l-1.926 4.83h-6.074v-2.487h6.074L18 10H8.802a.43.43 0 0 0-.432.427v4.402H6.89L6 17.171h2.37v4.397c0 .238.196.432.438.432h4.451l.889-2.341h-3.111V17.17h5.037L14.148 22h2.963l2.074-4.83h6.38c.24 0 .435-.192.435-.429v-6.28a.465.465 0 0 0-.468-.461zm-2.05 4.46c0 .204-.167.37-.374.37h-3.034l1.037-2.486h1.995a.373.373 0 0 1 .377.368z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#4096d0" r="16"/><path d="M25.532 10h-6.495l-1.926 4.83h-6.074v-2.487h6.074L18 10H8.802a.43.43 0 0 0-.432.427v4.402H6.89L6 17.171h2.37v4.397c0 .238.196.432.438.432h4.451l.889-2.341h-3.111V17.17h5.037L14.148 22h2.963l2.074-4.83h6.38c.24 0 .435-.192.435-.429v-6.28a.465.465 0 0 0-.468-.461zm-2.05 4.46c0 .204-.167.37-.374.37h-3.034l1.037-2.486h1.995a.373.373 0 0 1 .377.368z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fuel);


/***/ }),

/***/ "k08I":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sky.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sky = {
  symbol: 'sky',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.027-19.197a5.384 5.384 0 0 0-1.67-.564L17.292 23.5h1.923l4.812-10.697zm-8.42-6.284c-2.853.209-5.108 2.653-5.108 5.648C7.462 12.167 5 14.702 5 17.833c0 2.286 1.316 4.249 3.204 5.145l7.403-16.459zm5.894 5.648c0-1.06-.287-2.049-.78-2.897L14.32 23.5h2.083l5.099-11.333zm1.894 10.982C25.5 22.35 27 20.274 27 17.836c0-.683-.123-1.335-.339-1.943l-3.266 7.256zm1.442-9.814L20.265 23.5h1.236c.178 0 .36-.01.536-.028l3.986-8.858a5.572 5.572 0 0 0-1.186-1.28zM16.02 6.5L8.543 23.123c.607.24 1.266.377 1.956.377h.28L18.21 6.981a5.299 5.299 0 0 0-2.19-.481zm4.267 2.118a5.596 5.596 0 0 0-1.614-1.403L11.346 23.5h2.246l6.695-14.882z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#0072FF"/><path fill="#FFF" d="M24.027 12.803L19.215 23.5h-1.923l5.065-11.26a5.384 5.384 0 0 1 1.67.563zm-8.42-6.284L8.204 22.978C6.316 22.082 5 20.119 5 17.833c0-3.13 2.462-5.666 5.5-5.666 0-2.995 2.254-5.44 5.107-5.648zm5.894 5.648L16.402 23.5h-2.083l6.402-14.23c.493.848.78 1.836.78 2.897zm1.894 10.982l3.266-7.256c.216.608.339 1.26.339 1.943 0 2.438-1.5 4.515-3.605 5.313zm1.442-9.814c.456.36.86.788 1.186 1.279l-3.986 8.858a5.025 5.025 0 0 1-.536.028h-1.236l4.572-10.165zM16.02 6.5c.78.003 1.519.174 2.19.481L10.78 23.5h-.28c-.69 0-1.35-.136-1.957-.377L16.02 6.5zm4.267 2.118L13.592 23.5h-2.246l7.327-16.285c.622.358 1.17.836 1.614 1.403z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sky);


/***/ }),

/***/ "kGm7":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/iost.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Iost = {
  symbol: 'iost',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.5-21L16 6l-8.5 5v10l8.5 5 8.5-5zm-8.768 5.407l-1.031-.606-.623.368-1.476-.863.628-.37-3.33-1.959 6.271-3.688 5.917 3.438-1.586.938-4.327-2.53-3.131 1.842 1.754 1.032.897-.53 1.476.863-.902.533 1.03.606.736-.434 1.476.862-.74.437 3.673 2.162-6.27 3.687-6.525-3.79.027-1.843 6.495 3.787 3.13-1.841-2.098-1.235-.785.463-1.476-.862z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1c1c1c" r="16"/><path d="M24.5 11v10L16 26l-8.5-5V11L16 6zm-8.768 5.407l-.79.467 1.476.862.785-.463 2.099 1.235-3.131 1.84-6.495-3.786-.027 1.843 6.526 3.79 6.27-3.687-3.674-2.162.74-.437-1.476-.862-.735.434-1.03-.606.901-.533-1.476-.863-.897.53-1.754-1.032 3.13-1.841 4.328 2.529 1.586-.938-5.917-3.438-6.27 3.688 3.329 1.959-.628.37 1.476.863.623-.368z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Iost);


/***/ }),

/***/ "kI3e":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/apex.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Apex = {
  symbol: 'apex',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 19.25v4.25l10-12.75L26 23.5v-4.25L16 6.5 6 19.25zm10.5 1.25a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z" fill-rule="evenodd"  />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1F4C9F"/><path fill="#FFF" d="M6 19.25L16 6.5l10 12.75v4.25L16 10.75 6 23.5v-4.25zm10.5 1.25a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Apex);


/***/ }),

/***/ "kMEs":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lun.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lun = {
  symbol: 'lun',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.187-25.952v.002l-8.216 4.63a.358.358 0 0 0 0 .628l7.156 4.018c.247-.281.586-.47.96-.536v-2.198c-.77-.134-1.354-.788-1.354-1.576 0-.885.736-1.603 1.645-1.603s1.645.718 1.645 1.603c0 .793-.59 1.45-1.366 1.578v2.193c.378.064.723.254.973.54l7.155-4.034a.36.36 0 0 0 .185-.314.36.36 0 0 0-.186-.314l-8.225-4.618a.381.381 0 0 0-.372 0zm8.62 5.819l.002-.001-6.908 3.894c.155.365.164.774.026 1.145l1.95 1.093c.26-.37.667-.615 1.121-.677.9-.124 1.732.487 1.859 1.363s-.5 1.688-1.4 1.812c-.9.123-1.732-.487-1.858-1.364a1.56 1.56 0 0 1 .037-.628l-1.99-1.115c-.25.294-.6.49-.987.555l.007 7.693c0 .28.31.454.557.314l7.965-4.49a.36.36 0 0 0 .186-.314l-.008-8.967a.36.36 0 0 0-.187-.314.379.379 0 0 0-.371 0zm-17.425.313L7 21.146c0 .13.07.25.186.314l7.966 4.49c.247.14.558-.034.558-.313l.006-7.695a1.654 1.654 0 0 1-.977-.554l-1.99 1.115c.056.205.068.42.038.629-.127.876-.96 1.487-1.859 1.363s-1.526-.935-1.4-1.811c.128-.876.96-1.487 1.86-1.363.454.062.86.308 1.121.677l1.949-1.092c-.138-.37-.13-.777.023-1.141l-6.915-3.898a.375.375 0 0 0-.186-.05.368.368 0 0 0-.372.363z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#f55749" r="16"/><path d="M15.813 6.048a.381.381 0 0 1 .372 0l8.225 4.618a.36.36 0 0 1 .186.314c0 .13-.07.25-.185.314l-7.155 4.034a1.656 1.656 0 0 0-.973-.54v-2.193c.775-.129 1.366-.785 1.366-1.578 0-.885-.736-1.603-1.645-1.603s-1.645.718-1.645 1.603c0 .788.585 1.442 1.354 1.576v2.198a1.654 1.654 0 0 0-.96.536L7.599 11.31a.358.358 0 0 1-.001-.628l8.216-4.631m8.62 5.817a.379.379 0 0 1 .372-.001.362.362 0 0 1 .187.314L25 21.147c0 .13-.07.249-.186.314l-7.965 4.49c-.247.14-.557-.035-.557-.314l-.007-7.693c.386-.064.736-.261.987-.555l1.99 1.115a1.56 1.56 0 0 0-.037.628c.126.877.959 1.487 1.858 1.364.9-.124 1.526-.935 1.4-1.812s-.96-1.487-1.859-1.363a1.644 1.644 0 0 0-1.122.677l-1.95-1.093c.14-.371.13-.78-.025-1.145l6.908-3.894m-17.427.314c0-.212.178-.363.372-.363.065 0 .13.017.186.05l6.915 3.898c-.153.364-.161.77-.023 1.14l-1.949 1.093a1.645 1.645 0 0 0-1.122-.677c-.9-.124-1.731.487-1.858 1.363s.5 1.687 1.4 1.811 1.73-.487 1.858-1.363a1.56 1.56 0 0 0-.037-.629l1.989-1.115c.249.292.595.488.977.554l-.006 7.695c0 .279-.31.453-.558.313l-7.966-4.49A.36.36 0 0 1 7 21.146l.008-8.966" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lun);


/***/ }),

/***/ "kc2X":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/neo.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Neo = {
  symbol: 'neo',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9-9.42V9.621l-6.99 2.48v7.22L25 22.58zM14.823 26V13.139L8 9.958V22.82L14.823 26zm10.01-16.843l.061-.021L18.165 6l-.062.021-.177.063-.084.03L8.27 9.51l6.729 3.136 2.843-1.008.167-.06 6.711-2.38.112-.04z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#58BF00"/><path fill="#FFF" fill-rule="nonzero" d="M25 22.58l-6.99-3.258v-7.22L25 9.623V22.58zM14.823 26L8 22.821V9.958l6.823 3.18V26zm10.01-16.843l-.113.04-6.71 2.381-.168.06-2.843 1.008-6.73-3.136 9.573-3.396.084-.03.177-.063.062-.021 6.73 3.136-.063.021z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Neo);


/***/ }),

/***/ "kuiU":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rcn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rcn = {
  symbol: 'rcn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM14.36 6.627c-.315.053-.625.13-.935.203-3.345.864-6.105 3.641-6.875 6.965a9.185 9.185 0 0 0-.16 3.614c.02.14.035.3-.073.414-.503.652-.952 1.35-1.28 2.104-.153.366.193.776.574.775a.643.643 0 0 0 .53-.354c.214-.404.427-.81.676-1.194.23.496.414 1.015.704 1.482 1.326 2.306 3.658 4.044 6.294 4.615 1.818.43 3.754.291 5.512-.323a9.8 9.8 0 0 0 3.977-2.67c1.881-2.062 2.764-4.976 2.3-7.713-.009-.1-.041-.214.036-.297.417-.567.82-1.148 1.132-1.78.1-.207.25-.414.225-.655a.584.584 0 0 0-.624-.51c-.225-.01-.418.14-.51.334-.214.41-.434.817-.68 1.209-.265-.637-.529-1.279-.922-1.852a9.64 9.64 0 0 0-4.423-3.73c-.912-.41-1.906-.618-2.897-.734-.86-.043-1.731-.061-2.582.097zm-2.362 2.01c1.83-.955 4.022-1.246 6.033-.735 3.019.695 5.555 3.15 6.246 6.134-1.802 2.1-4.417 3.377-7.102 3.996-.523.109-1.043.23-1.574.285-.733.07-1.464.197-2.203.16.674-.681 1.383-1.33 2.05-2.02-.25-.3-.545-.561-.824-.833-.75.706-1.47 1.442-2.21 2.157-.43.442-.914.832-1.334 1.284.108.146.238.275.37.4.971.948 1.935 1.904 2.91 2.849.258.248.5.512.779.739.278-.272.572-.53.824-.828-.655-.618-1.291-1.254-1.936-1.882-.219-.219-.451-.425-.64-.671 2.156-.06 4.307-.45 6.328-1.199a13.408 13.408 0 0 0 4.244-2.466c.184-.166.36-.34.557-.493.161 2.46-.885 4.964-2.75 6.608a8.593 8.593 0 0 1-4.673 2.135c-1.244.172-2.52.03-3.716-.337-2.046-.648-3.825-2.083-4.855-3.94-.312-.586-.597-1.192-.748-1.84-.02-.094-.031-.205.045-.28 1.277-1.45 2.952-2.534 4.768-3.214.867-.291 1.735-.596 2.638-.758 1.118-.221 2.254-.383 3.396-.399-.638.72-1.393 1.331-2.057 2.027.218.32.534.56.806.835.1-.076.195-.156.286-.242 1.08-1.077 2.189-2.127 3.268-3.204-1.013-1.04-2.075-2.034-3.104-3.06-.318-.3-.618-.619-.943-.913a15.15 15.15 0 0 0-.836.826c.837.868 1.745 1.669 2.582 2.537-2.476.12-4.968.563-7.23 1.592-1.219.548-2.384 1.236-3.379 2.124a5.77 5.77 0 0 1-.535.456c-.067-1.19.151-2.386.578-3.498.742-1.84 2.168-3.4 3.941-4.332z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#3555f9" r="16"/><path d="M14.36 6.627c.85-.158 1.72-.14 2.58-.097.992.116 1.986.324 2.898.734a9.64 9.64 0 0 1 4.423 3.73c.393.573.657 1.215.922 1.852.246-.392.466-.8.68-1.21.092-.193.285-.342.51-.332a.583.583 0 0 1 .624.51c.025.24-.126.447-.225.655-.312.63-.715 1.212-1.132 1.78-.077.082-.045.196-.036.296.464 2.737-.419 5.65-2.3 7.712a9.8 9.8 0 0 1-3.977 2.67c-1.758.615-3.694.754-5.512.324-2.636-.571-4.968-2.309-6.294-4.615-.29-.467-.475-.986-.704-1.482-.25.385-.462.79-.675 1.194a.643.643 0 0 1-.531.354c-.381 0-.727-.41-.574-.775.328-.754.777-1.452 1.28-2.104.108-.113.093-.273.073-.414a9.185 9.185 0 0 1 .16-3.614c.77-3.324 3.53-6.1 6.875-6.965.31-.073.62-.15.935-.203zm-2.362 2.01c-1.773.932-3.2 2.491-3.94 4.332-.428 1.112-.646 2.308-.58 3.498a5.77 5.77 0 0 0 .536-.456c.995-.888 2.16-1.576 3.378-2.124 2.263-1.029 4.755-1.472 7.231-1.592-.837-.868-1.745-1.669-2.582-2.537.264-.29.55-.558.836-.826.325.294.625.613.943.914 1.03 1.025 2.091 2.02 3.104 3.059-1.08 1.077-2.188 2.127-3.268 3.204a3.568 3.568 0 0 1-.286.242c-.272-.274-.588-.514-.806-.835.664-.696 1.42-1.306 2.057-2.027-1.142.016-2.278.178-3.396.4-.903.161-1.771.466-2.638.757-1.816.68-3.491 1.764-4.768 3.214-.076.075-.065.186-.045.28.151.648.436 1.254.748 1.84 1.03 1.857 2.81 3.292 4.855 3.94 1.196.368 2.472.51 3.716.337a8.593 8.593 0 0 0 4.673-2.135c1.865-1.644 2.911-4.149 2.75-6.608-.197.153-.373.327-.557.493a13.408 13.408 0 0 1-4.244 2.466c-2.02.75-4.172 1.138-6.327 1.199.188.246.42.452.639.671.645.628 1.281 1.264 1.936 1.882-.252.297-.546.556-.824.828-.279-.227-.52-.491-.78-.74-.974-.944-1.938-1.9-2.91-2.848a3.168 3.168 0 0 1-.37-.4c.421-.452.905-.842 1.336-1.284.74-.715 1.46-1.451 2.209-2.157.28.272.574.532.823.833-.666.69-1.375 1.339-2.05 2.02.74.037 1.47-.09 2.204-.16.53-.056 1.051-.176 1.574-.285 2.685-.62 5.3-1.895 7.102-3.996-.69-2.984-3.227-5.44-6.246-6.134-2.011-.511-4.204-.22-6.033.735z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rcn);


/***/ }),

/***/ "kxBZ":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eng.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eng = {
  symbol: 'eng',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.149-21.705a1.78 1.78 0 0 1-.064-.038l-.002-.001-.002-.001-2.667-1.552-1.695-.987-1.736-1.01c-.93-.54-1.89-1.1-2.837-1.649L16.05 5l-.103.04a1.83 1.83 0 0 0-.265.125l-.01.006-3.97 2.355-1.738 1.03c-1.049.622-2.134 1.265-3.194 1.898-.26.125-.253.402-.25.536l.001.032v.06c-.004 2.432-.007 4.947-.013 7.423L6.5 21.257c-.014.204.08.383.238.46 1.892 1.088 3.812 2.196 5.668 3.267l3.342 1.928a.521.521 0 0 0 .273.088.35.35 0 0 0 .214-.072L21.08 24.1l1.82-1.062c.754-.441 1.535-.898 2.3-1.343a.477.477 0 0 0 .282-.472l.015-10.417c.026-.31-.235-.45-.349-.51zm-8.769 15.67l.006-4.443 1.644-.955c.455-.266.92-.536 1.37-.797l1.244-.724.001-.001.026-.017a.572.572 0 0 0 .184-.159l.045-.062v-.076c-.008-.95-.01-2.006-.007-3.325l.001-.612V13.63l3.85-2.252-.006 3.865-.009 5.849a4915.775 4915.775 0 0 0-5.387 3.143zM12.184 13.41l3.822-2.244 3.783 2.232-3.777 2.208-1.304-.749a1147.576 1147.576 0 0 0-2.524-1.447zm-.39.65l3.845 2.205-.006 4.38-3.768-2.196zm-4.52-2.594l3.76 2.16.082 4.958c-.01.195.086.373.241.446.535.313 1.08.63 1.607.936l1.028.599 1.64.955-.003 4.45-8.374-4.83zm17.094-.746l-3.83 2.238-4.275-2.521a.448.448 0 0 0-.5-.01L11.43 12.97l-3.78-2.164 2.626-1.557c1.76-1.045 3.637-2.157 5.736-3.397 1.89 1.106 3.72 2.17 5.264 3.066.54.316 1.09.636 1.622.945l1.469.856zm-7.982 9.927l.003-4.382 3.789-2.214v4.392a1941.6 1941.6 0 0 0-3.792 2.204zm5.127-.793a.427.427 0 0 0 .298-.258.47.47 0 0 0-.078-.504l-.001-.002a.446.446 0 0 0-.33-.153.449.449 0 0 0-.437.376.467.467 0 0 0 .146.441.394.394 0 0 0 .286.117.393.393 0 0 0 .116-.017zm2.064 1.408a.407.407 0 0 0 .44.064.455.455 0 0 0 .276-.364.46.46 0 0 0-.202-.457.426.426 0 0 0-.243-.077.406.406 0 0 0-.221.066.469.469 0 0 0-.222.38.45.45 0 0 0 .172.388zm-13.189-2.32a.458.458 0 0 0-.44.369.456.456 0 0 0 .428.557c.034 0 .07-.005.102-.013a.442.442 0 0 0 .314-.261.46.46 0 0 0-.077-.496.427.427 0 0 0-.327-.156zm11.956 1.576a.442.442 0 0 0 .433.07.438.438 0 0 0 .282-.332.455.455 0 0 0-.139-.449.436.436 0 0 0-.3-.121.46.46 0 0 0-.438.39.47.47 0 0 0 .162.442zm-12.905-.723a.42.42 0 0 0-.28-.11.394.394 0 0 0-.154.032.448.448 0 0 0-.289.391c-.016.185.07.36.217.446a.426.426 0 0 0 .222.066.456.456 0 0 0 .19-.044h.001a.436.436 0 0 0 .254-.334.465.465 0 0 0-.161-.447zm6.51-13.628a.424.424 0 0 0-.074.007.456.456 0 0 0-.352.259v.002a.45.45 0 0 0 .026.442.461.461 0 0 0 .476.203h.002l.003-.001a.438.438 0 0 0 .366-.337.44.44 0 0 0-.107-.42.456.456 0 0 0-.34-.155zM8.15 20.49a.418.418 0 0 0-.432 0 .465.465 0 0 0-.231.41c0 .174.092.333.236.408.06.035.13.054.204.054a.453.453 0 0 0 .244-.074.454.454 0 0 0 .211-.408.446.446 0 0 0-.232-.39zm8.04-11.285a.48.48 0 0 0-.259-.077.45.45 0 0 0-.226.06.44.44 0 0 0-.233.365.444.444 0 0 0 .178.399c.08.063.177.096.284.096a.488.488 0 0 0 .198-.044h.001a.443.443 0 0 0 .272-.38.458.458 0 0 0-.215-.42zm-.57-.758c.085.08.192.122.31.122a.489.489 0 0 0 .2-.044.449.449 0 0 0 .275-.41.449.449 0 0 0-.236-.409.488.488 0 0 0-.234-.06.436.436 0 0 0-.244.072.462.462 0 0 0-.218.352v.003a.442.442 0 0 0 .148.374z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2f2f2f" r="16"/><path d="M25.149 10.295c.114.06.375.202.35.511l-.016 10.417a.477.477 0 0 1-.283.472l-2.3 1.343-1.82 1.062-4.844 2.828a.35.35 0 0 1-.214.072.521.521 0 0 1-.273-.088l-3.342-1.928c-1.856-1.071-3.776-2.179-5.668-3.267-.159-.077-.252-.256-.238-.46l.007-2.752c.006-2.476.01-4.991.012-7.423v-.01a.396.396 0 0 0 .001-.05v-.031c-.004-.135-.01-.412.25-.537 1.06-.633 2.144-1.276 3.193-1.898l1.737-1.03c1.322-.783 2.668-1.582 3.97-2.355l.01-.006a1.83 1.83 0 0 1 .266-.125L16.05 5l.096.057c.946.548 1.908 1.108 2.837 1.65l1.736 1.01 1.695.986 2.667 1.552h.002l.002.002.064.038zm-8.769 15.67l2.962-1.73a8357.882 8357.882 0 0 0 5.387-3.143l.01-5.849.005-3.865-3.85 2.252v1.776a288.84 288.84 0 0 0 .006 3.325v.076l-.045.062a.572.572 0 0 1-.184.16l-.026.016h-.001l-1.244.725c-.45.26-.915.53-1.37.797l-1.644.955zM12.184 13.41a1302.649 1302.649 0 0 0 2.524 1.447l1.304.749 3.777-2.208-3.783-2.232zm-.39.65l.071 4.389 3.768 2.195.006-4.379zm-4.52-2.594l-.019 9.675 8.374 4.83.003-4.451-1.64-.955-1.028-.599c-.527-.306-1.072-.623-1.607-.936-.155-.073-.252-.251-.241-.446l-.081-4.959zm17.094-.746l-1.469-.856-1.622-.945c-1.544-.896-3.375-1.96-5.264-3.066a3322.48 3322.48 0 0 0-5.736 3.397l-2.626 1.557 3.778 2.165 4.334-2.545a.448.448 0 0 1 .5.01l4.276 2.521zm-7.982 9.927a1941.6 1941.6 0 0 1 3.792-2.204V14.05l-3.789 2.214zm5.127-.793a.393.393 0 0 1-.116.017.394.394 0 0 1-.286-.117.467.467 0 0 1-.145-.44.449.449 0 0 1 .436-.377c.123 0 .243.056.33.153l.001.002a.47.47 0 0 1 .078.504.427.427 0 0 1-.298.258zm2.064 1.408a.45.45 0 0 1-.172-.388c.008-.159.09-.3.222-.38a.406.406 0 0 1 .22-.066c.086 0 .17.027.244.077a.46.46 0 0 1 .202.457.455.455 0 0 1-.449.401.407.407 0 0 1-.267-.101zm-13.189-2.32c.125 0 .244.057.327.156a.46.46 0 0 1 .077.496.442.442 0 0 1-.416.274.456.456 0 0 1-.428-.556.458.458 0 0 1 .44-.37zm11.956 1.576a.47.47 0 0 1-.161-.443.46.46 0 0 1 .438-.39c.11 0 .216.044.3.122.127.118.18.289.138.449a.438.438 0 0 1-.282.332.432.432 0 0 1-.433-.07zm-12.905-.723c.133.11.195.285.161.447a.436.436 0 0 1-.254.334h-.001a.456.456 0 0 1-.19.044.426.426 0 0 1-.222-.066.467.467 0 0 1-.217-.446.448.448 0 0 1 .289-.391.394.394 0 0 1 .155-.032c.1 0 .197.038.279.11zm6.51-13.628c.13 0 .253.056.34.154.107.113.147.27.107.42a.438.438 0 0 1-.366.338h-.005a.461.461 0 0 1-.476-.202.45.45 0 0 1-.027-.442l.001-.002a.456.456 0 0 1 .352-.259.424.424 0 0 1 .075-.007zM8.15 20.49c.145.082.233.23.232.39a.454.454 0 0 1-.211.408.453.453 0 0 1-.244.074.399.399 0 0 1-.204-.054.458.458 0 0 1-.236-.408c0-.173.089-.33.231-.41a.418.418 0 0 1 .432 0zm8.04-11.285a.458.458 0 0 1 .215.42.443.443 0 0 1-.272.379.488.488 0 0 1-.2.044.451.451 0 0 1-.283-.096.444.444 0 0 1-.178-.399.44.44 0 0 1 .233-.364.45.45 0 0 1 .226-.06.48.48 0 0 1 .26.076zm-.57-.758a.442.442 0 0 1-.148-.374V8.07a.462.462 0 0 1 .219-.352.436.436 0 0 1 .244-.073c.08 0 .16.021.233.06l.001.001a.449.449 0 0 1 .236.409.449.449 0 0 1-.275.41.489.489 0 0 1-.2.044.442.442 0 0 1-.31-.122z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eng);


/***/ }),

/***/ "l1bq":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/hsr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Hsr = {
  symbol: 'hsr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10.75 7.5a4.78 4.78 0 0 1 .815 2.74c-1.104.01-2.207.01-3.31.01C7.18 12.17 6.056 14.067 5 15.997V16c1.054 1.933 2.174 3.83 3.254 5.75h2.96v-2.313h-.969A788.677 788.677 0 0 1 8.287 16l1.955-3.437h7.867v2.27h-3.768v-1.98h-2.84c-.01 3.217.023 6.434-.01 9.647.103.943-.878 1.357-1.365 2h5.597c-.865-.697-1.61-1.53-1.454-2.74 3.317-.02 6.63-.003 9.944-.01.835-1.433 1.505-3.007 2.787-4.113-1.296-.174-2.605-.104-3.907-.137-.225.667-.507 1.31-.825 1.94-.434-.003-.868-.003-1.299-.003.01-3.324-.017-6.65.003-9.974-.05-.743.464-1.33.766-1.963h-4.384c.567.81.832 1.753.815 2.74-1.296.013-2.595.013-3.89 0-.02-.993.301-1.91.825-2.74h-4.355zm3.592 9.667h3.767v2.27h-3.767v-2.27zm6.915-6.917v2.313l.984-.003c.348.61.663 1.247.822 1.94 1.256-.063 2.518.064 3.764-.1-.023-.076-.066-.233-.09-.31-1.166-1.04-1.722-2.54-2.53-3.84h-2.95zm-3.045 11.79c.073 1.123-.772 1.774-1.495 2.46h5.637c-.765-.66-1.544-1.35-1.524-2.463-.872.003-1.747.006-2.618.003z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#56428E"/><path fill="#FFF" d="M10.75 7.5h4.354c-.524.83-.845 1.747-.825 2.74 1.295.013 2.594.013 3.89 0 .017-.987-.248-1.93-.815-2.74h4.384c-.302.633-.815 1.22-.766 1.963-.02 3.324.007 6.65-.003 9.974.43 0 .865 0 1.3.003.317-.63.599-1.273.824-1.94 1.302.033 2.611-.037 3.907.137-1.282 1.106-1.952 2.68-2.787 4.113-3.314.007-6.627-.01-9.944.01-.156 1.21.59 2.043 1.454 2.74h-5.597c.487-.643 1.468-1.057 1.365-2 .033-3.213 0-6.43.01-9.647h2.84v1.98h3.768v-2.27h-7.867L8.287 16c.65 1.147 1.302 2.292 1.958 3.437h.968v2.313H8.254C7.174 19.83 6.054 17.933 5 16v-.003c1.057-1.93 2.18-3.827 3.254-5.747 1.104 0 2.207 0 3.31-.01a4.772 4.772 0 0 0-.815-2.74zm3.592 9.667v2.27h3.767v-2.27h-3.767zm6.915-6.917h2.95c.808 1.3 1.364 2.8 2.53 3.84.024.077.067.234.09.31-1.246.164-2.508.037-3.764.1-.16-.693-.474-1.33-.822-1.94l-.984.003V10.25zm-3.045 11.79c.871.003 1.746 0 2.618-.003-.02 1.113.759 1.803 1.524 2.463h-5.637c.723-.686 1.568-1.337 1.495-2.46z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Hsr);


/***/ }),

/***/ "l262":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "lB68":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/qash.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Qash = {
  symbol: 'qash',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-27C9.925 5 5 9.925 5 16s4.925 11 11 11 11-4.925 11-11S22.075 5 16 5zm10.44 10.55l-.89.009-.004-.373.891-.008.004.372zm-.228-1.923l-.883.123-.051-.37.882-.122.052.37zm-.76-2.342l.154.34-.811.368-.154-.339.81-.369zM24.34 9.59l.246.28-.67.588-.245-.28.669-.588zm-1.305-1.393l.282.244-.581.674-.283-.243.582-.675zM21.48 6.938l.312.203-.485.747-.312-.202.485-.748zm-1.77-.873l.361.095-.226.861-.361-.095.227-.86zm-1.945-.478l.371.03-.074.888-.371-.031.074-.887zm-2.014-.235h.372v.891h-.372v-.891zm-1.654.235l.074.887-.372.032-.074-.888.372-.031zm-1.946.478l.226.861-.36.095-.227-.86.36-.096zm-1.769.873l.485.748-.313.202-.485-.747.313-.203zm-1.555 1.26l.581.674-.282.243-.581-.674.282-.244zm-1.304 1.39l.67.588-.247.28-.669-.587.246-.28zm-1.111 1.696l.81.369-.153.34-.811-.37.154-.339zm-.709 1.973l.883.122-.052.37-.882-.123.051-.37zm-.276 1.92l.89.008-.003.373-.89-.009.003-.372zm.082 2.092l.886-.09.037.37-.886.09-.037-.37zm.403 1.894l.868-.202.085.363-.868.202-.085-.363zm.971 2.263l-.184-.324.773-.442.185.324-.774.442zm1.262 1.587l-.271-.256.613-.647.27.256-.612.647zM9.57 24.28l-.303-.216.517-.726.303.217-.517.725zm1.664 1.111l-.33-.173.414-.788.33.173-.414.788zm1.841.708l-.368-.062.147-.878.368.062-.147.878zm1.609.302l-.007-.891.373-.004.007.891-.373.004zM6.74 16c0-5.106 4.154-9.26 9.26-9.26s9.26 4.154 9.26 9.26-4.154 9.26-9.26 9.26S6.74 21.106 6.74 16zm9.986 10.481l-.012.001-.081-.886.371-.034.012-.002.081.887-.371.034zm1.985-.418l-.155-.877.367-.065.155.878-.367.064zm1.894-.654l-.305-.837.35-.127.305.837-.35.127zm1.681-1.03l-.55-.7.292-.232.551.7-.293.231zm1.434-1.397l-.64-.618.258-.269.64.62-.258.267zm1.172-1.505l-.72-.525.22-.301.72.524-.22.302zm.952-1.79l-.842-.294.123-.352.841.294-.122.351zm.525-2.03l-.89-.04.017-.373.89.041-.017.372zm-6.833 3.075l-.278-.28-.539-.546c.625-.594 1.021-1.193.957-2.574-.005-.108.006-1.483.006-1.592l-.003-1.033c.003-2.55-.62-3.706-2.338-4.115-.195-.047-1.133-.07-1.337-.07h-.09c-.204 0-1.267.023-1.462.07-1.718.409-2.341 1.565-2.338 4.115l-.003 1.032c0 .109.01 1.485.006 1.592-.117 2.556 1.337 3.342 2.91 3.284h1.739a2.77 2.77 0 0 0 1.316-.267l.632.64.278.281c.159.15.402.158.549.012.147-.145.143-.388-.006-.549zm-2.659-.928l-.081-.001-.015-.001h-1.783a2.237 2.237 0 0 1-.081.002c-.374 0-.911-.095-1.344-.549-.466-.488-.689-.896-.644-1.886.004-.07.004-.071-.003-1.313a117.056 117.056 0 0 1 0-1.015c0-.426.002-.276.002-.335-.002-1.13.126-2.112.401-2.555.163-.264.445-.56 1.299-.766.168-.025 1.028-.051 1.285-.051h.092c.258 0 .993.026 1.162.051.853.206 1.135.502 1.298.766.275.443.403 1.425.402 2.555l.002.335.001.698-.002.317c-.007 1.242-.006 1.244-.003 1.313.045.99-.177 1.398-.643 1.886l-.074.073-.499-.505-.277-.28c-.159-.152-.402-.159-.55-.013-.146.145-.142.388.007.548l.278.281.356.36c-.19.057-.387.086-.586.085z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#1347E8"/><path fill="#FFF" d="M16 5C9.925 5 5 9.925 5 16s4.925 11 11 11 11-4.925 11-11S22.075 5 16 5zm10.44 10.55l-.89.009-.004-.373.891-.008.004.372zm-.228-1.923l-.883.123-.051-.37.882-.122.052.37zm-.76-2.342l.154.34-.811.368-.154-.339.81-.369zM24.34 9.59l.246.28-.67.588-.245-.28.669-.588zm-1.305-1.393l.282.244-.581.674-.283-.243.582-.675zM21.48 6.938l.312.203-.485.747-.312-.202.485-.748zm-1.77-.873l.361.095-.226.861-.361-.095.227-.86zm-1.945-.478l.371.03-.074.888-.371-.031.074-.887zm-2.014-.235h.372v.891h-.372v-.891zm-1.654.235l.074.887-.372.032-.074-.888.372-.031zm-1.946.478l.226.861-.36.095-.227-.86.36-.096zm-1.769.873l.485.748-.313.202-.485-.747.313-.203zm-1.555 1.26l.581.674-.282.243-.581-.674.282-.244zm-1.304 1.39l.67.588-.247.28-.669-.587.246-.28zm-1.111 1.696l.81.369-.153.34-.811-.37.154-.339zm-.709 1.973l.883.122-.052.37-.882-.123.051-.37zm-.276 1.92l.89.008-.003.373-.89-.009.003-.372zm.082 2.092l.886-.09.037.37-.886.09-.037-.37zm.403 1.894l.868-.202.085.363-.868.202-.085-.363zm.971 2.263l-.184-.324.773-.442.185.324-.774.442zm1.262 1.587l-.271-.256.613-.647.27.256-.612.647zM9.57 24.28l-.303-.216.517-.726.303.217-.517.725zm1.664 1.111l-.33-.173.414-.788.33.173-.414.788zm1.841.708l-.368-.062.147-.878.368.062-.147.878zm1.609.302l-.007-.891.373-.004.007.891-.373.004zM6.74 16c0-5.106 4.154-9.26 9.26-9.26s9.26 4.154 9.26 9.26-4.154 9.26-9.26 9.26S6.74 21.106 6.74 16zm9.986 10.481l-.012.001-.081-.886.371-.034.012-.002.081.887-.371.034zm1.985-.418l-.155-.877.367-.065.155.878-.367.064zm1.894-.654l-.305-.837.35-.127.305.837-.35.127zm1.681-1.03l-.55-.7.292-.232.551.7-.293.231zm1.434-1.397l-.64-.618.258-.269.64.62-.258.267zm1.172-1.505l-.72-.525.22-.301.72.524-.22.302zm.952-1.79l-.842-.294.123-.352.841.294-.122.351zm.525-2.03l-.89-.04.017-.373.89.041-.017.372zm-6.833 3.075h-.001c.149.16.153.404.006.55-.147.145-.39.138-.549-.014v.001l-.278-.28-.632-.641a2.77 2.77 0 0 1-1.316.267h-1.738c-1.574.058-3.028-.728-2.91-3.284.004-.107-.007-1.483-.007-1.592l.003-1.032c-.003-2.55.62-3.706 2.338-4.115.195-.047 1.258-.07 1.461-.07h.091c.204 0 1.142.023 1.337.07 1.718.409 2.341 1.565 2.338 4.115l.003 1.033c0 .109-.011 1.484-.006 1.592.064 1.38-.332 1.98-.957 2.574l.54.545.277.281zm-2.659-.928c.199 0 .396-.028.586-.084l-.356-.36-.278-.282c-.15-.16-.153-.403-.006-.548.147-.146.39-.139.549.012l.277.28.499.506a1.27 1.27 0 0 0 .074-.073c.466-.488.688-.896.643-1.886-.003-.07-.004-.071.003-1.313l.002-.317-.001-.698c-.001-.426-.002-.276-.002-.335.001-1.13-.127-2.112-.402-2.555-.163-.264-.445-.56-1.298-.766a15.308 15.308 0 0 0-1.162-.051h-.092c-.257 0-1.117.026-1.285.051-.854.206-1.136.502-1.299.766-.275.443-.403 1.425-.401 2.555 0 .06-.001-.091-.002.335a617.092 617.092 0 0 0 0 1.015c.007 1.242.007 1.244.003 1.313-.045.99.178 1.398.644 1.886.433.454.97.55 1.344.55l.081-.002.015-.001h1.783c.027.002.054.002.081.002z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Qash);


/***/ }),

/***/ "lDGA":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/hodl.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Hodl = {
  symbol: 'hodl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7.973 16.453c-.518.412-.98 1.144-.957 2.263.017.774.433 1.304.957 1.664v1.383c0 .863.42 1.672 1.128 2.167l4.853 3.319V10.29l-5.981 1.75v4.413zm6.4 6.496v4.306h3.263V22.95h-3.263zm-.74-12.98l.29.29-5.08-5.1a.51.51 0 0 0-.87.361v6.07l5.66-1.62zm.74 6.071v6.494h3.263V16.04h-3.262zm3.993-6.07l5.661 1.62V5.52a.51.51 0 0 0-.87-.36l-5 5.02.21-.21zm-3.992.321v5.33h3.262v-5.33h-3.262zm9.653 6.162V12.04l-5.971-1.746v16.961l4.843-3.325a2.647 2.647 0 0 0 1.128-2.167V20.38c.524-.36.94-.89.957-1.664.024-1.119-.439-1.851-.957-2.263zm-14.751-.408c1.007.737 1.007 5.116 1.007 5.116s-1.139-.11-2.08-.636c.776.261 1.399.203 1.67.233l.018.001h.004l.014.002.038.003.013.002h.013s.16-3.822-.997-4.492c-.188-.065-.52-.027-.886.09.466-.314.953-.42 1.186-.319zm12.79 4.782h.014l.012-.001.017-.002h.004l.035-.003h.002l.016-.002.149-.017h.007c.326-.042.726-.038 1.34-.23l.136-.045c-.942.526-2.08.636-2.08.636s0-4.378 1.007-5.115c.233-.102.72.004 1.185.32-.366-.117-.697-.155-.886-.09-1.157.669-.958 4.55-.958 4.55z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#D59143"/><path d="M7.973 16.453c-.518.412-.98 1.144-.957 2.263.017.774.433 1.304.957 1.664v1.382c0 .864.42 1.673 1.128 2.168l4.853 3.319V10.29l-5.981 1.75v4.413zm1.303-.408c1.007.737 1.007 5.116 1.007 5.116s-1.139-.11-2.08-.636c.776.261 1.399.203 1.67.233l.018.001h.004l.014.002.038.003.013.002h.013s.16-3.822-.997-4.492c-.188-.065-.52-.027-.886.09.466-.314.953-.42 1.186-.319zm5.097 6.904h3.263v4.306h-3.262V22.95zm-.74-12.98l-5.66 1.622V5.52a.51.51 0 0 1 .87-.362l5.08 5.1-.29-.29zm.74 6.071h3.263v6.494h-3.262V16.04zm3.993-6.07l-.21.21 5-5.02a.51.51 0 0 1 .871.36v6.07l-5.66-1.62zm-3.992.321h3.262v5.33h-3.262v-5.33zm9.653 6.162V12.04l-5.971-1.746v16.961l4.843-3.325a2.647 2.647 0 0 0 1.128-2.167V20.38c.524-.36.94-.89.957-1.664.024-1.119-.439-1.851-.957-2.263zm-1.96 4.374h.013l.012-.001.017-.002h.004l.035-.003h.002l.016-.002.149-.017h.007c.326-.042.726-.038 1.34-.23l.136-.045c-.942.526-2.08.636-2.08.636s0-4.378 1.007-5.115c.233-.102.72.004 1.185.32-.366-.117-.697-.155-.886-.09-1.157.669-.958 4.55-.958 4.55z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Hodl);


/***/ }),

/***/ "lHF8":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/soc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Soc = {
  symbol: 'soc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-28C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm2.743 22.236a10.596 10.596 0 1 1-4.595-20.669 10.597 10.597 0 0 1 4.595 20.669zm.188-18.95c0 .518 0 1.034.018 1.552a9.75 9.75 0 0 0-2.145-.563c-.03-.469.104-.984-.033-1.429a13.313 13.313 0 0 0-1.572-.019c-.026.482-.017.966 0 1.45a9.864 9.864 0 0 0-2.146.574c.014-.522.02-1.043.013-1.566a9.2 9.2 0 0 0 0 17.438c0-.512-.005-1.022-.015-1.532a9.113 9.113 0 0 0 2.133.549c0 .469 0 .938-.028 1.402.56.08 1.128.08 1.688 0a26.363 26.363 0 0 1-.04-1.387 10.122 10.122 0 0 0 2.14-.544 24.187 24.187 0 0 0 0 1.52 9.2 9.2 0 0 0-.011-17.437l-.002-.007zm1.368 13.936c-1.207 1.095-2.923 1.354-4.5 1.331-1.381 0-2.846-.375-3.845-1.376-.53-.512-.83-1.196-1.099-1.875.966-.25 1.963-.334 2.936-.542a1.706 1.706 0 0 0 1.138 1.277c.883.276 1.977.315 2.713-.315.522-.433.537-1.38-.11-1.705-1.517-.783-3.407-.517-4.841-1.509-1.975-1.245-2.121-4.547-.188-5.891 1.478-1.037 3.454-1.166 5.168-.75 1.55.392 2.655 1.706 3.187 3.161-.954.165-1.907.334-2.861.495-.251-1.515-2.372-1.875-3.426-.992-.6.499-.446 1.562.304 1.828 1.64.68 3.61.484 5.063 1.622 1.687 1.144 1.863 3.876.361 5.24z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#199248"/><g fill="#FFF"><path d="M16 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm2.743 22.236a10.596 10.596 0 1 1-4.595-20.669 10.597 10.597 0 0 1 4.595 20.669z"/><path d="M18.93 7.287c0 .517 0 1.033.02 1.55a9.75 9.75 0 0 0-2.146-.562c-.03-.469.104-.984-.033-1.429a13.313 13.313 0 0 0-1.572-.019c-.026.482-.016.966 0 1.45a9.864 9.864 0 0 0-2.146.574c.015-.522.02-1.043.013-1.566a9.2 9.2 0 0 0 0 17.438c0-.512-.005-1.022-.015-1.532a9.113 9.113 0 0 0 2.133.549c0 .469 0 .938-.028 1.402.56.08 1.128.08 1.688 0a26.363 26.363 0 0 1-.04-1.387 10.122 10.122 0 0 0 2.14-.544 24.187 24.187 0 0 0 0 1.52 9.2 9.2 0 0 0-.011-17.437l-.002-.007zm1.37 13.935c-1.208 1.095-2.924 1.354-4.5 1.331-1.383 0-2.847-.375-3.846-1.376-.53-.512-.83-1.196-1.099-1.875.966-.25 1.963-.334 2.936-.542a1.706 1.706 0 0 0 1.138 1.277c.883.276 1.977.315 2.713-.315.522-.433.537-1.38-.11-1.704-1.517-.784-3.407-.518-4.841-1.51-1.975-1.245-2.121-4.547-.188-5.891 1.478-1.037 3.454-1.166 5.168-.75 1.55.392 2.655 1.706 3.187 3.161-.954.165-1.907.334-2.861.495-.251-1.515-2.372-1.875-3.426-.992-.6.499-.446 1.562.304 1.828 1.64.68 3.61.484 5.063 1.622 1.687 1.144 1.863 3.876.361 5.24z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Soc);


/***/ }),

/***/ "lL4V":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ost.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ost = {
  symbol: 'ost',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M15.937 10.222l2.01-3.136a2.03 2.03 0 0 0 .83-3.97 2.03 2.03 0 0 0-2.04 3.2l-2.494 3.891a7.96 7.96 0 0 0-7.142 8.707 7.965 7.965 0 0 0 8.706 7.142 7.965 7.965 0 0 0 7.143-8.706 7.967 7.967 0 0 0-7.013-7.128zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.978-9.656a4.22 4.22 0 0 1-4.224-4.223 4.22 4.22 0 0 1 4.224-4.224 4.22 4.22 0 0 1 3.95 2.732 2.442 2.442 0 0 0-3.424-.433 2.441 2.441 0 0 0-.433 3.424 2.441 2.441 0 0 0 3.849.007 4.214 4.214 0 0 1-3.942 2.717z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#34445B"/><g fill="#FFF"><path d="M15.937 10.222l2.01-3.136a2.03 2.03 0 0 0 .83-3.97 2.03 2.03 0 0 0-2.04 3.2l-2.494 3.891a7.96 7.96 0 0 0-7.142 8.707 7.965 7.965 0 0 0 8.706 7.142 7.965 7.965 0 0 0 7.143-8.706 7.967 7.967 0 0 0-7.013-7.128zm-.915 12.122a4.22 4.22 0 0 1-4.224-4.223 4.22 4.22 0 0 1 4.224-4.224 4.22 4.22 0 0 1 3.95 2.732 2.442 2.442 0 0 0-3.424-.433 2.441 2.441 0 0 0-.433 3.424 2.441 2.441 0 0 0 3.849.007 4.214 4.214 0 0 1-3.942 2.717z"/><path d="M15.937 10.222l2.01-3.136a2.03 2.03 0 0 0 .83-3.97 2.03 2.03 0 0 0-2.04 3.2l-2.494 3.891a7.96 7.96 0 0 0-7.142 8.707 7.965 7.965 0 0 0 8.706 7.142 7.965 7.965 0 0 0 7.143-8.706 7.967 7.967 0 0 0-7.013-7.128zm-.915 12.122a4.22 4.22 0 0 1-4.224-4.223 4.22 4.22 0 0 1 4.224-4.224 4.22 4.22 0 0 1 3.95 2.732 2.442 2.442 0 0 0-3.424-.433 2.441 2.441 0 0 0-.433 3.424 2.441 2.441 0 0 0 3.849.007 4.214 4.214 0 0 1-3.942 2.717z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ost);


/***/ }),

/***/ "lSjg":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dock.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dock = {
  symbol: 'dock',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.069-21.229v-.004A8 8 0 1 0 23 18.87l-.001-.067V6.142a1.143 1.143 0 0 0-2.286 0v12.576a5.695 5.695 0 1 1-4.705-5.63l-1.707 1.707a1.143 1.143 0 0 0 1.616 1.616l3.64-3.636a1.143 1.143 0 0 0 0-1.617l-3.636-3.636-.038-.038a1.144 1.144 0 1 0-1.582 1.654l1.63 1.633z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#786DBC"/><path d="M15.931 10.771l-1.629-1.633a1.144 1.144 0 0 1 1.582-1.654l.038.038 3.636 3.636c.447.447.447 1.17 0 1.617l-3.64 3.636a1.143 1.143 0 0 1-1.616-1.616l1.707-1.707a5.695 5.695 0 1 0 4.705 5.63V6.142a1.143 1.143 0 0 1 2.286 0v12.729a8 8 0 1 1-7.07-8.104l.001.004z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dock);


/***/ }),

/***/ "ldnR":
/*!****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/r.js ***!
  \****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const R = {
  symbol: 'r',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-5.5-7.362l3.467-1.812V10.745l4.952 2.778-3.714 1.933v3.987L23.5 25v-3.745l-5.076-3.503 4.21-2.175v-3.866L13.966 7 10.5 8.812z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#771a4e" r="16"/><path d="M10.5 24.638l3.467-1.812V10.745l4.952 2.778-3.714 1.933v3.987L23.5 25v-3.745l-5.076-3.503 4.209-2.175v-3.866L13.967 7 10.5 8.812z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (R);


/***/ }),

/***/ "m3a+":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/pungo.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Pungo = {
  symbol: 'pungo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.78-5.196c.052-.013.041-.05.01-.147-.153-.467-1.116-3.942-1.099-3.965.018-.012.21.017.433.07.601.129 1.675.17 2.312.082 3.124-.42 5.594-2.885 6.009-5.997.04-.31.052-.818.035-1.273-.035-.87-.024-.812-.999-4.24-.368-1.296-.858-3.042-1.098-3.871l-.42-1.492c.084.038.17.078.257.12 3.235 1.553 5.442 4.496 6.085 8.11.116.684.099 2.984-.03 3.65-.35 1.764-1.027 3.3-2.055 4.672-.456.607-1.507 1.658-2.12 2.12-1.366 1.021-3.03 1.745-4.654 2.026-.748.133-1.789.186-2.666.135zm-1.643-.23zm-1.937-.643a10.99 10.99 0 0 1-4.393-3.502c-.812-1.103-1.297-2.055-1.688-3.352-1.074-3.52-.263-7.392 2.149-10.23 1.454-1.711 3.556-3.008 5.728-3.516 1.005-.233 1.338-.268 2.64-.262.254 0 .462 0 .64.003.028.144.263.996.551 2.005.315 1.11.555 2.038.532 2.062-.024.029-.252.006-.503-.053-.619-.134-2.038-.134-2.65 0-2.266.496-3.983 1.845-4.958 3.89a7.31 7.31 0 0 0-.584 1.868c-.088.525-.076 1.752.017 2.277.047.24.374 1.478.736 2.745.356 1.267.888 3.135 1.174 4.146.286 1.01.554 1.862.59 1.903a.27.27 0 0 0 .019.016zm2.573 1.905c.76.106 3.253.076 3.848-.046.958-.199 2.248-.59 2.64-.794.058-.03.38-.187.718-.357 1.974-.98 3.72-2.627 4.952-4.671.152-.251.654-1.256.654-1.308a2.7 2.7 0 0 1 .11-.286c.304-.666.701-2.225.79-3.107.215-2.05-.06-3.947-.848-5.939a5.463 5.463 0 0 0-.239-.543 7.735 7.735 0 0 1-.315-.584 7.709 7.709 0 0 0-.41-.706c-.075-.1-.14-.199-.14-.228 0-.023-.07-.122-.151-.228-.082-.099-.28-.35-.438-.56-.403-.526-1.331-1.46-1.892-1.904-.66-.525-.7-.549-1.285-.91-1.208-.737-2.633-1.291-3.97-1.542-.836-.158-3.644-.164-4.468-.006-2.785.52-5.43 2.12-7.17 4.333-.199.257-.392.502-.427.543-.029.035-.187.286-.35.554-.158.263-.31.52-.345.567-.122.198-.45.864-.549 1.139a2.125 2.125 0 0 1-.151.35c-.047.064-.316.934-.286.934a.451.451 0 0 1-.059.14c-.04.076-.128.403-.187.73-.064.321-.14.748-.18.94-.036.199-.065.9-.065 1.635 0 1.198.012 1.344.181 2.167.158.788.438 1.763.596 2.096.029.064.105.251.169.409.473 1.232 1.6 2.867 2.727 3.947 1.477 1.414 3.451 2.517 5.308 2.967.257.058.508.128.56.146.053.023.357.076.672.122zm2.622-8.35c-.461.117-1.302.105-1.787-.023-1.612-.432-2.686-1.828-2.692-3.48-.006-1.087.316-1.857 1.092-2.634.543-.543.952-.77 1.723-.964 1.874-.473 3.865.748 4.35 2.663.117.45.111 1.343-.006 1.805-.315 1.232-1.413 2.312-2.68 2.633z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#22B573"/><path d="M15.22 26.804c.877.05 1.918-.002 2.666-.135 1.623-.28 3.288-1.005 4.654-2.027.613-.461 1.664-1.512 2.12-2.12 1.028-1.372 1.705-2.907 2.055-4.67.129-.667.146-2.967.03-3.65-.643-3.615-2.85-6.558-6.085-8.111a15.057 15.057 0 0 0-.257-.12l.42 1.492c.24.829.73 2.575 1.098 3.871.975 3.428.964 3.37.999 4.24.017.455.006.963-.035 1.273-.415 3.112-2.885 5.576-6.01 5.997-.636.087-1.71.047-2.311-.082-.222-.053-.415-.082-.433-.07-.017.023.946 3.498 1.098 3.965.032.096.043.134-.01.147zm-1.643-.23zm-1.937-.643a.27.27 0 0 1-.02-.016c-.035-.04-.303-.893-.59-1.903-.285-1.01-.817-2.88-1.173-4.146-.362-1.267-.69-2.505-.736-2.745-.093-.525-.105-1.752-.017-2.277a7.31 7.31 0 0 1 .584-1.869c.975-2.044 2.692-3.393 4.957-3.889.613-.134 2.032-.134 2.651 0 .251.059.48.082.503.053.023-.024-.217-.952-.532-2.062a64.449 64.449 0 0 1-.552-2.005 41.861 41.861 0 0 0-.64-.003c-1.301-.006-1.634.029-2.639.262-2.172.508-4.274 1.805-5.728 3.516-2.412 2.838-3.223 6.71-2.149 10.23.391 1.297.876 2.249 1.688 3.352a10.99 10.99 0 0 0 4.393 3.502zm2.573 1.905c-.315-.046-.619-.099-.671-.122a8.684 8.684 0 0 0-.561-.146c-1.857-.45-3.83-1.553-5.308-2.967-1.127-1.08-2.254-2.715-2.727-3.947-.064-.158-.14-.345-.17-.409-.157-.333-.437-1.308-.595-2.096-.17-.823-.181-.97-.181-2.167 0-.735.03-1.436.064-1.635.041-.192.117-.619.181-.94.059-.327.146-.654.187-.73a.451.451 0 0 0 .059-.14c-.03 0 .239-.87.286-.934.023-.03.093-.187.151-.35.1-.275.427-.94.55-1.14.034-.046.186-.303.344-.566.163-.268.321-.52.35-.554.035-.041.228-.286.427-.543 1.74-2.214 4.385-3.814 7.17-4.333.824-.158 3.632-.152 4.467.006 1.338.25 2.763.805 3.971 1.541.584.362.625.386 1.285.911.56.444 1.489 1.378 1.892 1.904.158.21.356.461.438.56.082.106.152.205.152.228 0 .03.064.129.14.228.076.1.257.42.409.706.146.292.292.555.315.584.023.035.134.275.24.543.788 1.992 1.062 3.89.846 5.94-.088.88-.485 2.44-.788 3.106-.059.14-.111.268-.111.286 0 .052-.502 1.057-.654 1.308-1.232 2.044-2.978 3.69-4.952 4.671-.339.17-.66.327-.718.357-.392.204-1.682.595-2.64.794-.595.122-3.089.152-3.848.046zm2.622-8.35c1.267-.321 2.365-1.401 2.68-2.633.117-.462.123-1.355.006-1.805-.485-1.915-2.476-3.136-4.35-2.663-.771.193-1.18.42-1.723.964-.776.777-1.098 1.547-1.092 2.633.006 1.653 1.08 3.049 2.692 3.48.485.13 1.326.14 1.787.024z" fill="#FEFFFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Pungo);


/***/ }),

/***/ "m7Be":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wgr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wgr = {
  symbol: 'wgr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.893-20.613c-.152-.261-.397-.387-.718-.387-1.969.007-3.937.02-5.906.003-.497-.003-.794.187-1.025.601-.498.883-1.023 1.752-1.537 2.629-.218.37-.428.743-.643 1.113a.272.272 0 0 1-.069.071c-.024-.023-.052-.044-.069-.07-.217-.371-.428-.744-.642-1.114-.511-.877-1.04-1.742-1.537-2.629-.232-.414-.529-.604-1.026-.6-1.968.016-3.937.003-5.905-.004-.315 0-.56.126-.712.387-.155.265-.131.543.035.815.228.37.445.747.666 1.12.608 1.036 1.215 2.072 1.82 3.108.64 1.09 1.28 2.178 1.924 3.265.573.975 1.143 1.946 1.72 2.917.159.265.397.4.711.387.308-.014.525-.166.67-.431.149-.265.304-.53.46-.791l1.533-2.611c.114-.197.235-.39.363-.608.13.217.248.41.362.608l1.534 2.61c.155.265.31.527.459.792.145.265.363.417.67.431a.74.74 0 0 0 .711-.387 3374.466 3374.466 0 0 0 5.464-9.29c.221-.373.435-.75.666-1.12.156-.272.177-.55.021-.815zM15.05 17.142c-.577.995-1.158 1.988-1.744 2.978-.11.19-.228.374-.366.604l-4.797-8.186c.09-.007.152-.017.214-.017 1.312-.003 2.625-.003 3.937-.01.145 0 .228.044.3.167.701 1.205 1.406 2.403 2.11 3.605.117.2.249.394.349.598a.313.313 0 0 1-.003.261zm4.01 3.582c-.138-.227-.256-.414-.366-.604a773.92 773.92 0 0 1-1.744-2.978.314.314 0 0 1 0-.261c.103-.207.231-.4.349-.598a2854.38 2854.38 0 0 0 2.11-3.606c.072-.122.155-.166.3-.166 1.312.007 2.624.007 3.937.01.062 0 .12.01.214.017-1.606 2.733-3.195 5.446-4.8 8.186z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#b80000" r="16"/><path d="M25.893 11.387c.156.265.135.543-.02.815-.232.37-.446.747-.667 1.12-.606 1.036-1.212 2.072-1.82 3.108a6343.145 6343.145 0 0 1-3.644 6.182.74.74 0 0 1-.711.387c-.307-.014-.525-.166-.67-.431-.149-.265-.304-.527-.46-.791-.51-.872-1.022-1.742-1.533-2.611-.114-.197-.231-.39-.362-.608-.128.217-.249.41-.363.608l-1.533 2.61a36.99 36.99 0 0 0-.46.792c-.145.265-.362.417-.67.431a.746.746 0 0 1-.711-.387c-.577-.971-1.147-1.942-1.72-2.917a939.803 939.803 0 0 1-1.924-3.265c-.605-1.036-1.212-2.072-1.82-3.108-.22-.373-.438-.75-.666-1.12-.166-.272-.19-.55-.035-.815.152-.261.397-.387.712-.387 1.968.007 3.937.02 5.905.003.497-.003.794.187 1.026.601.497.887 1.026 1.752 1.537 2.629.214.37.425.743.642 1.113.017.027.045.048.07.071a.272.272 0 0 0 .068-.07c.215-.37.425-.744.643-1.114.514-.877 1.04-1.746 1.537-2.629.231-.414.528-.604 1.025-.6 1.969.016 3.937.003 5.906-.004.321 0 .566.126.718.387zM15.05 17.142a.313.313 0 0 0 .003-.261c-.1-.204-.232-.397-.349-.598-.704-1.202-1.409-2.4-2.11-3.605-.072-.123-.155-.167-.3-.167-1.312.007-2.625.007-3.937.01-.062 0-.124.01-.214.017 1.602 2.733 3.19 5.446 4.797 8.186.138-.23.255-.414.366-.604.586-.99 1.167-1.983 1.744-2.978zm4.01 3.582c1.605-2.74 3.194-5.453 4.8-8.186-.093-.007-.152-.017-.214-.017-1.313-.003-2.625-.003-3.937-.01-.145 0-.228.044-.3.166a2854.38 2854.38 0 0 1-2.11 3.606c-.118.197-.246.39-.35.598a.314.314 0 0 0 0 .261c.58.994 1.161 1.987 1.745 2.978.11.19.228.377.366.604z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wgr);


/***/ }),

/***/ "mlig":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vivo.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vivo = {
  symbol: 'vivo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.049-21.723c-1.664 2.772-6.527 9.835-7.036 10.44-.488-.596-5.058-7.27-7.081-10.472A1.573 1.573 0 0 0 6.73 9.76a1.647 1.647 0 0 0-.475 2.248c2.047 3.241 3.84 5.985 5.27 8.036C13.932 23.497 14.312 24.5 16 24.5s2.194-1.136 4.535-4.447c1.603-2.268 3.526-5.238 5.23-8.076a1.646 1.646 0 0 0-.526-2.237c-.75-.47-1.73-.23-2.19.537z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#408af1" r="16"/><path d="M23.049 10.277a1.574 1.574 0 0 1 2.19-.537c.75.47.986 1.47.526 2.237-1.704 2.838-3.627 5.808-5.23 8.076-2.34 3.31-2.847 4.447-4.535 4.447s-2.068-1.003-4.475-4.456c-1.43-2.05-3.223-4.795-5.27-8.036A1.647 1.647 0 0 1 6.73 9.76a1.573 1.573 0 0 1 2.202.485c2.023 3.202 6.593 9.876 7.081 10.471.51-.604 5.372-7.667 7.036-10.44z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vivo);


/***/ }),

/***/ "mxwP":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rap.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rap = {
  symbol: 'rap',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM12.478 6.435V6H9v19.913h3.478V6.435zM14.957 6H15v3.217h1.522c2.217 0 3.608 1 3.608 2.957 0 1.956-1.39 2.956-3.608 2.956h-3.348l6.956 10.783h4.087l-5.087-7.74c2.913-.738 4.522-3 4.522-5.956C23.652 8.565 20.957 6 16.913 6h-1.956z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><path d="M12.478 6.435v19.478H9V6h3.478v.435zM14.957 6h1.956c4.044 0 6.74 2.565 6.74 6.217 0 2.957-1.61 5.218-4.523 5.957l5.087 7.739H20.13L13.174 15.13h3.348c2.217 0 3.608-1 3.608-2.956 0-1.957-1.39-2.957-3.608-2.957H15V6h-.043z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rap);


/***/ }),

/***/ "n8yu":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/krb.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Krb = {
  symbol: 'krb',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.24-17.294v-4.29h-1.988v4.322H12.31V6H9.5v20h2.81v-9.133h1.462v3.746h1.989v-3.73c.326.021.6.104.815.244.216.14.416.374.6.702l3.562 7.35c.31.546.721.821 1.231.821H24.5l-4.346-8.675c-.29-.51-.6-.904-.926-1.185a2.965 2.965 0 0 0-1.22-.613c.31-.109.594-.27.852-.483.252-.213.479-.488.679-.826L24.053 6h-2.3c-.262 0-.5.073-.7.213a1.93 1.93 0 0 0-.515.566l-3.625 6.987c-.163.312-.337.54-.52.675a1.486 1.486 0 0 1-.632.265z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00AEEF"/><path fill="#FFF" d="M15.76 14.706c.238-.041.448-.13.632-.265s.358-.363.521-.675l3.625-6.987c.142-.234.316-.42.516-.566a1.2 1.2 0 0 1 .7-.213h2.299l-4.514 8.218c-.2.338-.427.613-.68.826a2.772 2.772 0 0 1-.851.483c.484.125.889.328 1.22.613.326.28.637.676.926 1.185L24.5 26h-2.53c-.511 0-.922-.275-1.232-.82l-3.562-7.351c-.184-.328-.384-.561-.6-.702-.215-.14-.489-.223-.815-.244v3.73h-1.989v-3.746H12.31V26H9.5V6h2.81v8.738h1.462v-4.322h1.989v4.29z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Krb);


/***/ }),

/***/ "nPhf":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cnx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cnx = {
  symbol: 'cnx',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd">
        <path  fill="${
          c ? c : this.color
        }" d="M14.514 25.556A8.482 8.482 0 0 0 17.064 27l-.142-1.374a9.674 9.674 0 0 0 8.65-8.249A8.481 8.481 0 0 0 27 14.847l-1.383.143a9.674 9.674 0 0 0-8.24-8.562A8.481 8.481 0 0 0 14.847 5l.143 1.383a9.674 9.674 0 0 0-8.562 8.24A8.481 8.481 0 0 0 5 17.153l1.383-.143a9.674 9.674 0 0 0 8.131 8.546zm.57-4.132a5.503 5.503 0 0 1-4.554-4.845l1.3-.135a6.977 6.977 0 0 1-1.266-1.287 5.503 5.503 0 0 1 4.857-4.627l.135 1.3a6.977 6.977 0 0 1 1.287-1.266 5.503 5.503 0 0 1 4.627 4.857l-1.3.135a6.99 6.99 0 0 1 1.266 1.287 5.503 5.503 0 0 1-4.945 4.635l-.136-1.309c-.389.491-.812.91-1.271 1.255zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>
        <path  fill="${
          c ? c : this.color
        }" d="M6.383 17.01L5 17.153c.74-2.07 2.203-3.726 4.391-4.968.207 1.716 1.02 3.135 2.44 4.259l-1.3.135a5.503 5.503 0 0 0 4.553 4.845 6.084 6.084 0 0 1-2.987 1.185c.681 1.2 1.487 2.183 2.417 2.947a9.674 9.674 0 0 1-8.131-8.546zm19.234-2.02L27 14.847c-.74 2.07-2.203 3.726-4.391 4.968-.207-1.716-1.02-3.135-2.44-4.259l1.3-.135a5.503 5.503 0 0 0-4.626-4.857 6.085 6.085 0 0 1 2.972-1.173c-.687-1.209-1.499-2.196-2.438-2.963a9.674 9.674 0 0 1 8.24 8.562z" opacity=".5"/>
    </g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#4c6bae" r="16"/><g fill="#fff"><path d="M6.383 17.01L5 17.153c.74-2.07 2.203-3.726 4.391-4.968.207 1.716 1.02 3.135 2.44 4.259l-1.3.135a5.503 5.503 0 0 0 4.553 4.845 6.084 6.084 0 0 1-2.987 1.185c.681 1.2 1.487 2.183 2.417 2.947a9.674 9.674 0 0 1-8.131-8.546zm19.234-2.02L27 14.847c-.74 2.07-2.203 3.726-4.391 4.968-.207-1.716-1.02-3.135-2.44-4.259l1.3-.135a5.503 5.503 0 0 0-4.626-4.857 6.085 6.085 0 0 1 2.972-1.173c-.687-1.209-1.499-2.196-2.438-2.963a9.674 9.674 0 0 1 8.24 8.562z" opacity=".5"/><path d="M16.922 25.626L17.065 27c-2.07-.74-3.726-2.203-4.968-4.391 1.715-.207 3.134-1.02 4.258-2.44l.136 1.31a5.503 5.503 0 0 0 4.945-4.636 6.085 6.085 0 0 1 1.173 2.972c1.209-.687 2.196-1.499 2.963-2.438a9.674 9.674 0 0 1-8.65 8.249zM14.99 6.383L14.847 5c2.07.74 3.726 2.203 4.968 4.391-1.716.207-3.135 1.02-4.259 2.44l-.135-1.3a5.503 5.503 0 0 0-4.857 4.626 6.085 6.085 0 0 1-1.173-2.972c-1.209.687-2.196 1.499-2.963 2.438a9.674 9.674 0 0 1 8.562-8.24z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cnx);


/***/ }),

/***/ "nhib":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/sumo.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Sumo = {
  symbol: 'sumo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.061-22.916H13.99C10.977 12.446 9.514 13.828 7 15.9l10.81 2.338-1.86 2.09c-2.483-1.47-4.183-1.659-7.24-1.94 2.297 1.058 3.49 1.908 5.279 4.526h4.072c2.115-2.627 3.573-4.152 6.939-7.014l-10.76-2.39 1.71-1.99c2.709 1.422 4.331 1.626 7.206 1.986-.827-.227-1.691-.857-5.095-4.423zm-3.821-.497h3.57C16.919 7.475 16.54 6.912 16.05 6c-.499.885-.88 1.442-1.81 2.587zm3.57 14.826h-3.57c.89 1.112 1.27 1.675 1.76 2.587.498-.885.879-1.442 1.81-2.587z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2D9CDB"/><path fill="#FFF" d="M18.061 9.084c3.404 3.566 4.268 4.196 5.095 4.423-2.875-.36-4.497-.564-7.206-1.986l-1.71 1.99L25 15.9c-3.366 2.862-4.824 4.387-6.939 7.014H13.99c-1.789-2.618-2.982-3.468-5.28-4.527 3.058.282 4.758.47 7.24 1.94l1.861-2.09L7 15.9c2.514-2.072 3.977-3.454 6.989-6.816h4.072zm-3.821-.497c.93-1.145 1.31-1.702 1.81-2.587.49.912.869 1.475 1.76 2.587h-3.57zm3.57 14.826C16.879 24.558 16.498 25.115 16 26c-.49-.912-.87-1.475-1.76-2.587h3.57z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Sumo);


/***/ }),

/***/ "oGKv":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/stak.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Stak = {
  symbol: 'stak',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }"  d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.566-27c.181 1.472.26 2.966.385 4.438.072.445.11.896.113 1.347l3.827 3.815c-1.676 2.4-3.397 4.789-5.072 7.2.17 1.925.317 3.85.51 5.774l11.57-16.393h-5.14c-2.06-2.06-4.11-4.132-6.182-6.181h-.011zM4.011 21.46H4v.046c1.72-.034 3.442 0 5.162-.023l6.147 6.159h.023c-.192-1.936-.34-3.884-.51-5.808-1.279-1.257-2.535-2.536-3.792-3.792 1.687-2.4 3.385-4.778 5.072-7.19l-.487-5.795c-3.872 5.468-7.72 10.947-11.604 16.403z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F2941B"/><path d="M16.566 5h.011c2.072 2.05 4.121 4.12 6.181 6.181h5.14l-11.57 16.393c-.192-1.925-.34-3.85-.51-5.774 1.676-2.411 3.397-4.8 5.073-7.2l-3.827-3.815a8.889 8.889 0 0 0-.113-1.347c-.125-1.472-.204-2.966-.385-4.438zM4.011 21.46c3.883-5.456 7.732-10.935 11.604-16.403l.487 5.796c-1.687 2.411-3.385 4.789-5.072 7.189 1.257 1.256 2.513 2.535 3.793 3.792.17 1.924.317 3.872.51 5.808h-.024l-6.147-6.159c-1.72.023-3.441-.011-5.162.023v-.046h.011z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Stak);


/***/ }),

/***/ "oMH3":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/itc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Itc = {
  symbol: 'itc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.248-12.65v-6.677a1.153 1.153 0 0 0-.416-2.233 1.154 1.154 0 0 0-.779.297L17.225 7.4A1.16 1.16 0 0 0 16.088 6a1.16 1.16 0 0 0-1.15 1.34l-5.97 3.42a1.17 1.17 0 0 0-1.306-.207c-.437.207-.698.66-.658 1.138.04.478.375.882.84 1.013v6.616a1.153 1.153 0 0 0 .322 2.264c.236 0 .465-.07.658-.204l3.098 1.772v.035h.067l2.94 1.683A1.161 1.161 0 0 0 16.118 26a1.158 1.158 0 0 0 1.134-1.268l6.03-3.29c.36.196.797.189 1.15-.019.353-.208.57-.586.568-.993a1.166 1.166 0 0 0-.752-1.08zm-4.118-2.605h-.004l-.005-.027-.004-.062-.139-.067-.873-.52.913-.545.144-.067.009-.346h.004V9.827l2.533 1.452a1.192 1.192 0 0 0-.044.315c0 .55.392 1.024.935 1.133v6.57a1.16 1.16 0 0 0-.797 1.674l-2.672 1.457zm-4.04-8.436c.312 0 .61-.125.828-.347L19.53 9.46v5.607l-1.052.63-1.42-.843a1.025 1.025 0 0 0-1.016-1.177 1.025 1.025 0 0 0-1.01 1.217l-1.375.808-1.087-.648V9.441l2.65-1.519c.22.246.536.387.868.387zm.68 8.422a1.035 1.035 0 0 0-1.428-.022l-1.065-.635 1.07-.621a1.035 1.035 0 0 0 1.418-.023l1.088.649zm-7.528 4.147c.128-.303.12-.646-.024-.943s-.406-.519-.724-.61V12.7c.6-.171.956-.785.801-1.385l2.628-1.506v5.435h.004v.213l.35.178.751.444-.832.488-.224.133-.045.045-.004.177v5.492zm6.848 2.793a1.162 1.162 0 0 0-.998.56l-2.525-1.448v-5.714l1.074-.626 1.392.826c-.01.06-.016.12-.018.182 0 .564.461 1.02 1.03 1.02s1.03-.456 1.03-1.02a.824.824 0 0 0-.014-.151l1.419-.853 1.007.6v5.736l-2.47 1.35a1.156 1.156 0 0 0-.927-.462z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#102044"/><path fill="#FFF" fill-rule="nonzero" d="M24.248 19.35c.45.173.748.601.752 1.08a1.15 1.15 0 0 1-.568.993 1.17 1.17 0 0 1-1.15.02l-6.03 3.29A1.159 1.159 0 0 1 16.117 26a1.16 1.16 0 0 1-1.188-1.131l-2.94-1.683h-.067v-.035L8.824 21.38a1.154 1.154 0 0 1-.658.204 1.16 1.16 0 0 1-1.154-.993 1.154 1.154 0 0 1 .832-1.271v-6.616a1.157 1.157 0 0 1-.84-1.013c-.04-.478.221-.931.658-1.138a1.17 1.17 0 0 1 1.306.207l5.97-3.42A1.16 1.16 0 0 1 16.088 6a1.16 1.16 0 0 1 1.137 1.399l5.828 3.338c.213-.192.49-.298.779-.297a1.153 1.153 0 1 1 .416 2.233v6.678zm-4.118-2.605v5.683l2.672-1.457a1.16 1.16 0 0 1 .797-1.674v-6.57a1.16 1.16 0 0 1-.935-1.133c0-.106.015-.212.044-.315l-2.533-1.452v5.284h-.004l-.01.346-.143.067-.913.546.873.52.139.066.004.062.005.027h.004zm-4.04-8.436c-.332 0-.648-.14-.869-.387l-2.65 1.519v5.612l1.088.648 1.374-.808a1.025 1.025 0 0 1 1.012-1.217 1.025 1.025 0 0 1 1.016 1.177l1.419.844 1.052-.63V9.458l-2.614-1.497a1.157 1.157 0 0 1-.828.347zm.68 8.422l1.083-.652-1.088-.649a1.035 1.035 0 0 1-1.418.023l-1.07.621 1.065.635a1.035 1.035 0 0 1 1.428.022zm-7.528 4.147l2.68 1.536v-5.492l.005-.177.045-.045.224-.133.832-.488-.752-.444-.349-.178v-.213h-.004V9.809l-2.628 1.506c.155.6-.2 1.214-.8 1.385v6.624c.317.092.58.315.723.611.143.297.152.64.024.943zm6.848 2.793c.365 0 .708.17.926.462l2.47-1.35v-5.736l-1.006-.6-1.42.853c.01.05.014.1.014.15 0 .565-.46 1.022-1.03 1.022a1.025 1.025 0 0 1-1.01-1.203l-1.393-.826-1.074.626v5.714l2.525 1.447c.21-.348.589-.56.998-.559z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Itc);


/***/ }),

/***/ "oUXX":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btx = {
  symbol: 'btx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm6.632-17.98c.314-2.096-1.282-3.223-3.465-3.975l.708-2.84-1.728-.43-.69 2.765c-.454-.114-.92-.22-1.384-.326l.694-2.783L15.039 6l-.708 2.839c-.376-.086-.746-.17-1.104-.26l.002-.009-2.384-.595-.46 1.846s1.283.294 1.256.312c.7.175.826.638.805 1.006l-.806 3.235c.048.012.11.03.18.057l-.183-.045-1.13 4.532c-.086.212-.303.531-.793.41.018.025-1.256-.313-1.256-.313L7.6 20.993l2.25.561c.418.105.828.215 1.232.318l-.716 2.872 1.727.43.708-2.84c.472.127.93.245 1.378.357l-.706 2.828 1.728.43.716-2.866c2.947.558 5.163.333 6.096-2.333.752-2.146-.037-3.385-1.588-4.192 1.13-.26 1.98-1.003 2.207-2.538zm-3.95 5.538c-.533 2.147-4.147.986-5.319.695l.95-3.805c1.17.293 4.928.872 4.37 3.11zm.535-5.569c-.487 1.953-3.495.96-4.47.717l.86-3.45c.976.243 4.118.696 3.61 2.733zm5.03 7.629l.154-.667a1.192 1.192 0 0 0-.518.029c-.154.046-.29.12-.408.222a1.351 1.351 0 0 0-.3.375 1.87 1.87 0 0 0-.182.484 1.61 1.61 0 0 0-.025.68c.041.205.12.387.238.545.117.159.268.292.453.4.184.109.39.189.615.241.222.051.436.067.642.047a1.367 1.367 0 0 0 .993-.553c.122-.163.21-.363.265-.601.09-.39.058-.727-.096-1.01-.154-.284-.42-.503-.8-.656l-.154.666c.211.082.362.2.454.354.092.155.115.33.07.525a.726.726 0 0 1-.47.54 1.05 1.05 0 0 1-.366.064c-.131 0-.26-.014-.384-.042a1.628 1.628 0 0 1-.54-.211.942.942 0 0 1-.285-.282.67.67 0 0 1-.102-.306c-.007-.105 0-.2.02-.285a.754.754 0 0 1 .25-.432.642.642 0 0 1 .476-.127zm2.692-2.113a1.69 1.69 0 0 0 .03-.674 1.414 1.414 0 0 0-.22-.555 1.45 1.45 0 0 0-.434-.414 1.986 1.986 0 0 0-.62-.251 1.967 1.967 0 0 0-.66-.045 1.45 1.45 0 0 0-.572.182c-.17.098-.317.233-.441.403a1.69 1.69 0 0 0-.269.619 1.69 1.69 0 0 0-.03.673c.037.208.11.393.22.556.11.163.255.3.434.414.18.113.384.196.614.25.234.054.456.069.667.046a1.45 1.45 0 0 0 .571-.182 1.43 1.43 0 0 0 .441-.403 1.69 1.69 0 0 0 .27-.619zm-2.624-2.798l3.023.698.154-.666-1.438-.332a1.441 1.441 0 0 1-.43-.167 1 1 0 0 1-.284-.25.751.751 0 0 1-.132-.64c.01-.048.025-.095.042-.142l.053-.139-.643-.148-.033.088c-.01.028-.025.081-.043.16a.817.817 0 0 0-.01.311 1.14 1.14 0 0 0 .26.556.692.692 0 0 0 .213.169l-.003.012-.584-.135-.145.625zm2.28-2.19l.512-2.22a1.775 1.775 0 0 0-.668-.109 1.64 1.64 0 0 0-.627.142c-.192.087-.36.213-.503.38a1.39 1.39 0 0 0-.297.605 1.429 1.429 0 0 0-.011.638c.044.199.125.379.241.539.117.16.264.297.442.41a2.096 2.096 0 0 0 1.253.295 1.34 1.34 0 0 0 1.004-.56c.12-.165.207-.366.262-.604.037-.164.051-.326.041-.486a1.373 1.373 0 0 0-.105-.452 1.294 1.294 0 0 0-.65-.667l-.145.63a.766.766 0 0 1 .315.354.822.822 0 0 1 .017.5.851.851 0 0 1-.156.345.737.737 0 0 1-.254.206.858.858 0 0 1-.321.083 1.191 1.191 0 0 1-.35-.028zm-.182 4.867a.785.785 0 0 1-.49.576 1.1 1.1 0 0 1-.378.076 1.57 1.57 0 0 1-.775-.179 1.061 1.061 0 0 1-.306-.234.785.785 0 0 1-.185-.732.785.785 0 0 1 .488-.577c.115-.047.241-.073.377-.076a1.582 1.582 0 0 1 .775.179 1.1 1.1 0 0 1 .306.234.785.785 0 0 1 .188.733zm.102-6.523l-.36 1.556a.91.91 0 0 1-.516-.363.748.748 0 0 1-.113-.285.822.822 0 0 1 .15-.624.773.773 0 0 1 .52-.287c.105-.014.212-.013.319.003z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FB2EA3"/><path fill="#FFF" fill-rule="nonzero" d="M22.632 14.02c-.227 1.535-1.078 2.278-2.207 2.538 1.55.807 2.34 2.046 1.588 4.192-.933 2.666-3.149 2.89-6.096 2.333L15.2 25.95l-1.728-.431.706-2.828a65.74 65.74 0 0 1-1.378-.358l-.708 2.842-1.727-.43.716-2.873c-.404-.103-.814-.213-1.233-.318l-2.249-.56.858-1.98s1.274.34 1.256.314c.49.121.707-.198.793-.41l1.13-4.532.183.045a1.432 1.432 0 0 0-.18-.057l.806-3.235c.021-.368-.105-.83-.805-1.006.027-.018-1.256-.312-1.256-.312l.46-1.846 2.384.595-.002.01c.358.088.728.173 1.104.259L15.039 6l1.728.43-.694 2.784c.463.106.93.212 1.384.326l.69-2.765 1.728.43-.708 2.84c2.183.752 3.779 1.879 3.465 3.975zm-3.95 5.538c.56-2.238-3.198-2.817-4.37-3.11l-.949 3.805c1.172.291 4.786 1.452 5.32-.695zm.535-5.569c.508-2.037-2.634-2.49-3.61-2.734l-.86 3.451c.975.244 3.983 1.236 4.47-.717zm5.03 7.629a.642.642 0 0 0-.476.127.754.754 0 0 0-.25.432.983.983 0 0 0-.02.285.67.67 0 0 0 .102.306c.06.1.156.194.286.282.13.087.31.157.54.21.124.03.252.044.383.043.132 0 .254-.021.366-.063a.726.726 0 0 0 .47-.541.688.688 0 0 0-.07-.525c-.092-.154-.243-.272-.454-.354l.154-.666c.38.153.646.372.8.655.154.284.186.621.096 1.011a1.586 1.586 0 0 1-.265.6 1.367 1.367 0 0 1-.993.554 1.98 1.98 0 0 1-.642-.047 2.173 2.173 0 0 1-.615-.24 1.498 1.498 0 0 1-.453-.4 1.348 1.348 0 0 1-.238-.545 1.61 1.61 0 0 1 .025-.681 1.87 1.87 0 0 1 .183-.484c.081-.148.18-.273.299-.375.118-.102.254-.176.408-.222.155-.047.327-.056.518-.029l-.154.667zm2.692-2.113a1.69 1.69 0 0 1-.269.619c-.123.17-.27.304-.44.403a1.45 1.45 0 0 1-.572.182 1.993 1.993 0 0 1-.667-.046 1.967 1.967 0 0 1-.614-.25 1.45 1.45 0 0 1-.434-.414 1.414 1.414 0 0 1-.22-.556 1.69 1.69 0 0 1 .03-.673 1.69 1.69 0 0 1 .269-.619c.124-.17.27-.305.441-.403a1.45 1.45 0 0 1 .572-.182c.21-.023.43-.008.66.045a2 2 0 0 1 .62.25c.18.114.324.252.434.415.11.163.183.348.22.555a1.69 1.69 0 0 1-.03.674zm-2.624-2.798l.145-.625.584.135.003-.012a.692.692 0 0 1-.213-.17 1.14 1.14 0 0 1-.26-.555.817.817 0 0 1 .01-.312 1.484 1.484 0 0 1 .076-.247l.643.148a3.249 3.249 0 0 0-.053.139 1.233 1.233 0 0 0-.042.141.751.751 0 0 0 .132.64 1 1 0 0 0 .284.25c.119.073.262.129.43.168l1.438.332-.154.666-3.023-.698zm2.28-2.19c.116.028.233.037.35.03a.858.858 0 0 0 .32-.084.737.737 0 0 0 .255-.206.851.851 0 0 0 .156-.345.822.822 0 0 0-.017-.5.763.763 0 0 0-.315-.353l.145-.631a1.29 1.29 0 0 1 .755 1.119c.01.16-.004.322-.041.486-.055.238-.143.44-.263.605a1.34 1.34 0 0 1-1.004.56 2.096 2.096 0 0 1-1.252-.296 1.605 1.605 0 0 1-.442-.41 1.435 1.435 0 0 1-.241-.54c-.045-.198-.04-.41.011-.637a1.39 1.39 0 0 1 .297-.606 1.46 1.46 0 0 1 .503-.38 1.64 1.64 0 0 1 .627-.14c.226-.008.448.028.668.107l-.513 2.222zm-.182 4.867a.785.785 0 0 0-.188-.733 1.1 1.1 0 0 0-.306-.234 1.57 1.57 0 0 0-.775-.18 1.061 1.061 0 0 0-.377.077.785.785 0 0 0-.487.577.785.785 0 0 0 .184.732c.083.094.185.171.306.234a1.582 1.582 0 0 0 .775.18 1.1 1.1 0 0 0 .378-.077.785.785 0 0 0 .49-.576zm.102-6.523a1.103 1.103 0 0 0-.32-.003.773.773 0 0 0-.519.287.822.822 0 0 0-.15.624c.02.105.057.2.113.285a.91.91 0 0 0 .517.363l.359-1.556z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btx);


/***/ }),

/***/ "oqVq":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nuls.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nuls = {
  symbol: 'nuls',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.597-12.64l-.018 4.492-2.825-1.447.065-9.454 4.744 6.223 4.274 2.387L22 20.443V8.779L16.028 6l.064 6.8 1.413 1.873.129-6.196 2.668 1.331v9.88l-3.019-1.846-5.465-7.164a.636.636 0 0 0-.923-.098l-.683.586a.591.591 0 0 0-.212.453v11.718L16 26v-4.536z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#82bd39" r="16"/><path d="M14.403 19.36L16 21.464V26l-6-2.663V11.619c0-.173.077-.338.212-.453l.683-.585a.636.636 0 0 1 .923.097l5.465 7.164 3.019 1.846v-9.88l-2.668-1.331-.13 6.196-1.412-1.873-.064-6.8L22 8.779v11.664l-1.357 1.118-4.274-2.387-4.744-6.223-.065 9.454 2.825 1.447z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nuls);


/***/ }),

/***/ "orbS":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btch.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btch = {
  symbol: 'btch',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.318-17.49c-.31.202-.665.416-1.033.64v2.021c.334-.169.678-.34 1.033-.509v-2.153zm-5.167 3.737a.779.779 0 0 0 1.04.34l.966-.487c.006-.812.01-1.429.01-1.674v-.065c-.82.408-1.442.721-1.681.84a.777.777 0 0 0-.335 1.046zm5.459-.205a.77.77 0 0 0 .77.773h.009a.773.773 0 0 0 .772-.773v-6.403a.774.774 0 0 0-.773-.773c-.033 0-.067.004-.1.007a.768.768 0 0 0-.675.763v3.198c-.003 1.074-.003 2.14-.003 3.208zm11.011-4.959c-.049-.374-.297-.582-.674-.68-.3-.077-.61-.092-.926-.095-.736-.003-1.466.116-2.19.257-1.046.203-2.08.463-3.097.78-.307.094-.61.192-.917.29l-.003-.012.055-.046c.592-.506 1.18-1.012 1.776-1.512 1.306-1.104 2.484-2.315 3.578-3.593.298-.347.555-.718.687-1.141.2-.635-.024-1.03-.668-1.208a3.298 3.298 0 0 0-.834-.092c-.614-.003-1.22.098-1.819.22-.625.13-1.53.36-2.143.546-.981.3-2.193.816-3.275 1.254-.552.215-1.14.491-1.69.706l-2.079.846c-2.76 1.187-3.563.334-3.563.334 0 .004.001.007.003.01a.092.092 0 0 1-.012-.025c-.537 1.058-.09 2.98 3.014 1.607.488-.19.984-.396 1.469-.583.935-.365 1.861-.816 2.8-1.177a52.25 52.25 0 0 1 1.953-.758l.592-.23c.607-.2 1.214-.398 1.833-.552.675-.174 1.264-.279 1.62-.233.036.003.073.006.107.013.162.021.248.107.233.22-.006.175-.288.755-2.855 2.892-.187.16-.374.322-.561.481-.288.249-.567.494-.85.74l-.236.208-.003.003-.11.098a.223.223 0 0 1-.028.025l-.027.024-.215.163a.615.615 0 0 1-.046.04v2.713c.908-.31 5.326-1.784 5.802-1.352.037.05.598.399-4.539 3.913-.202.153-.398.306-.6.46l-.743.567c-.929.672-1.852 1.346-2.78 2.018l-.403.291c-.006.733-.009 1.435-.012 2.08l9.8-7.232a19.196 19.196 0 0 0 1.696-1.616c.3-.321.57-.662.748-1.051.092-.203.16-.399.132-.61zM9.018 24.205A.828.828 0 0 0 9.07 25.3a.821.821 0 0 0 1.019.141l.392-.288c.003-.589.01-1.306.015-2.08l-1.324.982a.89.89 0 0 0-.154.15zm3.346-11.26a.774.774 0 0 0-.748-.573.768.768 0 0 0-.776.77v3.198c0 .647-.028 3.858-.052 6.522-.006.764-.013 1.481-.016 2.08-.006.76-.009 1.33-.009 1.563a.77.77 0 0 0 .77.773h.009a.773.773 0 0 0 .773-.773c0-.536.006-1.515.012-2.714.003-.64.01-1.346.012-2.079.022-3.333.052-7.26.05-8.57a.859.859 0 0 0-.025-.197z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#4700C2" fill-rule="nonzero"/><g fill="#FFF"><path d="M13.682 14.51c-.31.202-.665.416-1.033.64v2.021c.334-.169.678-.34 1.033-.509v-2.153zm-5.167 3.737a.779.779 0 0 0 1.04.34l.966-.487c.006-.812.01-1.429.01-1.674v-.065c-.82.408-1.442.721-1.681.84a.777.777 0 0 0-.335 1.046zm5.459-.205a.77.77 0 0 0 .77.773h.009a.773.773 0 0 0 .772-.773v-6.403a.774.774 0 0 0-.874-.767.768.768 0 0 0-.674.764v3.198c-.003 1.074-.003 2.14-.003 3.208z"/><path d="M24.985 13.083c-.049-.374-.297-.582-.674-.68-.3-.077-.61-.092-.926-.095-.736-.003-1.466.116-2.19.257-1.046.203-2.08.463-3.097.78-.307.094-.61.192-.917.29l-.003-.012.055-.046c.592-.506 1.18-1.012 1.776-1.512 1.306-1.104 2.484-2.315 3.578-3.593.298-.347.555-.718.687-1.141.2-.635-.024-1.03-.668-1.208a3.298 3.298 0 0 0-.834-.092c-.614-.003-1.22.098-1.819.22-.625.13-1.53.36-2.143.546-.981.3-2.193.816-3.275 1.254-.552.215-1.14.491-1.69.706l-2.079.846c-2.76 1.187-3.563.334-3.563.334 0 .004.001.007.003.01a.092.092 0 0 1-.012-.025c-.537 1.058-.09 2.98 3.014 1.607.488-.19.984-.396 1.469-.583.935-.365 1.861-.816 2.8-1.177a52.25 52.25 0 0 1 1.953-.758l.592-.23c.607-.2 1.214-.398 1.833-.552.675-.174 1.264-.279 1.62-.233.036.003.073.006.107.013.162.021.248.107.233.22-.006.175-.288.755-2.855 2.892-.187.16-.374.322-.561.481-.288.249-.567.494-.85.74l-.236.208-.003.003-.11.098a.223.223 0 0 1-.028.025l-.027.024-.215.163a.615.615 0 0 1-.046.04v2.713c.908-.31 5.326-1.784 5.802-1.352.037.05.598.399-4.539 3.913-.202.153-.398.306-.6.46l-.743.567c-.929.672-1.852 1.346-2.78 2.018l-.403.291c-.006.733-.009 1.435-.012 2.08l9.8-7.232a19.196 19.196 0 0 0 1.696-1.616c.3-.321.57-.662.748-1.051.092-.203.16-.399.132-.61zM9.018 24.205A.828.828 0 0 0 9.07 25.3a.821.821 0 0 0 1.019.141l.392-.288c.003-.589.01-1.306.015-2.08l-1.324.982a.89.89 0 0 0-.154.15z"/><path d="M12.364 12.945a.774.774 0 0 0-.85-.567.768.768 0 0 0-.674.764v3.198c0 .647-.028 3.858-.052 6.522-.006.764-.013 1.481-.016 2.08-.006.76-.009 1.33-.009 1.563a.77.77 0 0 0 .77.773h.009a.773.773 0 0 0 .773-.773c0-.536.006-1.515.012-2.714.003-.64.01-1.346.012-2.079.022-3.333.052-7.26.05-8.57a.859.859 0 0 0-.025-.197z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btch);


/***/ }),

/***/ "ou+M":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xmr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xmr = {
  symbol: 'xmr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.03-26.765A10.816 10.816 0 0 0 5.148 16.059c0 1.202.205 2.346.557 3.432h3.227v-9.094l7.04 7.04 7.04-7.04v9.094h3.226a11.07 11.07 0 0 0 .558-3.432c0-5.984-4.84-10.824-10.824-10.824zM14.358 19.02l-3.08-3.08v5.72H6.731c1.906 3.11 5.338 5.192 9.24 5.192 3.901 0 7.362-2.082 9.24-5.192h-4.547v-5.72l-3.05 3.08L16 20.635l-1.643-1.614z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#F60"/><path fill="#FFF" fill-rule="nonzero" d="M15.97 5.235c5.985 0 10.825 4.84 10.825 10.824a11.07 11.07 0 0 1-.558 3.432h-3.226v-9.094l-7.04 7.04-7.04-7.04v9.094H5.704a11.07 11.07 0 0 1-.557-3.432c0-5.984 4.84-10.824 10.824-10.824zM14.358 19.02L16 20.635l1.613-1.614 3.051-3.08v5.72h4.547a10.806 10.806 0 0 1-9.24 5.192c-3.902 0-7.334-2.082-9.24-5.192h4.546v-5.72l3.08 3.08z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xmr);


/***/ }),

/***/ "pMA1":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nxt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nxt = {
  symbol: 'nxt',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.082-15.167c.507 0 .918-.373.918-.833v-1.667c0-.46-.41-.833-.918-.833h-5.53c-.507 0-.918.373-.918.833 0 .46.411.833.918.833h4.612V16c0 .46.411.833.918.833zm-4.549 0h-.7l-5.232-3.18a.979.979 0 0 0-.531-.153h-1.835c-.507 0-.918.373-.918.833 0 .46.41.833.918.833h1.542l5.352 3.24c.127.06.27.094.423.094h2.816c.507 0 .918-.373.918-.834 0-.46-.41-.833-.918-.833h-1.835zm-6.463 0h-1.554l-5.232-3.18a.98.98 0 0 0-.531-.153H5.918c-.507 0-.918.373-.918.833 0 .46.41.833.918.833H7.46l5.352 3.24c.126.06.27.094.423.094h1.835c.507 0 .918-.373.918-.834 0-.46-.411-.833-.918-.833zm-9.152 0c-.507 0-.918.373-.918.834 0 .46.41.833.918.833h1.835c.507 0 .918-.373.918-.833 0-.46-.411-.834-.918-.834H5.918z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#008FBB"/><path fill="#FFF" d="M26.082 16.833c-.507 0-.918-.373-.918-.833v-.834h-4.612c-.507 0-.918-.373-.918-.833 0-.46.411-.833.918-.833h5.53c.507 0 .918.373.918.833V16c0 .46-.41.833-.918.833zm-4.549 0h1.835c.507 0 .918.373.918.833 0 .46-.41.834-.918.834h-2.816a.987.987 0 0 1-.423-.094l-5.352-3.24h-1.542c-.507 0-.918-.373-.918-.833 0-.46.41-.833.918-.833h1.835c.198 0 .381.057.531.154l5.232 3.18h.7zm-6.463 0c.507 0 .918.373.918.833 0 .46-.411.834-.918.834h-1.835a.988.988 0 0 1-.423-.094l-5.352-3.24H5.918c-.507 0-.918-.373-.918-.833 0-.46.41-.833.918-.833h1.835a.98.98 0 0 1 .531.154l5.232 3.18h1.554zm-9.152 0h1.835c.507 0 .918.373.918.834 0 .46-.411.833-.918.833H5.918c-.507 0-.918-.373-.918-.833 0-.46.41-.834.918-.834z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nxt);


/***/ }),

/***/ "pXIP":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ant.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ant = {
  symbol: 'ant',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M7.965 17.598a21.528 21.528 0 0 1-1.466-3.554 18.546 18.546 0 0 1-.46-1.746c1.812-1.488 3.95-2.762 6.248-3.828.861-.4 1.697-.748 2.486-1.045.49-.184.9-.326 1.222-.43.332.108.73.246 1.22.43.79.298 1.625.645 2.486 1.045 2.3 1.067 4.438 2.34 6.25 3.827a21.79 21.79 0 0 1-1.853 5.145 18.46 18.46 0 0 1-1.86 2.936c-3.111-.222-2.922-2.1-2.922-2.1 0-.075 0-.15.014-.224 0 0 .15-1.477 1.452-1.477a.91.91 0 0 1 .485.108c.681.366.238 1.05.238 1.05.853-.135 1.91-1.084 1.74-2.744-.171-1.66-2.163-2.514-2.163-2.514.062-.38 0-.508 0-.508-4.228-2.541-7.521-1.992-7.521-1.992l.818.813c-.082-.007-.17-.007-.252-.007-3.43.122-6.172 2.981-6.172 6.498 0 .11.004.215.01.317zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-20.098l-.226-.16c-1.842-1.55-4.02-2.88-6.372-3.996A34.162 34.162 0 0 0 16.318 6.1l-.108-.035L15.993 6l-.318.1c-1.083.347-2.518.9-4.087 1.646-2.355 1.119-4.536 2.45-6.38 4.002l-.088.075-.12.1.052.288c-.01-.04.045.24.095.464a22.706 22.706 0 0 0 1.89 5.203c.901 1.757 2 3.293 3.268 4.574a14.314 14.314 0 0 0 5.366 3.433l.118.04.21.075.214-.082.112-.04c2.008-.718 3.81-1.87 5.367-3.432 1.262-1.268 2.362-2.808 3.268-4.574a22.672 22.672 0 0 0 1.569-3.95c.218-.745.395-1.523.421-1.74l.05-.28zm-7.602.724l-.014.014c-1.193-.251-1.623-.86-1.623-.86 1.126-.008 2.142.257 2.885.704 0 0-.402-.129-.811-.183-.205.21-.382.298-.437.325z" fill-rule="evenodd"  />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2CD3E1"/><path fill="#FFF" fill-rule="nonzero" d="M7.965 17.598a5.289 5.289 0 0 1-.01-.317c0-3.517 2.742-6.376 6.172-6.498.082 0 .17 0 .252.007l-.818-.813s3.293-.55 7.521 1.992c0 0 .062.129 0 .508 0 0 1.992.854 2.162 2.514.17 1.66-.886 2.609-1.739 2.744 0 0 .443-.684-.238-1.05a.91.91 0 0 0-.485-.108c-1.302 0-1.452 1.477-1.452 1.477-.014.074-.014.149-.014.223 0 0-.19 1.879 2.922 2.1a18.46 18.46 0 0 0 1.861-2.934 21.79 21.79 0 0 0 1.853-5.146c-1.813-1.486-3.951-2.76-6.25-3.827-.862-.4-1.697-.747-2.488-1.045a27.381 27.381 0 0 0-1.22-.43c-.322.104-.73.246-1.22.43-.79.297-1.626.645-2.487 1.045-2.297 1.066-4.436 2.34-6.249 3.828.098.472.247 1.061.461 1.745a21.528 21.528 0 0 0 1.466 3.555zM27 11.902l-.05.28c-.026.217-.203.995-.421 1.74a22.672 22.672 0 0 1-1.569 3.95c-.906 1.766-2.006 3.306-3.268 4.574-1.557 1.561-3.359 2.714-5.367 3.432l-.112.04L16 26l-.211-.074-.118-.041a14.314 14.314 0 0 1-5.366-3.433c-1.268-1.28-2.367-2.817-3.268-4.574a22.706 22.706 0 0 1-1.89-5.203c-.05-.224-.105-.504-.095-.464L5 11.923l.12-.1.088-.075c1.844-1.552 4.025-2.883 6.38-4.002a34.164 34.164 0 0 1 4.087-1.647L15.993 6l.217.065.108.035c1.08.347 2.515.9 4.084 1.646 2.352 1.117 4.53 2.446 6.372 3.995l.226.16zm-7.602.724c.055-.027.232-.115.437-.325.409.054.811.183.811.183-.743-.447-1.76-.712-2.885-.705 0 0 .43.61 1.623.86l.014-.013z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ant);


/***/ }),

/***/ "pY+E":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ppc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ppc = {
  symbol: 'ppc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9 7.5v9.209c0 5.05 3.75 9.433 8.883 8.626 3.015-4.42.406-11.267-6.06-15.115 8.127 3.359 9.788 9.44 8.911 14.493-.047.266-.109.527-.169.787 1.482-1.028 2.187-2.014 2.85-3.817C25.756 15.206 21.093 7.947 9 7.5z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3CB054"/><path fill="#FFF" d="M9 7.5c12.093.447 16.756 7.706 14.415 14.183-.663 1.803-1.368 2.79-2.85 3.817.06-.26.122-.52.17-.787.876-5.053-.785-11.134-8.912-14.493 6.466 3.848 9.075 10.695 6.06 15.115C12.75 26.142 9 21.759 9 16.709V7.5z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ppc);


/***/ }),

/***/ "q9VX":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xdn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xdn = {
  symbol: 'xdn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.691-20v8h2.738c1.322 0 3.683-.803 3.683-4s-2.36-4-3.683-4zm1.51 6.38v-4.76h1.134c.944 0 2.077.578 2.077 2.38s-1.133 2.38-2.077 2.38zM20.77 12v8h.566v-6.872L26.433 20H27v-8h-.567v7.026L21.335 12zM5 12v2h1.888v-2zm2.833 0v2H9.72v-2zm2.832 0v2h1.889v-2zm0 3v2h1.889v-2zm0 3v2h1.889v-2zm-2.832-3v2H9.72v-2z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#4f7aa2" r="16"/><path d="M13.309 12h2.738c1.322 0 3.683.803 3.683 4s-2.36 4-3.683 4H13.31zm1.51 6.38h1.134c.944 0 2.077-.578 2.077-2.38s-1.133-2.38-2.077-2.38H14.82zM20.77 12h.566l5.098 7.026V12H27v8h-.567l-5.098-6.872V20h-.567zM5 12h1.888v2H5zm2.833 0H9.72v2H7.833zm2.832 0h1.889v2h-1.889zm0 3h1.889v2h-1.889zm0 3h1.889v2h-1.889zm-2.832-3H9.72v2H7.833z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xdn);


/***/ }),

/***/ "qNsQ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/usdc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Usdc = {
  symbol: 'usdc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.25-4.5A11.75 11.75 0 0 0 27.5 15.75C27.5 9.26 22.24 4 15.75 4S4 9.26 4 15.75 9.26 27.5 15.75 27.5zm-.7-16.11v-.74a.705.705 0 0 1 1.41 0v.69a2.65 2.65 0 0 1 2.38 2 .42.42 0 0 1-.31.5h-.47a.8.8 0 0 1-.72-.46 1.64 1.64 0 0 0-1.59-.81c-1 0-1.6.62-1.6 1.18 0 .56.47.89 1.47 1.14l1 .22c1.73.37 2.46 1.1 2.46 2.37a2.62 2.62 0 0 1-2.59 2.58v.85a.705.705 0 0 1-1.41 0v-.84a2.73 2.73 0 0 1-2.61-2.08.35.35 0 0 1 .28-.41h.59a.68.68 0 0 1 .61.39 1.9 1.9 0 0 0 1.8.91c1 0 1.77-.6 1.77-1.21s-.44-.97-1.51-1.22l-1.1-.26c-1.57-.33-2.31-1.12-2.31-2.33a2.58 2.58 0 0 1 2.45-2.47zm-8.11 4.36a8.79 8.79 0 0 1 6.03-8.34.42.42 0 0 1 .56.4v.23a.93.93 0 0 1-.58.86 7.36 7.36 0 0 0 0 13.65.94.94 0 0 1 .58.87v.21a.45.45 0 0 1-.45.45h-.14a8.79 8.79 0 0 1-6-8.33zm17.62 0a8.79 8.79 0 0 1-5.99 8.34.47.47 0 0 1-.62-.44v-.17a1 1 0 0 1 .6-.89 7.36 7.36 0 0 0 0-13.64 1 1 0 0 1-.61-.9V7.9c0-.26.21-.47.47-.47h.15a8.79 8.79 0 0 1 6 8.32z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#2775C9"/><path d="M15.75 27.5C9.26 27.5 4 22.24 4 15.75S9.26 4 15.75 4 27.5 9.26 27.5 15.75A11.75 11.75 0 0 1 15.75 27.5zm-.7-16.11a2.58 2.58 0 0 0-2.45 2.47c0 1.21.74 2 2.31 2.33l1.1.26c1.07.25 1.51.61 1.51 1.22s-.77 1.21-1.77 1.21a1.9 1.9 0 0 1-1.8-.91.68.68 0 0 0-.61-.39h-.59a.35.35 0 0 0-.28.41 2.73 2.73 0 0 0 2.61 2.08v.84a.705.705 0 0 0 1.41 0v-.85a2.62 2.62 0 0 0 2.59-2.58c0-1.27-.73-2-2.46-2.37l-1-.22c-1-.25-1.47-.58-1.47-1.14 0-.56.6-1.18 1.6-1.18a1.64 1.64 0 0 1 1.59.81.8.8 0 0 0 .72.46h.47a.42.42 0 0 0 .31-.5 2.65 2.65 0 0 0-2.38-2v-.69a.705.705 0 0 0-1.41 0v.74zm-8.11 4.36a8.79 8.79 0 0 0 6 8.33h.14a.45.45 0 0 0 .45-.45v-.21a.94.94 0 0 0-.58-.87 7.36 7.36 0 0 1 0-13.65.93.93 0 0 0 .58-.86v-.23a.42.42 0 0 0-.56-.4 8.79 8.79 0 0 0-6.03 8.34zm17.62 0a8.79 8.79 0 0 0-6-8.32h-.15a.47.47 0 0 0-.47.47v.15a1 1 0 0 0 .61.9 7.36 7.36 0 0 1 0 13.64 1 1 0 0 0-.6.89v.17a.47.47 0 0 0 .62.44 8.79 8.79 0 0 0 5.99-8.34z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Usdc);


/***/ }),

/***/ "qVRk":
/*!******************************************************************!*\
  !*** ./node_modules/vue-cryptoicon/lib/vue-cryptoicon.common.js ***!
  \******************************************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports) {

module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "01f9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("2d00");
var $export = __webpack_require__("5ca1");
var redefine = __webpack_require__("2aba");
var hide = __webpack_require__("32e9");
var Iterators = __webpack_require__("84f2");
var $iterCreate = __webpack_require__("41a0");
var setToStringTag = __webpack_require__("7f20");
var getPrototypeOf = __webpack_require__("38fd");
var ITERATOR = __webpack_require__("2b4c")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "02f4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var defined = __webpack_require__("be13");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "0a49":
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__("9b43");
var IObject = __webpack_require__("626a");
var toObject = __webpack_require__("4bf8");
var toLength = __webpack_require__("9def");
var asc = __webpack_require__("cd1c");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "0d58":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("ce10");
var enumBugKeys = __webpack_require__("e11e");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "1169":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("2d95");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "11e9":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("52a7");
var createDesc = __webpack_require__("4630");
var toIObject = __webpack_require__("6821");
var toPrimitive = __webpack_require__("6a99");
var has = __webpack_require__("69a8");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("9e1e") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "1495":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var anObject = __webpack_require__("cb7c");
var getKeys = __webpack_require__("0d58");

module.exports = __webpack_require__("9e1e") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "1fa8":
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__("cb7c");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "230e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var document = __webpack_require__("7726").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "23c6":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("2d95");
var TAG = __webpack_require__("2b4c")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "27ee":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("23c6");
var ITERATOR = __webpack_require__("2b4c")('iterator');
var Iterators = __webpack_require__("84f2");
module.exports = __webpack_require__("8378").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "2aba":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var has = __webpack_require__("69a8");
var SRC = __webpack_require__("ca5a")('src');
var $toString = __webpack_require__("fa5b");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__("8378").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "2aeb":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("cb7c");
var dPs = __webpack_require__("1495");
var enumBugKeys = __webpack_require__("e11e");
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("230e")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("fab2").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "2b4c":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("5537")('wks');
var uid = __webpack_require__("ca5a");
var Symbol = __webpack_require__("7726").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "2caf":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__("5ca1");

$export($export.S, 'Array', { isArray: __webpack_require__("1169") });


/***/ }),

/***/ "2d00":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "2d95":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "32e9":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var createDesc = __webpack_require__("4630");
module.exports = __webpack_require__("9e1e") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "33a4":
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__("84f2");
var ITERATOR = __webpack_require__("2b4c")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "38fd":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("69a8");
var toObject = __webpack_require__("4bf8");
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "41a0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("2aeb");
var descriptor = __webpack_require__("4630");
var setToStringTag = __webpack_require__("7f20");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("32e9")(IteratorPrototype, __webpack_require__("2b4c")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "4588":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "4630":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "4a59":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("9b43");
var call = __webpack_require__("1fa8");
var isArrayIter = __webpack_require__("33a4");
var anObject = __webpack_require__("cb7c");
var toLength = __webpack_require__("9def");
var getIterFn = __webpack_require__("27ee");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "4bf8":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "52a7":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "5537":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("8378");
var global = __webpack_require__("7726");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("2d00") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "5ca1":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var core = __webpack_require__("8378");
var hide = __webpack_require__("32e9");
var redefine = __webpack_require__("2aba");
var ctx = __webpack_require__("9b43");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "5cc5":
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__("2b4c")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "5dbc":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var setPrototypeOf = __webpack_require__("8b97").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "5df3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__("02f4")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__("01f9")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "613b":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5537")('keys');
var uid = __webpack_require__("ca5a");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "626a":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("2d95");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "67ab":
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__("ca5a")('meta');
var isObject = __webpack_require__("d3f4");
var has = __webpack_require__("69a8");
var setDesc = __webpack_require__("86cc").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__("79e5")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "6821":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("626a");
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "69a8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "6a99":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("d3f4");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "7514":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__("5ca1");
var $find = __webpack_require__("0a49")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__("9c6c")(KEY);


/***/ }),

/***/ "7726":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "77f1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "79e5":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "7a56":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7726");
var dP = __webpack_require__("86cc");
var DESCRIPTORS = __webpack_require__("9e1e");
var SPECIES = __webpack_require__("2b4c")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "7f20":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("86cc").f;
var has = __webpack_require__("69a8");
var TAG = __webpack_require__("2b4c")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "7f7f":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__("9e1e") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "8378":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "84f2":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "86cc":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("cb7c");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var toPrimitive = __webpack_require__("6a99");
var dP = Object.defineProperty;

exports.f = __webpack_require__("9e1e") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "8b97":
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__("d3f4");
var anObject = __webpack_require__("cb7c");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__("9b43")(Function.call, __webpack_require__("11e9").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "9093":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("ce10");
var hiddenKeys = __webpack_require__("e11e").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "9b43":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("d8e8");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9c6c":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__("2b4c")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__("32e9")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "9def":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("4588");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "9e1e":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("79e5")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "aa77":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("5ca1");
var defined = __webpack_require__("be13");
var fails = __webpack_require__("79e5");
var spaces = __webpack_require__("fdef");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "ac6a":
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__("cadf");
var getKeys = __webpack_require__("0d58");
var redefine = __webpack_require__("2aba");
var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var Iterators = __webpack_require__("84f2");
var wks = __webpack_require__("2b4c");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "b39a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "be13":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "c26b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__("86cc").f;
var create = __webpack_require__("2aeb");
var redefineAll = __webpack_require__("dcbc");
var ctx = __webpack_require__("9b43");
var anInstance = __webpack_require__("f605");
var forOf = __webpack_require__("4a59");
var $iterDefine = __webpack_require__("01f9");
var step = __webpack_require__("d53b");
var setSpecies = __webpack_require__("7a56");
var DESCRIPTORS = __webpack_require__("9e1e");
var fastKey = __webpack_require__("67ab").fastKey;
var validate = __webpack_require__("b39a");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "c366":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("6821");
var toLength = __webpack_require__("9def");
var toAbsoluteIndex = __webpack_require__("77f1");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "c5f6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7726");
var has = __webpack_require__("69a8");
var cof = __webpack_require__("2d95");
var inheritIfRequired = __webpack_require__("5dbc");
var toPrimitive = __webpack_require__("6a99");
var fails = __webpack_require__("79e5");
var gOPN = __webpack_require__("9093").f;
var gOPD = __webpack_require__("11e9").f;
var dP = __webpack_require__("86cc").f;
var $trim = __webpack_require__("aa77").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__("2aeb")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__("9e1e") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__("2aba")(global, NUMBER, $Number);
}


/***/ }),

/***/ "c69a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("9e1e") && !__webpack_require__("79e5")(function () {
  return Object.defineProperty(__webpack_require__("230e")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "ca5a":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "cadf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("9c6c");
var step = __webpack_require__("d53b");
var Iterators = __webpack_require__("84f2");
var toIObject = __webpack_require__("6821");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("01f9")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "cb7c":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "cd1c":
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__("e853");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "ce10":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("69a8");
var toIObject = __webpack_require__("6821");
var arrayIndexOf = __webpack_require__("c366")(false);
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "d3f4":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "d53b":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "d8e8":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "dcbc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("2aba");
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),

/***/ "e0b8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7726");
var $export = __webpack_require__("5ca1");
var redefine = __webpack_require__("2aba");
var redefineAll = __webpack_require__("dcbc");
var meta = __webpack_require__("67ab");
var forOf = __webpack_require__("4a59");
var anInstance = __webpack_require__("f605");
var isObject = __webpack_require__("d3f4");
var fails = __webpack_require__("79e5");
var $iterDetect = __webpack_require__("5cc5");
var setToStringTag = __webpack_require__("7f20");
var inheritIfRequired = __webpack_require__("5dbc");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "e11e":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "e853":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var isArray = __webpack_require__("1169");
var SPECIES = __webpack_require__("2b4c")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "f400":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__("c26b");
var validate = __webpack_require__("b39a");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__("e0b8")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "f605":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "f6fd":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "fa5b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5537")('native-function-to-string', Function.toString);


/***/ }),

/***/ "fab2":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("7726").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __webpack_require__("f6fd")
  }

  var i
  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("7f7f");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"9a1c46aa-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Cryptoicon.vue?vue&type=template&id=055fa676&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{class:("cryptoicon--" + _vm.symbol),attrs:{"width":_vm.size,"height":_vm.size,"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 32 32"},domProps:{"innerHTML":_vm._s(_vm.icon)},on:{"click":function($event){return _vm.$emit('click')}}})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/Cryptoicon.vue?vue&type=template&id=055fa676&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.is-array.js
var es6_array_is_array = __webpack_require__("2caf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.find.js
var es6_array_find = __webpack_require__("7514");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("ac6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("cadf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("5df3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.map.js
var es6_map = __webpack_require__("f400");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("c5f6");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/Cryptoicon.vue?vue&type=script&lang=js&







//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ var Cryptoiconvue_type_script_lang_js_ = ({
  name: 'Cryptoicon',
  props: {
    symbol: {
      type: String,
      default: null
    },
    color: {
      type: String,
      default: null
    },
    size: {
      type: [String, Number],
      default: '24'
    },
    generic: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      lookupSymbol: new Map([['BCHSV', 'BSV'], ['BCHABC', 'BAB']])
    };
  },
  computed: {
    lSymbol: function lSymbol() {
      return this.symbol && this.symbol.toLowerCase();
    },
    uSymbol: function uSymbol() {
      return this.symbol && this.symbol.toUpperCase();
    },
    icon: function icon() {
      var symbol = this.lookupSymbol.has(this.uSymbol) ? this.lookupSymbol.get(this.uSymbol) : this.symbol;
      var icon = this.$options.lib.find(function (i) {
        return i.symbol === symbol.toLowerCase();
      });

      if (icon) {
        return !this.color ? icon.colorIcon() : icon.plainIcon(this.color);
      } else if (this.generic) {
        var _icon = this.$options.lib.find(function (i) {
          return i.symbol == 'generic';
        });

        if (_icon) {
          return !this.color ? _icon.colorIcon() : _icon.plainIcon(this.color);
        }
      } else {
        // eslint-disable-next-line no-console
        console.error("Symbol of the icon is not correct: ".concat(this.symbol));
        return undefined;
      }
    }
  },
  lib: [],
  add: function add(icons) {
    if (Array.isArray(icons)) {
      this.lib = icons;
    } else {
      this.lib.push(icons);
    }
  }
});
// CONCATENATED MODULE: ./src/components/Cryptoicon.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_Cryptoiconvue_type_script_lang_js_ = (Cryptoiconvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/components/Cryptoicon.vue





/* normalize component */

var component = normalizeComponent(
  components_Cryptoiconvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var Cryptoicon = (component.exports);
// CONCATENATED MODULE: ./src/components/index.js


/* harmony default export */ var components = ({
  install: function install(Vue, options) {
    Vue.component(Cryptoicon.name, Cryptoicon);
    Vue.mixin({
      beforeCreate: function beforeCreate() {
        if (options && options.size) {
          if (isNaN(options.size) || options.size < 0) {
            console.error('Size must be integer');
          } else {
            Cryptoicon.props.size.default = options.size;
          }
        }

        if (options && options.color) {
          Cryptoicon.props.color.default = options.color;
        }

        if (options && options.generic) {
          Cryptoicon.props.generic.default = options.generic;
        }
      }
    });
  },
  add: function add(icons) {
    Cryptoicon.add(icons);
  }
});

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js
/* concated harmony reexport Cryptoicon */__webpack_require__.d(__webpack_exports__, "Cryptoicon", function() { return Cryptoicon; });


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (components);



/***/ }),

/***/ "fdef":
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ })

/******/ });
//# sourceMappingURL=vue-cryptoicon.common.js.map

/***/ }),

/***/ "qfUn":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cloak.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cloak = {
  symbol: 'cloak',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.003-27C9.94 5 5.003 9.929 5 15.986 4.997 22.053 9.925 26.994 15.986 27h.01C22.062 27 26.998 22.067 27 16.003 27.002 9.946 22.069 5.01 16.003 5zM16 6.418h.001c2.556 0 4.96.998 6.771 2.81a9.504 9.504 0 0 1 2.805 6.77c-.004 5.28-4.306 9.576-9.59 9.576-5.273-.004-9.562-4.3-9.561-9.576.002-5.282 4.297-9.58 9.574-9.58zm4.728 8.599a4.798 4.798 0 0 0-4.701-3.856c-.355 0-.715.04-1.07.118-2.382.522-3.967 2.676-3.77 5.12.093 1.161.54 2.137 1.363 2.985l.158.163.21-.089.388-.16.489-.196-.387-.359a3.635 3.635 0 0 1-1.114-2.04c-.223-1.186.082-2.294.88-3.204a3.764 3.764 0 0 1 2.83-1.28c.988 0 1.918.38 2.62 1.067.799.78 1.183 1.728 1.144 2.814-.039 1.086-.448 1.987-1.217 2.677l-.394.354.49.204c.123.051.244.106.363.164l.216.106.17-.171c1.235-1.254 1.671-2.698 1.332-4.417zm-10.755 6.29l.244.273.916-.986-.196-.227a6.592 6.592 0 0 1-1.43-2.77 6.618 6.618 0 0 1 .12-3.626 6.588 6.588 0 0 1 2.009-3.037 6.699 6.699 0 0 1 4.371-1.625c1.761 0 3.419.678 4.667 1.909 1.23 1.212 1.902 2.684 1.998 4.374.103 1.85-.467 3.49-1.695 4.873l-.198.223.898 1.002.249-.268c1.963-2.105 2.62-5.257 1.675-8.03a8.028 8.028 0 0 0-7.787-5.426 8.032 8.032 0 0 0-7.443 5.517c-1.07 3.258.126 6.178 1.602 7.824z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ff3a00" r="16"/><path d="M16.003 5C22.07 5.01 27.002 9.946 27 16.003 26.998 22.067 22.062 27 15.996 27h-.01C9.926 26.994 4.997 22.053 5 15.986 5.003 9.93 9.94 5 16.003 5zM16 6.418c-5.277 0-9.572 4.298-9.574 9.58-.001 5.276 4.288 9.572 9.562 9.576 5.283 0 9.585-4.296 9.589-9.576a9.504 9.504 0 0 0-2.805-6.77 9.512 9.512 0 0 0-6.77-2.81zm4.728 8.599c.339 1.719-.097 3.163-1.332 4.417l-.17.171-.216-.106a6.326 6.326 0 0 0-.364-.164l-.489-.204.394-.354c.769-.69 1.178-1.591 1.217-2.677.04-1.086-.345-2.033-1.143-2.814a3.725 3.725 0 0 0-2.621-1.066 3.764 3.764 0 0 0-2.83 1.279c-.798.91-1.103 2.018-.88 3.203a3.635 3.635 0 0 0 1.114 2.041l.387.359-.489.197c-.122.049-.25.102-.387.16l-.21.088-.16-.163c-.823-.848-1.269-1.824-1.362-2.984-.197-2.445 1.388-4.599 3.77-5.121a4.996 4.996 0 0 1 1.07-.118 4.798 4.798 0 0 1 4.7 3.856zm-10.755 6.29C8.497 19.661 7.3 16.741 8.37 13.483a8.032 8.032 0 0 1 7.625-5.519 8.028 8.028 0 0 1 7.605 5.429c.946 2.772.288 5.924-1.675 8.03l-.25.267-.897-1.002.198-.223c1.228-1.383 1.798-3.023 1.695-4.873-.096-1.69-.768-3.162-1.998-4.374a6.605 6.605 0 0 0-4.667-1.909 6.699 6.699 0 0 0-4.371 1.625 6.588 6.588 0 0 0-2.009 3.037 6.618 6.618 0 0 0-.12 3.626 6.592 6.592 0 0 0 1.43 2.77l.196.227-.916.986z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cloak);


/***/ }),

/***/ "qgy0":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cnd.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cnd = {
  symbol: 'cnd',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.473-20.52l2.667-.612 1.033-1.7-1.02-1.674-1.306-.902L18.164 6l-1.655.933-2.648-.472-3.636 2.52-.283 2.941-1.543.644.178 2.729-1.077.858 1.076 3.072.162.322 1.138 3.163 2.34.828 1.733 1.764 1.994.698.902-.26 1.431-.165 2.098-.601 3.126-1.765-.818-3.232-1.574-.62-.784.897-2.205.542-3.207-.508-1.035-1.197.36-1.17-1.516-2.4 1.275-1.556.136-2.645 1.826-1.048 1.252-.5 1.7.307z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#383939" r="16"/><path d="M19.473 11.479l2.667-.611 1.033-1.701-1.02-1.673-1.306-.902L18.164 6l-1.655.933-2.648-.472-3.636 2.519-.283 2.942-1.543.644.178 2.729-1.077.858 1.076 3.072.162.322 1.138 3.163 2.339.828 1.734 1.764 1.994.698.902-.26 1.431-.165 2.098-.601 3.126-1.765-.818-3.232-1.574-.62-.784.897-2.205.542-3.207-.508-1.035-1.197.36-1.171-1.516-2.399 1.275-1.556.136-2.645 1.826-1.048 1.252-.5 1.7.307z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cnd);


/***/ }),

/***/ "qjNP":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mkr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mkr = {
  symbol: 'mkr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7.838 12.056l6.032 4.367V22.5h1.838v-6.973L6 8.5v14h1.838zm10.292 4.367l6.032-4.367V22.5H26v-14l-9.708 7.027V22.5h1.838z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1abc9c" r="16"/><path d="M7.838 12.056V22.5H6v-14l9.708 7.027V22.5H13.87v-6.077zm10.292 4.367V22.5h-1.838v-6.973L26 8.5v14h-1.838V12.056z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mkr);


/***/ }),

/***/ "qw08":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/neu.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Neu = {
  symbol: 'neu',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-28C9.375 4 4 9.375 4 16s5.375 12 12 12 12-5.375 12-12S22.625 4 16 4zm-.05 19.62l-6.476-3.84v-7.668l6.477-3.83 6.476 3.83v7.669l-6.476 3.838zm-2.925-12.872l-.132.082L19 20.48v-9.658l-3.05-1.808-2.925 1.734zm-.198 10.282l3.124 1.858 2.852-1.693-5.976-9.444v9.28zM10.1 12.482v6.937l2.178 1.29v-9.517l-2.178 1.29zm9.452 8.269l2.252-1.332v-6.937l-2.252-1.331v9.6z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#B3BA00"/><g fill="#FFF"><path d="M13.13 10.664l-.13.079L19 20v-9.265L16.004 9zM13 21.165L16.136 23 19 21.328 13 12zm-3-8.809v7.288L12 21V11zM20 21l2-1.387v-7.226L20 11z"/><path d="M16 4C9.375 4 4 9.375 4 16s5.375 12 12 12 12-5.375 12-12S22.625 4 16 4zm-.05 19.62l-6.476-3.84v-7.668l6.477-3.83 6.476 3.83v7.669l-6.476 3.838z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Neu);


/***/ }),

/***/ "qw48":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/adx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Adx = {
  symbol: 'adx',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM11.587 8.602L9 11.36l4.36 4.614L9 20.68l2.587 2.717L16 18.792l4.305 4.604L23 20.603l-4.396-4.604L23 11.36l-2.695-2.757L16 13.208l-4.413-4.606zm.355-.376l2.126 2.265 1.914-2.114 1.914 2.114 2.126-2.265L15.982 4l-4.04 4.226zm0 15.548L15.982 28l4.04-4.226-2.126-2.265-1.914 2.114-1.914-2.114-2.126 2.265z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#1B75BC"/><path fill="#FFF" d="M11.587 8.602L16 13.208l4.305-4.606L23 11.36 18.604 16 23 20.603l-2.695 2.793L16 18.792l-4.413 4.604L9 20.68l4.36-4.706L9 11.36l2.587-2.757zm.355-.376L15.982 4l4.04 4.226-2.126 2.265-1.914-2.114-1.914 2.114-2.126-2.265zm0 15.548l2.126-2.265 1.914 2.114 1.914-2.114 2.126 2.265L15.982 28l-4.04-4.226z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Adx);


/***/ }),

/***/ "qxc4":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/hight.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Hight = {
  symbol: 'hight',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.496-21.668l-8.455 13.94h-5.042l3.875-6.397h-3.851l-4.49 7.404a11.905 11.905 0 0 0 17.96-14.94l.003-.007zM19.114 7.83l-3.67 6.04H19.3l4.274-7.049a11.905 11.905 0 0 0-17.96 14.94l8.452-13.93h5.047z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#117FC0"/><path d="M26.496 10.332l-8.455 13.94h-5.042l3.875-6.397h-3.851l-4.49 7.404a11.905 11.905 0 0 0 17.96-14.94l.003-.007zM19.114 7.83l-3.67 6.04H19.3l4.274-7.049a11.905 11.905 0 0 0-17.96 14.94l8.452-13.93h5.047z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Hight);


/***/ }),

/***/ "r1+p":
/*!*************************************!*\
  !*** /node_modules/qs/lib/parse.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Utils = __webpack_require__(/*! ./utils */ "HHEV");

var has = Object.prototype.hasOwnProperty;

var defaults = {
    delimiter: '&',
    depth: 5,
    arrayLimit: 20,
    parameterLimit: 1000,
    strictNullHandling: false,
    plainObjects: false,
    allowPrototypes: false,
    allowDots: false,
    decoder: Utils.decode
};

var parseValues = function parseValues(str, options) {
    var obj = {};
    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

    for (var i = 0; i < parts.length; ++i) {
        var part = parts[i];
        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part);
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos));
            val = options.decoder(part.slice(pos + 1));
        }
        if (has.call(obj, key)) {
            obj[key] = [].concat(obj[key]).concat(val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function parseObject(chain, val, options) {
    if (!chain.length) {
        return val;
    }

    var root = chain.shift();

    var obj;
    if (root === '[]') {
        obj = [];
        obj = obj.concat(parseObject(chain, val, options));
    } else {
        obj = options.plainObjects ? Object.create(null) : {};
        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
        var index = parseInt(cleanRoot, 10);
        if (
            !isNaN(index) &&
            root !== cleanRoot &&
            String(index) === cleanRoot &&
            index >= 0 &&
            (options.parseArrays && index <= options.arrayLimit)
        ) {
            obj = [];
            obj[index] = parseObject(chain, val, options);
        } else {
            obj[cleanRoot] = parseObject(chain, val, options);
        }
    }

    return obj;
};

var parseKeys = function parseKeys(givenKey, val, options) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^\.\[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var parent = /^([^\[\]]*)/;
    var child = /(\[[^\[\]]*\])/g;

    // Get the parent

    var segment = parent.exec(key);

    // Stash the parent if it exists

    var keys = [];
    if (segment[1]) {
        // If we aren't using plain objects, optionally prefix keys
        // that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, segment[1])) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(segment[1]);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].replace(/\[|\]/g, ''))) {
            if (!options.allowPrototypes) {
                continue;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options);
};

module.exports = function (str, opts) {
    var options = opts || {};

    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
    options.parseArrays = options.parseArrays !== false;
    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options);
        obj = Utils.merge(obj, newObj, options);
    }

    return Utils.compact(obj);
};


/***/ }),

/***/ "r21l":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/fun.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Fun = {
  symbol: 'fun',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.3-5.1a10.68 10.68 0 0 0 4.4.4c-1.4-1.9-2.9-3.8-4.3-5.6 1.4-1.2 2.9-2.3 4.3-3.4-1-1.3-2-2.5-3-3.8l-4.3 3.4a6.17 6.17 0 0 1-.1-3.3c.29-.9.73-1.746 1.3-2.5a6.84 6.84 0 0 1 2.1-1.7 7.7 7.7 0 0 1 2.9-.7c-.1-.2-.3-.3-.4-.5-1-1.3-2-2.6-3-3.8a10.84 10.84 0 0 0-1.9.8A10.32 10.32 0 0 0 6.5 10 13.11 13.11 0 0 0 5 13.8a11.1 11.1 0 0 0 0 4.8 11.23 11.23 0 0 0 1.6 3.7 11.56 11.56 0 0 0 2.6 2.8 9.68 9.68 0 0 0 3.5 1.8zm9.53-12.114c.166 1.117.156 2.055-.03 2.814a6.47 6.47 0 0 1-1.2 2.5 6.16 6.16 0 0 1-4.9 2.4c.233.39.501.758.8 1.1.8 1.1 1.6 2.1 2.5 3.2a8.77 8.77 0 0 0 3.3-1.8 10.73 10.73 0 0 0 2.5-2.7 9.88 9.88 0 0 0 1.6-3.6 12.35 12.35 0 0 0 .1-4.7 9.1 9.1 0 0 0-1.4-3.8 10.8 10.8 0 0 0-2.4-2.8 11 11 0 0 0-7-2.6h-1.4c0 .1.1.1.1.2 1.5 1.9 2.9 3.7 4.3 5.5-1.4 1.2-2.9 2.3-4.3 3.4 1 1.3 2 2.5 3 3.8 1.19-1.02 4.165-3.294 4.3-3.4.05.16.093.323.13.486zm-4.723 8.373a9.833 9.833 0 0 1-.036-.042 6.91 6.91 0 0 0 4.123-2.56 7.214 7.214 0 0 0 1.336-2.785 6.914 6.914 0 0 0-.114-3.694l-.323-1.04-.856.672c-.451.354-2.05 1.584-2.147 1.66-.606.47-1.112.872-1.576 1.255a191.05 191.05 0 0 0-1.028-1.294c-.466-.582-.77-.964-1.034-1.3.638-.493 1.487-1.146 1.558-1.2a56.326 56.326 0 0 0 2.178-1.762l.543-.465-.439-.564a1092.78 1092.78 0 0 0-3.503-4.489c2.352.043 4.624.898 6.427 2.422.895.74 1.65 1.62 2.24 2.61a8.392 8.392 0 0 1 1.3 3.513 11.654 11.654 0 0 1-.09 4.446 9.126 9.126 0 0 1-1.477 3.323 10.047 10.047 0 0 1-2.344 2.539 8.143 8.143 0 0 1-2.588 1.524 62.41 62.41 0 0 1-2.15-2.77z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ed1968" r="16"/><path d="M12.7 26.9a9.68 9.68 0 0 1-3.5-1.8 11.56 11.56 0 0 1-2.6-2.8A11.23 11.23 0 0 1 5 18.6a11.1 11.1 0 0 1 0-4.8A13.11 13.11 0 0 1 6.5 10a10.32 10.32 0 0 1 4.2-3.8 10.84 10.84 0 0 1 1.9-.8c1 1.2 2 2.5 3 3.8.1.2.3.3.4.5a7.7 7.7 0 0 0-2.9.7 6.84 6.84 0 0 0-2.1 1.7 8.42 8.42 0 0 0-1.3 2.5 6.17 6.17 0 0 0 .1 3.3l4.3-3.4c1 1.3 2 2.5 3 3.8-1.4 1.1-2.9 2.2-4.3 3.4 1.4 1.8 2.9 3.7 4.3 5.6a10.68 10.68 0 0 1-4.4-.4zm9.53-12.114a6.17 6.17 0 0 0-.13-.486c-.135.106-3.11 2.38-4.3 3.4-1-1.3-2-2.5-3-3.8 1.4-1.1 2.9-2.2 4.3-3.4-1.4-1.8-2.8-3.6-4.3-5.5 0-.1-.1-.1-.1-.2h1.4a11 11 0 0 1 7 2.6 10.8 10.8 0 0 1 2.4 2.8 9.1 9.1 0 0 1 1.4 3.8 12.35 12.35 0 0 1-.1 4.7 9.88 9.88 0 0 1-1.6 3.6 10.73 10.73 0 0 1-2.5 2.7 8.77 8.77 0 0 1-3.3 1.8c-.9-1.1-1.7-2.1-2.5-3.2a7.63 7.63 0 0 1-.8-1.1 6.16 6.16 0 0 0 4.9-2.4 6.47 6.47 0 0 0 1.2-2.5c.186-.759.196-1.697.03-2.814zm-4.723 8.373a62.41 62.41 0 0 0 2.15 2.77 8.143 8.143 0 0 0 2.588-1.525 10.05 10.05 0 0 0 2.344-2.54 9.126 9.126 0 0 0 1.478-3.322c.314-1.452.345-2.951.09-4.446a8.392 8.392 0 0 0-1.301-3.512 10.063 10.063 0 0 0-2.24-2.611 10.246 10.246 0 0 0-6.427-2.422c.927 1.18 1.866 2.383 3.503 4.489l.44.564-.544.465a56.326 56.326 0 0 1-2.178 1.761c-.07.055-.92.708-1.558 1.202.263.335.568.717 1.034 1.3.46.575.765.958 1.028 1.293.464-.383.97-.785 1.576-1.255.098-.076 1.696-1.306 2.147-1.66l.856-.673.323 1.04a6.914 6.914 0 0 1 .114 3.695 7.214 7.214 0 0 1-1.336 2.786 6.91 6.91 0 0 1-4.123 2.559l.036.042z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Fun);


/***/ }),

/***/ "r5cm":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/hush.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Hush = {
  symbol: 'hush',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.993-13.343v1.317c0 .056 0 .113.008.168.07.446.453.758.888.726a.848.848 0 0 0 .771-.855c.002-.484.001-.97 0-1.454a.175.175 0 0 0-.039-.1c-.097-.12-.198-.237-.298-.354-.285-.336-.569-.672-.855-1.006-.096-.112-.212-.146-.321-.098-.12.052-.156.15-.155.278.003.46 0 .919 0 1.378zm.003-9.01c.2-.309.47-.467.832-.468.366 0 .634.165.828.497l.005-.048c-.002-.931.003-1.863-.006-2.794a.831.831 0 0 0-.983-.82c-.39.068-.678.421-.678.842-.002.91-.001 1.822-.001 2.732l.003.06zm-.003 12.613v.228c0 .893-.003 1.786.002 2.679a.838.838 0 0 0 .782.832c.445.02.83-.305.87-.752.02-.225.013-.454.013-.68.002-.748 0-1.496 0-2.243v-.072c-.197.308-.462.474-.826.475-.365.001-.637-.157-.841-.467zm1.668-8.826l-.001-1.638c0-.07-.006-.143-.021-.212-.092-.414-.484-.708-.879-.664a.84.84 0 0 0-.766.842c-.003.714-.002 1.429 0 2.143a.17.17 0 0 0 .04.1c.122.149.248.294.373.44.242.282.482.566.725.848a.309.309 0 0 0 .36.094c.119-.048.169-.134.169-.292v-1.66zm1.731-3.377v2.167c0 .051.002.102.006.153.04.52.544.882 1.037.749.379-.103.627-.437.627-.85V9.48c0-.553.003-1.107 0-1.661-.003-.588-.542-.996-1.083-.825-.356.112-.585.44-.586.842v2.22zM13.362 20.76c0-.862.002-1.725-.001-2.587a.834.834 0 0 0-1.038-.812.847.847 0 0 0-.628.832v4.753c0 .143-.003.286 0 .429.015.499.493.89.974.797a.845.845 0 0 0 .692-.847c.002-.855 0-1.71 0-2.565zm0-9.446v-.82c0-.898.002-1.796-.001-2.695a.835.835 0 0 0-1.014-.82.846.846 0 0 0-.652.842v5.505c0 .506-.004 1.011 0 1.516.005.53.505.928 1.011.81a.844.844 0 0 0 .655-.84v-3.498zm5.044 8.186v3.751c0 .054.002.107.006.16.042.522.554.884 1.048.742.377-.108.616-.44.616-.858v-7.648c-.02-.614-.628-1.014-1.17-.763-.338.157-.5.44-.5.818V19.5zm5.094-3.866V9.677c-.001-.614-.598-1.027-1.148-.798-.326.136-.52.443-.52.828V21.55l.001.076c.014.513.504.906.996.799a.85.85 0 0 0 .67-.852v-5.94zm-13.333-.009v-4.012c0-.656.004-1.312-.001-1.967a.834.834 0 0 0-1.045-.802c-.376.104-.62.436-.62.845L8.5 21.571v.053c.014.525.514.919 1.015.8.393-.094.652-.43.652-.851v-5.949z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#292929" r="16"/><path d="M15.007 18.657c0-.46.002-.919-.001-1.378-.001-.128.036-.226.155-.278.11-.048.225-.014.321.098.286.334.57.67.855 1.006.1.117.201.233.298.354a.175.175 0 0 1 .038.1c.002.485.003.97.001 1.454a.848.848 0 0 1-.771.855.842.842 0 0 1-.888-.726c-.009-.055-.008-.112-.008-.168v-1.317zm.003-9.01c-.001-.02-.003-.039-.003-.059V6.856c.001-.42.289-.774.679-.843a.831.831 0 0 1 .983.821c.01.931.004 1.863.006 2.794l-.005.048c-.194-.332-.462-.498-.828-.497-.362 0-.632.16-.832.468zm-.003 12.613c.204.31.476.468.841.467.364-.001.629-.167.827-.475v2.314c-.001.227.006.456-.014.68a.829.829 0 0 1-.87.753.838.838 0 0 1-.782-.832c-.005-.893-.002-1.786-.002-2.68v-.227zm1.668-8.826v1.661c0 .158-.05.244-.17.292a.309.309 0 0 1-.36-.094l-.724-.848c-.125-.146-.25-.291-.373-.44a.174.174 0 0 1-.04-.1c-.002-.714-.003-1.429 0-2.143a.84.84 0 0 1 .766-.842c.395-.044.787.25.879.664.015.069.02.141.02.212.002.546.002 1.092.002 1.638zm1.731-3.377v-2.22c.002-.402.231-.73.587-.842.54-.171 1.08.237 1.083.825.003.554 0 1.108 0 1.661v2.795c0 .413-.248.747-.627.85-.493.133-.996-.23-1.037-.749a1.965 1.965 0 0 1-.005-.153v-2.167zM13.362 20.76v2.565a.845.845 0 0 1-.693.847c-.48.092-.959-.298-.973-.797-.004-.143-.001-.286-.001-.429v-4.753c0-.399.256-.736.628-.832a.834.834 0 0 1 1.038.812c.003.862 0 1.725 0 2.587zm0-9.446v3.499a.845.845 0 0 1-.656.84.836.836 0 0 1-1.01-.81c-.005-.506-.001-1.011-.002-1.517V7.82c0-.412.268-.756.653-.843a.835.835 0 0 1 1.014.821c.003.899 0 1.797 0 2.696zm5.044 8.186v-3.8c0-.379.162-.66.5-.818.542-.251 1.15.15 1.17.763v7.648c0 .418-.239.75-.616.858-.494.142-1.006-.22-1.048-.741a2.013 2.013 0 0 1-.005-.16v-3.752zm5.094-3.866v5.94a.85.85 0 0 1-.671.852c-.492.107-.982-.286-.996-.799V9.707c0-.385.193-.692.519-.828.55-.23 1.147.184 1.147.798v5.956zm-13.333-.009v5.949c0 .42-.26.757-.652.85-.5.12-1.001-.274-1.015-.799V9.688c0-.409.245-.741.62-.845a.834.834 0 0 1 1.046.802c.005.655.001 1.311.001 1.967v4.012z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Hush);


/***/ }),

/***/ "rNql":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dash.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dash = {
  symbol: 'dash',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.086-23.996H11.81l-.602 3.367 6.562.01c3.231 0 4.19 1.173 4.159 3.12-.014.998-.449 2.686-.633 3.23-.497 1.46-1.521 3.122-5.359 3.117l-6.378-.004-.602 3.371h7.257c2.559 0 3.649-.299 4.8-.83 2.554-1.178 4.075-3.701 4.686-6.994.906-4.9-.224-8.387-6.615-8.387zm-3.28 7.794c.238-.985.313-1.38.313-1.38H8.673c-1.904 0-2.176 1.24-2.357 1.99-.237.981-.312 1.381-.312 1.381h7.447c1.903 0 2.175-1.24 2.356-1.991z" />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#008CE7"/><g fill="#FFF"><path d="M19.086 8.004H11.81l-.602 3.367 6.562.01c3.231 0 4.19 1.173 4.159 3.12-.014.998-.449 2.686-.633 3.23-.497 1.46-1.521 3.122-5.359 3.117l-6.378-.004-.602 3.371h7.257c2.559 0 3.649-.299 4.8-.83 2.554-1.178 4.075-3.701 4.686-6.994.906-4.9-.224-8.387-6.615-8.387z"/><path d="M15.807 15.798c.237-.985.312-1.38.312-1.38H8.673c-1.904 0-2.176 1.24-2.357 1.99-.237.981-.312 1.381-.312 1.381h7.447c1.903 0 2.175-1.24 2.356-1.991z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dash);


/***/ }),

/***/ "rwC7":
/*!*****************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ok.js ***!
  \*****************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ok = {
  symbol: 'ok',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11.986-17.331c-.51-.109-1.016-.251-1.532-.365-.476-.112-.949-.248-1.428-.351-.136-.03-.273-.086-.417-.075-.098.025-.176.097-.262.15L19.64 16.98c-.091.062-.18.123-.284.16.056-.215.162-.41.243-.613l.72-1.732c.235-.546.455-1.1.694-1.646.022-.055.05-.114.034-.172-.307-.092-.624-.153-.933-.234-.596-.145-1.192-.298-1.788-.44-.12-.028-.236-.078-.359-.086a.181.181 0 0 0-.056.072l-3.533 8.47a.469.469 0 0 0-.036.161c.195.067.401.1.599.153.701.17 1.4.346 2.099.518.13.03.259.084.395.084.076-.1.106-.226.156-.34.346-.816.68-1.637 1.028-2.453.058-.136.1-.278.172-.404.123-.016.237.037.354.062.818.203 1.64.398 2.456.607.222.06.473.142.598.356.1.15.059.342-.011.496l-.927 2.221c-.047.123-.125.24-.131.376.217.073.443.109.663.17.676.17 1.356.334 2.032.501.134.03.265.081.401.084a.585.585 0 0 0 .08-.14c.416-1.005.836-2.004 1.254-3.006.1-.251.211-.499.264-.763a1.41 1.41 0 0 0-.122-1.053c-.184-.317-.518-.506-.844-.651-.353-.162-.738-.237-1.11-.337a.18.18 0 0 1 .06-.075c1.393-.866 2.79-1.724 4.177-2.592v-.064zM16.882 12.97a1.178 1.178 0 0 0-.534-.905c-.273-.197-.59-.314-.902-.428a16.642 16.642 0 0 0-1.415-.396c-1.035-.25-2.068-.512-3.104-.763a19.278 19.278 0 0 0-2.247-.47c-.245-.006-.49-.017-.735.005a1.966 1.966 0 0 0-.916.382 2.43 2.43 0 0 0-.56.688c-.167.283-.28.593-.412.893l-1.629 3.915c-.178.406-.342.827-.395 1.27-.024.24.032.483.159.69.164.25.393.451.662.582.624.306 1.3.479 1.972.64 1.01.254 2.027.499 3.037.752.744.178 1.484.384 2.244.479.44.07.892.038 1.317-.095.34-.13.632-.358.841-.654.295-.398.462-.869.654-1.32.53-1.278 1.067-2.553 1.599-3.83.197-.452.39-.93.364-1.435zm-3.62.891c.02-.147-.085-.273-.208-.337-.25-.136-.535-.186-.807-.256-.722-.18-1.444-.358-2.17-.534a1.442 1.442 0 0 0-.634-.04c-.245.07-.368.318-.451.535-.41.975-.81 1.952-1.222 2.924-.045.114-.09.228-.1.35 0 .14.097.262.216.32.179.092.374.143.563.193l2.255.554c.262.061.537.128.805.07.225-.073.34-.304.423-.507l1.105-2.651c.087-.2.198-.398.226-.62z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><path d="M27.986 14.669v.064c-1.387.868-2.784 1.726-4.177 2.592a.18.18 0 0 0-.06.075c.372.1.757.175 1.11.337.326.145.66.334.844.651.176.322.22.7.122 1.053-.053.264-.164.512-.264.763-.418 1.002-.838 2.001-1.253 3.007a.585.585 0 0 1-.08.139c-.137-.003-.268-.053-.402-.084-.676-.167-1.356-.331-2.032-.5-.22-.062-.446-.098-.663-.17.006-.137.084-.254.13-.377l.928-2.221c.07-.154.111-.346.011-.496-.125-.214-.376-.295-.598-.356-.816-.21-1.638-.404-2.456-.607-.117-.025-.231-.078-.354-.062-.072.126-.114.268-.172.404-.348.816-.682 1.637-1.028 2.453-.05.114-.08.24-.156.34-.136 0-.264-.053-.395-.084-.699-.172-1.398-.348-2.1-.518-.197-.053-.403-.086-.598-.153a.469.469 0 0 1 .036-.161l3.533-8.47a.181.181 0 0 1 .056-.072c.123.008.24.058.36.086.595.142 1.191.295 1.787.44.309.08.626.142.933.234.016.058-.012.117-.034.172-.24.546-.46 1.1-.693 1.646l-.721 1.732c-.081.203-.187.398-.243.612.104-.036.193-.097.284-.159l4.706-2.95c.086-.054.164-.126.262-.151.144-.011.28.044.417.075.48.103.952.24 1.428.35.516.115 1.022.257 1.532.366zM16.882 12.97c.025.504-.167.983-.364 1.434-.532 1.278-1.07 2.553-1.599 3.831-.192.451-.359.922-.654 1.32-.21.296-.502.524-.84.654a2.884 2.884 0 0 1-1.318.095c-.76-.095-1.5-.3-2.244-.479-1.01-.253-2.027-.498-3.037-.752-.671-.161-1.348-.334-1.972-.64a1.654 1.654 0 0 1-.662-.582 1.114 1.114 0 0 1-.159-.69c.053-.443.217-.864.395-1.27l1.63-3.915c.13-.3.244-.61.411-.893a2.43 2.43 0 0 1 .56-.688c.268-.204.583-.335.916-.382.245-.022.49-.01.735-.005a19.32 19.32 0 0 1 2.247.47c1.036.25 2.069.513 3.104.763.476.117.95.237 1.415.396.311.114.629.23.902.428.31.201.508.536.534.905zm-3.62.891c.02-.147-.085-.273-.208-.337-.25-.136-.535-.186-.807-.256-.722-.18-1.444-.358-2.17-.534a1.442 1.442 0 0 0-.634-.04c-.245.07-.368.318-.451.535-.41.975-.81 1.952-1.222 2.924-.045.114-.09.228-.1.35 0 .14.097.262.216.32.179.092.374.143.563.193l2.255.554c.262.061.537.128.805.07.225-.073.34-.304.423-.507l1.105-2.651c.087-.2.198-.398.226-.62z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ok);


/***/ }),

/***/ "rza6":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/mzc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Mzc = {
  symbol: 'mzc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.811-20.433a5.695 5.695 0 0 1 3.184-.963c1.85 0 4.367 1.134 4.367 6.035 0 2.245-.809 3.912-2.428 5a.194.194 0 0 0-.051.276.207.207 0 0 0 .205.082C23.134 21.805 26 20.16 26 15.903c0-3.2-1.486-6.55-4.23-6.55-1.792 0-3.545.588-5.259 1.764C15.615 9.706 14.325 9 12.641 9 9.89 9 6 11.605 6 16.124c0 2.058.54 3.888 1.622 5.49l1.38-1.604c-.798-1.217-1.198-2.699-1.198-4.445 0-2.62 1.956-5.255 4.428-5.255 1.29 0 2.3.397 3.033 1.19v1.93h-1.486l-1.001 1.148h2.487v1.443h-.789l-.97 1.148h1.759v4.68l1.273-1.736v-2.944h.789l.758-1.148h-1.547v-1.443h1.486l1.001-1.148h-2.214v-1.863z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FFAA05"/><path fill="#FFF" d="M16.811 11.567v1.863h2.214l-1 1.148h-1.487v1.443h1.547l-.758 1.148h-.789v2.944l-1.273 1.736v-4.68h-1.76l.971-1.148h.789v-1.443h-2.487l1-1.148h1.487V11.5c-.733-.793-1.744-1.19-3.033-1.19-2.472 0-4.428 2.635-4.428 5.255 0 1.746.4 3.228 1.198 4.445l-1.38 1.604C6.541 20.012 6 18.182 6 16.124 6 11.605 9.89 9 12.641 9c1.684 0 2.974.706 3.87 2.117 1.714-1.176 3.467-1.764 5.259-1.764 2.744 0 4.23 3.35 4.23 6.55 0 4.258-2.866 5.902-3.912 6.094a.207.207 0 0 1-.205-.082.194.194 0 0 1 .051-.276c1.619-1.088 2.428-2.755 2.428-5 0-4.901-2.517-6.035-4.367-6.035a5.693 5.693 0 0 0-3.184.963z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Mzc);


/***/ }),

/***/ "s/aJ":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dent.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dent = {
  symbol: 'dent',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.884-13.493L20.463 16l4.421-2.507a2.17 2.17 0 0 0 .817-2.993c-.616-1.048-1.981-1.407-3.048-.802l-4.422 2.507V7.19C18.231 5.981 17.232 5 16 5c-1.232 0-2.231.981-2.231 2.191v5.014L9.347 9.698C8.28 9.093 6.915 9.452 6.3 10.5a2.17 2.17 0 0 0 .817 2.993L11.537 16l-4.42 2.507a2.17 2.17 0 0 0-.818 2.993c.616 1.048 1.981 1.407 3.048.802l4.422-2.507v5.014c0 1.21.999 2.191 2.231 2.191 1.232 0 2.231-.981 2.231-2.191v-5.014l4.422 2.507c1.067.605 2.432.246 3.048-.802a2.17 2.17 0 0 0-.817-2.993zm.198 2.642a1.533 1.533 0 0 1-2.072.546l-4.779-2.71v-1.72l1.518-.86 4.778 2.709c.726.411.974 1.323.555 2.035zm-7.565 3.66c0 .823-.679 1.49-1.517 1.49-.838 0-1.517-.667-1.517-1.49V19.39L16 18.53l1.517.86zM8.99 21.695a1.533 1.533 0 0 1-2.072-.546 1.476 1.476 0 0 1 .555-2.035l4.778-2.71 1.518.861v1.72zm-1.517-8.809a1.476 1.476 0 0 1-.555-2.035 1.533 1.533 0 0 1 2.072-.546l4.779 2.71v1.72l-1.518.86zm7.01-5.695c0-.823.68-1.49 1.517-1.49.838 0 1.517.667 1.517 1.49v5.418L16 13.47l-1.517-.86zm3.748 8.354l.804.455-.804.455zm-1.517-1.67l.803-.456v.911zm-2.231.455v-.91l.803.455zm-.714 2.125L12.965 16l.804-.455zm1.517 1.67l-.803.456v-.911zm2.231-.455v.91l-.803-.455zM16 17.72l-1.517-.86v-1.72L16 14.28l1.517.86v1.72zm7.01-7.415a1.533 1.533 0 0 1 2.072.546c.42.712.17 1.624-.555 2.035l-4.778 2.71-1.518-.861v-1.72z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#666" r="16"/><path d="M25.082 21.15a1.533 1.533 0 0 1-2.072.545l-4.779-2.71v-1.72l1.518-.86 4.778 2.709c.726.411.974 1.323.555 2.035zm-7.565 3.659c0 .823-.679 1.49-1.517 1.49-.838 0-1.517-.667-1.517-1.49V19.39L16 18.53l1.517.86zM8.99 21.695a1.533 1.533 0 0 1-2.072-.546 1.476 1.476 0 0 1 .555-2.035l4.778-2.71 1.518.861v1.72zm-1.517-8.809a1.476 1.476 0 0 1-.555-2.035 1.533 1.533 0 0 1 2.072-.546l4.779 2.71v1.72l-1.518.86zm7.01-5.695c0-.823.68-1.49 1.517-1.49.838 0 1.517.667 1.517 1.49v5.418L16 13.47l-1.517-.86zm3.748 8.354l.804.455-.804.455zm-1.517-1.67l.803-.456v.911zm-2.231.455v-.91l.803.455zm-.714 2.125L12.965 16l.804-.455zm1.517 1.67l-.803.456v-.911zm2.231-.455v.91l-.803-.455zM16 17.72l-1.517-.86v-1.72L16 14.28l1.517.86v1.72zm7.01-7.415a1.533 1.533 0 0 1 2.072.546c.42.712.17 1.624-.555 2.035l-4.778 2.71-1.518-.861v-1.72zm1.874 8.202L20.463 16l4.421-2.507a2.17 2.17 0 0 0 .817-2.993c-.616-1.048-1.981-1.407-3.048-.802l-4.422 2.507V7.19C18.231 5.981 17.232 5 16 5c-1.232 0-2.231.981-2.231 2.191v5.014L9.347 9.698C8.28 9.093 6.915 9.452 6.3 10.5a2.17 2.17 0 0 0 .817 2.993L11.537 16l-4.42 2.507a2.17 2.17 0 0 0-.818 2.993c.616 1.048 1.981 1.407 3.048.802l4.422-2.507v5.014c0 1.21.999 2.191 2.231 2.191 1.232 0 2.231-.981 2.231-2.191v-5.014l4.422 2.507c1.067.605 2.432.246 3.048-.802a2.17 2.17 0 0 0-.817-2.993z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dent);


/***/ }),

/***/ "s5Gp":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/aywa.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Aywa = {
  symbol: 'aywa',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-28C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm0 23.77C9.5 27.77 4.23 22.5 4.23 16S9.5 4.23 16 4.23 27.77 9.5 27.77 16A11.77 11.77 0 0 1 16 27.77zm3.29-14.27l-.03-.11-.03-.11-.03-.12-.04-.1-.03-.11-.04-.1-.05-.11-.04-.1-.05-.09-.05-.1-.05-.09-.06-.09-.05-.08-.06-.09-.06-.07-.07-.08-.06-.07-.06-.07-.07-.06-.07-.06-.07-.06-.07-.05-.08-.05-.07-.04-.08-.05-.07-.03-.08-.04-.08-.03-.08-.03-.09-.02-.08-.02-.08-.02-.09-.01-.09-.01-.08-.01h-.27l-.09.01-.09.01-.1.01-.09.02-.09.02-.09.02-.1.03-.09.03-.1.03-.1.04-.09.04-.1.05-.09.04-.1.05-.1.06-.09.05-.1.06-.1.07-.09.06-.1.07-.1.08-.1.07-.09.08-.1.08-.09.09-.1.09-.1.09-.09.1-.1.1-.09.1-.09.1-.1.11-.09.11-.09.11-.09.12-.09.12-.09.13-.12.17-.12.18-.12.19-.11.18-.11.2-.11.19-.1.19-.1.2-.09.2-.09.2-.08.2-.07.16 7.19-2.35-.01-.08zm-6.49 3.51l6.37-.05.03-.14.03-.14.03-.14.03-.15.02-.14.03-.14.02-.14.01-.14.02-.14.01-.14.01-.13.01-.14.01-.14v-.29l-6.63 2.16zM16 4.56C9.682 4.56 4.56 9.682 4.56 16S9.682 27.44 16 27.44 27.44 22.318 27.44 16A11.44 11.44 0 0 0 16 4.56zm6.48 12.36l-.2 1.18h-1.79l-.06.2-.11.3-.11.3-.12.3-.09.3-.13.29-.14.29-.14.29-.15.28-.15.28-.16.27-.16.27-.17.27-.2.26-.09.13-.09.13-.93-1.56.09-.13.09-.13.08-.13.08-.13.08-.13.08-.13.08-.13.07-.13.07-.14.07-.14.07-.14.07-.14.06-.14.06-.14.06-.14.06-.14.06-.14.05-.14v-.12l-7.27.06v1.85l-1.86 1.29V18.2H9.1l-.2.07-.34-1.19 1.68-.55v-.13l.07-.21.1-.19.07-.2.08-.2.08-.2.08-.2.08-.2.09-.2.09-.2.09-.2.09-.19.1-.19.1-.19.1-.19.1-.19.11-.19.11-.18.11-.18.11-.19.11-.18.12-.17.12-.17.11-.19.12-.17.12-.16.13-.16.17-.14.13-.15.13-.15.13-.15.14-.14.14-.14.14-.14.14-.13.14-.13.14-.13.11-.11.15-.12.15-.11.15-.11.15-.11.15-.1.15-.09.15-.09.15-.08.15-.08.13-.11.18-.05.14-.06.14-.06.14-.05h2.41l.11.05.11.05.11.06.11.06.1.07.1.07.1.08.1.08.09.09.09.09.09.1.09.1.08.11.08.11.08.11.08.12.07.12.07.13.07.13.06.14.06.14.06.14.06.15.05.15V13l1-.32.34 1.19-1.28.42v1.63l-.05.3-.06.3-.07.3v.13l1.75-.03z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3355B5" fill-rule="nonzero"/><g fill="#FFF"><path d="M16 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm0 23.77C9.5 27.77 4.23 22.5 4.23 16S9.5 4.23 16 4.23 27.77 9.5 27.77 16A11.77 11.77 0 0 1 16 27.77z" fill-rule="nonzero"/><path d="M19.29 13.5l-.03-.11-.03-.11-.03-.12-.04-.1-.03-.11-.04-.1-.05-.11-.04-.1-.05-.09-.05-.1-.05-.09-.06-.09-.05-.08-.06-.09-.06-.07-.07-.08-.06-.07-.06-.07-.07-.06-.07-.06-.07-.06-.07-.05-.08-.05-.07-.04-.08-.05-.07-.03-.08-.04-.08-.03-.08-.03-.09-.02-.08-.02-.08-.02-.09-.01-.09-.01-.08-.01h-.27l-.09.01-.09.01-.1.01-.09.02-.09.02-.09.02-.1.03-.09.03-.1.03-.1.04-.09.04-.1.05-.09.04-.1.05-.1.06-.09.05-.1.06-.1.07-.09.06-.1.07-.1.08-.1.07-.09.08-.1.08-.09.09-.1.09-.1.09-.09.1-.1.1-.09.1-.09.1-.1.11-.09.11-.09.11-.09.12-.09.12-.09.13-.12.17-.12.18-.12.19-.11.18-.11.2-.11.19-.1.19-.1.2-.09.2-.09.2-.08.2-.07.16 7.19-2.35zm-6.49 3.51l6.37-.05.03-.14.03-.14.03-.14.03-.15.02-.14.03-.14.02-.14.01-.14.02-.14.01-.14.01-.13.01-.14.01-.14v-.29z"/><path d="M16 4.56C9.682 4.56 4.56 9.682 4.56 16S9.682 27.44 16 27.44 27.44 22.318 27.44 16A11.44 11.44 0 0 0 16 4.56zm6.48 12.36l-.2 1.18h-1.79l-.06.2-.11.3-.11.3-.12.3-.09.3-.13.29-.14.29-.14.29-.15.28-.15.28-.16.27-.16.27-.17.27-.2.26-.09.13-.09.13-.93-1.56.09-.13.09-.13.08-.13.08-.13.08-.13.08-.13.08-.13.07-.13.07-.14.07-.14.07-.14.07-.14.06-.14.06-.14.06-.14.06-.14.06-.14.05-.14v-.12l-7.27.06v1.85l-1.86 1.29V18.2H9.1l-.2.07-.34-1.19 1.68-.55v-.13l.07-.21.1-.19.07-.2.08-.2.08-.2.08-.2.08-.2.09-.2.09-.2.09-.2.09-.19.1-.19.1-.19.1-.19.1-.19.11-.19.11-.18.11-.18.11-.19.11-.18.12-.17.12-.17.11-.19.12-.17.12-.16.13-.16.17-.14.13-.15.13-.15.13-.15.14-.14.14-.14.14-.14.14-.13.14-.13.14-.13.11-.11.15-.12.15-.11.15-.11.15-.11.15-.1.15-.09.15-.09.15-.08.15-.08.13-.11.18-.05.14-.06.14-.06.14-.05h2.41l.11.05.11.05.11.06.11.06.1.07.1.07.1.08.1.08.09.09.09.09.09.1.09.1.08.11.08.11.08.11.08.12.07.12.07.13.07.13.06.14.06.14.06.14.06.15.05.15V13l1-.32.34 1.19-1.28.42v1.63l-.05.3-.06.3-.07.3v.13l1.75-.03z" fill-rule="nonzero"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Aywa);


/***/ }),

/***/ "sMbu":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gzr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gzr = {
  symbol: 'gzr',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M9.254 8.307a2.063 2.063 0 0 0-.072.005c-.08.1-.178.04-.278.06-.357.06-.634.317-.614.614.02.338.297.417.575.476.674.16 1.349.1 2.023.12.813 0 1.27.396 1.388 1.21.08.594 1.865 16.224 1.885 16.561a.315.315 0 0 0 .238.298c.674.205 1.378.3 2.082.278.791.02 1.58-.08 2.34-.298.12-.04.219-.08.219-.238.02-.416 1.15-15.352 1.15-15.59a3.074 3.074 0 0 1 .635-1.924c.337-.397.714-.754 1.051-1.15a.63.63 0 0 0 .006-.04c.395-.02.79-.02 1.184-.06.179-.02.457-.02.437-.357-.04-.198-.357-.753-1.805-.416-.139.04-.932.278-1.21.139.423-.274.86-.525 1.309-.754.198-.159.357-.377.238-.615s-.357-.218-.575-.139a2.683 2.683 0 0 0-1.091.655c-.201.204-.42.39-.655.555-.575.278-.575.278-.714.238-.178-.08-.377-.218-.238-.416.081-.129.141-.27.179-.417.06-.258-.02-.337-.199-.337-.357.02-.476.535-.535.615-.038.078-.085.15-.139.218a.345.345 0 0 1-.357.08c-.119-.02-.218-.08-.119-.239.179-.277.734-.714.893-1.289 0 0 .277-.754-.496-.773-.417-.02-.754.277-.873.733-.119.476.139 1.131 0 1.448-.05.134-.117.26-.198.377a.728.728 0 0 1-.972 0 .793.793 0 0 1-.179-.654 7.15 7.15 0 0 0 .159-.794c.02-.198-.337-.555-.635-.317-.139.1-.08.258-.02.397.1.297.278 1.15-.694.733-.377-.198-.06-1.17-.198-1.527a.343.343 0 0 0-.536-.198.38.38 0 0 0-.178.555c.08.159.555 1.071.178 1.23-.139.06-.436-.06-.634-.179-.714-.317-.833-1.408-1.052-1.547a.563.563 0 0 0-.694.02.458.458 0 0 0-.198.575c.099.179.476.278.555.893l.023.017c-.008 0-.016 0-.023.003-.119 0-.178-.08-.258-.139a1.36 1.36 0 0 0-1.23-.159.446.446 0 0 0-.337.357.448.448 0 0 0 .298.417c.197.074.389.16.575.258.1.04.258.06.238.238v.006a.155.155 0 0 0-.06-.046 2.2 2.2 0 0 1-1.408-.297.567.567 0 0 0-.654 0c-.258.218.119.476.139.476a.44.44 0 0 0 .13.054zm4.665-.891a.679.679 0 0 0-.074.019.284.284 0 0 1 .038-.015.837.837 0 0 1 .036-.004zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.88-22.557c-.754-.278-2.42.138-2.5.257.318.06.417.1.893.179.51.093 1 .274 1.448.536.476.277.674-.1.674-.1.08-.178-.138-.734-.515-.872zM10.333 6.15a6.093 6.093 0 0 0-.397-.555c-.377-.397-1.11-.595-1.508-.397-.218.1-.317.238-.138.476.217.215.493.36.793.417.178.04.972.218 1.17.257.2 0 .08-.198.08-.198zm13.924 1.27c.04-.12 0-.516-.715-.417-.595.1-1.011.258-.991.337.02.08.674.199.813.218.555.1.873-.06.893-.138zm-7.22-3.313a.397.397 0 0 0-.516-.02c-.595.377-.159 1.666-.1 1.666.06 0 .12-.456.715-1.13a.365.365 0 0 0-.1-.516z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#56C9E9"/><g fill="#FFF"><path d="M23.88 9.443c-.754-.278-2.42.138-2.5.257.318.06.417.1.893.179.51.093 1 .274 1.448.536.476.277.674-.1.674-.1.08-.178-.138-.734-.515-.872zM10.333 6.15a6.093 6.093 0 0 0-.397-.555c-.377-.397-1.11-.595-1.508-.397-.218.1-.317.238-.138.476.217.215.493.36.793.417.178.04.972.218 1.17.257.2 0 .08-.198.08-.198zm.793 2.003a.155.155 0 0 0-.08-.079 2.2 2.2 0 0 1-1.408-.297.567.567 0 0 0-.654 0c-.258.218.119.476.139.476.158.099.337.06.496.099a6.01 6.01 0 0 0 1.19.218c.337 0 .416-.12.317-.417zm13.131-.733c.04-.12 0-.516-.715-.417-.595.1-1.011.258-.991.337.02.08.674.199.813.218.555.1.873-.06.893-.138zm-7.22-3.313a.397.397 0 0 0-.516-.02c-.595.377-.159 1.666-.1 1.666.06 0 .12-.456.715-1.13a.365.365 0 0 0-.1-.516zm-1.891 3.831c0-.05-.05-.05 0 0z"/><path d="M14.577 7.3c-.377-.198-.06-1.17-.198-1.527a.343.343 0 0 0-.536-.198.38.38 0 0 0-.178.555c.08.159.555 1.071.178 1.23-.139.06-.436-.06-.634-.179-.714-.317-.833-1.408-1.052-1.547a.563.563 0 0 0-.694.02.458.458 0 0 0-.198.575c.099.179.476.278.555.893l.238.178c.12.1.238.199.377.298.357.357.278.417 1.012.298.238-.08.198-.397.436-.476a.837.837 0 0 1 .436.059c.219.116.403.287.536.496.317.377.456.853.734 1.27.096.174.216.334.357.475l.297.238c.417.278.794.258 1.091-.06a.728.728 0 0 0 .298-.495 8.398 8.398 0 0 1 .6-1.383.02.02 0 0 1 .015-.005.044.044 0 0 1 .04-.04.327.327 0 0 1 .376 0c.06.08-.06.813 0 .892.04.16.337.06.595.04a.434.434 0 0 0 .06-.1c.436-.138.853-.356 1.289-.475h.238c.243-.04.49-.04.734 0 .238 0 .317.139.297.357.397-.02.794-.02 1.19-.06.179-.02.457-.02.437-.357-.04-.198-.357-.753-1.805-.416-.139.04-.932.278-1.21.139.423-.274.86-.525 1.309-.754.198-.159.357-.377.238-.615s-.357-.218-.575-.139a2.683 2.683 0 0 0-1.091.655c-.201.204-.42.39-.655.555-.575.278-.575.278-.714.238-.178-.08-.377-.218-.238-.416.081-.129.141-.27.179-.417.06-.258-.02-.337-.199-.337-.357.02-.476.535-.535.615-.038.078-.085.15-.139.218a.345.345 0 0 1-.357.08c-.119-.02-.218-.08-.119-.239.179-.277.734-.714.893-1.289 0 0 .277-.754-.496-.773-.417-.02-.754.277-.873.733-.119.476.139 1.131 0 1.448-.05.134-.117.26-.198.377a.728.728 0 0 1-.972 0 .793.793 0 0 1-.179-.654 7.15 7.15 0 0 0 .159-.794c.02-.198-.337-.555-.635-.317-.139.1-.08.258-.02.397.1.297.278 1.15-.694.733zm.556.615c-.02-.02 0-.02 0 0z"/><path d="M15.787 8.81h1.31c.118-.026.235.066.317.248.006.1-.018.198-.06.248a1.633 1.633 0 0 0-1.388 0h-.06l-.119-.496z"/><path d="M20.587 8.272a13.4 13.4 0 0 0-1.487.516.216.216 0 0 1-.239-.08.337.337 0 0 1 0-.277.337.337 0 0 0 0-.198.659.659 0 0 0-.198-.278.34.34 0 0 0-.516.1 4.824 4.824 0 0 0-.595 1.348.992.992 0 0 1-.297.496c-.298.258-.575.278-.972.06a3.622 3.622 0 0 1-.317-.259 2.85 2.85 0 0 1-.357-.495c-.16-.298-.318-.615-.476-.893-.219-.357-.437-.694-.833-.873a.678.678 0 0 0-.397-.02.41.41 0 0 0-.278.199c-.06.099-.853.119-1.13-.04-.14-.08-.536-.476-.675-.436-.119 0-.178-.08-.258-.139a1.36 1.36 0 0 0-1.23-.159.446.446 0 0 0-.337.357.448.448 0 0 0 .298.417c.197.074.389.16.575.258.1.04.258.06.238.238a.397.397 0 0 0 .02.139c.02.257-.159.277-.337.277a4.959 4.959 0 0 1-.754-.119 2.063 2.063 0 0 0-.853-.099c-.08.1-.178.04-.278.06-.357.06-.634.317-.614.614.02.338.297.417.575.476.674.16 1.349.1 2.023.12.813 0 1.27.396 1.388 1.21.08.594 1.865 16.224 1.885 16.561a.315.315 0 0 0 .238.298c.674.205 1.378.3 2.082.278.791.02 1.58-.08 2.34-.298.12-.04.219-.08.219-.238.02-.416 1.15-15.352 1.15-15.59a3.074 3.074 0 0 1 .635-1.924c.337-.397.714-.754 1.051-1.15.1-.556-.615-.556-1.289-.457z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gzr);


/***/ }),

/***/ "sYP5":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/moac.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Moac = {
  symbol: 'moac',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.208-16.208L9.423 9.423l-.138-.208L7.02 7v17.515h2.284V12.4l4.916 4.985 1.592 1.592 1.592-1.592L22.32 12.4v12.115h2.284V7L22.32 9.215l-6.529 6.577z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#000"/><path d="M15.792 15.792L9.423 9.423l-.138-.208L7.02 7v17.515h2.284V12.4l4.916 4.985 1.592 1.592 1.592-1.592L22.32 12.4v12.115h2.284V7L22.32 9.215z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Moac);


/***/ }),

/***/ "sak1":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/icn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Icn = {
  symbol: 'icn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm4.833-25v18H23.5V7h-2.667zm-4.444 9v9h2.667v-9h-2.667zm-4.445-4.5V25h2.667V11.5h-2.667zm-4.444 9V25h2.667v-4.5H7.5z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#4C6F8C"/><path fill="#FFF" fill-rule="nonzero" d="M20.833 7H23.5v18h-2.667V7zm-4.444 9h2.667v9h-2.667v-9zm-4.445-4.5h2.667V25h-2.667V11.5zm-4.444 9h2.667V25H7.5v-4.5z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Icn);


/***/ }),

/***/ "sgc9":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/arg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Arg = {
  symbol: 'arg',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM10.755 5.246l.01-.011a11.947 11.947 0 0 0-6.137 14.198 11.023 11.023 0 0 0 2.495 4.407c.807-1.773 1.434-3.62 2.177-5.405l2.22-5.628c.35-.86.626-1.774 1.242-2.485.648-.754 1.646-1.083 2.602-1.19a6.074 6.074 0 0 1 3.494.542c.775.425 1.274 1.21 1.571 2.028l3.08 8.071c.51 1.338.966 2.697 1.561 3.993a11.936 11.936 0 0 0-14.315-18.52zm4.439 8.134c-1.54 3.855-3.037 7.72-4.566 11.575-.18.446-.425.882-.478 1.37.52.372 1.136.584 1.73.829a11.968 11.968 0 0 0 9.834-.659c.11-.062.21-.141.298-.233-.107-.542-.372-1.041-.553-1.561-1.37-3.622-2.729-7.254-4.11-10.864-.137-.34-.244-.722-.54-.945-.553-.361-1.403-.149-1.615.488z"  />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#A71435"/><g fill="#FFF"><path d="M10.755 5.246a11.936 11.936 0 0 1 14.315 18.52c-.595-1.296-1.051-2.655-1.561-3.993l-3.08-8.07c-.297-.818-.796-1.604-1.571-2.029a6.074 6.074 0 0 0-3.494-.542c-.956.107-1.954.436-2.602 1.19-.616.711-.892 1.625-1.242 2.485L9.3 18.435c-.743 1.784-1.37 3.632-2.177 5.405a11.023 11.023 0 0 1-2.495-4.407 11.947 11.947 0 0 1 6.138-14.198l-.011.01z"/><path d="M15.194 13.38c.212-.637 1.062-.85 1.614-.488.297.223.404.605.542.945 1.38 3.61 2.74 7.242 4.11 10.864.18.52.445 1.019.552 1.56a1.256 1.256 0 0 1-.298.234 11.968 11.968 0 0 1-9.833.659c-.595-.245-1.21-.457-1.731-.829.053-.488.297-.924.478-1.37 1.529-3.854 3.026-7.72 4.566-11.575z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Arg);


/***/ }),

/***/ "t38I":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/arn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Arn = {
  symbol: 'arn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M11.76 14.102a.97.97 0 0 1-.035 1.278l3.874 6.9a1.008 1.008 0 0 1 .86.005l3.762-6.788a.976.976 0 0 1-.025-1.532l-4.074-7.4c-.056-.024-.072-.015-.08-.001zm-.41 1.534a1.01 1.01 0 0 1-.496.06l-2.492 4.387c.238.503.52.984.844 1.438.763.18 2.713.644 5.851 1.396a.974.974 0 0 1 .181-.356zm-.539-1.883a1.02 1.02 0 0 1 .586.073L15.559 6.5c-3.12.05-5.731.635-7.835 1.754zm-.42.176L7.335 8.483a.889.889 0 0 0-.332.748l.462 7.382a9.464 9.464 0 0 0 .671 2.953l2.29-4.03a.977.977 0 0 1-.033-1.607zm6.6 8.998L22.88 21.4c.272-.397.514-.813.724-1.245l-2.474-4.494a1.013 1.013 0 0 1-.496.024l-3.818 6.887c.08.104.141.224.175.355zm-.741 1.2v2.361a.914.914 0 0 0 .244-.11l3.623-2.313a9.661 9.661 0 0 0 2.336-2.092l-5.456 1.415a.993.993 0 0 1-.747.74zm-.454 0a.992.992 0 0 1-.75-.753 2530.22 2530.22 0 0 0-5.409-1.29 9.664 9.664 0 0 0 2.246 1.981l3.623 2.314c.09.058.189.098.29.121zm5.37-10.334l3.08-5.555c-2.062-1.09-4.609-1.668-7.641-1.735l3.997 7.262a1.016 1.016 0 0 1 .564.028zm.383.241a.973.973 0 0 1-.027 1.402l2.313 4.203a9.465 9.465 0 0 0 .7-3.025l.463-7.383a.89.89 0 0 0-.36-.769zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-20.765a.55.55 0 0 1 .541.533v1.954l2.886 1.778-.353.711-2.533-.89v1.955l.722.533v.533L16 17.987l-1.263.355v-.533l.722-.533v-1.954l-2.577.844-.31-.667 2.887-1.777v-1.954a.55.55 0 0 1 .541-.533z"  />`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#0092b5" r="16"/><path d="M11.76 14.102l4.282-7.538c.008-.014.024-.023.08 0l4.074 7.401a.976.976 0 0 0 .025 1.532l-3.763 6.788a1.008 1.008 0 0 0-.86-.006l-3.873-6.899a.971.971 0 0 0 .034-1.278zm-.41 1.534l3.888 6.925a.974.974 0 0 0-.18.356c-3.139-.752-5.089-1.217-5.852-1.396a9.556 9.556 0 0 1-.844-1.438l2.492-4.386a1.024 1.024 0 0 0 .496-.06zm-.539-1.883l-3.087-5.5C9.828 7.136 12.439 6.55 15.559 6.5l-4.162 7.326a1.008 1.008 0 0 0-.586-.073zm-.42.176a.977.977 0 0 0 .034 1.608l-2.29 4.03a9.464 9.464 0 0 1-.67-2.954l-.463-7.382a.889.889 0 0 1 .332-.748zm6.6 8.998a.974.974 0 0 0-.175-.355l3.818-6.887a1.018 1.018 0 0 0 .496-.024l2.474 4.494c-.21.432-.452.848-.724 1.245zm-.741 1.2a.993.993 0 0 0 .747-.739l5.456-1.415a9.661 9.661 0 0 1-2.336 2.092l-3.623 2.314a.914.914 0 0 1-.244.11zm-.454 0V26.5a.915.915 0 0 1-.29-.121l-3.623-2.314a9.664 9.664 0 0 1-2.246-1.982c.99.235 2.793.665 5.409 1.291.08.373.374.668.75.754zm5.37-10.334a1.011 1.011 0 0 0-.564-.028l-3.997-7.262c3.032.067 5.58.646 7.641 1.735zm.383.241l3.09-5.572a.89.89 0 0 1 .36.769l-.463 7.383a9.465 9.465 0 0 1-.7 3.025l-2.314-4.203a.974.974 0 0 0 .027-1.402zM16 11.234a.55.55 0 0 0-.541.534v1.954L12.573 15.5l.309.667 2.577-.844v1.954l-.722.533v.533L16 17.987l1.263.355v-.533l-.722-.533v-1.954l2.533.89.353-.712-2.886-1.778v-1.954a.55.55 0 0 0-.54-.533z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Arn);


/***/ }),

/***/ "t9TA":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dgb.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dgb = {
  symbol: 'dgb',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-3.632-7h1.868c.262 0 .357-.067.452-.318.154-.408.31-.815.457-1.226.041-.118.105-.17.224-.2 1.34-.322 2.634-.778 3.858-1.427 1.134-.602 2.168-1.346 3.064-2.282 1.3-1.36 2.198-2.972 2.83-4.746.267-.75.414-1.526.372-2.33-.044-.831-.321-1.566-.879-2.182-.412-.455-.913-.78-1.464-1.029-.725-.327-1.49-.505-2.274-.601-.045-.006-.09-.016-.146-.026l.061-.173c.138-.367.277-.733.412-1.102.085-.23 0-.356-.238-.357-.564-.002-1.129 0-1.693 0-.133 0-.135.001-.185.134l-.496 1.317c-.017.045-.039.089-.058.133h-.805c.022-.068.039-.125.06-.18.123-.332.249-.662.372-.993.02-.052.04-.104.048-.158.019-.13-.054-.23-.18-.25-.043-.006-.087-.003-.13-.003h-1.784l-.601 1.59H9.648a.754.754 0 0 0-.706.418l-1.388 2.5c-.02.036-.03.077-.054.136h11.02c.568.004 1.094.148 1.562.485.353.256.59.598.698 1.03.099.395.076.791.003 1.186a6.711 6.711 0 0 1-.67 1.935c-1.468 2.777-3.74 4.255-6.836 4.39-.045.002-.09-.004-.148-.008.026-.075.044-.133.065-.189L15.252 15c.157-.418.319-.835.471-1.256.116-.318-.068-.598-.399-.623-.032-.002-.065-.002-.097-.002h-3.271c-.048 0-.095.007-.135.01-.16.307-4.21 10.519-4.223 10.652.71.081 1.423.094 2.156.113l-.402 1.085c.033.01.048.019.063.019.63 0 1.259.002 1.888 0 .143 0 .246-.078.313-.203.031-.058.051-.122.075-.184l.306-.81.85-.083L12.368 25z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#006AD2"/><path fill="#FFF" d="M12.368 25l.479-1.282-.85.084-.306.81c-.024.061-.044.125-.075.183-.067.125-.17.203-.313.204-.63.001-1.258 0-1.888-.001-.015 0-.03-.009-.063-.019l.402-1.085c-.733-.02-1.446-.032-2.156-.113.012-.133 4.062-10.345 4.223-10.652.04-.003.087-.01.135-.01h3.27c.033 0 .066 0 .098.002.331.025.515.305.4.623-.153.42-.315.838-.472 1.256l-2.058 5.474c-.021.056-.039.114-.065.19.058.003.103.009.148.007 3.096-.135 5.368-1.613 6.836-4.39a6.711 6.711 0 0 0 .67-1.935c.073-.395.096-.791-.003-1.186a1.763 1.763 0 0 0-.698-1.03c-.468-.337-.994-.481-1.562-.484H7.5c.024-.06.035-.1.054-.136l1.388-2.501a.754.754 0 0 1 .706-.418h5.866l.601-1.59h1.782c.044 0 .088-.003.13.003.127.02.2.12.181.25-.008.054-.028.106-.048.158-.123.331-.249.661-.372.992-.021.056-.038.113-.06.18h.805c.02-.043.04-.087.058-.132l.496-1.317c.05-.133.052-.134.185-.134.564 0 1.129-.002 1.693 0 .238.001.323.127.238.357-.135.369-.274.735-.412 1.102-.019.051-.036.103-.06.173.055.01.1.02.145.026.785.096 1.549.274 2.274.601.551.249 1.052.574 1.464 1.03.558.615.835 1.35.879 2.18.042.805-.105 1.581-.372 2.33-.632 1.775-1.53 3.388-2.83 4.747-.896.936-1.93 1.68-3.064 2.282-1.224.65-2.518 1.105-3.858 1.427-.12.03-.183.082-.224.2-.147.41-.303.818-.457 1.226-.095.25-.19.318-.452.318h-1.868z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dgb);


/***/ }),

/***/ "tJKO":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/nmc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Nmc = {
  symbol: 'nmc',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.261-8.5l.001-.002a1.8 1.8 0 0 0 .458-.05c.876-.205 1.617-.97 1.793-1.796L25 8.556l-2.772-.014-2.286 8.568-6.18-8.597-.004.004.003-.01L12.74 8.5v.001a1.9 1.9 0 0 0-.459.049c-.875.206-1.616.971-1.793 1.796L7 23.445l2.773.012 2.285-8.568 6.18 8.598h.003l1.02.013zm-6.593-10.894l.483-1.81 6.181 8.599-.483 1.81-6.18-8.6z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#186C9D"/><path fill="#FFF" fill-rule="nonzero" d="M19.261 23.5l.001-.002a1.8 1.8 0 0 0 .458-.05c.876-.205 1.617-.97 1.793-1.796L25 8.556l-2.772-.014-2.286 8.568-6.18-8.597-.004.004.003-.01L12.74 8.5v.001a1.9 1.9 0 0 0-.459.049c-.875.206-1.616.971-1.793 1.796L7 23.445l2.773.012 2.285-8.568 6.18 8.598h.003l1.02.013zm-6.593-10.894l.483-1.81 6.181 8.599-.483 1.81-6.18-8.6z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Nmc);


/***/ }),

/***/ "tPHC":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bcc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bcc = {
  symbol: 'bcc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7.351 19.32c.007 2.582 1.59 4.931 4.006 5.788 2.43.864 4.632.406 6.53-1.364.187-.175.288-.172.451.004.279.3.57.591.867.874.162.153.218.291.165.533-.182.843.242 1.664 1.01 2.048.703.351 1.608.18 2.162-.408a1.866 1.866 0 0 0 .261-2.213 1.852 1.852 0 0 0-2.054-.862c-.208.052-.339.014-.479-.131a34.75 34.75 0 0 0-1.075-1.075c-.153-.146-.174-.26-.079-.46 1.256-2.638.656-5.534-1.548-7.456-.203-.176-.18-.27-.017-.448a787.317 787.317 0 0 0 4.024-4.414c.16-.178.305-.238.554-.186 1.228.255 2.438-.682 2.516-1.926.058-.93-.41-1.722-1.262-2.135-.724-.35-1.726-.19-2.332.375-.664.62-.87 1.557-.518 2.424.068.168.111.28-.038.441a1249.609 1249.609 0 0 0-4.318 4.733c-.103.114-.186.154-.34.088a4.861 4.861 0 0 0-1.286-.354c-.233-.03-.262-.135-.26-.331.01-.677.018-1.353-.003-2.03-.008-.27.067-.424.307-.576.678-.43.97-1.262.76-2.027-.208-.76-.912-1.333-1.683-1.37-.86-.04-1.607.47-1.888 1.291-.267.777.031 1.64.76 2.116.209.136.286.28.281.524a41.633 41.633 0 0 0 0 2.03c.007.253-.067.34-.327.388-3.034.569-5.155 3.097-5.147 6.11z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F7931C"/><path fill="#FEFDFC" d="M7.351 19.32c-.008-3.012 2.113-5.54 5.147-6.109.26-.048.334-.135.327-.389a41.633 41.633 0 0 1 0-2.029c.005-.243-.072-.388-.281-.524-.729-.475-1.027-1.339-.76-2.116a1.875 1.875 0 0 1 1.888-1.29c.77.036 1.475.609 1.683 1.37.21.764-.082 1.595-.76 2.026-.24.152-.315.305-.307.577.02.676.013 1.352.004 2.029-.003.196.026.301.259.331.443.059.876.178 1.286.354.154.066.237.026.34-.088 1.435-1.581 2.875-3.159 4.318-4.733.149-.162.106-.273.038-.44-.352-.868-.146-1.805.518-2.425.606-.565 1.608-.726 2.332-.375.852.413 1.32 1.205 1.262 2.135-.078 1.244-1.288 2.181-2.516 1.926-.249-.052-.393.008-.554.186a787.317 787.317 0 0 1-4.024 4.414c-.163.177-.186.272.017.448 2.204 1.922 2.804 4.818 1.548 7.456-.095.2-.074.314.08.46.367.349.722.71 1.074 1.075.14.145.271.183.479.13.81-.204 1.65.16 2.054.863a1.867 1.867 0 0 1-.261 2.213c-.554.589-1.459.76-2.162.408-.768-.384-1.192-1.205-1.01-2.048.053-.242-.003-.38-.165-.533a19.247 19.247 0 0 1-.867-.874c-.163-.176-.264-.179-.45-.004-1.899 1.77-4.101 2.228-6.531 1.364-2.416-.857-3.999-3.206-4.006-5.787"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bcc);


/***/ }),

/***/ "tPX4":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/drop.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Drop = {
  symbol: 'drop',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.134-14.533c-.551-2.427-2.264-5.103-2.264-5.103 1.974 5.387 1.214 9.45.691 11.755 0 0-.69 2.578.795.43 1.852-2.688.778-7.082.778-7.082zM18.258 7.91c1.027 3.658 1.492 6.763 1.637 9.352.255 4.412-.418 7.315-.836 8.848-.134.499.424.87.749.493l.006-.006c.812-.929 1.196-3.105 1.376-5.015l.052-.627c.168-2.3.07-4.621-.47-6.845-.993-4.104-2.514-6.2-2.514-6.2zm-1.84 6.444c-.25-6.008-.703-11.343-.703-11.343s-.458 5.068-.708 10.942c-.04.953-.076 1.922-.105 2.897-.04 1.417-.058 2.84-.058 4.215.006 2.444.1 4.737.32 6.566.087.725 1.027.725 1.114 0 .151-1.248.238-2.781.273-4.465a123.84 123.84 0 0 0-.023-5.462c-.03-1.115-.064-2.241-.11-3.35zm-7.019 7.24a18.405 18.405 0 0 1-.093-3.414c.058-.894.186-1.852.407-2.874.203-.935.481-1.916.859-2.949 0 0-1.208 1.887-1.916 3.924-.14.39-.255.79-.343 1.179 0 0-.226 1.022-.26 2.386-.024.946.051 2.066.353 3.123a6.19 6.19 0 0 0 .68 1.573s1.486 2.212.795-.43a19.786 19.786 0 0 1-.482-2.519zm2.119-1.185a31.681 31.681 0 0 1 .058-3.588 35.673 35.673 0 0 1 .279-2.635c.26-1.881.685-3.965 1.33-6.276 0 0-1.528 2.096-2.52 6.2-.053.22-.1.441-.146.656-.18.894-.296 1.8-.354 2.717-.07 1.15-.052 2.31.03 3.466l.052.633c.18 1.91.557 4.086 1.375 5.015l.006.006c.325.372.888 0 .75-.493-.303-1.132-.75-3.013-.86-5.701zm2.537.226a99.317 99.317 0 0 1-.018-3.994c.012-.876.035-1.8.076-2.769.099-2.502.569-6.119.894-9.184 0 0-1.602 3.315-2.334 9.295-.098.818-.191 1.7-.261 2.653l-.052.708s-.087 1.265-.053 2.972c.047 2.194.29 5.12 1.196 7.036.03.058.064.11.11.15l.006.007c.343.325.871.017.825-.488a81.99 81.99 0 0 1-.39-6.386zm3.32 0c-.075 3.112-.272 5.289-.388 6.386-.047.505.481.813.824.488l.006-.006a.483.483 0 0 0 .11-.151c.906-1.916 1.15-4.842 1.196-7.036.035-1.707-.052-2.972-.052-2.972l-.053-.708a56.374 56.374 0 0 0-.26-2.653c-.732-5.98-2.335-9.295-2.335-9.295.326 3.065.796 6.682.894 9.184.041.97.064 1.893.076 2.77a99.317 99.317 0 0 1-.018 3.993z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#242D3D"/><g fill="#FFF"><path d="M23.134 17.467c-.551-2.427-2.264-5.103-2.264-5.103 1.974 5.387 1.214 9.45.691 11.755 0 0-.69 2.578.795.43 1.852-2.688.778-7.082.778-7.082z"/><path d="M18.258 7.911c1.027 3.658 1.492 6.763 1.637 9.352.255 4.412-.418 7.315-.836 8.848-.134.499.424.87.749.493l.006-.006c.812-.929 1.196-3.105 1.376-5.015l.052-.627c.168-2.3.07-4.621-.47-6.845-.993-4.104-2.514-6.2-2.514-6.2zm-1.84 6.444c-.25-6.008-.703-11.343-.703-11.343s-.458 5.068-.708 10.942c-.04.953-.076 1.922-.105 2.897-.04 1.417-.058 2.84-.058 4.215.006 2.444.1 4.737.32 6.566.087.725 1.027.725 1.114 0 .151-1.248.238-2.781.273-4.465a123.84 123.84 0 0 0-.023-5.462c-.03-1.115-.064-2.241-.11-3.35zM9.4 21.594a18.405 18.405 0 0 1-.094-3.413c.058-.894.186-1.852.407-2.874.203-.935.481-1.916.859-2.949 0 0-1.208 1.887-1.916 3.924-.14.39-.255.79-.343 1.179 0 0-.226 1.022-.26 2.386-.024.946.051 2.066.353 3.123a6.19 6.19 0 0 0 .68 1.573s1.486 2.212.795-.43a19.786 19.786 0 0 1-.482-2.519z"/><path d="M11.518 20.41a31.681 31.681 0 0 1 .058-3.588 35.673 35.673 0 0 1 .279-2.635c.26-1.881.685-3.965 1.33-6.276 0 0-1.528 2.096-2.52 6.2-.053.22-.1.441-.146.656-.18.894-.296 1.8-.354 2.717-.07 1.15-.052 2.31.03 3.466l.052.633c.18 1.91.557 4.086 1.375 5.015l.006.006c.325.372.888 0 .75-.493-.303-1.132-.75-3.013-.86-5.701z"/><path d="M14.055 20.636a99.317 99.317 0 0 1-.018-3.994c.012-.876.035-1.8.076-2.769.099-2.502.569-6.119.894-9.184 0 0-1.602 3.315-2.334 9.295-.098.818-.191 1.7-.261 2.653l-.052.708s-.087 1.265-.053 2.972c.047 2.194.29 5.12 1.196 7.036.03.058.064.11.11.15l.006.007c.343.325.871.017.825-.488a81.99 81.99 0 0 1-.39-6.386zm3.32 0c.03-1.196.041-2.53.018-3.994-.012-.876-.035-1.8-.076-2.769-.098-2.502-.568-6.119-.894-9.184 0 0 1.603 3.315 2.334 9.295.099.818.192 1.7.261 2.653l.053.708s.087 1.265.052 2.972c-.047 2.194-.29 5.12-1.196 7.036a.483.483 0 0 1-.11.15l-.006.007c-.343.325-.87.017-.824-.488.116-1.097.313-3.274.388-6.386z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Drop);


/***/ }),

/***/ "tQhH":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/amb.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Amb = {
  symbol: 'amb',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11-15.985l-.001-.014v-.023c0-.007 0-.015-.002-.022v-.001a.52.52 0 0 0-.052-.188l-.003-.005-.006-.012C26.797 15.495 23.446 9.5 16 9.5S5.203 15.494 5.063 15.75a.662.662 0 0 0-.006.012l-.002.004a.52.52 0 0 0-.054.189L5 15.978v.045a.52.52 0 0 0 .064.228c.139.255 3.492 6.249 10.937 6.249s10.797-5.994 10.936-6.249a.522.522 0 0 0 .063-.228v-.008zM25.89 16c-.558.868-2.645 3.747-6.423 4.94l.088-.065a.278.278 0 0 0-.053-.478.27.27 0 0 0-.272.035c-.664.5-1.432.84-2.245.992a12.032 12.032 0 0 1-1.968 0c-2.184-.403-3.902-2.12-4.332-4.33a.601.601 0 0 0 .212-.703c-.098-.256-.355-.412-.624-.377s-.478.252-.509.525.127.531.381.626a6.037 6.037 0 0 0 2.374 3.77C8.75 19.74 6.667 16.867 6.11 16c.563-.874 2.675-3.787 6.505-4.964a5.02 5.02 0 0 0-.073.052.278.278 0 0 0-.1.309.272.272 0 0 0 .416.14 5.372 5.372 0 0 1 2.43-.971.268.268 0 0 0 .05-.011 11.598 11.598 0 0 1 1.325 0 .267.267 0 0 0 .05.011c2.252.3 4.08 2.016 4.574 4.239a.601.601 0 0 0-.119.724.584.584 0 0 0 1.102-.296.593.593 0 0 0-.457-.57 6.07 6.07 0 0 0-2.437-3.63c3.836 1.174 5.952 4.093 6.515 4.967zm-5.07.017c0-2.698-2.162-4.891-4.82-4.891s-4.82 2.194-4.82 4.891S13.343 20.91 16 20.91s4.82-2.195 4.82-4.892zm-.544 0c0 2.393-1.918 4.34-4.276 4.34s-4.277-1.947-4.277-4.34 1.92-4.339 4.277-4.339 4.276 1.947 4.276 4.34zm-2.7-1.343c0-.745-.519-1.386-1.24-1.53-.72-.145-1.44.247-1.72.936s-.04 1.483.573 1.894l-.428 2.627a.315.315 0 0 0 .318.379h1.92c.209 0 .35-.17.316-.379l-.429-2.626c.431-.289.69-.777.69-1.3zm4.347 2.043a.275.275 0 0 0-.27-.308.274.274 0 0 0-.27.244 5.49 5.49 0 0 1-1.373 3.06.276.276 0 1 0 .143.458.27.27 0 0 0 .26-.086 6.041 6.041 0 0 0 1.51-3.368zm-9.87-4.868a.27.27 0 0 0-.385.011 6.04 6.04 0 0 0-1.567 3.267.276.276 0 0 0 .27.317c.135 0 .249-.1.269-.236a5.49 5.49 0 0 1 1.423-2.968.278.278 0 0 0-.01-.39z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#3c5be0" r="16"/><path d="M27 16.015v.008a.522.522 0 0 1-.063.228c-.14.255-3.491 6.249-10.936 6.249S5.203 16.506 5.064 16.251A.522.522 0 0 1 5 16.023v-.045l.001-.023a.52.52 0 0 1 .054-.189l.002-.004.006-.012C5.203 15.494 8.555 9.5 16 9.5s10.797 5.995 10.936 6.25l.006.012.003.005a.52.52 0 0 1 .053.188v.046l.002.014zM25.89 16c-.563-.874-2.679-3.793-6.515-4.967a6.07 6.07 0 0 1 2.437 3.63c.263.06.452.296.457.57.005.274-.175.516-.437.586s-.535-.05-.665-.29a.601.601 0 0 1 .119-.724c-.494-2.223-2.322-3.94-4.574-4.239a.267.267 0 0 1-.05-.011 12.37 12.37 0 0 0-1.325 0 .268.268 0 0 1-.05.011 5.372 5.372 0 0 0-2.43.97.272.272 0 0 1-.417-.14.278.278 0 0 1 .101-.308 5.02 5.02 0 0 1 .073-.052C8.784 12.213 6.672 15.126 6.11 16c.557.867 2.64 3.74 6.41 4.935a6.037 6.037 0 0 1-2.375-3.77c-.254-.095-.41-.353-.38-.626s.24-.49.508-.525.526.12.624.377a.601.601 0 0 1-.212.703c.43 2.21 2.148 3.927 4.332 4.33a12.003 12.003 0 0 0 1.968 0 5.375 5.375 0 0 0 2.245-.992.27.27 0 0 1 .272-.035.278.278 0 0 1 .052.478l-.087.065c3.778-1.193 5.865-4.072 6.423-4.94zm-5.07.017c0 2.697-2.162 4.892-4.82 4.892s-4.82-2.195-4.82-4.892c0-2.697 2.162-4.891 4.82-4.891s4.82 2.193 4.82 4.891zm-.544 0c0-2.392-1.918-4.339-4.276-4.339s-4.277 1.946-4.277 4.34 1.919 4.338 4.277 4.338 4.276-1.946 4.276-4.339zm-2.7-1.343c0 .524-.259 1.012-.69 1.3l.43 2.627a.314.314 0 0 1-.317.379h-1.92a.315.315 0 0 1-.318-.379l.428-2.627c-.612-.411-.852-1.205-.573-1.894s1-1.081 1.72-.937c.721.145 1.24.786 1.24 1.531zm4.347 2.043a6.041 6.041 0 0 1-1.51 3.368.27.27 0 0 1-.462-.1.28.28 0 0 1 .06-.272 5.49 5.49 0 0 0 1.372-3.06.274.274 0 0 1 .301-.242c.15.018.256.155.239.306zm-9.87-4.868a.278.278 0 0 1 .01.39 5.49 5.49 0 0 0-1.423 2.97.274.274 0 0 1-.31.231.276.276 0 0 1-.229-.313 6.04 6.04 0 0 1 1.567-3.267.27.27 0 0 1 .385-.01z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Amb);


/***/ }),

/***/ "tRT7":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/vtc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Vtc = {
  symbol: 'vtc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M27.25 4.624a13.105 13.105 0 0 0-.312-.29L15.783 19.787l-4.263-5.438H4.582l-1.95 2.22H6.26l8.661 11.194c.29.272.576.408.862.408.285 0 .557-.136.816-.408L30.294 8.82a15.158 15.158 0 0 0-.295-.574A15.928 15.928 0 0 1 32 16c0 8.837-7.163 16-16 16S0 24.837 0 16 7.163 0 16 0c4.386 0 8.36 1.765 11.25 4.624z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#048657"/><path fill="#FFF" fill-rule="nonzero" d="M2.632 16.57l1.95-2.221h6.938l4.263 5.438L26.938 4.334a14.205 14.205 0 0 1 1.86 2.04 15.002 15.002 0 0 1 1.496 2.446L16.599 27.763c-.259.272-.531.408-.816.408-.286 0-.573-.136-.862-.408L6.26 16.569H2.632z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Vtc);


/***/ }),

/***/ "tSE5":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/cob.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Cob = {
  symbol: 'cob',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-7h4.536l-2.272-3.957h-4.528L11.464 25H16zm-2.263-14.044h4.527L20.536 7h-9.072l2.272 3.957zm9.999 9.539L26 16.538h-4.536l-2.265 3.957h.001l2.263 3.958 2.273-3.957h-.002.002zM8.264 11.496L6 15.453h4.536l2.264-3.957-2.264-3.957-2.272 3.957zm4.535 9h.001l-2.264-3.958H6l2.264 3.957 2.272 3.958 2.264-3.957zm10.937-9l-2.273-3.957-2.264 3.957 2.264 3.957H26l-2.264-3.957z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#13bf99" r="16"/><path d="M16 25h-4.536l2.272-3.957h4.528L20.536 25H16zm-2.263-14.044h-.001L11.464 7h9.072l-2.272 3.956h-4.528zm9.999 9.539h-.002.002l-2.273 3.958-2.264-3.957h.001l2.263-3.958H26l-2.264 3.957zM8.264 11.496l2.272-3.957 2.264 3.957-2.264 3.956H6zm4.535 9h.001l-2.264 3.957-2.272-3.957L6 16.537h4.536l2.264 3.957zm10.937-9L26 15.453h-4.536l-2.265-3.957 2.264-3.957 2.273 3.957z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Cob);


/***/ }),

/***/ "tdQe":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/edg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Edg = {
  symbol: 'edg',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.99-19.498a2.82 2.82 0 0 0-.257-1.155c-.258-.571-.655-1.105-1.196-1.426-2.03-1.192-4.062-2.374-6.091-3.565-.232-.136-.494-.212-.751-.284a3.564 3.564 0 0 0-1.734.098c-.333.114-.624.322-.93.492-1.866 1.09-3.73 2.18-5.595 3.266a2.47 2.47 0 0 0-.639.564c-.44.53-.75 1.192-.788 1.892v7.186c0 .481.16.943.38 1.363.27.484.636.934 1.126 1.207 2.006 1.17 4.013 2.343 6.02 3.512.295.17.623.269.96.314.646.08 1.334.027 1.916-.284 1.906-1.112 3.807-2.225 5.714-3.334.28-.167.575-.314.811-.54a3.47 3.47 0 0 0 1.002-1.761c.067-.29.052-.593.052-.889v-6.656zm-9.05-2.476a.235.235 0 0 1 .142.133c.362.674.87 1.256 1.401 1.801.344.337.598.776.684 1.256.113.534-.201 1.125-.706 1.318-.37.144-.8.117-1.155-.057-.067-.023-.18-.102-.22-.008.067.462.303.866.516 1.267.052.087-.048.148-.097.204-.22.204-.407.447-.646.632-.071-.023-.12-.091-.172-.14-.205-.216-.422-.424-.627-.644-.004-.015-.008-.053-.011-.068.228-.409.516-.81.59-1.283a.393.393 0 0 0-.217.03c-.377.148-.808.182-1.188.03a1.125 1.125 0 0 1-.707-.905c-.038-.299.052-.597.186-.86.167-.37.448-.669.74-.946a10.676 10.676 0 0 0 1.487-1.76zm-3.633 6.51a2.103 2.103 0 0 1 1.899-.13c.048.02.06.03.097.054.194.076.362.2.519.34.355.307.642.685 1.005.984.352-.333.676-.697 1.032-1.021.5-.462 1.233-.598 1.882-.466 1.017.2 1.772 1.252 1.7 2.294-.033.658-.361 1.309-.9 1.684-.366.254-.8.435-1.249.424-.59.023-1.169-.242-1.587-.655-.789-.79-1.55-1.608-2.343-2.396-.232-.25-.546-.432-.89-.454a1.456 1.456 0 0 0-.709.16c-.34.181-.568.544-.624.927-.07.405.075.843.377 1.12.467.451 1.286.447 1.741-.015.116-.098.224-.295.404-.216.112.068.19.182.288.27.075.086.19.158.201.287 0 .13-.115.204-.194.288-.21.22-.452.405-.736.519-.55.216-1.184.22-1.73-.015-.864-.39-1.42-1.386-1.282-2.34.098-.678.498-1.317 1.1-1.643zm5.037 1.052c-.276.288-.56.564-.837.852.004.019.008.06.011.083.333.31.624.662.971.957.467.398 1.211.345 1.644-.076.423-.412.52-1.131.19-1.63a1.212 1.212 0 0 0-.99-.565c-.364-.03-.73.121-.989.38z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#2B1544"/><path fill="#FFF" fill-rule="nonzero" d="M24.99 12.502v6.656c0 .296.015.598-.052.889a3.47 3.47 0 0 1-1.002 1.76c-.236.227-.53.374-.811.54-1.907 1.11-3.808 2.223-5.714 3.335-.582.311-1.27.364-1.916.284a2.609 2.609 0 0 1-.96-.314c-2.007-1.17-4.014-2.343-6.02-3.512-.49-.273-.856-.723-1.125-1.207-.22-.42-.381-.882-.381-1.363v-7.186c.037-.7.347-1.363.788-1.892a2.47 2.47 0 0 1 .639-.564c1.865-1.086 3.73-2.176 5.594-3.266.307-.17.598-.378.93-.492a3.564 3.564 0 0 1 1.735-.098c.257.072.519.148.75.284 2.03 1.191 4.063 2.373 6.092 3.565.541.32.938.855 1.196 1.426.163.36.257.757.257 1.155zm-9.05-2.476a10.676 10.676 0 0 1-1.487 1.76c-.292.277-.573.576-.74.947-.134.262-.224.56-.186.86.045.404.333.76.707.904.38.152.81.118 1.188-.03a.393.393 0 0 1 .217-.03c-.074.474-.362.874-.59 1.283l.01.068c.206.22.423.428.628.644.052.049.1.117.172.14.239-.185.426-.428.646-.632.049-.056.15-.117.097-.204-.213-.4-.449-.805-.516-1.267.04-.094.153-.015.22.008.355.174.784.2 1.155.057.505-.193.819-.784.706-1.318-.086-.48-.34-.92-.684-1.256-.53-.545-1.039-1.127-1.401-1.801a.235.235 0 0 0-.142-.133zm-3.633 6.51c-.6.326-1.001.965-1.1 1.644-.137.953.42 1.949 1.283 2.339.546.235 1.18.23 1.73.015.284-.114.527-.3.736-.519.079-.084.194-.159.194-.288-.01-.129-.126-.2-.201-.288-.098-.087-.176-.2-.288-.269-.18-.079-.288.118-.404.216-.455.462-1.274.466-1.74.015a1.255 1.255 0 0 1-.378-1.12c.056-.383.284-.746.624-.928.22-.11.467-.17.71-.159.343.022.657.204.889.454.792.788 1.554 1.605 2.343 2.396.418.413.997.678 1.587.655.45.01.883-.17 1.249-.424.539-.375.867-1.026.9-1.684.072-1.042-.683-2.093-1.7-2.294-.649-.132-1.382.004-1.882.466-.356.324-.68.688-1.032 1.021-.363-.299-.65-.677-1.005-.983a1.75 1.75 0 0 0-.52-.341c-.036-.023-.048-.034-.096-.053a2.103 2.103 0 0 0-1.899.129zm5.037 1.052c.259-.258.625-.409.99-.379.396.011.78.223.99.564.328.5.232 1.219-.19 1.631-.434.421-1.178.474-1.645.076-.347-.295-.638-.647-.97-.957-.004-.022-.008-.064-.012-.083.277-.288.56-.564.837-.852z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Edg);


/***/ }),

/***/ "tiLB":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wtc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wtc = {
  symbol: 'wtc',
  color: '#000',
  plainIcon: c => {
    return `<g fill-rule="evenodd"  fill="${
      c ? c : this.color
    }"><path fill-rule="nonzero" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm2.414-18.834v-2.49a.662.662 0 0 0-.02-.164.69.69 0 0 0-.837-.492l-3.448.844a.678.678 0 0 0-.523.656v7.555c0 .056.007.11.02.164a.69.69 0 0 0 .837.492l2.247-.55v-4.538c0-.62.43-1.16 1.044-1.31l.68-.167zm-7.586-.042v-2.449a.662.662 0 0 0-.021-.163.69.69 0 0 0-.836-.492l-3.449.844A.678.678 0 0 0 6 11.52v7.555c0 .056.007.11.02.164a.69.69 0 0 0 .837.492l2.074-.508v-4.58c0-.62.43-1.16 1.045-1.31l.852-.209zm10.867-2.239a.678.678 0 0 0-.523.655v7.556a.69.69 0 0 0 .857.655l3.449-.844a.678.678 0 0 0 .522-.655v-7.556a.662.662 0 0 0-.02-.164.69.69 0 0 0-.837-.491l-3.448.844zm-8.798 2.429l-2.754.674a.678.678 0 0 0-.522.655v7.556c0 .055.007.11.02.164a.69.69 0 0 0 .837.491l3.448-.844a.678.678 0 0 0 .522-.655v-.94a1.379 1.379 0 0 1-1.51-1.012 1.324 1.324 0 0 1-.041-.328v-5.761zm7.586.042l-2.581.632a.678.678 0 0 0-.523.655v7.556c0 .055.007.11.02.164a.69.69 0 0 0 .837.491l3.449-.844a.678.678 0 0 0 .522-.655v-.951l-.01.002c-.74.181-1.488-.259-1.673-.982a1.324 1.324 0 0 1-.041-.328v-5.74z"/><path d="M12.897 13.314v5.761c0 .11.013.22.04.328a1.38 1.38 0 0 0 1.511 1.013v.939c0 .31-.215.58-.522.655l-3.448.844a.69.69 0 0 1-.837-.491.662.662 0 0 1-.02-.164v-7.556c0-.31.215-.58.522-.655l2.754-.674zm7.586.042v5.74c0 .11.014.22.04.328.186.723.935 1.163 1.674.982l.01-.002v.95a.68.68 0 0 1-.522.656l-3.449.844a.69.69 0 0 1-.836-.491.662.662 0 0 1-.02-.164v-7.556c0-.31.215-.58.522-.655l2.58-.632z" opacity=".504"/></g>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#8200FF" fill-rule="nonzero"/><path fill="#FFF" d="M18.414 13.166l-.68.167c-.614.15-1.044.69-1.044 1.31v4.538l-2.247.55a.69.69 0 0 1-.836-.492.662.662 0 0 1-.02-.164V11.52c0-.31.215-.58.522-.656l3.448-.844a.69.69 0 0 1 .836.492c.014.053.02.108.02.163v2.491zm-7.586-.042l-.852.209c-.614.15-1.045.69-1.045 1.31v4.58l-2.074.508a.69.69 0 0 1-.836-.492.662.662 0 0 1-.021-.164V11.52c0-.31.215-.58.522-.656l3.449-.844a.69.69 0 0 1 .836.492c.014.053.02.108.02.163v2.45zm10.867-2.239l3.448-.844a.69.69 0 0 1 .836.491.653.653 0 0 1 .021.164v7.556c0 .31-.215.58-.522.655l-3.449.844a.69.69 0 0 1-.836-.491.662.662 0 0 1-.02-.164V11.54c0-.31.215-.58.522-.655z"/><path fill="#FFF" d="M12.897 13.314v5.761c0 .11.013.22.04.328a1.38 1.38 0 0 0 1.511 1.013v.939c0 .31-.215.58-.522.655l-3.448.844a.69.69 0 0 1-.837-.491.662.662 0 0 1-.02-.164v-7.556c0-.31.215-.58.522-.655l2.754-.674zm7.586.042v5.74c0 .11.014.22.04.328.186.723.935 1.163 1.674.982l.01-.002v.95a.68.68 0 0 1-.522.656l-3.449.844a.69.69 0 0 1-.836-.491.662.662 0 0 1-.02-.164v-7.556c0-.31.215-.58.522-.655l2.58-.632z" opacity=".504"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wtc);


/***/ }),

/***/ "tqlj":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xin.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xin = {
  symbol: 'xin',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM26.405 7.151l-3.63 1.61a.673.673 0 0 0-.35.59v12.98a.66.66 0 0 0 .36.59l3.63 1.57a.338.338 0 0 0 .5-.3V7.451a.35.35 0 0 0-.51-.3zM9.02 8.741l-3.52-1.6a.338.338 0 0 0-.5.3v16.74a.341.341 0 0 0 .52.29l3.54-1.87a.667.667 0 0 0 .32-.57v-12.7a.7.7 0 0 0-.36-.59zm11.04 4.43l-3.79-2.17a.668.668 0 0 0-.67 0l-3.86 2.15a.684.684 0 0 0-.34.59v4.4c0 .243.13.468.34.59l3.86 2.22c.207.12.463.12.67 0l3.79-2.2a.684.684 0 0 0 .34-.59v-4.4a.672.672 0 0 0-.34-.59z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#1EB5FA"/><path d="M26.405 7.151l-3.63 1.61a.673.673 0 0 0-.35.59v12.98a.66.66 0 0 0 .36.59l3.63 1.57a.338.338 0 0 0 .5-.3V7.451a.35.35 0 0 0-.51-.3zM9.02 8.741l-3.52-1.6a.338.338 0 0 0-.5.3v16.74a.341.341 0 0 0 .52.29l3.54-1.87a.667.667 0 0 0 .32-.57v-12.7a.7.7 0 0 0-.36-.59zm11.04 4.43l-3.79-2.17a.668.668 0 0 0-.67 0l-3.86 2.15a.684.684 0 0 0-.34.59v4.4c0 .243.13.468.34.59l3.86 2.22c.207.12.463.12.67 0l3.79-2.2a.684.684 0 0 0 .34-.59v-4.4a.672.672 0 0 0-.34-.59z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xin);


/***/ }),

/***/ "u7PA":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/prl.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Prl = {
  symbol: 'prl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.281-11.133h-.117c-.76 0-1.521 0-2.282-.002a.466.466 0 0 1-.203-.04c-.208-.106-.226-.346-.044-.527.552-.549 1.104-1.098 1.657-1.645.753-.745 1.509-1.487 2.259-2.235.399-.397.54-.882.39-1.421a9.861 9.861 0 0 0-2.11-3.909c-1.937-2.2-4.382-3.395-7.318-3.57a9.951 9.951 0 0 0-3.672.476 10.268 10.268 0 0 0-4.682 3.094 10.102 10.102 0 0 0-1.967 3.451c-.075.224-.15.452-.18.684-.06.472.103.877.442 1.212l.902.898c.985.98 1.971 1.958 2.954 2.94a.5.5 0 0 1 .139.213c.052.21-.102.38-.333.38H7.705c-.015.393.004.765.128 1.128.28.821 1.1 1.45 1.967 1.497.087.005.174.007.262.007 3.96 0 7.919 0 11.879.002.478 0 .923-.105 1.322-.37.833-.552 1.102-1.402 1.018-2.263zm-15.839.54h15.11a1.428 1.428 0 0 1-.28.853c-.278.375-.65.585-1.122.611a2.594 2.594 0 0 1-.14.004l-12.028.001c-.522 0-.943-.195-1.255-.611a1.465 1.465 0 0 1-.285-.857zM18.71 13.66l-.844 1.417c.829.662 1.27 1.512 1.25 2.578a2.964 2.964 0 0 1-.718 1.897 3.127 3.127 0 0 1-3.902.739 3.113 3.113 0 0 1-1.382-3.92L11.7 15.54c-.06.15-.121.292-.171.437a4.574 4.574 0 0 0-.23 1.979c.084.824.368 1.577.852 2.253.091.128.11.265.033.404-.113.201-.374.23-.547.06-.301-.294-.598-.591-.897-.888l-3.56-3.54c-.325-.322-.422-.696-.274-1.132.587-1.723 1.5-3.242 2.845-4.487.286-.265.604-.496.91-.739.046-.036.067-.07.069-.13a.666.666 0 0 1 .959-.58.177.177 0 0 0 .175.001 8.928 8.928 0 0 1 2.203-.726 10.598 10.598 0 0 1 2.77-.156 9.119 9.119 0 0 1 3.359.868c.034.017.09.015.127 0a.682.682 0 0 1 .944.557c.005.04.04.09.075.114a9.118 9.118 0 0 1 1.969 1.884A10.9 10.9 0 0 1 25 14.844c.053.15.11.302.137.458.065.36-.05.668-.31.926l-3.589 3.567c-.296.294-.59.59-.889.882-.204.198-.513.11-.582-.161a.355.355 0 0 1 .068-.302c.356-.5.61-1.045.75-1.643a4.583 4.583 0 0 0 .042-1.961c-.238-1.208-.864-2.171-1.852-2.907-.018-.014-.038-.024-.067-.043zm4.665 3.04c.027-.023.046-.035.062-.05l.924-.919a.345.345 0 0 0 .091-.375 10.321 10.321 0 0 0-1.55-3.05c-.118-.16-.245-.313-.37-.474l-.099.093c-.35.339-.7.679-1.051 1.017-.158.153-.329.148-.484-.008-.087-.088-.172-.177-.262-.262-1.122-1.053-2.452-1.655-3.985-1.82a.19.19 0 0 0-.174.063.66.66 0 0 1-.952.005c-.063-.064-.122-.077-.203-.068a6.855 6.855 0 0 0-1.824.45c-.228.093-.45.2-.68.304l.646 1.117c2.12-.956 4.137-.844 5.948.627 1.743 1.416 2.276 3.297 1.838 5.467.007-.007.026-.019.042-.034.46-.457.92-.913 1.377-1.373a.196.196 0 0 0 .044-.132 6.605 6.605 0 0 0-.497-2.32.27.27 0 0 0-.206-.18.66.66 0 0 1-.452-.853c.126-.36.53-.55.88-.412a.664.664 0 0 1 .368.907c-.03.062-.024.109.001.168a7 7 0 0 1 .492 1.64c.026.153.05.306.076.471zm-1.266-5.31c-.008-.015-.011-.025-.018-.032a7.796 7.796 0 0 0-1.132-.955c-.025-.017-.076-.016-.107-.004a.67.67 0 0 1-.921-.524c-.01-.07-.04-.102-.1-.13a8.348 8.348 0 0 0-3.005-.768c-1.13-.08-2.248 0-3.343.311a7.835 7.835 0 0 0-1.346.516.153.153 0 0 0-.071.094.67.67 0 0 1-.839.524c-.089-.024-.144-.009-.204.044-.018.015-.038.027-.057.04-1.667 1.234-2.737 2.885-3.41 4.816-.063.182-.02.32.115.45.29.281.574.569.86.854l.086.08c.01-.06.02-.101.025-.144a7.282 7.282 0 0 1 .555-2.004.164.164 0 0 0 0-.12c-.193-.429.044-.883.51-.96a.18.18 0 0 0 .136-.082c1.33-1.894 3.146-2.978 5.46-3.232a.195.195 0 0 0 .124-.076.678.678 0 0 1 1.134-.002c.039.06.082.073.145.083.36.058.724.098 1.077.184a7.321 7.321 0 0 1 3.353 1.84c.023.022.048.043.075.066l.898-.87zm-3.664 6.18a2.44 2.44 0 0 0-2.454-2.426c-1.35.007-2.444 1.1-2.438 2.434a2.449 2.449 0 0 0 2.456 2.428c1.346-.008 2.443-1.105 2.436-2.437zm-7.698 1.264c-.047-.305-.104-.582-.13-.863a5.258 5.258 0 0 1 .398-2.559c.245-.58.583-1.1 1.012-1.561.1-.108.152-.108.258-.004.079.077.157.155.234.234.088.09.088.144.002.24-.056.062-.114.122-.164.188-.123.16-.243.323-.369.492l1.407.827c1.058-1.317 2.368-1.672 3.953-1.077l.839-1.407c-.018-.014-.025-.021-.034-.026a4.71 4.71 0 0 0-2.935-.453 4.561 4.561 0 0 0-1.646.604c-.193.117-.339.074-.451-.121l-.556-.96-.265-.453c-.014.004-.017.004-.02.006a6.626 6.626 0 0 0-1.856 1.83c-.016.025-.016.07-.005.1.16.428-.05.82-.5.925a.142.142 0 0 0-.112.095 6.603 6.603 0 0 0-.528 2.403.196.196 0 0 0 .056.127c.258.262.52.519.78.778l.632.635zm5.248-8.01a.382.382 0 0 0 .379-.373.384.384 0 0 0-.375-.378.387.387 0 0 0-.38.374.384.384 0 0 0 .376.378zm-4.6-1.414a.372.372 0 0 0-.373.367.378.378 0 0 0 .756 0 .373.373 0 0 0-.383-.367zm10.801 5.1a.37.37 0 1 0-.006-.743.372.372 0 1 0 .006.743zm-1.603-5.1a.368.368 0 0 0-.375.372.374.374 0 0 0 .38.37.371.371 0 0 0 .37-.37.365.365 0 0 0-.375-.373zm-10.418 4.728a.371.371 0 0 0-.378-.371.37.37 0 0 0-.37.368.368.368 0 0 0 .372.375.37.37 0 0 0 .376-.372z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1061e3" r="16"/><path d="M24.281 20.867c.084.861-.185 1.711-1.018 2.263-.399.265-.844.37-1.322.37-3.96-.002-7.92-.001-11.88-.002a4.83 4.83 0 0 1-.26-.007c-.868-.047-1.688-.676-1.968-1.497-.124-.363-.143-.735-.128-1.127h2.41c.232-.001.386-.17.334-.381a.5.5 0 0 0-.139-.213c-.983-.982-1.969-1.96-2.954-2.94l-.902-.898c-.339-.335-.502-.74-.442-1.212.03-.232.105-.46.18-.684a10.102 10.102 0 0 1 1.967-3.45 10.268 10.268 0 0 1 4.682-3.095 9.951 9.951 0 0 1 3.672-.477c2.936.176 5.381 1.37 7.319 3.571a9.861 9.861 0 0 1 2.11 3.909c.15.539.008 1.024-.391 1.421-.75.748-1.506 1.49-2.259 2.235-.553.547-1.105 1.096-1.657 1.645-.182.18-.164.42.044.527.06.03.135.04.203.04.76.003 1.521.002 2.282.002zm-15.839.54c.011.322.097.608.285.858.312.416.733.612 1.255.611H22.01c.047 0 .094-.002.14-.005a1.441 1.441 0 0 0 1.123-.61c.186-.25.273-.536.278-.853zM18.71 13.66c.029.019.05.03.067.043.988.736 1.614 1.7 1.852 2.907.13.656.112 1.31-.042 1.961a4.656 4.656 0 0 1-.75 1.643.355.355 0 0 0-.068.302c.069.272.378.36.582.161.3-.291.593-.588.89-.882 1.196-1.19 2.392-2.379 3.589-3.567.26-.258.374-.566.31-.926-.029-.156-.085-.308-.138-.458a10.9 10.9 0 0 0-1.689-3.125 9.118 9.118 0 0 0-1.97-1.884.187.187 0 0 1-.074-.114.682.682 0 0 0-.944-.558.176.176 0 0 1-.127.001 9.119 9.119 0 0 0-3.36-.868 10.598 10.598 0 0 0-2.77.156 8.928 8.928 0 0 0-2.202.726.177.177 0 0 1-.175 0 .666.666 0 0 0-.96.578c0 .06-.022.095-.068.131-.306.243-.624.474-.91.739-1.344 1.245-2.258 2.764-2.845 4.487-.148.436-.05.81.275 1.133l3.56 3.539c.298.297.595.594.896.889.173.17.434.14.547-.061.077-.139.058-.276-.033-.404a4.614 4.614 0 0 1-.852-2.253 4.574 4.574 0 0 1 .23-1.979c.05-.145.112-.287.171-.437l1.412.83a3.113 3.113 0 0 0 1.382 3.92 3.127 3.127 0 0 0 3.902-.738c.46-.547.704-1.182.718-1.897.02-1.066-.421-1.916-1.25-2.578l.844-1.417zm4.665 3.04c-.026-.166-.05-.319-.076-.472a7 7 0 0 0-.492-1.64c-.025-.06-.031-.106-.001-.168a.664.664 0 0 0-.369-.907.677.677 0 0 0-.879.412.66.66 0 0 0 .452.852.27.27 0 0 1 .206.181c.304.745.473 1.517.497 2.32a.196.196 0 0 1-.044.132c-.457.46-.918.916-1.377 1.373-.016.015-.035.027-.042.034.438-2.17-.095-4.051-1.838-5.467-1.811-1.47-3.829-1.583-5.948-.627l-.647-1.117c.231-.103.453-.21.68-.304a6.826 6.826 0 0 1 1.825-.45c.081-.009.14.004.203.068a.66.66 0 0 0 .952-.005.19.19 0 0 1 .174-.064c1.533.166 2.863.768 3.985 1.821.09.085.175.174.262.262.155.156.326.16.484.008l1.051-1.017.098-.093c.126.16.253.314.371.474a10.312 10.312 0 0 1 1.55 3.05.345.345 0 0 1-.091.375l-.924.919c-.016.015-.035.027-.062.05zm-1.266-5.31l-.898.869c-.027-.023-.052-.044-.075-.066a7.321 7.321 0 0 0-3.353-1.84c-.353-.086-.718-.126-1.077-.184-.063-.01-.106-.023-.145-.083a.678.678 0 0 0-1.134.002.195.195 0 0 1-.124.076c-2.314.254-4.13 1.338-5.46 3.232a.182.182 0 0 1-.136.083c-.466.076-.703.53-.51.96a.164.164 0 0 1 0 .12 7.282 7.282 0 0 0-.555 2.003c-.006.043-.015.085-.025.144l-.086-.08c-.286-.285-.57-.573-.86-.854-.134-.13-.178-.268-.115-.45.673-1.93 1.743-3.582 3.41-4.815.019-.014.039-.026.057-.041.06-.053.115-.068.204-.044a.67.67 0 0 0 .839-.524.153.153 0 0 1 .071-.094 7.835 7.835 0 0 1 1.346-.516c1.095-.311 2.213-.392 3.343-.311a8.348 8.348 0 0 1 3.005.768c.06.028.09.06.1.13a.67.67 0 0 0 .92.524c.032-.012.083-.013.108.004.409.282.785.602 1.132.955.007.007.01.017.018.032zm-3.664 6.18c.007 1.331-1.09 2.428-2.436 2.436a2.449 2.449 0 0 1-2.456-2.428c-.006-1.333 1.089-2.427 2.438-2.434a2.44 2.44 0 0 1 2.454 2.425zm-7.698 1.264l-.632-.635c-.26-.26-.522-.516-.78-.778a.196.196 0 0 1-.056-.127 6.603 6.603 0 0 1 .528-2.403.142.142 0 0 1 .113-.095c.449-.105.658-.497.499-.925-.01-.03-.01-.075.005-.1a6.626 6.626 0 0 1 1.856-1.83c.003-.002.006-.002.02-.006l.265.452.556.96c.112.196.258.239.451.122a4.561 4.561 0 0 1 1.646-.604 4.71 4.71 0 0 1 2.935.453c.009.005.016.012.034.026l-.839 1.407c-1.585-.595-2.895-.24-3.953 1.077l-1.407-.827c.126-.169.246-.332.369-.492.05-.066.108-.126.164-.188.086-.096.086-.15-.002-.24a22.432 22.432 0 0 0-.234-.234c-.106-.104-.158-.104-.258.004a5.304 5.304 0 0 0-1.012 1.561 5.258 5.258 0 0 0-.398 2.56c.026.28.083.557.13.862zm5.248-8.01a.384.384 0 0 1-.376-.377.387.387 0 0 1 .38-.374.384.384 0 0 1 .375.378.382.382 0 0 1-.379.374zm-4.6-1.414a.373.373 0 0 1 .383.368.378.378 0 0 1-.756 0 .372.372 0 0 1 .373-.368zm10.801 5.1a.372.372 0 0 1-.007-.743.37.37 0 1 1 .007.743zm-1.603-5.1c.213 0 .375.16.374.372a.371.371 0 0 1-.369.37.374.374 0 0 1-.38-.37.368.368 0 0 1 .375-.373zm-10.418 4.728a.37.37 0 0 1-.376.372.368.368 0 0 1-.373-.375.37.37 0 0 1 .371-.368.371.371 0 0 1 .378.371z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Prl);


/***/ }),

/***/ "ucAt":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/msr.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Msr = {
  symbol: 'msr',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-26C10.48 6 6 10.48 6 16c0 .133.013.26.02.393h4.693l2.267-3.9L16 16.82l3.013-4.327 2.267 3.9h4.693c.007-.133.02-.26.02-.393C26 10.48 21.52 6 16 6zm6.893 9.187C22.487 11.74 19.553 9.06 16 9.06s-6.487 2.687-6.893 6.127H7.893C8.3 11.073 11.78 7.853 16 7.853c4.22 0 7.693 3.22 8.107 7.334h-1.214zm-3.966-.454L16 18.933l-2.927-4.2-1.666 2.867H6.14C6.907 22.36 11.02 26 16 26c4.98 0 9.093-3.64 9.86-8.407h-5.267l-1.666-2.86zm3.42 4.067h1.293c-1.147 3.113-4.133 5.347-7.64 5.347-3.507 0-6.493-2.234-7.64-5.347h1.293c1.08 2.433 3.514 4.14 6.347 4.14 2.833 0 5.267-1.707 6.347-4.14z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#47B95C"/><g fill="#FFF"><path d="M16 6C10.48 6 6 10.48 6 16c0 .133.013.26.02.393h4.693l2.267-3.9L16 16.82l3.013-4.327 2.267 3.9h4.693c.007-.133.02-.26.02-.393C26 10.48 21.52 6 16 6zm6.893 9.187C22.487 11.74 19.553 9.06 16 9.06s-6.487 2.687-6.893 6.127H7.893C8.3 11.073 11.78 7.853 16 7.853c4.22 0 7.693 3.22 8.107 7.334h-1.214z"/><path d="M18.927 14.733L16 18.933l-2.927-4.2-1.666 2.867H6.14C6.907 22.36 11.02 26 16 26c4.98 0 9.093-3.64 9.86-8.407h-5.267l-1.666-2.86zm3.42 4.067h1.293c-1.147 3.113-4.133 5.347-7.64 5.347-3.507 0-6.493-2.234-7.64-5.347h1.293c1.08 2.433 3.514 4.14 6.347 4.14 2.833 0 5.267-1.707 6.347-4.14z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Msr);


/***/ }),

/***/ "ujvx":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tks.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tks = {
  symbol: 'tks',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.77-17.75a4 4 0 0 1 .48 0c1.48.1 2.16 2.11 3.1 2a8.16 8.16 0 0 1-3 1.55 2 2 0 0 1-2.17-1.3v4L22 17.18V12l-4.23 2.25zm-2.89-.01a2.05 2.05 0 0 1-.74-1.49v-.08c0-1.16 1.87-3 1.93-3 .06.06 1.93 1.85 1.93 3v.09a2 2 0 0 1-.6 1.36l4.6-2.47-6-2.94-6 2.91 4.88 2.62zm.98 2.3a2 2 0 0 1-2.17 1.31 8.16 8.16 0 0 1-3-1.55c.94.07 1.61-1.95 3.1-2a4 4 0 0 1 .48 0L10 12v5.19l5.87 3.39-.01-4.04zM16 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm-6.7 7.19L16 7.94l6.71 3.25v6.39L16 21.45l-6.7-3.87v-6.39zm13.43 9l-6.68 3.86-6.76-3.9v-.37l6.76 3.9 6.68-3.86v.37zm0-.75l-6.68 3.86-6.76-3.9V19l6.76 3.91 6.68-3.86v.39zm0-.75l-6.68 3.86-6.76-3.9v-.37l6.76 3.91 6.68-3.86v.36z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#895AF8" fill-rule="nonzero"/><g fill="#FFF"><path d="M17.77 14.25a4 4 0 0 1 .48 0c1.48.1 2.16 2.11 3.1 2a8.16 8.16 0 0 1-3 1.55 2 2 0 0 1-2.17-1.3v4L22 17.18V12l-4.23 2.25zm-2.89-.01a2.05 2.05 0 0 1-.74-1.49v-.08c0-1.16 1.87-3 1.93-3 .06.06 1.93 1.85 1.93 3v.09a2 2 0 0 1-.6 1.36l4.6-2.47-6-2.94-6 2.91 4.88 2.62zm.98 2.3a2 2 0 0 1-2.17 1.31 8.16 8.16 0 0 1-3-1.55c.94.07 1.61-1.95 3.1-2a4 4 0 0 1 .48 0L10 12v5.19l5.87 3.39-.01-4.04z"/><path d="M16 4C9.373 4 4 9.373 4 16s5.373 12 12 12 12-5.373 12-12A12 12 0 0 0 16 4zm-6.7 7.19L16 7.94l6.71 3.25v6.39L16 21.45l-6.7-3.87v-6.39zm13.43 9l-6.68 3.86-6.76-3.9v-.37l6.76 3.9 6.68-3.86v.37zm0-.75l-6.68 3.86-6.76-3.9V19l6.76 3.91 6.68-3.86v.39zm0-.75l-6.68 3.86-6.76-3.9v-.37l6.76 3.91 6.68-3.86v.36z" fill-rule="nonzero"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tks);


/***/ }),

/***/ "ukJE":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rpx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rpx = {
  symbol: 'rpx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm9.696-16.268c-.55 0-1.021.333-1.212.805H20.48a.482.482 0 0 0-.42.243l-.785 1.396-.582-4.915c-.065-.55-.88-.556-.954-.007l-1.014 7.523-.981-14.339c-.04-.573-.894-.59-.957-.018l-1.22 11.147-.849-4.67c-.09-.498-.813-.523-.939-.031l-.938 3.67H6.48c-.266 0-.481.211-.481.47s.215.47.48.47h4.736c.22 0 .412-.146.466-.355l.484-1.895 1.047 5.756c.098.535.892.508.95-.033l.991-9.054.935 13.667c.039.566.88.592.956.03l1.14-8.454.308 2.607c.054.455.673.574.899.173l1.372-2.441h3.72c.19.471.662.805 1.212.805.72 0 1.304-.571 1.304-1.275s-.584-1.275-1.304-1.275z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#8d181b" r="16"/><path d="M25.696 15.732c.72 0 1.304.57 1.304 1.275s-.584 1.275-1.304 1.275c-.55 0-1.021-.334-1.212-.805h-3.72l-1.372 2.44c-.226.402-.845.283-.899-.172l-.308-2.607-1.14 8.454c-.076.562-.917.536-.956-.03l-.935-13.667-.99 9.054c-.06.54-.853.568-.95.033l-1.048-5.756-.484 1.895a.479.479 0 0 1-.466.356H6.48c-.265 0-.48-.21-.48-.47s.215-.47.48-.47h4.36l.939-3.671c.126-.492.848-.467.94.032l.849 4.669L14.787 6.42c.063-.571.918-.555.957.018l.981 14.34 1.014-7.524c.074-.549.889-.543.954.007l.582 4.915.784-1.396a.482.482 0 0 1 .421-.243h4.004a1.304 1.304 0 0 1 1.212-.805z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rpx);


/***/ }),

/***/ "uoNQ":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/start.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Start = {
  symbol: 'start',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm5.069-13.11c.014-1.433-.607-2.466-1.845-3.084-.462-.23-.956-.394-1.437-.584-.79-.312-1.63-.528-2.358-.952-1.144-.666-1.138-2.248-.062-3.026.764-.553 1.632-.566 2.512-.529 1.005.043 1.957.333 2.905.652.554.186.844.013.982-.569.074-.309.13-.623.188-.936.097-.523.077-.58-.426-.736a28.867 28.867 0 0 0-2.024-.566c-.358-.083-.468-.25-.405-.61.055-.313.07-.633.1-.95.068-.724-.01-.83-.704-.973-.413-.084-.558.018-.618.466-.055.404-.09.81-.135 1.215-.072.63-.098.641-.707.623-.267-.008-.347-.125-.318-.38.036-.304.061-.608.09-.913.074-.781-.016-.9-.768-1.023-.354-.058-.502.048-.548.427-.06.493-.139.988-.145 1.483-.007.457-.191.671-.598.825-1.527.578-2.556 1.668-2.873 3.349-.281 1.49-.058 2.887 1.218 3.831.569.42 1.253.69 1.911.957.74.301 1.53.477 2.264.792.893.383 1.17 1.153.861 2.105-.209.64-.625 1.088-1.191 1.393-.857.461-1.786.523-2.725.5-1.04-.025-2.041-.26-3.015-.644-.55-.216-.838-.036-.962.56-.072.348-.13.7-.214 1.046-.066.271.014.453.258.55.4.158.799.33 1.21.454.925.279.928.268.802 1.271-.1.809-.044.893.72 1.058.358.078.513-.014.575-.386.06-.363.095-.732.13-1.1.024-.256.133-.385.394-.398.58-.029.667.058.597.666l-.024.19c-.094.74-.018.854.688 1.022.41.098.563-.004.626-.45.054-.377.093-.758.12-1.14.023-.303.174-.44.451-.51.464-.116.93-.24 1.378-.41 1.91-.727 3.109-2.492 3.122-4.565z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#01aef0" r="16"/><path d="M21.069 18.89c-.013 2.074-1.211 3.84-3.122 4.565-.448.17-.914.295-1.378.411-.277.07-.428.207-.45.51-.028.382-.067.763-.12 1.14-.064.446-.217.548-.627.45-.706-.168-.782-.282-.688-1.023.008-.063.017-.126.024-.19.07-.607-.016-.694-.597-.665-.261.013-.37.142-.395.398-.034.368-.07.737-.13 1.1-.06.372-.216.464-.574.386-.764-.165-.82-.25-.72-1.058.126-1.003.123-.992-.803-1.271-.41-.124-.808-.296-1.209-.455-.244-.096-.324-.278-.258-.549.084-.345.142-.698.214-1.047.124-.595.412-.775.962-.559.974.383 1.974.619 3.015.644.939.023 1.868-.039 2.725-.5.566-.305.982-.752 1.191-1.393.31-.952.032-1.722-.86-2.105-.735-.315-1.524-.49-2.265-.792-.658-.268-1.342-.536-1.91-.957-1.277-.944-1.5-2.34-1.22-3.831.318-1.681 1.347-2.771 2.874-3.35.407-.153.591-.367.598-.824.006-.495.085-.99.145-1.483.046-.379.194-.485.548-.427.752.123.842.242.768 1.023-.029.305-.054.61-.09.913-.03.255.051.372.318.38.609.018.635.007.707-.623.046-.405.08-.811.135-1.215.06-.448.205-.55.618-.466.695.143.772.249.704.973-.03.317-.045.637-.1.95-.063.36.047.527.405.61.681.158 1.355.358 2.024.566.503.156.523.213.426.736-.057.313-.114.627-.188.936-.138.582-.428.755-.982.569-.948-.32-1.9-.609-2.905-.652-.88-.037-1.748-.024-2.512.529-1.076.778-1.082 2.36.062 3.026.728.424 1.569.64 2.358.952.481.19.975.354 1.437.584 1.238.618 1.859 1.651 1.845 3.085" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Start);


/***/ }),

/***/ "uykT":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bos.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bos = {
  symbol: 'bos',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-1.568-13.05h2.659c3.94 0 5.909-1.081 5.909-3.245v-5.46C23 8.083 21.03 7 17.09 7H10v5.016h2.66V8.918h4.726c1.97 0 2.955.492 2.955 1.475v5.164c0 .984-.985 1.476-2.955 1.476h-2.954v1.918zm5.909 1.181v1.476c0 .983-.985 1.475-2.955 1.475H12.66V15.41h4.727c.322 0 .618.013.887.04v-1.922a18.301 18.301 0 0 0-1.182-.036H10V25h7.09c3.94 0 5.91-1.082 5.91-3.246v-1.623h-2.66z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00A8D6"/><path fill="#FFF" d="M14.432 18.95v-1.917h2.954c1.97 0 2.955-.492 2.955-1.476v-5.164c0-.983-.985-1.475-2.955-1.475H12.66v3.098H10V7h7.09C21.03 7 23 8.082 23 10.246v5.459c0 2.164-1.97 3.246-5.91 3.246h-2.658zm5.909 1.181H23v1.623C23 23.918 21.03 25 17.09 25H10V13.492h7.09c.417 0 .81.012 1.183.036v1.921a9.18 9.18 0 0 0-.887-.04H12.66v7.673h4.727c1.97 0 2.955-.492 2.955-1.475V20.13z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bos);


/***/ }),

/***/ "v+1v":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ion.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ion = {
  symbol: 'ion',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M7.026 19.009c1.352 3.793 4.962 6.508 9.202 6.508a9.76 9.76 0 0 0 2.161-.241A2.707 2.707 0 0 0 20.91 27a2.712 2.712 0 0 0 2.705-2.718c0-.598-.192-1.15-.518-1.6A9.811 9.811 0 0 0 26 15.699a9.809 9.809 0 0 0-2.616-6.686 2.71 2.71 0 0 0 .326-1.294A2.712 2.712 0 0 0 21.005 5a2.7 2.7 0 0 0-2.252 1.21 9.742 9.742 0 0 0-2.525-.33c-4.677 0-8.586 3.301-9.546 7.711A2.712 2.712 0 0 0 4 16.31a2.712 2.712 0 0 0 3.026 2.7zm.49-.105a2.718 2.718 0 0 0 1.895-2.595c0-1.338-.963-2.45-2.23-2.676.935-4.154 4.63-7.255 9.047-7.255.788 0 1.553.098 2.283.284a2.72 2.72 0 0 0-.212 1.056 2.712 2.712 0 0 0 2.706 2.719c.845 0 1.6-.39 2.095-1a9.311 9.311 0 0 1 2.405 6.261 9.314 9.314 0 0 1-2.736 6.61 2.69 2.69 0 0 0-1.86-.745 2.712 2.712 0 0 0-2.658 3.234 9.267 9.267 0 0 1-2.023.222c-4.002 0-7.412-2.547-8.713-6.115zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.228-13.58a2.715 2.715 0 0 0 2.709-2.722c0-1.503-1.213-2.721-2.709-2.721s-2.708 1.218-2.708 2.721a2.715 2.715 0 0 0 2.708 2.722z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#57beea" r="16"/><path d="M7.026 19.009A2.712 2.712 0 0 1 4 16.309a2.712 2.712 0 0 1 2.682-2.718c.96-4.41 4.87-7.711 9.546-7.711.873 0 1.72.115 2.525.33A2.7 2.7 0 0 1 21.005 5a2.712 2.712 0 0 1 2.705 2.718c0 .469-.118.91-.326 1.294A9.809 9.809 0 0 1 26 15.698a9.811 9.811 0 0 1-2.904 6.985c.326.448.518 1.001.518 1.599A2.712 2.712 0 0 1 20.908 27a2.707 2.707 0 0 1-2.519-1.724 9.76 9.76 0 0 1-2.16.24c-4.241 0-7.851-2.714-9.203-6.507zm.49-.105c1.3 3.568 4.71 6.115 8.712 6.115.695 0 1.372-.077 2.023-.222a2.712 2.712 0 0 1 2.657-3.233c.72 0 1.376.283 1.86.744a9.314 9.314 0 0 0 2.737-6.61c0-2.41-.91-4.606-2.405-6.26-.496.61-1.25.999-2.095.999a2.712 2.712 0 0 1-2.706-2.719c0-.374.076-.731.212-1.056a9.253 9.253 0 0 0-2.283-.284c-4.416 0-8.112 3.101-9.047 7.255a2.715 2.715 0 0 1 2.23 2.676 2.718 2.718 0 0 1-1.896 2.595zm8.712-.484a2.715 2.715 0 0 1-2.708-2.722c0-1.503 1.212-2.721 2.708-2.721s2.709 1.218 2.709 2.721a2.715 2.715 0 0 1-2.709 2.722z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ion);


/***/ }),

/***/ "vEHE":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/beam.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Beam = {
  symbol: 'beam',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm11.16-19.34v-2.2L20 14.63l-4.42-7.62v5l2.25 3.9-.91.54-1.34-2.36-1.44 2.56-1-.41 2.44-4.23v-5l-4.84 8.24L4 12.46v2.55l6 1.48-3.8 6.52h9.38v-2.69h-4.79l1.79-3.14 1.08.27-1.08 1.9h6l-.9-1.59 1.19-.09 1.53 2.65h-4.82v2.69H25l-3.24-5.53 5.44-.4v-2.21l-6.12 1.51 6.11-1.57v-2l-6.63 2.69 6.6-2.84zm-8.7 4.35l-1.08.27 1.06-.27h.02zm-.34-.6l-1 .4 1-.41v.01z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#0B76FF"/><path d="M27.16 12.66v-2.2L20 14.63l-4.42-7.62v5l2.25 3.9-.91.54-1.34-2.36-1.44 2.56-1-.41 2.44-4.23v-5l-4.84 8.24L4 12.46v2.55l6 1.48-3.8 6.52h9.38v-2.69h-4.79l1.79-3.14 1.08.27-1.08 1.9h6l-.9-1.59 1.19-.09 1.53 2.65h-4.82v2.69H25l-3.24-5.53 5.44-.4v-2.21l-6.12 1.51 6.11-1.57v-2l-6.63 2.69 6.6-2.84zm-8.7 4.35l-1.08.27 1.06-.27h.02zm-.34-.6l-1 .4 1-.41v.01z" fill="#FFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Beam);


/***/ }),

/***/ "vITG":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/exmo.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Exmo = {
  symbol: 'exmo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm3.7-18.945L19.171 12l-1.1.5-2.885 7.797 1.1-.5.526 1.055.018-.047 2.868-7.75zm7.18.183l.064-.183L26.419 12l-1.1.5-2.867 7.76-.067.182 1.1-.5.527 1.058 2.868-7.762zm-6.14 6.712l1.689-4.563-1.103.5-.524-1.057-1.694 4.562.525 1.058 1.107-.5zm-9.137-4.5H6.558l.86.8-.86.813h5.04l.856-.813-.851-.8zM5.86 18.833L5 19.64l.86.805h8.155l-.857-.805.857-.808H5.86zm2.501-6.768l-.86.808.86.805h8.15l-.854-.806.855-.807h-8.15z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#347FFB" fill-rule="nonzero"/><path fill="#FFF" d="M19.7 13.055l-2.869 7.75-.018.047-.526-1.055-1.1.5 2.885-7.797 1.1-.5.527 1.055zm7.18.183L24.012 21l-.527-1.058-1.1.5.067-.182 2.867-7.76 1.1-.5.525 1.055-.064.183zm-6.14 6.712l1.689-4.563-1.103.5-.524-1.057-1.694 4.562.525 1.058 1.107-.5zm-9.137-4.5H6.558l.86.8-.86.813h5.04l.856-.813-.851-.8zM5.86 18.833h8.155l-.857.807.857.805H5.86L5 19.64l.86-.808zm2.501-6.768h8.15l-.854.808.855.805h-8.15l-.86-.806.86-.807z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Exmo);


/***/ }),

/***/ "vTE9":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wabi.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wabi = {
  symbol: 'wabi',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm5.89-24.532c.056-.217.056-.3-.007-.377-.107-.127-.208-.121-.334.02-.082.089-.107.242-.107.6 0 .784-.1.874-.435.401-.12-.172-.252-.287-.328-.287-.063 0-.12.013-.12.026a.76.76 0 0 1-.037.121c-.019.051.05.185.164.306.309.339.397.562.428 1.08.026.465.02.503-.227.995-.327.664-.542 1.2-.642 1.608-.082.358-.101.377-.284.25-.24-.167-.756-.307-1.273-.345-.29-.02-.523-.026-.523-.007 0 .064.132.792.17.9.025.109.082.115.542.077.983-.077 1.45-.173 1.588-.326.17-.191.429-.683.7-1.353.315-.772.58-1.296.73-1.462.077-.083.398-.249.726-.376.46-.179.586-.256.586-.351 0-.205-.19-.217-.53-.039-.27.147-.327.16-.403.083-.126-.127-.031-.274.441-.683.568-.491.612-.587.334-.695-.208-.077-.359.012-.53.312-.176.326-.478.613-.598.562-.12-.05-.139-.606-.031-1.04zm-5.011 2.674c-.044-.498-.12-.644-.385-.76-.227-.095-.53-.102-.945-.025-1.002.179-1.305.275-1.98.62-.661.338-.737.395-.869.663-.24.46-.22.626.07.792.44.248.541.389.541.74 0 .172-.031.37-.075.434-.145.236.598 1.551 1.304 2.285.227.243.429.498.448.58.044.167-.006.843-.1 1.29a3.15 3.15 0 0 0 .49 2.406c.65.97 1.482 1.283 2.289.856.403-.217.598-.466.775-1.015.347-1.066.372-2.126.076-3.038-.196-.6-.24-.875-.448-2.815-.195-1.787-.246-2.062-.429-2.138-.075-.026-.233-.09-.346-.134-.284-.103-.372-.268-.416-.74zm-5.963 2.381c0-.326-.113-.677-.246-.785-.113-.09-.277-.109-.34-.038-.094.095-.031.427.145.785.202.402.233.632.114.753-.17.172-.353.096-1.003-.44-.195-.16-.435-.115-.435.076 0 .147.284.338.725.479.177.057.366.16.429.236.107.128.113.14.006.217-.07.051-.202.064-.378.038a1.387 1.387 0 0 0-.435.007c-.132.032-.164.076-.145.217.019.16.044.172.271.166a3.48 3.48 0 0 0 .549-.058l.296-.05.485.452c.265.25.58.594.693.773.29.434.63.772.782.772.132 0 .485-.434.8-.99.284-.49.316-.644.246-1.148l-.07-.447-.44.747c-.347.593-.473.746-.58.753-.177 0-.58-.421-.775-.804-.196-.396-.196-.99-.007-1.303.139-.23.177-.6.07-.67-.126-.083-.31.109-.41.428-.063.185-.132.364-.164.396-.076.083-.183-.237-.183-.562zm11.528 5.75c.391-.414.643-.81.624-.97-.012-.101-.07-.127-.27-.14-.303-.006-.347 0-1.072.25-1.4.478-2.603 1.244-3.02 1.927-.113.179-.113.185 0 .14.89-.37 2.118-.81 2.15-.778.057.05-1.16 2.317-1.317 2.45-.196.173-.221.281-.082.396.069.064.252.058.882-.025 1.33-.173 1.532-.147 2.641.37.548.255.7.28.756.128.05-.134-.044-.25-.296-.351-.555-.217-.504-.44.107-.44.34 0 1.28.171 1.557.286.063.026.17-.025.284-.12.176-.16.182-.167.063-.263-.095-.07-.303-.095-.864-.095-.624 0-.756-.02-.882-.122l-.145-.12.208-.129c.113-.07.479-.191.813-.268 1.21-.268 1.519-.414 1.393-.65-.151-.288-.41-.262-1.355.165-.555.25-1.078.377-1.135.281-.1-.166.076-.39.643-.817.328-.249.618-.498.637-.549.044-.127-.158-.344-.328-.344-.202 0-.429.204-.763.676-.17.243-.397.479-.554.568-.271.16-.505.204-.568.109-.012-.026.095-.262.253-.524.123-.196.229-.403.315-.619.05-.191-.007-.338-.133-.338-.189 0-.397.293-.472.676-.045.205-.108.44-.152.517-.094.186-.611.734-.895.958-.227.172-1.222.613-1.273.562-.05-.051.07-.205 1.242-1.622.397-.478.85-1.008 1.008-1.174zM7.992 20.528a10.67 10.67 0 0 1-.448-.734c-.233-.408-.277-.447-.473-.466a.585.585 0 0 0-.346.077c-.114.083-.114.102-.032.261.05.096.29.345.536.55.674.561 1.103 1.397.744 1.448-.196.032-.555-.179-1.072-.619-.245-.217-.498-.39-.554-.39-.17 0-.347.128-.347.25 0 .153.082.217.555.408.502.201.967.488 1.374.849.372.351.327.428-.227.37-.303-.025-.441-.019-.473.039-.094.153.158.274.94.453.434.102.913.242 1.058.319.34.179.927.74 1.298 1.25.297.416.48.505.643.307.038-.05.108-.293.133-.536.025-.242.208-.919.403-1.5.372-1.136.416-1.455.259-1.972-.05-.166-.076-.313-.05-.326.024-.012.258.02.516.07.788.154 1.424.077 2.73-.325.598-.191.66-.268.358-.485-.283-.204-2.401-.51-3.542-.51-.693 0-.731.025-.907.574-.095.3-.108.619-.114 2.215-.006 1.02-.025 1.883-.057 1.908-.145.147-.435-.542-.554-1.315-.082-.568-.05-.99.132-1.57.158-.498.139-.76-.07-.823-.27-.09-.422.191-.44.823-.007.236-.05.472-.089.53-.075.102-.088.102-.246-.007-.245-.16-.296-.344-.365-1.346-.038-.55-.088-.913-.132-.939-.114-.076-.391-.057-.473.026-.107.108-.095.364.044.893.151.581.22 1.137.139 1.137-.082 0-.618-.562-.851-.894zm9.038-10.96s-.07.556.063.869c0 0 .17.28.397.325 0 0 .101-.549-.07-.989 0 .006-.068-.255-.39-.204zm-4.544 1.82c-.22.236-.057.447-.057.44.252.396.756.632.756.632.095-.217-.031-.517-.031-.517-.183-.287-.668-.555-.668-.555z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#399b32" r="16"/><path d="M21.89 7.468c-.108.434-.089.99.031 1.04.12.051.422-.236.599-.562.17-.3.321-.389.53-.312.277.108.233.204-.335.695-.472.409-.567.556-.44.683.075.077.131.064.402-.083.34-.178.53-.166.53.039 0 .095-.126.172-.586.35-.328.128-.65.294-.725.377-.151.166-.416.69-.731 1.462-.271.67-.53 1.162-.7 1.353-.139.153-.605.25-1.588.326-.46.038-.517.032-.542-.077a9.679 9.679 0 0 1-.17-.9c0-.019.233-.013.523.007.517.038 1.033.178 1.273.344.183.128.202.109.284-.249.1-.408.315-.944.642-1.608.246-.492.253-.53.227-.996-.031-.517-.12-.74-.428-1.079-.114-.12-.183-.255-.164-.306a.76.76 0 0 0 .038-.121c0-.013.056-.026.12-.026.075 0 .207.115.327.287.334.473.435.383.435-.402 0-.357.025-.51.107-.6.126-.14.227-.146.334-.019.063.077.063.16.007.377zm-5.011 2.674c.044.473.132.638.416.74.113.045.27.11.346.135.183.076.234.35.429 2.138.208 1.94.252 2.215.448 2.815.296.912.27 1.972-.076 3.038-.177.549-.372.798-.775 1.015-.807.427-1.64.115-2.288-.856-.482-.7-.66-1.57-.492-2.406.095-.447.145-1.123.1-1.29-.018-.082-.22-.337-.447-.58-.706-.734-1.45-2.049-1.304-2.285.044-.064.075-.262.075-.434 0-.351-.1-.492-.542-.74-.29-.166-.309-.332-.069-.792.132-.268.208-.325.87-.664.674-.344.977-.44 1.979-.619.416-.077.718-.07.945.026.265.115.34.261.385.76zm-5.963 2.381c0 .325.107.645.183.562.032-.032.1-.211.164-.396.1-.32.284-.51.41-.428.107.07.069.44-.07.67-.189.313-.189.907.007 1.303.195.383.598.804.775.804.107-.007.233-.16.58-.753l.44-.747.07.447c.07.504.038.657-.246 1.149-.315.555-.668.989-.8.989-.151 0-.492-.338-.782-.772-.113-.18-.428-.524-.693-.773l-.485-.453-.296.051a3.48 3.48 0 0 1-.549.058c-.227.006-.252-.007-.27-.166-.02-.14.012-.185.144-.217a1.38 1.38 0 0 1 .435-.007c.176.026.309.013.378-.038.107-.077.101-.09-.006-.217-.063-.077-.252-.179-.429-.236-.44-.14-.725-.332-.725-.479 0-.191.24-.236.435-.077.65.537.832.613 1.003.44.12-.12.088-.35-.114-.752-.176-.358-.24-.69-.145-.785.063-.07.227-.051.34.038.133.108.246.46.246.785zm11.528 5.75c-.157.167-.611.697-1.008 1.175-1.173 1.417-1.292 1.57-1.242 1.622.05.05 1.046-.39 1.273-.562.284-.224.8-.772.895-.958.044-.076.107-.312.152-.517.075-.383.283-.676.472-.676.126 0 .183.147.133.338a3.823 3.823 0 0 1-.315.62c-.158.261-.265.497-.253.523.063.095.297.05.568-.109.157-.09.384-.325.554-.568.334-.472.561-.676.763-.676.17 0 .372.217.328.344-.02.051-.31.3-.637.55-.567.427-.744.65-.643.816.057.096.58-.032 1.135-.28.945-.428 1.204-.454 1.355-.167.126.237-.183.383-1.393.651-.334.077-.7.198-.813.268l-.208.128.145.121c.126.103.258.122.882.122.561 0 .77.025.864.095.12.096.113.103-.063.262-.114.096-.22.147-.284.121-.277-.115-1.216-.287-1.557-.287-.611 0-.662.224-.107.44.252.103.347.218.296.352-.056.153-.208.127-.756-.128-1.11-.517-1.311-.543-2.64-.37-.631.083-.814.09-.883.025-.139-.115-.114-.223.082-.395.157-.134 1.374-2.4 1.317-2.451-.032-.032-1.26.408-2.15.778-.113.045-.113.039 0-.14.417-.683 1.62-1.45 3.02-1.928.725-.249.769-.255 1.071-.249.202.013.259.039.271.14.02.16-.233.556-.624.97zM7.992 20.528c.233.332.769.894.85.894.083 0 .013-.556-.138-1.137-.139-.53-.151-.785-.044-.893.082-.083.36-.102.473-.026.044.026.094.39.132.939.07 1.002.12 1.187.365 1.346.158.109.17.109.246.007.038-.058.082-.294.089-.53.018-.632.17-.913.44-.823.209.063.228.325.07.823-.183.58-.214 1.002-.132 1.57.12.773.41 1.462.554 1.315.032-.025.05-.887.057-1.908.006-1.596.019-1.915.114-2.215.176-.55.214-.575.907-.575 1.141 0 3.259.307 3.542.51.303.218.24.295-.359.486-1.305.402-1.941.479-2.729.326-.258-.052-.492-.083-.517-.07-.025.012 0 .159.05.325.158.517.114.836-.258 1.972-.195.581-.378 1.258-.403 1.5-.025.243-.095.485-.133.536-.164.198-.346.109-.643-.306-.371-.51-.958-1.072-1.298-1.251-.145-.077-.624-.217-1.059-.32-.781-.178-1.033-.3-.939-.452.032-.058.17-.064.473-.039.554.058.599-.019.227-.37a4.705 4.705 0 0 0-1.374-.849c-.473-.191-.555-.255-.555-.408 0-.122.176-.25.347-.25.056 0 .309.173.554.39.517.44.876.651 1.072.62.36-.052-.07-.888-.744-1.45-.246-.204-.485-.453-.536-.549-.082-.16-.082-.178.032-.261a.585.585 0 0 1 .346-.077c.196.02.24.058.473.466.139.249.34.58.448.734zm9.038-10.96c.322-.05.39.211.39.205.171.44.07.99.07.99-.227-.045-.397-.326-.397-.326-.132-.313-.063-.868-.063-.868zm-4.544 1.82s.485.268.668.555c0 0 .126.3.031.517 0 0-.504-.236-.756-.632 0 .007-.164-.204.057-.44z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wabi);


/***/ }),

/***/ "vZ2o":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/aeon.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Aeon = {
  symbol: 'aeon',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm10.965-17.29c-.328-2.964-5.51-4.798-11.57-4.095-6.06.702-10.706 3.675-10.378 6.64.329 2.964 5.507 4.797 11.57 4.095 6.065-.703 10.707-3.676 10.378-6.64zm-6.34 1.484c-.614.438-1.509.654-2.684.659l-1.141.004-.035.163a.434.434 0 0 0-.017.11c-.005.023-.005.045-.005.063 0 .252.117.437.346.56.23.129.57.19 1.016.19.423 0 .83-.048 1.214-.136.38-.089.748-.221 1.098-.398l-.29 1.555c-.436.106-.855.19-1.27.243a8.807 8.807 0 0 1-1.206.089c-.553 0-1.011-.067-1.379-.208-.38-.146-.804-.464-1.015-.919a4.641 4.641 0 0 1-1.34.892 3.684 3.684 0 0 1-1.453.296c-.63.005-1.128-.15-1.482-.455-.359-.304-.536-.729-.54-1.263-.005-.822.302-1.445.912-1.878.613-.437 1.508-.653 2.684-.658l1.14-.004.035-.164a.434.434 0 0 0 .018-.11c.004-.022.004-.044.004-.062 0-.252-.117-.437-.346-.561-.229-.128-.57-.19-1.016-.19-.423 0-.83.049-1.214.137-.38.088-.748.22-1.098.398l.29-1.555c.436-.106.855-.19 1.27-.243a8.807 8.807 0 0 1 1.206-.089c.554 0 1.012.067 1.38.208.38.146.803.464 1.015.919a4.641 4.641 0 0 1 1.34-.893 3.684 3.684 0 0 1 1.452-.296c.631-.004 1.128.15 1.482.455.36.305.536.73.54 1.264.005.817-.297 1.444-.911 1.877zm-6.626.128c-.497 0-.873.084-1.133.243-.25.155-.376.39-.376.698 0 .23.078.416.225.548.151.133.363.199.627.199.41 0 .752-.128 1.024-.38.273-.256.458-.614.55-1.073l.042-.235h-.96zm5.264-2.169c-.151-.132-.363-.198-.626-.198-.411 0-.753.128-1.025.38-.272.256-.458.614-.549 1.073l-.043.234.96-.004c.497 0 .873-.084 1.132-.243.25-.155.376-.389.376-.698 0-.23-.073-.411-.225-.544zm-2.74 7.55c-.877.102-1.746.15-2.589.15-2.006 0-3.881-.282-5.442-.835a8.81 8.81 0 0 1-1.84-.883c-.213 1.118-.07 2.103.479 2.836 1.577 2.107 5.99 1.436 10.356-1.4-.32.048-.64.092-.964.132zm-1.024-11.397c2.96-.345 5.813-.102 8.03.684a8.81 8.81 0 0 1 1.842.884c.211-1.118.069-2.103-.48-2.836-1.578-2.107-5.99-1.436-10.356 1.4.32-.053.644-.097.964-.132zm-3.22 13.96a9.094 9.094 0 0 1-1.76.242c.446 1.18 1.142 2.006 2.062 2.315 2.222.747 5.096-1.7 7.132-5.752-.48.133-.977.252-1.478.354-1.989 1.405-4.063 2.399-5.956 2.84zm7.598-16.554a9.044 9.044 0 0 1 1.76-.234c-.442-1.18-1.133-2.01-2.054-2.323-2.217-.756-5.104 1.678-7.153 5.716.48-.132.977-.247 1.482-.344 1.989-1.4 4.068-2.382 5.965-2.815z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#134451"/><g fill="#FFF"><path d="M13.999 16.322c-.497 0-.873.084-1.133.243-.25.155-.376.39-.376.698 0 .23.078.416.225.548.151.133.363.199.627.199.41 0 .752-.128 1.024-.38.273-.256.458-.614.55-1.073l.042-.235h-.96zm5.264-2.169c-.151-.132-.363-.198-.626-.198-.411 0-.753.128-1.025.38-.272.256-.458.614-.549 1.073l-.043.234.96-.004c.497 0 .873-.084 1.132-.243.25-.155.376-.389.376-.698 0-.23-.073-.411-.225-.544z"/><path d="M26.965 14.71c-.328-2.964-5.51-4.798-11.57-4.095-6.06.702-10.706 3.675-10.378 6.64.329 2.964 5.507 4.797 11.57 4.095 6.065-.703 10.707-3.676 10.378-6.64zm-6.34 1.484c-.614.438-1.509.654-2.684.659l-1.141.004-.035.163a.434.434 0 0 0-.017.11c-.005.023-.005.045-.005.063 0 .252.117.437.346.56.23.129.57.19 1.016.19.423 0 .83-.048 1.214-.136.38-.089.748-.221 1.098-.398l-.29 1.555c-.436.106-.855.19-1.27.243a8.807 8.807 0 0 1-1.206.089c-.553 0-1.011-.067-1.379-.208-.38-.146-.804-.464-1.015-.919a4.641 4.641 0 0 1-1.34.892 3.684 3.684 0 0 1-1.453.296c-.63.005-1.128-.15-1.482-.455-.359-.304-.536-.729-.54-1.263-.005-.822.302-1.445.912-1.878.613-.437 1.508-.653 2.684-.658l1.14-.004.035-.164a.434.434 0 0 0 .018-.11c.004-.022.004-.044.004-.062 0-.252-.117-.437-.346-.561-.229-.128-.57-.19-1.016-.19-.423 0-.83.049-1.214.137-.38.088-.748.22-1.098.398l.29-1.555c.436-.106.855-.19 1.27-.243a8.807 8.807 0 0 1 1.206-.089c.554 0 1.012.067 1.38.208.38.146.803.464 1.015.919a4.641 4.641 0 0 1 1.34-.893 3.684 3.684 0 0 1 1.452-.296c.631-.004 1.128.15 1.482.455.36.305.536.73.54 1.264.005.817-.297 1.444-.911 1.877z"/><path d="M16.523 21.703c-.877.102-1.746.15-2.589.15-2.006 0-3.881-.282-5.442-.835a8.81 8.81 0 0 1-1.84-.883c-.213 1.118-.07 2.103.479 2.836 1.577 2.107 5.99 1.436 10.356-1.4-.32.048-.64.092-.964.132zm-1.024-11.397c2.96-.345 5.813-.102 8.03.684a8.81 8.81 0 0 1 1.842.884c.211-1.118.069-2.103-.48-2.836-1.578-2.107-5.99-1.436-10.356 1.4.32-.053.644-.097.964-.132z"/><path d="M12.279 24.265a9.094 9.094 0 0 1-1.76.243c.446 1.18 1.142 2.006 2.062 2.315 2.222.747 5.096-1.7 7.132-5.752-.48.133-.977.252-1.478.354-1.989 1.405-4.063 2.399-5.956 2.84zm7.598-16.553a9.044 9.044 0 0 1 1.76-.234c-.442-1.18-1.133-2.01-2.054-2.323-2.217-.756-5.104 1.678-7.153 5.716.48-.132.977-.247 1.482-.344 1.989-1.4 4.068-2.382 5.965-2.815z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Aeon);


/***/ }),

/***/ "vcxU":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zcl.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zcl = {
  symbol: 'zcl',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.008-5c6.172-.008 10.996-4.996 11.008-10.998C27.008 9.934 22.08 5.004 16.015 5 9.932 4.996 5 9.915 5 15.986 5 22.07 9.917 26.996 15.992 27zm-4.483-5.97c3.719.002 7.436 0 11.151-.008-1.933 2.698-6.056 4.313-9.988 2.558-4.06-1.81-5.68-6.328-4.534-9.93h.136c2.26-.002 4.522 0 6.784.003a.198.198 0 0 0 .202-.116c.434-.777.876-1.55 1.313-2.326.031-.05.059-.104.097-.178H9.49c-.003-.012-.011-.02-.015-.031.159-.187.31-.38.477-.56 1.27-1.374 2.82-2.243 4.66-2.57 1.85-.325 3.612-.054 5.286.8a7.657 7.657 0 0 1 1.84 1.297c1.217 1.165 2.042 2.558 2.418 4.208a8.318 8.318 0 0 1-.105 4.127c-.019.074-.046.105-.131.105-2.516-.003-5.033-.004-7.552-.004-.027 0-.054 0-.105-.004 1.395-2.457 2.779-4.9 4.173-7.36h-.143c-1.003 0-2.01 0-3.014-.004a.146.146 0 0 0-.151.089c-.86 1.52-1.72 3.04-2.585 4.558-.987 1.732-1.972 3.466-2.956 5.202-.023.038-.047.085-.078.143zm12.643 1.898l-1.441-1.468c2.642-3.269 2.534-7.822-.027-10.9.488-.494.98-.987 1.484-1.495 1.615 1.96 2.48 4.177 2.541 6.7.078 3.063-1.162 5.614-2.557 7.163z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#c87035" r="16"/><path d="M15.992 27C9.917 26.996 5 22.07 5 15.986 5 9.915 9.932 4.996 16.015 5 22.08 5.004 27.008 9.934 27 16.002c-.012 6.002-4.836 10.99-11.008 10.998zm-4.483-5.97c.031-.059.055-.106.078-.144.984-1.736 1.97-3.47 2.956-5.202.864-1.518 1.726-3.038 2.585-4.558a.146.146 0 0 1 .15-.09c1.004.005 2.012.005 3.015.005h.143c-1.394 2.46-2.778 4.903-4.173 7.36.05.004.078.004.105.004 2.519 0 5.036.001 7.552.004.085 0 .112-.031.131-.105a8.318 8.318 0 0 0 .105-4.127c-.376-1.65-1.201-3.043-2.418-4.208a7.657 7.657 0 0 0-1.84-1.297c-1.674-.854-3.437-1.125-5.285-.8-1.84.327-3.39 1.196-4.661 2.57-.167.18-.318.373-.477.56.004.011.012.02.016.03h7.18c-.04.075-.067.129-.098.18-.437.776-.88 1.548-1.313 2.325a.198.198 0 0 1-.202.116c-2.262-.004-4.524-.005-6.784-.004h-.136c-1.146 3.603.473 8.122 4.534 9.93 3.932 1.756 8.055.14 9.988-2.557-3.715.007-7.432.01-11.15.007zm12.643 1.898c1.395-1.55 2.635-4.1 2.557-7.163-.062-2.523-.926-4.74-2.541-6.7-.504.508-.996 1.001-1.484 1.494 2.56 3.079 2.67 7.632.027 10.901z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zcl);


/***/ }),

/***/ "wRYI":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xcp.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xcp = {
  symbol: 'xcp',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm7.48-22h-4.044a.616.616 0 0 0-.44.186l-7.375 7.529a.616.616 0 0 1-.44.186H9.829a.616.616 0 0 1-.44-.186l-.956-.974a.639.639 0 0 1-.183-.447v-1.377a.64.64 0 0 1 .183-.448l.956-.974a.617.617 0 0 1 .44-.186h1.352c.165 0 .323.067.44.186l.587.598a.614.614 0 0 0 .88 0l1.419-1.444a.642.642 0 0 0 0-.896l-1.54-1.567a.617.617 0 0 0-.44-.186H8.483a.617.617 0 0 0-.44.186l-2.86 2.912a.64.64 0 0 0-.182.448v4.118c0 .168.066.33.182.448l2.86 2.913a.617.617 0 0 0 .44.185h4.045a.617.617 0 0 0 .44-.186l7.375-7.528a.617.617 0 0 1 .44-.187h1.352c.165 0 .323.067.44.186l.956.974a.64.64 0 0 1 .183.448v1.377a.64.64 0 0 1-.183.447l-.956.974a.616.616 0 0 1-.44.186h-1.352a.616.616 0 0 1-.44-.186l-.592-.603a.614.614 0 0 0-.875-.005l-1.75 1.742a.64.64 0 0 0-.187.453v4.04c0 .35.279.634.622.634h2.04a.628.628 0 0 0 .623-.633v-1.5c0-.35.279-.633.622-.633h2.635a.617.617 0 0 0 .44-.185l2.86-2.913a.64.64 0 0 0 .183-.448v-4.118a.64.64 0 0 0-.182-.448l-2.86-2.912a.617.617 0 0 0-.44-.186z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#ED1650"/><path fill="#FFF" d="M23.48 10h-4.044a.616.616 0 0 0-.44.186l-7.375 7.529a.616.616 0 0 1-.44.186H9.829a.616.616 0 0 1-.44-.186l-.956-.974a.639.639 0 0 1-.183-.447v-1.377a.64.64 0 0 1 .183-.448l.956-.974a.617.617 0 0 1 .44-.186h1.352c.165 0 .323.067.44.186l.587.598a.614.614 0 0 0 .88 0l1.419-1.444a.642.642 0 0 0 0-.896l-1.54-1.567a.617.617 0 0 0-.44-.186H8.483a.617.617 0 0 0-.44.186l-2.86 2.912a.64.64 0 0 0-.182.448v4.118c0 .168.066.33.182.448l2.86 2.913a.617.617 0 0 0 .44.185h4.045a.617.617 0 0 0 .44-.186l7.375-7.528a.617.617 0 0 1 .44-.187h1.352c.165 0 .323.067.44.186l.956.974a.64.64 0 0 1 .183.448v1.377a.64.64 0 0 1-.183.447l-.956.974a.616.616 0 0 1-.44.186h-1.352a.616.616 0 0 1-.44-.186l-.592-.603a.614.614 0 0 0-.875-.005l-1.75 1.742a.64.64 0 0 0-.187.453v4.04c0 .35.279.634.622.634h2.04a.628.628 0 0 0 .623-.633v-1.5c0-.35.279-.633.622-.633h2.635a.617.617 0 0 0 .44-.185l2.86-2.913a.64.64 0 0 0 .183-.448v-4.118a.64.64 0 0 0-.182-.448l-2.86-2.912a.617.617 0 0 0-.44-.186"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xcp);


/***/ }),

/***/ "wTt6":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tnb.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tnb = {
  symbol: 'tnb',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.402-20.143l.075-.357H8.34l-2.178 9h2.396l1.646-7.286h2.932L11.389 20.5h2.179l1.713-7.286h.03l.26-1.228.03-.129zm4.141-.357l-2.178 8.929h4.567a5.35 5.35 0 0 0 1.621-.243c.867-.275 1.922-.852 2.09-2.043h.653l.218-.857h-.8s.073-1.286-1.596-1.5c0 0 1.452-.429 1.67-1.215h.726l.29-.857h-.799s.29-2.071-2.831-2.214zM7.323 13.214L7.76 11.5H5.436L5 13.214zm9.948 6.286l.798-3.643-1.887-4.214-.8 3.428zm5.554-4.429h-1.851l.435-1.928h1.416c.26 0 .51.101.693.282s.287.426.287.682c0 .256-.103.501-.287.682s-.433.283-.693.282zm-.489 3.715H20.11l.524-2.215h1.702c.654 0 1.179.496 1.179 1.108 0 .611-.528 1.107-1.179 1.107z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#ffc04e" r="16"/><path d="M15.598 11.857h.003l-.03.13-.26 1.227h-.03L13.568 20.5h-2.179l1.747-7.286h-2.932L8.558 20.5H6.162l2.178-9h7.333zm4.141-.357h3.63c3.123.143 2.832 2.214 2.832 2.214H27l-.29.857h-.727c-.217.786-1.67 1.215-1.67 1.215 1.67.214 1.598 1.5 1.598 1.5h.799l-.218.857h-.654c-.167 1.19-1.222 1.768-2.089 2.043a5.35 5.35 0 0 1-1.62.243H17.56zM7.323 13.214H5l.436-1.714h2.323zm9.948 6.286l-1.888-4.429.799-3.428 1.887 4.214zm5.554-4.429c.26 0 .51-.1.693-.282s.287-.426.287-.682c0-.256-.103-.501-.287-.682s-.433-.282-.693-.282H21.41l-.435 1.928zm-.489 3.715c.651 0 1.179-.496 1.179-1.107 0-.612-.525-1.108-1.179-1.108h-1.702l-.524 2.215z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tnb);


/***/ }),

/***/ "waGi":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/tpay.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Tpay = {
  symbol: 'tpay',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.005-4.772c-6.198 0-11.223-5.025-11.223-11.223S9.797 4.782 15.995 4.782s11.223 5.025 11.223 11.223-5.025 11.223-11.223 11.223zm0-23.161c-6.583 0-11.938 5.355-11.938 11.938s5.355 11.938 11.938 11.938 11.938-5.355 11.938-11.938S22.578 4.067 15.995 4.067zm4.204 16.208l-.623 2.699-.15.653h-.67l-3.445-.002h-.014c-1.381-.023-2.465-.39-3.176-1.038.614 1.083 1.918 1.71 3.738 1.74h.014l3.444.002h.67l.151-.653.623-2.699-.486-1.031-.076.329zM19.116 8.704l-.492-1.023-.07.32-.467 2.127h.716l.313-1.424zm2.487 2.46l-.62 2.626-.154.648h-3.733l-.948 4.328c-.02.124-.032.25-.032.32 0 .061.007.1.013.119a.6.6 0 0 0 .223.038h.408l.898-4.102h3.733l.153-.649.62-2.625-.482-1.036-.08.334zm-9.262 3.274H9.74l.896.703h1.552l.153-.703zm4.093 5.648h-.095c-.724-.019-1.066-.396-1.066-1 0-.144.024-.335.048-.478l1.098-5.012h3.744l.62-2.625h-3.744l.692-3.15h-3.054l-.693 3.15H10.67l-.596 2.625h3.314l-1.29 5.895c-.07.286-.095.62-.095.787 0 1.682 1.327 2.472 3.308 2.505l3.444.001.623-2.698h-2.944z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#3058A6" fill-rule="nonzero"/><g fill="#FFF"><path d="M15.995 27.228c-6.198 0-11.223-5.025-11.223-11.223S9.797 4.782 15.995 4.782s11.223 5.025 11.223 11.223-5.025 11.223-11.223 11.223m0-23.161c-6.583 0-11.938 5.355-11.938 11.938s5.355 11.938 11.938 11.938 11.938-5.355 11.938-11.938S22.578 4.067 15.995 4.067" fill-rule="nonzero"/><path d="M20.199 20.275l-.623 2.699-.15.653h-.67l-3.445-.002h-.014c-1.381-.023-2.465-.39-3.176-1.038.614 1.083 1.918 1.71 3.738 1.74h.014l3.444.002h.67l.151-.653.623-2.699-.486-1.031-.076.329zM19.116 8.704l-.492-1.023-.07.32-.467 2.127h.716zm2.487 2.461l-.62 2.625-.154.648h-3.733l-.948 4.328c-.02.124-.032.25-.032.32 0 .061.007.1.013.119a.6.6 0 0 0 .223.038h.408l.898-4.102h3.733l.153-.649.62-2.625-.482-1.036-.08.334zm-9.262 3.273H9.74l.896.703h1.552z"/><path d="M16.434 20.086h-.095c-.724-.019-1.066-.396-1.066-1 0-.144.024-.335.048-.478l1.098-5.012h3.744l.62-2.625h-3.744l.692-3.15h-3.054l-.693 3.15H10.67l-.596 2.625h3.314l-1.29 5.895c-.07.286-.095.62-.095.787 0 1.682 1.327 2.472 3.308 2.505l3.444.001.623-2.698h-2.944z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Tpay);


/***/ }),

/***/ "wnAX":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/ppt.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Ppt = {
  symbol: 'ppt',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.049-23.684c1.316 0 2.382-.733 2.382-1.638 0-.905-1.066-1.638-2.382-1.638s-2.383.733-2.383 1.638c0 .905 1.067 1.638 2.383 1.638zM14.816 26.6c0 .196.173.375.37.375h1.667c.196 0 .347-.179.347-.375v-7.08h2.928c.196 0 .336-.168.336-.364V9.448c0-.197-.139-.344-.336-.344h-5.312v17.497zm-.896-7.081V9.104h-2.01c-.197 0-.374.147-.374.344v9.708c0 .196.177.364.373.364h2.011z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#152743"/><path fill="#FFF" d="M16.049 8.316c-1.316 0-2.383-.733-2.383-1.638 0-.905 1.067-1.638 2.383-1.638s2.382.733 2.382 1.638c0 .905-1.066 1.638-2.382 1.638zM14.816 26.6V9.104h5.312c.197 0 .336.147.336.344v9.708c0 .196-.14.364-.336.364H17.2v7.08c0 .197-.15.376-.347.376h-1.668a.384.384 0 0 1-.369-.375zm-.896-7.081h-2.01a.378.378 0 0 1-.374-.364V9.448c0-.197.177-.344.373-.344h2.011V19.52z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Ppt);


/***/ }),

/***/ "wowO":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xmo.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xmo = {
  symbol: 'xmo',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm12-16a11.86 11.86 0 0 0-2.381-7.153l-1.96 1.96A9.272 9.272 0 0 1 25.253 16c0 5.11-4.153 9.262-9.262 9.262-5.11 0-9.263-4.153-9.263-9.262a9.22 9.22 0 0 1 1.594-5.194l-1.96-1.96A11.969 11.969 0 0 0 4 16c0 6.628 5.372 12 12 12s12-5.372 12-12zm-5.363 0a6.65 6.65 0 0 0-.871-3.29L16 18.474l-5.766-5.766A6.644 6.644 0 0 0 9.363 16 6.644 6.644 0 0 0 16 22.637 6.644 6.644 0 0 0 22.637 16zm1.21-9.075A11.925 11.925 0 0 0 16 4c-3 0-5.747 1.097-7.847 2.925l1.866 1.866L16 14.762l7.847-7.837z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F60"/><g fill="#FFF"><path d="M28 16c0 6.628-5.372 12-12 12S4 22.628 4 16c0-2.681.881-5.156 2.362-7.153l1.96 1.96A9.222 9.222 0 0 0 6.728 16c0 5.11 4.153 9.262 9.263 9.262 5.109 0 9.262-4.153 9.262-9.262a9.272 9.272 0 0 0-1.594-5.194l1.96-1.96A11.86 11.86 0 0 1 28 16"/><path d="M22.637 16A6.644 6.644 0 0 1 16 22.637 6.644 6.644 0 0 1 9.362 16c0-1.153.3-2.287.872-3.29L16 18.474l5.766-5.766A6.644 6.644 0 0 1 22.638 16"/><path d="M23.847 6.925L16 14.762l-5.981-5.971-1.866-1.866A11.907 11.907 0 0 1 16 4c3 0 5.738 1.097 7.847 2.925"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xmo);


/***/ }),

/***/ "wsiB":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/rvn.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Rvn = {
  symbol: 'rvn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-6.5-5l5.649-4.188-2.031-12.6L9.5 27zm3.688-16.885l2.054 12.649 3.443.06-5.497-12.71zm.082-.096l5.532 12.805 1.669-11.782-7.201-1.023zm5.66 12.624l2.685-10.145-1.062-1.348-1.623 11.493zm1.517-11.71l-.7-3.08-6.326 2.081 7.026 1zm-7.06-1.107l6.36-2.082-2.054-.903-4.307 2.985zm-.106-.036l4.342-2.997-3.513 1.408-.829 1.589zm.83-1.66l3.29-1.337-2.894.096-.397 1.24zm.373-1.337l2.94-.096-2.007-.903-.933 1zm.992-1.059l3.21 1.432-1.81-2.118-1.4.686zm1.599-.602l1.715 2.046.374-1.131-2.09-.915zm1.785 2.082l.852.434-.467-1.589-.385 1.155zM16.923 5l2.232.918a.048.048 0 0 0 .054-.076L18.452 5h-1.53zm2.416.963l.467 1.733 2.642-.725a.072.072 0 0 0 0-.14l-3.11-.868z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#384182"/><path fill="#FFF" d="M9.5 27l3.618-16.789 2.03 12.6L9.5 27zm3.688-16.885l5.497 12.709-3.443-.06-2.054-12.65zm.082-.096l7.2 1.023-1.668 11.782-5.532-12.805zm5.66 12.624l1.623-11.493 1.062 1.348-2.685 10.145zm1.517-11.71l-7.026-.999 6.326-2.082.7 3.081zm-7.06-1.107l4.306-2.985 2.054.903-6.36 2.082zm-.106-.036l.83-1.589 3.512-1.408-4.342 2.997zm.83-1.66l.396-1.24 2.894-.097-3.29 1.336zm.373-1.337l.933-.999 2.008.903-2.941.096zm.992-1.059l1.4-.686 1.81 2.118-3.21-1.432zm1.599-.602l2.089.915-.374 1.131-1.715-2.046zm1.785 2.082l.385-1.155.467 1.589-.852-.434zM16.923 5h1.529l.757.842a.048.048 0 0 1-.054.076L16.923 5zm2.416.963l3.11.868a.072.072 0 0 1 0 .14l-2.643.725-.467-1.733z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Rvn);


/***/ }),

/***/ "xfXz":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/btg.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Btg = {
  symbol: 'btg',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-5c6.075 0 11-4.925 11-11S22.075 5 16 5 5 9.925 5 16s4.925 11 11 11zm-.988-20.26c.436-.03.875-.05 1.312-.065.005.897.003 1.795 0 2.692l-1.31-.002c0-.875 0-1.75-.002-2.625zm3.152 2.667h.001c-.002-.825-.002-1.65.004-2.474 2.43.609 4.594 2.197 5.867 4.358 1.441 2.397 1.683 5.458.662 8.06-1.076 2.82-3.605 5-6.535 5.715.002-.82.004-1.638-.002-2.457 1.392-.132 2.917-.254 4.043-1.18 1.137-.996 1.4-2.691 1.07-4.105-.254-1.079-1.271-1.763-2.298-2.002 1.716-.91 1.896-3.55.495-4.807-.918-.777-2.155-.953-3.307-1.108zm-8.746-.035c1.118-.982 2.384-1.809 3.806-2.27.007.772.005 1.544.005 2.316-1.271.002-2.542.015-3.81-.046zm-1.482 1.99c.37-.693.952-1.242 1.318-1.936.066.085.09.188.071.308.009.527.017 1.053.093 1.574.647.004 1.304-.046 1.945.081.388.074.622.477.599.85.021 2.314-.006 4.629.013 6.943-.02.405.081.894-.271 1.19-.603.203-1.254.094-1.878.107-.242.667-.409 1.362-.423 2.07 1.272.07 2.55.023 3.825.036 0 .77.002 1.542-.003 2.312-2.497-.803-4.63-2.667-5.705-5.063-1.245-2.673-1.077-5.931.416-8.473zm7.13.101c1.108.032 2.326-.136 3.324.456.855.486.908 1.859.08 2.4-.998.662-2.263.535-3.403.556v-3.412zm0 5.248h.001c1.362.037 2.853-.196 4.08.537.903.503 1.008 1.94.132 2.522-1.225.849-2.805.612-4.212.726V16.71zm-.051 5.925h1.365c0 .896.002 1.792-.002 2.688a37.374 37.374 0 0 1-1.368-.061c.003-.876.005-1.752.005-2.627z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#EBA809" fill-rule="nonzero"/><path fill="#FFF" d="M16 27C9.925 27 5 22.075 5 16S9.925 5 16 5s11 4.925 11 11-4.925 11-11 11zm-.988-20.26c.002.875.002 1.75.002 2.625l1.31.002c.003-.897.005-1.795 0-2.692-.437.015-.876.036-1.312.065zm3.152 2.667c1.152.155 2.39.331 3.307 1.108 1.401 1.257 1.22 3.896-.495 4.807 1.027.24 2.044.923 2.297 2.002.33 1.414.068 3.11-1.069 4.106-1.126.925-2.65 1.047-4.043 1.18.006.818.004 1.636.002 2.456 2.93-.715 5.46-2.895 6.535-5.715 1.02-2.602.78-5.663-.662-8.06-1.273-2.16-3.437-3.75-5.867-4.358-.006.825-.006 1.65-.004 2.474zm-8.746-.035c1.27.06 2.54.048 3.81.046 0-.772.003-1.544-.004-2.316-1.422.461-2.688 1.288-3.807 2.27h.001zm-1.482 1.99c-1.493 2.54-1.661 5.799-.416 8.472 1.075 2.396 3.208 4.26 5.705 5.063.005-.77.003-1.542.003-2.312-1.275-.013-2.553.034-3.825-.035.014-.71.18-1.404.423-2.071.624-.013 1.275.096 1.878-.107.352-.296.252-.785.27-1.19-.018-2.314.01-4.629-.012-6.943.023-.373-.211-.776-.6-.85-.64-.127-1.297-.077-1.944-.081-.076-.52-.084-1.047-.093-1.574a.388.388 0 0 0-.071-.308c-.366.694-.948 1.243-1.318 1.935zm7.13.101v3.412c1.141-.02 2.406.106 3.404-.556.828-.541.775-1.914-.08-2.4-.998-.592-2.216-.424-3.323-.456zm0 5.248v3.785c1.408-.114 2.988.123 4.213-.726.876-.581.771-2.019-.132-2.522-1.227-.733-2.718-.5-4.08-.537zm-.051 5.925c0 .875-.002 1.75-.005 2.627.456.03.912.048 1.368.06.004-.895.002-1.791.002-2.687h-1.365z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Btg);


/***/ }),

/***/ "xsPl":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/bela.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Bela = {
  symbol: 'bela',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M8.297 11.568a8.936 8.936 0 0 0-1.189 4.468c0 4.95 4.005 8.964 8.946 8.964S25 20.987 25 16.036c0-4.95-4.005-8.964-8.946-8.964a8.891 8.891 0 0 0-4.501 1.216A2.416 2.416 0 0 0 7 9.422a2.42 2.42 0 0 0 1.297 2.146zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.054-11.554c-2.43 0-4.4-1.974-4.4-4.41s1.97-4.41 4.4-4.41 4.4 1.975 4.4 4.41-1.97 4.41-4.4 4.41z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#13a0f6" r="16"/><path d="M8.297 11.568A2.422 2.422 0 0 1 7 9.422a2.416 2.416 0 1 1 4.553-1.134 8.891 8.891 0 0 1 4.501-1.216c4.94 0 8.946 4.014 8.946 8.964S20.995 25 16.054 25s-8.946-4.013-8.946-8.964a8.94 8.94 0 0 1 1.189-4.468zm7.757 8.878c2.43 0 4.4-1.974 4.4-4.41s-1.97-4.41-4.4-4.41-4.4 1.975-4.4 4.41 1.97 4.41 4.4 4.41z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Bela);


/***/ }),

/***/ "xtUG":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/lend.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Lend = {
  symbol: 'lend',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.147-11.554l-5.474-5.7L10 16.45l3.92 3.995-3.777 3.849L11.697 26zm3.18-3.191L22 15.549l-3.92-3.995 3.777-3.849L20.303 6l-5.474 5.554zm-7.96-3.167l5.498 5.7 1.673-1.705-5.498-5.603z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" fill="#0fa9c9" r="16"/><path d="M17.147 20.446L11.697 26l-1.554-1.705 3.777-3.85L10 16.452l1.673-1.706zm3.18-3.191L22 15.549l-3.92-3.995 3.777-3.849L20.303 6l-5.474 5.554zm-7.96-3.167l5.498 5.7 1.673-1.705-5.498-5.603z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Lend);


/***/ }),

/***/ "y571":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/zrx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Zrx = {
  symbol: 'zrx',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.504-5h1.025c.044-.009.089-.02.134-.026.339-.037.68-.057 1.017-.11 2.67-.428 4.886-1.676 6.67-3.702.07-.08.078-.132.011-.22-.77-1.02-1.536-2.041-2.303-3.063-.024-.032-.053-.06-.084-.097l-.107.158a7.149 7.149 0 0 1-2.728 2.39c-.105.054-.17.055-.26-.035-.363-.368-.736-.725-1.105-1.087l-.665-.647c-2.208 1.65-4.404 3.29-6.61 4.94.037.025.054.04.073.05a10.88 10.88 0 0 0 4.122 1.364c.27.032.54.057.81.085zm.97-22h-.943c-.048.009-.097.02-.146.026-.435.051-.875.077-1.304.155-2.234.405-4.16 1.412-5.783 2.995-.25.243-.48.506-.728.77l2.467 3.287.102-.15A7.147 7.147 0 0 1 12.9 9.66c.093-.047.15-.039.225.035.469.464.943.923 1.415 1.383.085.083.171.163.26.247 2.244-1.61 4.476-3.21 6.718-4.82-.033-.023-.05-.037-.07-.048a10.887 10.887 0 0 0-4.422-1.4c-.188-.018-.375-.038-.562-.057zM6.458 10.534c-1.335 2.42-1.776 4.958-1.232 7.644.508 2.51 1.774 4.578 3.724 6.257l3.26-2.446c-.017-.034-.02-.044-.026-.049l-.103-.07A7.134 7.134 0 0 1 9.66 19.1c-.044-.087-.041-.142.031-.214.256-.253.505-.513.756-.77l1.008-1.034-4.995-6.548zm14.175 4.37l4.923 6.503c1.224-2.056 1.854-4.976 1.147-7.928-.566-2.365-1.799-4.324-3.656-5.915l-3.279 2.46c.063.045.099.072.136.097a7.137 7.137 0 0 1 2.45 2.798c.048.096.05.157-.032.238-.263.26-.515.528-.771.794l-.918.953z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#302C2C" fill-rule="nonzero"/><path fill="#FFF" d="M15.496 27c-.27-.028-.54-.053-.81-.085a10.88 10.88 0 0 1-4.122-1.364c-.019-.01-.036-.025-.073-.05 2.206-1.65 4.402-3.29 6.61-4.94l.665.647c.37.362.742.72 1.105 1.087.09.09.155.089.26.035a7.149 7.149 0 0 0 2.728-2.39l.107-.158c.031.036.06.065.084.097.767 1.022 1.533 2.044 2.303 3.063.067.088.059.14-.012.22-1.783 2.026-3.999 3.274-6.67 3.701-.336.054-.677.074-1.016.111-.045.005-.09.017-.134.026h-1.025zm.97-22c.186.019.373.039.56.056 1.576.15 3.05.617 4.423 1.4.02.012.037.026.07.05l-6.718 4.819c-.089-.084-.175-.164-.26-.247-.472-.46-.946-.919-1.415-1.383-.075-.074-.132-.082-.226-.035a7.147 7.147 0 0 0-2.77 2.424l-.1.15-2.468-3.288c.249-.264.479-.527.728-.77 1.623-1.583 3.55-2.59 5.783-2.995.43-.078.869-.104 1.304-.155.049-.005.098-.017.146-.026h.942zM6.458 10.534l4.995 6.548-1.008 1.034c-.251.257-.5.517-.756.77-.072.072-.075.127-.031.215a7.134 7.134 0 0 0 2.423 2.77c.035.022.07.045.103.07.006.004.009.014.027.048L8.95 24.435C7 22.756 5.735 20.687 5.227 18.178c-.544-2.686-.103-5.224 1.232-7.644zm14.175 4.37l.918-.953c.256-.266.508-.535.77-.794.082-.081.081-.142.033-.238a7.137 7.137 0 0 0-2.45-2.798c-.037-.025-.073-.052-.136-.097l3.279-2.46c1.857 1.59 3.09 3.55 3.656 5.915.707 2.952.077 5.872-1.147 7.928l-4.923-6.503z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Zrx);


/***/ }),

/***/ "y5bv":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/edoge.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Edoge = {
  symbol: 'edoge',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM9.471 9.016c-.508 0-1.04-.046-1.502.18-.243.374-.3.906-.011 1.28.277.249.681.249 1.04.26 1.606 0 3.212-.011 4.819 0-.046 1.392 0 2.796-.023 4.2-1.433 0-2.878-.012-4.31 0-.37 0-.81.068-.972.441-.127.34-.127.781.162 1.041.243.204.59.204.902.216 1.41 0 2.808-.012 4.218 0 0 1.528-.023 3.067.011 4.606-1.826.034-3.663-.022-5.49.034-.773-.045-1.062.997-.577 1.483.277.25.682.215 1.04.238 3.282 0 6.553.011 9.835 0 1.687-.011 3.467-.43 4.738-1.573 1.433-1.246 2.057-3.158 2.138-4.98.081-1.835-.277-3.804-1.502-5.264-1.04-1.257-2.647-1.913-4.253-2.083-1.607-.147-2.677-.08-4.83-.08H9.47zm6.334 5.92v-3.611c.011-.204.023-.487.254-.555.728-.068 1.4-.045 2.184-.045 1.375-.08 2.855.26 3.837 1.256 1.086 1.11 1.364 2.74 1.329 4.222-.023 1.336-.37 2.74-1.318 3.747-.924.962-2.31 1.37-3.628 1.313-.887 0-1.572.023-2.358-.045-.289-.023-.3-.362-.312-.589 0-1.335.012-2.66 0-3.995.659-.012 1.33.056 1.976-.046.798-.113.798-1.494.012-1.607-.659-.09-1.318-.034-1.976-.045z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#0FACF3"/><path fill="#FFF" d="M9.471 9.016h5.432c2.154 0 3.224-.068 4.83.079 1.607.17 3.214.826 4.254 2.083 1.225 1.46 1.583 3.43 1.502 5.263-.08 1.823-.705 3.735-2.138 4.98-1.271 1.144-3.05 1.563-4.738 1.574-3.282.011-6.553 0-9.835 0-.358-.023-.763.011-1.04-.238-.485-.486-.196-1.528.578-1.483 1.826-.056 3.663 0 5.49-.034-.035-1.539-.012-3.078-.012-4.606-1.41-.012-2.809 0-4.218 0-.313-.012-.66-.012-.902-.216-.289-.26-.289-.701-.162-1.04.162-.374.601-.442.971-.442 1.433-.012 2.878 0 4.31 0 .024-1.404-.022-2.808.024-4.2-1.607-.011-3.213 0-4.82 0-.358-.011-.762-.011-1.04-.26-.288-.374-.23-.906.012-1.28.462-.226.994-.18 1.502-.18zm6.334 5.92c.658.011 1.317-.046 1.976.045.786.113.786 1.494-.012 1.607-.647.102-1.317.034-1.976.046.012 1.335 0 2.66 0 3.995.012.227.023.566.312.589.786.068 1.47.045 2.358.045 1.317.057 2.704-.35 3.628-1.313.948-1.007 1.295-2.41 1.318-3.747.035-1.482-.243-3.112-1.33-4.222-.981-.996-2.46-1.335-3.836-1.256-.784 0-1.456-.023-2.184.045-.231.068-.243.351-.254.555v3.61z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Edoge);


/***/ }),

/***/ "yCEO":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/eon.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Eon = {
  symbol: 'eon',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M15.81 27.675c.1.053.233.079.313.079a.667.667 0 0 0 .41-.166c.869-.548 4.96-3.127 7.098-4.388.43-.246.554-.492.43-.923a3332.509 3332.509 0 0 1-2.153-10.154l-.008.02c-.006-.156-.083-.295-.238-.512 0 0-3.385-4.923-4.862-7.077-.308-.37-.492-.554-.677-.554-.185 0-.43.185-.677.554-1.477 2.092-4.861 7.077-4.861 7.077-.14.196-.217.328-.235.466l-.012-.035s-1.476 7.076-2.215 10.215c-.123.43 0 .677.43.923 2.4 1.415 7.262 4.492 7.262 4.492l-.005-.017zm-5.042-14.256c.637 1.77 2.347 6.541 3.14 8.92.338.93 1.055 3.053 1.47 4.29l-4.424-2.69c-.616-.37-1.292-.739-1.908-1.17-.246-.184-.246-.369-.246-.492.615-2.891 1.292-6.028 1.968-8.858zm6.133 13.152a245.09 245.09 0 0 0 1.437-4.233c.779-2.285 2.441-6.955 3.104-8.812.668 2.802 1.335 5.896 1.943 8.75 0 .124 0 .309-.247.493-.615.431-1.292.8-1.907 1.17-1.342.816-2.96 1.798-4.33 2.632zm3.65-14.079c-.598 1.76-3.181 9.36-4.428 13.046a3516.33 3516.33 0 0 1-4.549-13.046h8.977zm-8.895-.677c.75-1.097 3.31-4.843 4.406-6.461a2810.21 2810.21 0 0 0 4.405 6.461h-8.81zM16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#443F54"/><g fill="#FEFFFE"><path d="M15.508 26.708c-1.416-.862-3.139-1.908-4.554-2.77-.616-.369-1.292-.738-1.908-1.169-.246-.184-.246-.369-.246-.492.615-2.892 1.292-6.03 1.97-8.862l-.432-1.353s-1.476 7.076-2.215 10.215c-.123.43 0 .677.43.923 2.4 1.415 7.262 4.492 7.262 4.492l-.307-.984zm1.169 0c1.415-.862 3.138-1.908 4.554-2.77.615-.369 1.292-.738 1.907-1.169.247-.184.247-.369.247-.492-.616-2.892-1.293-6.03-1.97-8.862l.493-1.292s1.477 7.015 2.154 10.154c.123.43 0 .677-.431.923-2.4 1.415-7.262 4.492-7.262 4.492l.308-.984zm4.677-14.523l-.246-.37h-9.97l-.246.37s.185.492.123.307h10.277c-.123.123.062-.307.062-.307z" opacity=".7"/><path d="M21.662 11.63S18.277 6.709 16.8 4.555c-.308-.37-.492-.554-.677-.554-.185 0-.43.185-.677.554-1.477 2.092-4.861 7.077-4.861 7.077-.308.43-.308.554-.062 1.107 0 0 2.4 6.647 3.385 9.6.492 1.354 1.784 5.231 1.784 5.231.062.123.308.185.431.185a.665.665 0 0 0 .43-.185s1.355-3.877 1.785-5.23c.985-2.893 3.385-9.6 3.385-9.6.246-.554.246-.677-.061-1.108zm-5.539 13.908a3727.558 3727.558 0 0 1-4.677-13.415s3.323-4.861 4.616-6.77c1.292 1.909 4.615 6.77 4.615 6.77s-3.139 9.23-4.554 13.415z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Eon);


/***/ }),

/***/ "yGtN":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/blcn.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Blcn = {
  symbol: 'blcn',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM7.9 7a.9.9 0 0 0-.9.9v6.2a.9.9 0 0 0 .9.9h6.2a.9.9 0 0 0 .9-.9V7.9a.9.9 0 0 0-.9-.9zm10 0a.9.9 0 0 0-.9.9v6.2a.9.9 0 0 0 .9.9h6.2a.9.9 0 0 0 .9-.9V7.9a.9.9 0 0 0-.9-.9zm0 10a.9.9 0 0 0-.9.9v6.2a.9.9 0 0 0 .9.9h6.2a.9.9 0 0 0 .9-.9v-6.2a.9.9 0 0 0-.9-.9zm-10 0a.9.9 0 0 0-.9.9v6.2a.9.9 0 0 0 .9.9h6.2a.9.9 0 0 0 .9-.9v-6.2a.9.9 0 0 0-.9-.9z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#2aabe4" r="16"/><path d="M7.9 7h6.2a.9.9 0 0 1 .9.9v6.2a.9.9 0 0 1-.9.9H7.9a.9.9 0 0 1-.9-.9V7.9a.9.9 0 0 1 .9-.9zm10 0h6.2a.9.9 0 0 1 .9.9v6.2a.9.9 0 0 1-.9.9h-6.2a.9.9 0 0 1-.9-.9V7.9a.9.9 0 0 1 .9-.9zm0 10h6.2a.9.9 0 0 1 .9.9v6.2a.9.9 0 0 1-.9.9h-6.2a.9.9 0 0 1-.9-.9v-6.2a.9.9 0 0 1 .9-.9zm-10 0h6.2a.9.9 0 0 1 .9.9v6.2a.9.9 0 0 1-.9.9H7.9a.9.9 0 0 1-.9-.9v-6.2a.9.9 0 0 1 .9-.9z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Blcn);


/***/ }),

/***/ "yUyr":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/xby.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Xby = {
  symbol: 'xby',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM6 9.016c0 .01 1.467 2.51 3.26 5.557 2.312 3.929 3.265 5.539 3.276 5.537.015-.003 6.53-11.08 6.53-11.1 0-.006-1.366-.01-3.072-.01-2.634 0-3.073.002-3.073.014 0 .008.633 1.08 1.406 2.381s1.408 2.374 1.41 2.38c.002.006-.116.213-.26.46l-.264.45-.028-.046-1.688-2.84-1.66-2.794-2.919-.003C6.21 9 6 9.001 6 9.016zm14.14-.009c-.108.177-7.057 12.017-7.062 12.028-.006.024 2.904 4.969 2.923 4.965.012-.003 2.94-4.963 2.949-4.998.003-.01-.564-.974-1.33-2.265a591.98 591.98 0 0 1-1.339-2.256c-.004-.012.52-.903.53-.898.003.002.604 1.011 1.336 2.242 1.026 1.727 1.332 2.236 1.346 2.234.013-.002 1.1-1.841 3.259-5.508a1647.11 1647.11 0 0 0 3.244-5.529L26 9h-2.928c-1.61 0-2.93.003-2.933.007z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#56f4f1" r="16"/><path d="M6 9.016c0-.015.21-.016 2.918-.014l2.919.003 1.66 2.793 1.688 2.841.028.047.264-.45c.144-.248.262-.455.26-.461-.002-.006-.637-1.078-1.41-2.38s-1.406-2.373-1.406-2.38c0-.013.439-.015 3.073-.015 1.706 0 3.072.004 3.072.01 0 .02-6.515 11.097-6.53 11.1-.011.002-.964-1.608-3.276-5.537C7.467 11.526 6 9.026 6 9.016zm14.14-.009c0-.004 1.32-.007 2.931-.007H26l-.004.022c-.003.013-1.463 2.501-3.244 5.529-2.159 3.667-3.246 5.506-3.26 5.508-.013.002-.319-.507-1.345-2.234-.732-1.23-1.333-2.24-1.337-2.242-.008-.005-.533.886-.529.898.001.005.604 1.02 1.338 2.256a127.572 127.572 0 0 1 1.33 2.265c-.009.035-2.936 4.995-2.948 4.998-.019.004-2.929-4.94-2.923-4.965.005-.011 6.954-11.85 7.061-12.028z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Xby);


/***/ }),

/***/ "yhRp":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/wicc.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Wicc = {
  symbol: 'wicc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.76-28A12.06 12.06 0 0 0 4 15.44v1.12A12.02 12.02 0 0 0 15.4 28h1.18a11.92 11.92 0 0 0 7.8-3.44 11.66 11.66 0 0 0 3.44-7.66l.04-1.24a.422.422 0 0 0-.84-.08c-.05.748-.164 1.491-.34 2.22a10.8 10.8 0 0 1-7.04 8A10.5 10.5 0 0 1 8.04 9.26a10.74 10.74 0 0 1 14.8-1.72c.26.18.52.48.86.4.4-.14.4-.68.06-.9A11.584 11.584 0 0 0 16.48 4h-1.24zM25 10.22h.02c-.54.48-.42 1.24-.32 1.88-.9 1.94-2.24 3.64-3.7 5.18l-.6.04a8.4 8.4 0 0 1-1.46-2.16c.24-.58.38-1.3-.04-1.84-.56-.88-2-.86-2.54.02-.36.5-.26 1.12-.1 1.66a16.954 16.954 0 0 1-3.46 4.94 19.14 19.14 0 0 1-3.14-5.28c.46-.82.2-2.02-.74-2.36-1.06-.5-2.34.58-2.08 1.7.1.82.92 1.28 1.7 1.32a18.8 18.8 0 0 1 2.92 5.2c-.24.62-.3 1.36.16 1.88.62.76 1.94.68 2.44-.14.38-.48.28-1.12.14-1.66a19.28 19.28 0 0 1 3.22-4.86l.6-.02a8.084 8.084 0 0 1 1.5 2.14c-.26.62-.4 1.4.1 1.96.68.88 2.24.66 2.6-.4.3-.54-.18-1.22.2-1.74.94-1.74 2.04-3.4 3.42-4.8 1.04.08 2.06-.82 1.8-1.88-.18-1.18-1.84-1.66-2.64-.78z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#5783CB"/><g fill="#FFF"><path d="M15.24 4h1.24a11.584 11.584 0 0 1 7.28 3.04c.34.22.34.76-.06.9-.34.08-.6-.22-.86-.4a10.74 10.74 0 0 0-14.8 1.72 10.5 10.5 0 0 0 11.6 16.54 10.8 10.8 0 0 0 7.04-8c.176-.729.29-1.472.34-2.22a.422.422 0 0 1 .84.08l-.04 1.24a11.66 11.66 0 0 1-3.44 7.66 11.92 11.92 0 0 1-7.8 3.44H15.4A12.02 12.02 0 0 1 4 16.56v-1.12A12.06 12.06 0 0 1 15.24 4z"/><path d="M25 10.22c.8-.88 2.46-.4 2.64.78.26 1.06-.76 1.96-1.8 1.88-1.38 1.4-2.48 3.06-3.42 4.8-.38.52.1 1.2-.2 1.74-.36 1.06-1.92 1.28-2.6.4-.5-.56-.36-1.34-.1-1.96a8.084 8.084 0 0 0-1.5-2.14l-.6.02a19.28 19.28 0 0 0-3.22 4.86c.14.54.24 1.18-.14 1.66-.5.82-1.82.9-2.44.14-.46-.52-.4-1.26-.16-1.88a18.8 18.8 0 0 0-2.92-5.2c-.78-.04-1.6-.5-1.7-1.32-.26-1.12 1.02-2.2 2.08-1.7.94.34 1.2 1.54.74 2.36a19.14 19.14 0 0 0 3.14 5.28A16.954 16.954 0 0 0 16.26 15c-.16-.54-.26-1.16.1-1.66.54-.88 1.98-.9 2.54-.02.42.54.28 1.26.04 1.84a8.4 8.4 0 0 0 1.46 2.16l.6-.04c1.46-1.54 2.8-3.24 3.7-5.18-.1-.64-.22-1.4.32-1.88H25z"/></g></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Wicc);


/***/ }),

/***/ "ym6K":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gno.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gno = {
  symbol: 'gno',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.777-21.5l-.798.81c.635 1.011.834 2.28.4 3.494-.726 2.06-2.975 3.146-5.024 2.41-.29-.11-.562-.24-.798-.405L16 19.403l-2.23-2.28a4.024 4.024 0 0 1-3.61.459 4.09 4.09 0 0 1-2.43-5.224c.11-.331.273-.626.454-.901l-.961-.975-.182.312a10.735 10.735 0 0 0-1.54 5.537C5.48 22.2 10.196 27 15.98 27H16c5.785 0 10.482-4.764 10.5-10.632 0-1.95-.526-3.863-1.523-5.537l-.2-.331zM9.363 12.652a2.225 2.225 0 0 0-.435 1.325c0 1.195.96 2.17 2.14 2.17.489 0 .942-.165 1.305-.46l-3.01-3.035zm10.5 2.851c.344.24.743.368 1.197.368 1.178 0 2.14-.975 2.14-2.17 0-.442-.127-.865-.363-1.214l-2.974 3.016zm-3.827 2.281l8.56-8.645-.327-.368A11.184 11.184 0 0 0 15.927 5h-.018c-3.137 0-6.057 1.288-8.197 3.587l-.344.368 8.668 8.83zm-7.254-8.83a10.082 10.082 0 0 1 7.145-2.924h.019c2.72 0 5.331 1.122 7.253 3.072l-7.163 7.23-7.254-7.377z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#00A6C4"/><path fill="#FFF" fill-rule="nonzero" d="M24.777 10.5l.2.331a10.816 10.816 0 0 1 1.523 5.537C26.482 22.236 21.785 27 16 27h-.018c-5.785 0-10.5-4.801-10.482-10.669 0-1.968.544-3.881 1.541-5.537l.182-.312.961.975a3.78 3.78 0 0 0-.453.9 4.09 4.09 0 0 0 2.43 5.225 4.024 4.024 0 0 0 3.608-.46L16 19.403l2.557-2.594c.236.166.508.295.798.405 2.05.736 4.298-.35 5.023-2.41.435-1.214.236-2.483-.399-3.495l.798-.809zM9.363 12.652l3.01 3.035c-.363.295-.816.46-1.306.46-1.178 0-2.14-.975-2.14-2.17 0-.497.164-.957.436-1.325zm10.5 2.851l2.974-3.016c.236.35.362.772.362 1.214 0 1.195-.96 2.17-2.14 2.17-.453 0-.852-.129-1.196-.368zm-3.827 2.281l-8.668-8.83.344-.367C9.852 6.287 12.772 5 15.91 5h.018c3.174 0 6.22 1.38 8.342 3.77l.327.369-8.56 8.645zm-7.254-8.83l7.254 7.377L23.2 9.102c-1.922-1.95-4.533-3.072-7.253-3.072h-.019c-2.702 0-5.222 1.03-7.145 2.925z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gno);


/***/ }),

/***/ "ytGa":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/jpy.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Jpy = {
  symbol: 'jpy',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm1.548-13.289h5.063v-2.288h-4.197L24.5 7.5h-3.647l-4.8 7.534L11.251 7.5H7.5l6.06 8.923H9.39v2.288h5.063v1.878H9.39v2.288h5.063V25.5h3.096v-2.623h5.063V20.59h-5.063z" fill-rule="evenodd" />`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#eac749" r="16"/><path d="M17.548 18.711v1.878h5.063v2.288h-5.063V25.5h-3.096v-2.623H9.389v-2.288h5.063v-1.878H9.389v-2.288h4.171L7.5 7.5h3.752l4.8 7.534L20.853 7.5H24.5l-6.086 8.923h4.197v2.288z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Jpy);


/***/ }),

/***/ "z4U9":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/equa.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Equa = {
  symbol: 'equa',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm.72-21.922c3.093-.606 3.265 1.471 3.265 1.471.172 2.337-1.805 2.424-1.805 2.424l-.582.04c-.91.027-1.672.7-1.818 1.604a1.922 1.922 0 0 0 .413 1.527c.35.425.866.677 1.414.69l.573.033c4.126-.26 5.33-3.635 5.33-3.635 1.719-4.24-1.634-6.837-1.634-6.837-2.505-1.967-5.39-1.493-7.36-.756a10.172 10.172 0 0 0-4.278 3.072c-4.794 5.812-.395 12.137-.395 12.137 2.246 3.044 5.707 4.31 8.286 4.136a2.014 2.014 0 0 0 1.856-2.022c0-.538-.212-1.054-.59-1.434a2.007 2.007 0 0 0-1.424-.594h-.258a4.36 4.36 0 0 1-1.113-.143c-5.246-1.386-4.608-6.52-4.608-6.52.601-4.587 4.727-5.193 4.727-5.193z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#F68922"/><path fill="#FFF" d="M16.72 10.078s-4.127.606-4.728 5.193c0 0-.638 5.134 4.608 6.52a4.36 4.36 0 0 0 1.113.143h.258c.534 0 1.046.214 1.424.594.378.38.59.896.59 1.434a2.014 2.014 0 0 1-1.856 2.022c-2.579.174-6.04-1.092-8.286-4.136 0 0-4.399-6.325.395-12.137a10.172 10.172 0 0 1 4.277-3.072c1.97-.737 4.856-1.211 7.361.756 0 0 3.353 2.597 1.634 6.837 0 0-1.204 3.375-5.33 3.635l-.573-.032a1.895 1.895 0 0 1-1.414-.691 1.922 1.922 0 0 1-.413-1.527 1.904 1.904 0 0 1 1.818-1.605l.582-.04s1.977-.086 1.805-2.423c0 0-.172-2.077-3.266-1.47"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Equa);


/***/ }),

/***/ "z5MN":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/auto.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Auto = {
  symbol: 'auto',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" fill-rule="evenodd" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm8.5-12.733v-8.2L16 6l-8.5 5.067v9.955L16 26l7.015-4.108-7.538-4.47 1.365-.755v-7.9l5.74 3.422v3.633l-1.787-1.055-.48 1.989 4.185 2.511zM9.418 12.19l5.518-3.29v6.568l-5.518 3.2V12.19zm4.097 6.344l5.66 3.353L16 23.745l-5.623-3.293 3.138-1.919z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#FAB431"/><path fill="#FFF" d="M24.5 19.267l-4.185-2.511.48-1.989 1.787 1.055V12.19l-5.74-3.422v7.9l-1.365.755 7.538 4.47L16 26l-8.5-4.978v-9.955L16 6l8.5 5.067v8.2zM9.418 12.19v6.478l5.518-3.2V8.9l-5.518 3.289zm4.097 6.344l-3.138 1.919L16 23.745l3.175-1.86-5.66-3.352z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Auto);


/***/ }),

/***/ "zB5q":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/act.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Act = {
  symbol: 'act',
  color: '#000',
  plainIcon: c => {
    return `<path fill-rule="evenodd" fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zM13.77 6.5a.87.87 0 0 0-.759.444L6.105 19.263a.87.87 0 0 0 0 .85l2.21 3.942a.87.87 0 0 0 .758.445h13.854a.87.87 0 0 0 .759-.445l2.209-3.942a.87.87 0 0 0 0-.85L18.989 6.944a.87.87 0 0 0-.759-.444h-4.46zM16 11.401l4.653 8.287h-9.306L16 11.401z"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" r="16" fill="#767DFF" fill-rule="nonzero"/><path fill="#FFF" d="M13.77 6.5h4.46a.87.87 0 0 1 .759.444l6.906 12.319a.87.87 0 0 1 0 .85l-2.21 3.942a.87.87 0 0 1-.758.445H9.073a.87.87 0 0 1-.759-.445l-2.209-3.942a.87.87 0 0 1 0-.85l6.906-12.319a.87.87 0 0 1 .759-.444zM16 11.401l-4.653 8.287h9.306L16 11.401z"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Act);


/***/ }),

/***/ "zG4e":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/dbc.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Dbc = {
  symbol: 'dbc',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-2.215-15.072c.158-.166.158-.28-.01-.438-.325-.308-.653-.614-.978-.922l-1.508-1.431c-.13-.124-.263-.246-.394-.369-.074-.07-.157-.102-.263-.076a1.03 1.03 0 0 1-.273.043c-.142-.004-.216.07-.283.178-.555.89-1.113 1.779-1.67 2.668-.272.436-.546.872-.817 1.31-.119.193-.037.355.19.385l1.133.148c.497.064.993.13 1.49.19.241.029.315.095.344.332.022.181.046.362.074.542.018.117.117.198.247.219.06-.04.132-.072.182-.124.298-.308.59-.621.885-.93l1.65-1.725zm11.09 2.319c-.398-.336-.803-.664-1.193-1.008-.163-.144-.325-.203-.536-.136a.547.547 0 0 1-.418-.034c-.176-.09-.325-.06-.485.044-.758.49-1.52.973-2.28 1.458l-1.358.868c-.112.072-.195.161-.199.302l-.034 1.195a.473.473 0 0 0 .135.394c.248.285.494.573.74.86l.593.684a.327.327 0 0 0 .215.123c.235.027.409-.12.406-.355-.002-.205-.015-.41-.023-.614a.343.343 0 0 1 .125-.282 1.31 1.31 0 0 1 .148-.109l1.643-1.065c.85-.551 1.7-1.104 2.55-1.654.144-.093.212-.217.187-.386-.02-.133-.122-.207-.215-.285zm-7.298.992c-.402-.405-.81-.803-1.215-1.205l-1.799-1.79a.386.386 0 0 0-.562.028c-.45.475-.901.949-1.352 1.422-.418.437-.834.875-1.255 1.309-.187.191-.184.43.012.608.35.32.689.653 1.033.98.06.058.125.113.187.17a.33.33 0 0 0 .24.095h.196c.266-.014.554-.032.843-.043.489-.02.978-.033 1.467-.056.121-.005.254-.01.36-.06.59-.272 1.174-.557 1.76-.84.175-.084.25-.211.212-.397a.47.47 0 0 0-.127-.221zm2.478-8.049c.091.14.176.286.263.43.77 1.267 1.543 2.533 2.308 3.803a.49.49 0 0 0 .807.055c.523-.705 1.053-1.406 1.577-2.11a.664.664 0 0 0 .154-.398l.022-.01c-.037-.085-.062-.178-.112-.255-.372-.572-.749-1.142-1.125-1.712-.178-.27-.355-.543-.535-.812-.104-.156-.254-.243-.443-.21-.857.15-1.712.313-2.57.456-.321.053-.54.465-.346.763zm-1.505 3.532l.152-1.324.13-1.13.1-.88c-.01-.018-.027-.079-.061-.09-.041-.014-.099.01-.146.026-.023.008-.04.035-.058.055l-.656.69c-.446.468-.89.937-1.337 1.405l-1.958 2.049c-.137.143-.136.185.006.317.428.4.855.8 1.28 1.203.49.462.979.927 1.468 1.39.136.13.271.26.413.383.032.027.096.047.132.033.036-.014.069-.07.078-.112.019-.088.02-.18.03-.271l.148-1.301c.042-.37.087-.739.129-1.108l.15-1.335zm3.806 1.02c-.174-.283-.344-.568-.516-.852l-1.955-3.216c-.053-.088-.103-.179-.164-.261-.023-.03-.08-.059-.115-.053-.033.006-.062.055-.088.088-.01.014-.01.036-.014.055l-.099.71-.262 1.906-.27 1.951-.247 1.782-.11.808c.01.031.014.096.046.142.057.084.164.09.268.023.263-.166.525-.333.787-.501.834-.534 1.667-1.069 2.504-1.6.107-.067.159-.144.147-.27a.617.617 0 0 1 .092-.404c.07-.107.06-.205-.004-.309zm-4.053-4.904l-.725.127-2.97.521-2.515.44c-.262.045-.524.09-.785.137-.143.025-.215.096-.225.221-.007.092.043.157.106.217.472.443.944.886 1.414 1.33.484.457.967.917 1.45 1.375.155.148.276.148.425-.008.415-.434.827-.871 1.241-1.306l1.982-2.074.68-.715c.05-.053.094-.115.045-.181-.032-.043-.092-.064-.123-.084zm-6.739.632c-.04.028-.073.066-.11.099l.022.041c.037 0 .074.006.11 0l2.57-.462 2.354-.423c.663-.119 1.326-.24 1.99-.358.09-.016.14-.06.173-.144a1.34 1.34 0 0 1 .138-.248c.042-.062.064-.12.03-.19l-.119-.26c-.309-.666-.618-1.333-.929-1.999-.075-.162-.17-.183-.32-.081l-4.51 3.072c-.467.317-.933.634-1.399.953zm-4.69 1.526c.057-.013.114-.02.168-.039.801-.285 1.602-.573 2.404-.855a.36.36 0 0 0 .249-.26.692.692 0 0 1 .512-.51.434.434 0 0 0 .3-.255c.276-.573.558-1.144.836-1.716.152-.312.304-.623.451-.937a.359.359 0 0 0-.034-.389.348.348 0 0 0-.354-.144.638.638 0 0 0-.201.08c-.976.562-1.95 1.126-2.926 1.687a.659.659 0 0 0-.25.245c-.366.629-.736 1.256-1.104 1.885-.128.217-.26.431-.379.653-.141.263.034.55.329.555zm4.153-1.826c-.004.075.063.117.133.087.031-.014.06-.035.088-.054l1.18-.804 3.694-2.513.618-.421c.08-.054.142-.118.135-.215 0-.159-.112-.257-.274-.25-.227.011-.454.027-.68.036l-1.93.073c-.327.013-.654.03-.981.04-.124.005-.197.06-.247.17-.215.479-.436.956-.654 1.434-.35.766-.7 1.531-1.048 2.297a.346.346 0 0 0-.034.12zm-1.363 1.65c.032-.05.071-.103.024-.166-.052-.07-.115-.042-.178-.023l-.265.082-2.015.64c-.356.113-.712.226-1.068.341-.119.039-.16.093-.162.22.006.023.017.071.033.118l.67 1.882c.076.215.151.43.232.644.05.134.19.187.296.11a.425.425 0 0 0 .101-.121l1.84-2.94c.164-.263.329-.524.492-.787zm16.118 2.609c-.077-.438-.155-.875-.231-1.313-.022-.129-.09-.22-.222-.25-.126-.027-.225.023-.3.126l-.225.303c-.369.497-.736.995-1.106 1.49-.08.109-.101.218-.039.341.065.128.07.266.046.402-.024.136.02.235.122.32.453.379.906.758 1.357 1.139.22.185.438.121.514-.154l.265-.956c.016-.059.026-.119.037-.168-.006-.049-.01-.087-.016-.124l-.202-1.156zm-7.564-7.944l.545 1.182c.143.307.288.613.43.92.034.076.08.13.17.133.247.01.44.12.597.303.028.032.072.049.095.064l.08-.016c.806-.145 1.613-.291 2.42-.435.074-.013.137-.03.151-.114.014-.084-.04-.123-.106-.156l-.597-.3-3.362-1.68c-.083-.04-.162-.09-.25-.118a.24.24 0 0 0-.17.011c-.06.034-.05.104-.022.164l.019.042z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#5bc1d4" r="16"/><path d="M13.785 16.928l-1.65 1.724c-.297.31-.588.623-.886.931-.05.052-.121.083-.182.124-.13-.021-.23-.102-.247-.22a16.66 16.66 0 0 1-.074-.54c-.03-.238-.103-.304-.344-.334-.497-.06-.993-.125-1.49-.19l-1.134-.147c-.226-.03-.308-.192-.19-.385.272-.438.546-.874.819-1.31l1.67-2.668c.066-.108.14-.182.282-.178.09.002.184-.02.273-.043.106-.026.189.006.263.076.131.123.264.245.394.369l1.508 1.431c.325.308.653.614.978.922.168.158.168.272.01.438zm11.09 2.319c.094.078.196.152.216.285.025.17-.043.293-.187.386-.85.55-1.7 1.103-2.55 1.654l-1.643 1.065a1.309 1.309 0 0 0-.148.109.343.343 0 0 0-.125.282c.008.205.02.41.023.614.003.235-.17.382-.406.355a.327.327 0 0 1-.215-.123 322.09 322.09 0 0 1-.592-.685c-.247-.286-.493-.574-.741-.859a.473.473 0 0 1-.135-.394l.034-1.195c.004-.14.087-.23.199-.302l1.358-.868c.76-.485 1.522-.968 2.28-1.458.16-.103.309-.134.485-.044.13.066.277.078.418.034.211-.067.373-.008.536.136.39.344.795.672 1.194 1.008zm-7.298.992a.47.47 0 0 1 .127.22c.037.187-.037.314-.213.399-.585.282-1.169.567-1.759.84-.106.048-.239.054-.36.06-.489.022-.978.035-1.467.055-.289.011-.577.029-.843.043h-.196a.33.33 0 0 1-.24-.095c-.062-.057-.126-.112-.187-.17-.344-.327-.682-.66-1.033-.98-.196-.178-.199-.417-.012-.608.421-.434.837-.872 1.255-1.31.451-.472.902-.946 1.352-1.42a.386.386 0 0 1 .562-.028l1.8 1.789c.404.402.812.8 1.214 1.205zm2.478-8.049c-.193-.298.025-.71.346-.763.858-.143 1.713-.307 2.57-.456.189-.033.339.054.443.21.18.27.357.541.535.812.376.57.753 1.14 1.125 1.712.05.077.075.17.112.255l-.022.01a.664.664 0 0 1-.154.398c-.524.704-1.054 1.405-1.577 2.11a.49.49 0 0 1-.807-.055c-.765-1.27-1.538-2.536-2.308-3.803-.087-.144-.172-.29-.263-.43zm-1.505 3.532l-.15 1.335c-.042.37-.087.738-.129 1.108l-.148 1.3c-.01.091-.011.184-.03.272-.01.043-.042.098-.078.112-.036.014-.1-.006-.132-.033-.142-.123-.277-.253-.413-.382-.49-.464-.977-.929-1.467-1.391-.426-.403-.853-.803-1.281-1.203-.142-.132-.143-.174-.006-.317l1.958-2.05 1.337-1.404.656-.69c.019-.02.035-.047.058-.055.047-.017.105-.04.146-.027.034.012.05.073.06.09l-.1.88-.129 1.131-.152 1.324zm3.806 1.02c.064.103.074.201.004.308a.617.617 0 0 0-.092.404c.012.126-.04.203-.147.27-.837.531-1.67 1.066-2.504 1.6-.262.168-.524.335-.787.501-.104.066-.211.061-.268-.023-.032-.046-.036-.11-.045-.142l.11-.808.245-1.782.27-1.95.263-1.907.1-.71c.002-.019.003-.041.013-.055.026-.033.055-.082.088-.088.036-.006.092.022.115.053.061.082.11.173.164.261l1.955 3.216c.172.284.342.569.516.851zm-4.053-4.904c.031.02.091.041.123.084.049.066.006.128-.045.181l-.68.715-1.982 2.074c-.414.435-.826.872-1.24 1.306-.15.156-.27.156-.426.008-.483-.458-.966-.918-1.45-1.375-.47-.444-.942-.887-1.414-1.33-.063-.06-.113-.125-.106-.217.01-.125.082-.196.225-.22.261-.047.523-.093.785-.138l2.515-.44 2.97-.521.725-.127zm-6.739.632c.466-.319.932-.636 1.399-.953l4.51-3.072c.15-.102.245-.081.32.081.311.666.62 1.333.93 2 .04.086.078.173.119.26.033.07.011.127-.031.19a1.336 1.336 0 0 0-.138.247c-.033.083-.083.128-.173.144-.664.118-1.327.24-1.99.358l-2.354.423-2.57.462c-.036.006-.073 0-.11 0l-.022-.041c.037-.033.07-.071.11-.099zm-4.69 1.526c-.294-.006-.469-.292-.328-.555.119-.222.251-.436.379-.653.368-.629.738-1.256 1.104-1.885a.659.659 0 0 1 .25-.245c.976-.561 1.95-1.125 2.926-1.687a.638.638 0 0 1 .201-.08.348.348 0 0 1 .354.144.359.359 0 0 1 .034.389c-.147.314-.3.625-.45.937-.28.572-.56 1.143-.837 1.716a.434.434 0 0 1-.3.256.692.692 0 0 0-.512.51.36.36 0 0 1-.249.259c-.802.282-1.603.57-2.404.855-.054.02-.111.026-.167.04zm4.153-1.826a.346.346 0 0 1 .034-.12l1.048-2.297c.218-.478.439-.955.654-1.434.05-.11.123-.165.247-.17.327-.01.654-.027.981-.04l1.93-.073c.226-.01.453-.025.68-.036.162-.007.273.091.274.25.007.097-.055.16-.135.215l-.618.421-3.694 2.513-1.18.804a.533.533 0 0 1-.088.054c-.07.03-.137-.012-.133-.087zm-1.363 1.65c-.163.263-.328.524-.492.786-.613.98-1.226 1.961-1.84 2.94a.425.425 0 0 1-.1.123c-.106.076-.247.023-.297-.11-.08-.214-.156-.43-.233-.645l-.669-1.882c-.016-.047-.027-.095-.033-.118.001-.127.043-.181.162-.22.356-.115.712-.228 1.068-.341l2.015-.64.265-.082c.063-.02.126-.047.178.023.047.063.008.115-.024.166zm16.118 2.609l.202 1.156c.006.037.01.075.016.124-.01.05-.021.11-.037.168l-.265.956c-.076.275-.294.34-.514.154-.451-.38-.904-.76-1.357-1.138-.103-.086-.146-.185-.122-.321a.629.629 0 0 0-.046-.402c-.062-.123-.042-.232.039-.34.37-.496.737-.994 1.106-1.49l.225-.304c.075-.103.174-.153.3-.125.132.03.2.12.222.249l.23 1.313zm-7.564-7.944l-.02-.042c-.027-.06-.038-.13.023-.164a.24.24 0 0 1 .17-.01c.088.027.167.077.25.118l3.362 1.679.597.3c.067.033.12.072.106.156-.014.083-.077.101-.15.114-.808.144-1.615.29-2.422.435l-.079.016c-.023-.015-.067-.032-.095-.064a.804.804 0 0 0-.597-.303c-.09-.004-.136-.057-.17-.132-.142-.308-.287-.614-.43-.921l-.545-1.182z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Dbc);


/***/ }),

/***/ "zkFx":
/*!*******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/link.js ***!
  \*******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Link = {
  symbol: 'link',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M15 18.618a1.5 1.5 0 1 1 2 0V21a1 1 0 0 1-2 0zM10 14a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-8a1 1 0 0 0-1-1v-2a6 6 0 1 0-12 0v2zm6 0h3.5v-1.9c0-1.988-1.567-3.6-3.5-3.6s-3.5 1.612-3.5 3.6V14H22zm0 18C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#01a6fb" r="16"/><path d="M15 18.618V21a1 1 0 0 0 2 0v-2.382a1.5 1.5 0 1 0-2 0zM10 14v-2a6 6 0 1 1 12 0v2a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H10a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1zm12 0h-9.5v-1.9c0-1.988 1.567-3.6 3.5-3.6s3.5 1.612 3.5 3.6V14H16z" fill="#fff"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Link);


/***/ }),

/***/ "ztL0":
/*!********************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/booty.js ***!
  \********************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Booty = {
  symbol: 'booty',
  color: '#000',
  plainIcon: c => {
    return `<path fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-8.227-9.02l.857 2.802 1.54-.471-.048-.16 1.635 2.425 1.335-.9-.113-.168 2.288 1.852 1.013-1.252-.175-.141 2.772 1.063.577-1.503-.148-.057 2.895.203.113-1.607-.223-.015 2.892-.668-.362-1.57-.263.062 2.617-1.511-.805-1.395-.252.145L28 17.882l-1.178-1.099-.196.21 1.34-2.747-1.447-.706-.118.24.476-3.002-1.59-.252-.034.21-.469-2.959-1.59.252.01.072-1.249-2.562-1.447.706.041.085-1.948-2.089-1.178 1.099.098.104L15.019 4l-.805 1.395.18.104-2.867-.662-.363 1.569.271.063-3.002.21.112 1.606.335-.023-2.867 1.1.577 1.504.307-.118-2.401 1.944 1.013 1.252.16-.13L4 16.289l1.335.9.107-.158-.87 2.845 1.54.471.05-.163v2.953h1.61v-.156zm0-1.914v-2.69H6.715l.79-2.582-1.02-.311 1.512-2.24-.885-.597 2.097-1.698-.672-.83 2.497-.958-.392-1.022 2.652-.185-.075-1.073 2.584.597.237-1.028 2.297 1.326.519-.9 1.814 1.946.752-.701 1.173 2.403.922-.45.421 2.658 1.025-.162-.421 2.658 1.071.17-1.18 2.42.979.479-1.837 1.969.797.742-2.325 1.342.54.934-2.605.602.24 1.035-2.657-.186-.073 1.04-2.482-.953-.369.96-2.06-1.668-.664.82-1.487-2.204-.87.587-.781-2.557-1.006.307zm3.56-9.849l-1.218 8.71h3.567c.386 0 .78-.041 1.181-.123a3.8 3.8 0 0 0 1.108-.406c.336-.189.623-.437.86-.745.239-.307.39-.69.456-1.15a2.098 2.098 0 0 0-.025-.787 1.696 1.696 0 0 0-.295-.646 1.656 1.656 0 0 0-.535-.455 2.206 2.206 0 0 0-.744-.24v-.025c.467-.139.863-.37 1.187-.695.324-.323.519-.731.584-1.224.066-.475.025-.857-.123-1.144a1.59 1.59 0 0 0-.646-.67 2.782 2.782 0 0 0-.984-.32 7.95 7.95 0 0 0-1.126-.08h-3.248zM12.76 14.7l.258-1.858h1.304c.148 0 .297.014.45.043.15.029.284.076.399.141a.662.662 0 0 1 .264.277.75.75 0 0 1 .056.45c-.025.172-.08.32-.166.442a1 1 0 0 1-.32.295 1.436 1.436 0 0 1-.412.16c-.148.033-.296.05-.443.05h-1.39zm-.505 3.604l.283-1.98h1.452c.156 0 .322.012.498.036.176.025.338.07.486.136a.771.771 0 0 1 .345.289c.082.127.11.293.086.498a1 1 0 0 1-.185.48 1.272 1.272 0 0 1-.781.492c-.16.032-.314.049-.461.049h-1.723zm9.26-6.948l-2.451-.349-1.268 7.671 1.682.118 2.037-7.44zm-1.776 8.216l-2.254-.544-.512 2.521 2.237.652.53-2.629z"/>`;
  },
  colorIcon() {
    return `<g fill="none"><circle cx="16" cy="16" r="16" fill="#00B4F4"/><path d="M7.773 22.98v.156h-1.61v-2.953l-.05.163-1.54-.47.87-2.846-.108.159-1.335-.9 1.668-2.474-.159.129-1.013-1.252 2.4-1.944-.306.118-.577-1.504 2.867-1.1-.335.023-.112-1.606 3.002-.21-.27-.063.362-1.57 2.868.663-.181-.104L15.019 4l2.502 1.444-.098-.104 1.178-1.099 1.948 2.09-.041-.086 1.447-.706 1.25 2.562-.011-.072 1.59-.252.469 2.96.033-.211 1.591.252-.476 3.003.118-.241 1.448.706-1.34 2.747.195-.21L28 17.882l-2.082 2.232.252-.145.805 1.395-2.617 1.51.263-.06.362 1.569-2.892.668.223.015-.113 1.607-2.895-.203.148.057-.577 1.503-2.772-1.063.175.141-1.013 1.252-2.288-1.852.113.167-1.335.9-1.635-2.423.049.159-1.541.47-.857-2.801zm0-1.914l1.006-.307.782 2.557.87-.587 1.486 2.204.664-.82 2.06 1.668.369-.96 2.482.953.073-1.04 2.656.186-.239-1.035 2.605-.602-.54-.934 2.325-1.342-.797-.742 1.837-1.97-.98-.477 1.181-2.421-1.071-.17.42-2.658-1.024.162-.42-2.658-.923.45-1.173-2.403-.752.701-1.814-1.945-.52.899-2.296-1.326-.237 1.028-2.584-.597.075 1.073-2.652.185.392 1.022-2.497.958.672.83-2.097 1.698.885.596-1.511 2.24 1.018.312-.79 2.582h1.059v2.69zm3.56-9.849h3.247c.378 0 .753.027 1.126.08.373.053.701.16.984.32.283.16.499.383.646.67.148.287.189.669.123 1.144-.065.493-.26.9-.584 1.224-.324.324-.72.556-1.187.695v.025c.278.041.527.121.744.24.217.119.396.27.535.455.14.185.238.4.295.646.058.246.066.508.025.787-.066.46-.217.843-.455 1.15a2.827 2.827 0 0 1-.861.745 3.8 3.8 0 0 1-1.108.406 5.898 5.898 0 0 1-1.18.123h-3.568l1.217-8.71zM12.76 14.7h1.39c.147 0 .295-.017.443-.05a1.44 1.44 0 0 0 .412-.16 1 1 0 0 0 .32-.295c.086-.123.141-.27.166-.443a.746.746 0 0 0-.056-.449.662.662 0 0 0-.264-.277 1.28 1.28 0 0 0-.4-.141 2.412 2.412 0 0 0-.449-.043h-1.304L12.76 14.7zm-.505 3.604h1.723c.147 0 .301-.017.46-.05a1.272 1.272 0 0 0 .781-.492 1 1 0 0 0 .186-.48c.024-.204-.004-.37-.086-.497a.771.771 0 0 0-.345-.29 1.805 1.805 0 0 0-.486-.135 3.615 3.615 0 0 0-.498-.037h-1.452l-.283 1.98zm9.26-6.948l-2.037 7.44-1.682-.118 1.268-7.67 2.45.348zm-1.776 8.216L19.21 22.2l-2.237-.652.512-2.521 2.254.544z" fill="#FEFFFF"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Booty);


/***/ }),

/***/ "zzoV":
/*!******************************************************!*\
  !*** ./node_modules/vue-cryptoicon/src/icons/gbx.js ***!
  \******************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const Gbx = {
  symbol: 'gbx',
  color: '#000',
  plainIcon: c => {
    return `<path  fill="${
      c ? c : this.color
    }" d="M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm-.301-20.994h-4.7c-.995 0-2.141.325-3.054.973C6.717 12.851 6 14.217 6 16.003s.717 3.152 1.945 4.024a5.447 5.447 0 0 0 3.053.973H13v-2.06h-2c-.61 0-1.361-.214-1.92-.61C8.386 17.838 8 17.102 8 16.003s.387-1.835 1.08-2.327a3.507 3.507 0 0 1 1.92-.61h4.7zm-5 6.182H13.7V21h2v-5.873h-5zM19 13.06h5v5.878h-5.002v-5.872h-2V21H26V11h-7.002z" fill-rule="evenodd"/>`;
  },
  colorIcon() {
    return `<g fill="none" fill-rule="evenodd"><circle cx="16" cy="16" fill="#1666af" r="16"/><path d="M15.699 11.006v2.06h-4.7c-.61 0-1.361.214-1.92.61-.693.492-1.08 1.229-1.08 2.327s.387 1.835 1.08 2.327c.559.396 1.31.61 1.92.61h2V21h-2a5.448 5.448 0 0 1-3.054-.973C6.717 19.155 6 17.789 6 16.003s.717-3.152 1.945-4.024a5.447 5.447 0 0 1 3.053-.973zm-5 6.182v-2.06h5V21H13.7v-3.812zM19 13.06V11h7v10h-9.002v-7.933h2v5.872H24v-5.878z" fill="#fff" fill-rule="nonzero"/></g>`;
  }
};
/* harmony default export */ __webpack_exports__["a"] = (Gbx);


/***/ })

/******/ });